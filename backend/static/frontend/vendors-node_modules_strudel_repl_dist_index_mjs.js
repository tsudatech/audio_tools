/*! For license information please see vendors-node_modules_strudel_repl_dist_index_mjs.js.LICENSE.txt */
"use strict";(self.webpackChunkfrontend=self.webpackChunkfrontend||[]).push([["vendors-node_modules_strudel_repl_dist_index_mjs"],{"../node_modules/@strudel/repl/dist/assets/clockworker-ZDiUtESR.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = __webpack_require__.p + "1a7e6e5d1447cd2611eb.js";\n\n//# sourceURL=webpack://frontend/../node_modules/@strudel/repl/dist/assets/clockworker-ZDiUtESR.js?')},"../node_modules/@strudel/repl/dist/index-DfdLyHnT.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (/* binding */ En),\n/* harmony export */   B: () => (/* binding */ ed),\n/* harmony export */   C: () => (/* binding */ _s),\n/* harmony export */   D: () => (/* binding */ WF),\n/* harmony export */   E: () => (/* binding */ bP),\n/* harmony export */   F: () => (/* binding */ XF),\n/* harmony export */   G: () => (/* binding */ ey),\n/* harmony export */   H: () => (/* binding */ Wi),\n/* harmony export */   I: () => (/* binding */ ui),\n/* harmony export */   J: () => (/* binding */ vP),\n/* harmony export */   K: () => (/* binding */ lt),\n/* harmony export */   L: () => (/* binding */ li),\n/* harmony export */   M: () => (/* binding */ ko),\n/* harmony export */   N: () => (/* binding */ xo),\n/* harmony export */   O: () => (/* binding */ If),\n/* harmony export */   P: () => (/* binding */ de),\n/* harmony export */   Q: () => (/* binding */ xP),\n/* harmony export */   R: () => (/* binding */ $o),\n/* harmony export */   S: () => (/* binding */ le),\n/* harmony export */   T: () => (/* binding */ gc),\n/* harmony export */   U: () => (/* binding */ cn),\n/* harmony export */   V: () => (/* binding */ St),\n/* harmony export */   W: () => (/* binding */ PZ),\n/* harmony export */   X: () => (/* binding */ qB),\n/* harmony export */   Y: () => (/* binding */ Nt),\n/* harmony export */   Z: () => (/* binding */ hZ),\n/* harmony export */   _: () => (/* binding */ fd),\n/* harmony export */   a: () => (/* binding */ OZ),\n/* harmony export */   b: () => (/* binding */ wZ),\n/* harmony export */   c: () => (/* binding */ Mm),\n/* harmony export */   d: () => (/* binding */ mZ),\n/* harmony export */   e: () => (/* binding */ Pi),\n/* harmony export */   f: () => (/* binding */ xZ),\n/* harmony export */   g: () => (/* binding */ ji),\n/* harmony export */   h: () => (/* binding */ yZ),\n/* harmony export */   i: () => (/* binding */ UF),\n/* harmony export */   j: () => (/* binding */ Gk),\n/* harmony export */   k: () => (/* binding */ qF),\n/* harmony export */   l: () => (/* binding */ DZ),\n/* harmony export */   m: () => (/* binding */ CZ),\n/* harmony export */   n: () => (/* binding */ YF),\n/* harmony export */   o: () => (/* binding */ Kf),\n/* harmony export */   p: () => (/* binding */ AZ),\n/* harmony export */   q: () => (/* binding */ Qv),\n/* harmony export */   r: () => (/* binding */ vZ),\n/* harmony export */   s: () => (/* binding */ kZ),\n/* harmony export */   t: () => (/* binding */ Oe),\n/* harmony export */   u: () => (/* binding */ xp),\n/* harmony export */   v: () => (/* binding */ yc),\n/* harmony export */   w: () => (/* binding */ bZ),\n/* harmony export */   x: () => (/* binding */ qk),\n/* harmony export */   y: () => (/* binding */ gZ),\n/* harmony export */   z: () => (/* binding */ SZ)\n/* harmony export */ });\ntypeof BigInt > "u" && (BigInt = function(t) {\n  if (isNaN(t)) throw new Error("");\n  return t;\n});\nconst Ze = BigInt(0), Ge = BigInt(1), bo = BigInt(2), pp = BigInt(5), Vn = BigInt(10), uP = 2e3, ve = {\n  s: Ge,\n  n: Ze,\n  d: Ge\n};\nfunction ki(t, e) {\n  try {\n    t = BigInt(t);\n  } catch {\n    throw Li();\n  }\n  return t * e;\n}\nfunction Ir(t) {\n  return typeof t == "bigint" ? t : Math.floor(t);\n}\nfunction $t(t, e) {\n  if (e === Ze)\n    throw $f();\n  const n = Object.create(jt.prototype);\n  n.s = t < Ze ? -Ge : Ge, t = t < Ze ? -t : t;\n  const r = vs(t, e);\n  return n.n = t / r, n.d = e / r, n;\n}\nfunction Ws(t) {\n  const e = {};\n  let n = t, r = bo, i = pp - Ge;\n  for (; i <= n; ) {\n    for (; n % r === Ze; )\n      n /= r, e[r] = (e[r] || Ze) + Ge;\n    i += Ge + bo * r++;\n  }\n  return n !== t ? n > 1 && (e[n] = (e[n] || Ze) + Ge) : e[t] = (e[t] || Ze) + Ge, e;\n}\nconst mn = function(t, e) {\n  let n = Ze, r = Ge, i = Ge;\n  if (t != null) if (e !== void 0) {\n    if (typeof t == "bigint")\n      n = t;\n    else {\n      if (isNaN(t))\n        throw Li();\n      if (t % 1 !== 0)\n        throw Dm();\n      n = BigInt(t);\n    }\n    if (typeof e == "bigint")\n      r = e;\n    else {\n      if (isNaN(e))\n        throw Li();\n      if (e % 1 !== 0)\n        throw Dm();\n      r = BigInt(e);\n    }\n    i = n * r;\n  } else if (typeof t == "object") {\n    if ("d" in t && "n" in t)\n      n = BigInt(t.n), r = BigInt(t.d), "s" in t && (n *= BigInt(t.s));\n    else if (0 in t)\n      n = BigInt(t[0]), 1 in t && (r = BigInt(t[1]));\n    else if (typeof t == "bigint")\n      n = t;\n    else\n      throw Li();\n    i = n * r;\n  } else if (typeof t == "number") {\n    if (isNaN(t))\n      throw Li();\n    if (t < 0 && (i = -Ge, t = -t), t % 1 === 0)\n      n = BigInt(t);\n    else if (t > 0) {\n      let s = 1, a = 0, o = 1, l = 1, c = 1, h = 1e7;\n      for (t >= 1 && (s = 10 ** Math.floor(1 + Math.log10(t)), t /= s); o <= h && c <= h; ) {\n        let f = (a + l) / (o + c);\n        if (t === f) {\n          o + c <= h ? (n = a + l, r = o + c) : c > o ? (n = l, r = c) : (n = a, r = o);\n          break;\n        } else\n          t > f ? (a += l, o += c) : (l += a, c += o), o > h ? (n = l, r = c) : (n = a, r = o);\n      }\n      n = BigInt(n) * BigInt(s), r = BigInt(r);\n    }\n  } else if (typeof t == "string") {\n    let s = 0, a = Ze, o = Ze, l = Ze, c = Ge, h = Ge, f = t.replace(/_/g, "").match(/\\d+|./g);\n    if (f === null)\n      throw Li();\n    if (f[s] === "-" ? (i = -Ge, s++) : f[s] === "+" && s++, f.length === s + 1 ? o = ki(f[s++], i) : f[s + 1] === "." || f[s] === "." ? (f[s] !== "." && (a = ki(f[s++], i)), s++, (s + 1 === f.length || f[s + 1] === "(" && f[s + 3] === ")" || f[s + 1] === "\'" && f[s + 3] === "\'") && (o = ki(f[s], i), c = Vn ** BigInt(f[s].length), s++), (f[s] === "(" && f[s + 2] === ")" || f[s] === "\'" && f[s + 2] === "\'") && (l = ki(f[s + 1], i), h = Vn ** BigInt(f[s + 1].length) - Ge, s += 3)) : f[s + 1] === "/" || f[s + 1] === ":" ? (o = ki(f[s], i), c = ki(f[s + 2], Ge), s += 3) : f[s + 3] === "/" && f[s + 1] === " " && (a = ki(f[s], i), o = ki(f[s + 2], i), c = ki(f[s + 4], Ge), s += 5), f.length <= s)\n      r = c * h, i = /* void */\n      n = l + r * a + h * o;\n    else\n      throw Li();\n  } else if (typeof t == "bigint")\n    n = t, i = t, r = Ge;\n  else\n    throw Li();\n  if (r === Ze)\n    throw $f();\n  ve.s = i < Ze ? -Ge : Ge, ve.n = n < Ze ? -n : n, ve.d = r < Ze ? -r : r;\n};\nfunction cP(t, e, n) {\n  let r = Ge;\n  for (; e > Ze; t = t * t % n, e >>= Ge)\n    e & Ge && (r = r * t % n);\n  return r;\n}\nfunction hP(t, e) {\n  for (; e % bo === Ze; e /= bo)\n    ;\n  for (; e % pp === Ze; e /= pp)\n    ;\n  if (e === Ge)\n    return Ze;\n  let n = Vn % e, r = 1;\n  for (; n !== Ge; r++)\n    if (n = n * Vn % e, r > uP)\n      return Ze;\n  return BigInt(r);\n}\nfunction pP(t, e, n) {\n  let r = Ge, i = cP(Vn, n, e);\n  for (let s = 0; s < 300; s++) {\n    if (r === i)\n      return BigInt(s);\n    r = r * Vn % e, i = i * Vn % e;\n  }\n  return 0;\n}\nfunction vs(t, e) {\n  if (!t)\n    return e;\n  if (!e)\n    return t;\n  for (; ; ) {\n    if (t %= e, !t)\n      return e;\n    if (e %= t, !e)\n      return t;\n  }\n}\nfunction jt(t, e) {\n  if (mn(t, e), this instanceof jt)\n    t = vs(ve.d, ve.n), this.s = ve.s, this.n = ve.n / t, this.d = ve.d / t;\n  else\n    return $t(ve.s * ve.n, ve.d);\n}\nvar $f = function() {\n  return new Error("Division by Zero");\n}, Li = function() {\n  return new Error("Invalid argument");\n}, Dm = function() {\n  return new Error("Parameters must be integer");\n};\njt.prototype = {\n  s: Ge,\n  n: Ze,\n  d: Ge,\n  /**\n   * Calculates the absolute value\n   *\n   * Ex: new Fraction(-4).abs() => 4\n   **/\n  abs: function() {\n    return $t(this.n, this.d);\n  },\n  /**\n   * Inverts the sign of the current fraction\n   *\n   * Ex: new Fraction(-4).neg() => 4\n   **/\n  neg: function() {\n    return $t(-this.s * this.n, this.d);\n  },\n  /**\n   * Adds two rational numbers\n   *\n   * Ex: new Fraction({n: 2, d: 3}).add("14.9") => 467 / 30\n   **/\n  add: function(t, e) {\n    return mn(t, e), $t(\n      this.s * this.n * ve.d + ve.s * this.d * ve.n,\n      this.d * ve.d\n    );\n  },\n  /**\n   * Subtracts two rational numbers\n   *\n   * Ex: new Fraction({n: 2, d: 3}).add("14.9") => -427 / 30\n   **/\n  sub: function(t, e) {\n    return mn(t, e), $t(\n      this.s * this.n * ve.d - ve.s * this.d * ve.n,\n      this.d * ve.d\n    );\n  },\n  /**\n   * Multiplies two rational numbers\n   *\n   * Ex: new Fraction("-17.(345)").mul(3) => 5776 / 111\n   **/\n  mul: function(t, e) {\n    return mn(t, e), $t(\n      this.s * ve.s * this.n * ve.n,\n      this.d * ve.d\n    );\n  },\n  /**\n   * Divides two rational numbers\n   *\n   * Ex: new Fraction("-17.(345)").inverse().div(3)\n   **/\n  div: function(t, e) {\n    return mn(t, e), $t(\n      this.s * ve.s * this.n * ve.d,\n      this.d * ve.n\n    );\n  },\n  /**\n   * Clones the actual object\n   *\n   * Ex: new Fraction("-17.(345)").clone()\n   **/\n  clone: function() {\n    return $t(this.s * this.n, this.d);\n  },\n  /**\n   * Calculates the modulo of two rational numbers - a more precise fmod\n   *\n   * Ex: new Fraction(\'4.(3)\').mod([7, 8]) => (13/3) % (7/8) = (5/6)\n   * Ex: new Fraction(20, 10).mod().equals(0) ? "is Integer"\n   **/\n  mod: function(t, e) {\n    if (t === void 0)\n      return $t(this.s * this.n % this.d, Ge);\n    if (mn(t, e), Ze === ve.n * this.d)\n      throw $f();\n    return $t(\n      this.s * (ve.d * this.n) % (ve.n * this.d),\n      ve.d * this.d\n    );\n  },\n  /**\n   * Calculates the fractional gcd of two rational numbers\n   *\n   * Ex: new Fraction(5,8).gcd(3,7) => 1/56\n   */\n  gcd: function(t, e) {\n    return mn(t, e), $t(vs(ve.n, this.n) * vs(ve.d, this.d), ve.d * this.d);\n  },\n  /**\n   * Calculates the fractional lcm of two rational numbers\n   *\n   * Ex: new Fraction(5,8).lcm(3,7) => 15\n   */\n  lcm: function(t, e) {\n    return mn(t, e), ve.n === Ze && this.n === Ze ? $t(Ze, Ge) : $t(ve.n * this.n, vs(ve.n, this.n) * vs(ve.d, this.d));\n  },\n  /**\n   * Gets the inverse of the fraction, means numerator and denominator are exchanged\n   *\n   * Ex: new Fraction([-3, 4]).inverse() => -4 / 3\n   **/\n  inverse: function() {\n    return $t(this.s * this.d, this.n);\n  },\n  /**\n   * Calculates the fraction to some integer exponent\n   *\n   * Ex: new Fraction(-1,2).pow(-3) => -8\n   */\n  pow: function(t, e) {\n    if (mn(t, e), ve.d === Ge)\n      return ve.s < Ze ? $t((this.s * this.d) ** ve.n, this.n ** ve.n) : $t((this.s * this.n) ** ve.n, this.d ** ve.n);\n    if (this.s < Ze) return null;\n    let n = Ws(this.n), r = Ws(this.d), i = Ge, s = Ge;\n    for (let a in n)\n      if (a !== "1") {\n        if (a === "0") {\n          i = Ze;\n          break;\n        }\n        if (n[a] *= ve.n, n[a] % ve.d === Ze)\n          n[a] /= ve.d;\n        else return null;\n        i *= BigInt(a) ** n[a];\n      }\n    for (let a in r)\n      if (a !== "1") {\n        if (r[a] *= ve.n, r[a] % ve.d === Ze)\n          r[a] /= ve.d;\n        else return null;\n        s *= BigInt(a) ** r[a];\n      }\n    return ve.s < Ze ? $t(s, i) : $t(i, s);\n  },\n  /**\n   * Calculates the logarithm of a fraction to a given rational base\n   *\n   * Ex: new Fraction(27, 8).log(9, 4) => 3/2\n   */\n  log: function(t, e) {\n    if (mn(t, e), this.s <= Ze || ve.s <= Ze) return null;\n    const n = {}, r = Ws(ve.n), i = Ws(ve.d), s = Ws(this.n), a = Ws(this.d);\n    for (const c in i)\n      r[c] = (r[c] || Ze) - i[c];\n    for (const c in a)\n      s[c] = (s[c] || Ze) - a[c];\n    for (const c in r)\n      c !== "1" && (n[c] = !0);\n    for (const c in s)\n      c !== "1" && (n[c] = !0);\n    let o = null, l = null;\n    for (const c in n) {\n      const h = r[c] || Ze, f = s[c] || Ze;\n      if (h === Ze) {\n        if (f !== Ze)\n          return null;\n        continue;\n      }\n      let m = f, y = h;\n      const v = vs(m, y);\n      if (m /= v, y /= v, o === null && l === null)\n        o = m, l = y;\n      else if (m * l !== o * y)\n        return null;\n    }\n    return o !== null && l !== null ? $t(o, l) : null;\n  },\n  /**\n   * Check if two rational numbers are the same\n   *\n   * Ex: new Fraction(19.6).equals([98, 5]);\n   **/\n  equals: function(t, e) {\n    return mn(t, e), this.s * this.n * ve.d === ve.s * ve.n * this.d;\n  },\n  /**\n   * Check if this rational number is less than another\n   *\n   * Ex: new Fraction(19.6).lt([98, 5]);\n   **/\n  lt: function(t, e) {\n    return mn(t, e), this.s * this.n * ve.d < ve.s * ve.n * this.d;\n  },\n  /**\n   * Check if this rational number is less than or equal another\n   *\n   * Ex: new Fraction(19.6).lt([98, 5]);\n   **/\n  lte: function(t, e) {\n    return mn(t, e), this.s * this.n * ve.d <= ve.s * ve.n * this.d;\n  },\n  /**\n   * Check if this rational number is greater than another\n   *\n   * Ex: new Fraction(19.6).lt([98, 5]);\n   **/\n  gt: function(t, e) {\n    return mn(t, e), this.s * this.n * ve.d > ve.s * ve.n * this.d;\n  },\n  /**\n   * Check if this rational number is greater than or equal another\n   *\n   * Ex: new Fraction(19.6).lt([98, 5]);\n   **/\n  gte: function(t, e) {\n    return mn(t, e), this.s * this.n * ve.d >= ve.s * ve.n * this.d;\n  },\n  /**\n   * Compare two rational numbers\n   * < 0 iff this < that\n   * > 0 iff this > that\n   * = 0 iff this = that\n   *\n   * Ex: new Fraction(19.6).compare([98, 5]);\n   **/\n  compare: function(t, e) {\n    mn(t, e);\n    let n = this.s * this.n * ve.d - ve.s * ve.n * this.d;\n    return (Ze < n) - (n < Ze);\n  },\n  /**\n   * Calculates the ceil of a rational number\n   *\n   * Ex: new Fraction(\'4.(3)\').ceil() => (5 / 1)\n   **/\n  ceil: function(t) {\n    return t = Vn ** BigInt(t || 0), $t(\n      Ir(this.s * t * this.n / this.d) + (t * this.n % this.d > Ze && this.s >= Ze ? Ge : Ze),\n      t\n    );\n  },\n  /**\n   * Calculates the floor of a rational number\n   *\n   * Ex: new Fraction(\'4.(3)\').floor() => (4 / 1)\n   **/\n  floor: function(t) {\n    return t = Vn ** BigInt(t || 0), $t(\n      Ir(this.s * t * this.n / this.d) - (t * this.n % this.d > Ze && this.s < Ze ? Ge : Ze),\n      t\n    );\n  },\n  /**\n   * Rounds a rational numbers\n   *\n   * Ex: new Fraction(\'4.(3)\').round() => (4 / 1)\n   **/\n  round: function(t) {\n    return t = Vn ** BigInt(t || 0), $t(\n      Ir(this.s * t * this.n / this.d) + this.s * ((this.s >= Ze ? Ge : Ze) + bo * (t * this.n % this.d) > this.d ? Ge : Ze),\n      t\n    );\n  },\n  /**\n    * Rounds a rational number to a multiple of another rational number\n    *\n    * Ex: new Fraction(\'0.9\').roundTo("1/8") => 7 / 8\n    **/\n  roundTo: function(t, e) {\n    mn(t, e);\n    const n = this.n * ve.d, r = this.d * ve.n, i = n % r;\n    let s = Ir(n / r);\n    return i + i >= r && s++, $t(this.s * s * ve.n, ve.d);\n  },\n  /**\n   * Check if two rational numbers are divisible\n   *\n   * Ex: new Fraction(19.6).divisible(1.5);\n   */\n  divisible: function(t, e) {\n    return mn(t, e), !(!(ve.n * this.d) || this.n * ve.d % (ve.n * this.d));\n  },\n  /**\n   * Returns a decimal representation of the fraction\n   *\n   * Ex: new Fraction("100.\'91823\'").valueOf() => 100.91823918239183\n   **/\n  valueOf: function() {\n    return Number(this.s * this.n) / Number(this.d);\n  },\n  /**\n   * Creates a string representation of a fraction with all digits\n   *\n   * Ex: new Fraction("100.\'91823\'").toString() => "100.(91823)"\n   **/\n  toString: function(t) {\n    let e = this.n, n = this.d;\n    t = t || 15;\n    let r = hP(e, n), i = pP(e, n, r), s = this.s < Ze ? "-" : "";\n    if (s += Ir(e / n), e %= n, e *= Vn, e && (s += "."), r) {\n      for (let a = i; a--; )\n        s += Ir(e / n), e %= n, e *= Vn;\n      s += "(";\n      for (let a = r; a--; )\n        s += Ir(e / n), e %= n, e *= Vn;\n      s += ")";\n    } else\n      for (let a = t; e && a--; )\n        s += Ir(e / n), e %= n, e *= Vn;\n    return s;\n  },\n  /**\n   * Returns a string-fraction representation of a Fraction object\n   *\n   * Ex: new Fraction("1.\'3\'").toFraction() => "4 1/3"\n   **/\n  toFraction: function(t) {\n    let e = this.n, n = this.d, r = this.s < Ze ? "-" : "";\n    if (n === Ge)\n      r += e;\n    else {\n      let i = Ir(e / n);\n      t && i > Ze && (r += i, r += " ", e %= n), r += e, r += "/", r += n;\n    }\n    return r;\n  },\n  /**\n   * Returns a latex representation of a Fraction object\n   *\n   * Ex: new Fraction("1.\'3\'").toLatex() => "\\frac{4}{3}"\n   **/\n  toLatex: function(t) {\n    let e = this.n, n = this.d, r = this.s < Ze ? "-" : "";\n    if (n === Ge)\n      r += e;\n    else {\n      let i = Ir(e / n);\n      t && i > Ze && (r += i, e %= n), r += "\\\\frac{", r += e, r += "}{", r += n, r += "}";\n    }\n    return r;\n  },\n  /**\n   * Returns an array of continued fraction elements\n   *\n   * Ex: new Fraction("7/8").toContinued() => [0,1,7]\n   */\n  toContinued: function() {\n    let t = this.n, e = this.d, n = [];\n    do {\n      n.push(Ir(t / e));\n      let r = t % e;\n      t = e, e = r;\n    } while (t !== Ge);\n    return n;\n  },\n  simplify: function(t) {\n    const e = BigInt(1 / (t || 1e-3) | 0), n = this.abs(), r = n.toContinued();\n    for (let i = 1; i < r.length; i++) {\n      let s = $t(r[i - 1], Ge);\n      for (let o = i - 2; o >= 0; o--)\n        s = s.inverse().add(r[o]);\n      let a = s.sub(n);\n      if (a.n * e < a.d)\n        return s.mul(this.s);\n    }\n    return this;\n  }\n};\nconst Lf = "strudel.log";\nlet fP = 1e3, Pm, Em;\nfunction En(t, e, n = {}) {\n  let r = performance.now();\n  Pm === t && r - Em < fP || (Pm = t, Em = r, console.log(`%c${t}`, "background-color: black;color:white;border-radius:15px"), typeof document < "u" && typeof CustomEvent < "u" && document.dispatchEvent(\n    new CustomEvent(Lf, {\n      detail: {\n        message: t,\n        type: e,\n        data: n\n      }\n    })\n  ));\n}\nEn.key = Lf;\nconst dP = (t) => /^[a-gA-G][#bs]*[0-9]$/.test(t), gc = (t) => /^[a-gA-G][#bsf]*[0-9]?$/.test(t), hb = (t) => {\n  if (typeof t != "string")\n    return [];\n  const [e, n = "", r] = t.match(/^([a-gA-G])([#bsf]*)([0-9]*)$/)?.slice(1) || [];\n  return e ? [e, n, r ? Number(r) : void 0] : [];\n}, mP = { c: 0, d: 2, e: 4, f: 5, g: 7, a: 9, b: 11 }, gP = { "#": 1, b: -1, s: 1, f: -1 }, _s = (t, e = 3) => {\n  const [n, r, i = e] = hb(t);\n  if (!n)\n    throw new Error(\'not a note: "\' + t + \'"\');\n  const s = mP[n.toLowerCase()], a = r?.split("").reduce((o, l) => o + gP[l], 0) || 0;\n  return (Number(i) + 1) * 12 + s + a;\n}, Fs = (t) => Math.pow(2, (t - 69) / 12) * 440, If = (t) => 12 * Math.log(t / 440) / Math.LN2 + 69, pb = (t, e) => {\n  if (typeof t != "object")\n    throw new Error("valueToMidi: expected object value");\n  let { freq: n, note: r } = t;\n  if (typeof n == "number")\n    return If(n);\n  if (typeof r == "string")\n    return _s(r);\n  if (typeof r == "number")\n    return r;\n  if (!e)\n    throw new Error("valueToMidi: expected freq or note to be set");\n  return e;\n}, bP = (t, e) => (t - e) * 1e3, fb = (t) => Fs(typeof t == "number" ? t : _s(t)), yP = ["C", "Db", "D", "Eb", "E", "F", "Gb", "G", "Ab", "A", "Bb", "B"], OP = (t) => {\n  const e = Math.floor(t / 12) - 1;\n  return yP[t % 12] + e;\n}, $o = (t, e) => (t % e + e) % e, db = (t) => t.reduce((e, n) => e + n) / t.length;\nfunction mb(t, e = 0) {\n  return isNaN(Number(t)) ? (En(`"${t}" is not a number, falling back to ${e}`, "warning"), e) : t;\n}\nconst vP = (t, e) => $o(Math.round(mb(t ?? 0, 0)), e), xP = (t) => {\n  let { value: e, context: n } = t, r = e;\n  if (typeof r == "object" && !Array.isArray(r) && (r = r.note || r.n || r.value, r === void 0))\n    throw new Error(`cannot find a playable note for ${JSON.stringify(e)}`);\n  if (typeof r == "number" && n.type !== "frequency")\n    r = Fs(t.value);\n  else if (typeof r == "number" && n.type === "frequency")\n    r = t.value;\n  else if (typeof r != "string" || !gc(r))\n    throw new Error("not a note: " + JSON.stringify(r));\n  return r;\n}, gb = (t) => {\n  let { value: e, context: n } = t;\n  if (typeof e == "object")\n    return e.freq ? e.freq : fb(e.note || e.n || e.value);\n  if (typeof e == "number" && n.type !== "frequency")\n    e = Fs(t.value);\n  else if (typeof e == "string" && gc(e))\n    e = Fs(_s(t.value));\n  else if (typeof e != "number")\n    throw new Error("not a note or frequency: " + e);\n  return e;\n}, bb = (t, e) => t.slice(e).concat(t.slice(0, e)), yb = (...t) => t.reduce(\n  (e, n) => (...r) => e(n(...r)),\n  (e) => e\n), kP = (...t) => yb(...t.reverse()), Da = (t) => t.filter((e) => e != null), Ai = (t) => [].concat(...t), Hs = (t) => t, wP = (t, e) => t, Nf = (t, e) => Array.from({ length: e - t + 1 }, (n, r) => r + t);\nfunction Ke(t, e, n = t.length) {\n  const r = function i(...s) {\n    if (s.length >= n)\n      return t.apply(this, s);\n    {\n      const a = function(...o) {\n        return i.apply(this, s.concat(o));\n      };\n      return e && e(a, s), a;\n    }\n  };\n  return e && e(r, []), r;\n}\nfunction Vf(t) {\n  const e = Number(t);\n  if (!isNaN(e))\n    return e;\n  if (gc(t))\n    return _s(t);\n  throw new Error(`cannot parse as numeral: "${t}"`);\n}\nfunction Xf(t, e) {\n  return (...n) => t(...n.map(e));\n}\nfunction lr(t) {\n  return Xf(t, Vf);\n}\nfunction Ob(t) {\n  const e = Number(t);\n  if (!isNaN(e))\n    return e;\n  const n = {\n    pi: Math.PI,\n    w: 1,\n    h: 0.5,\n    q: 0.25,\n    e: 0.125,\n    s: 0.0625,\n    t: 1 / 3,\n    f: 0.2,\n    x: 1 / 6\n  }[t];\n  if (typeof n < "u")\n    return n;\n  throw new Error(`cannot parse as fractional: "${t}"`);\n}\nconst CP = (t) => Xf(t, Ob), Wf = function(t, e) {\n  return [e.slice(0, t), e.slice(t)];\n}, Uf = (t, e, n) => e.map((r, i) => t(r, n[i])), vb = function(t) {\n  const e = [];\n  for (let n = 0; n < t.length - 1; ++n)\n    e.push([t[n], t[n + 1]]);\n  return e;\n}, bc = (t, e, n) => Math.min(Math.max(t, e), n), SP = ["Do", "Reb", "Re", "Mib", "Mi", "Fa", "Solb", "Sol", "Lab", "La", "Sib", "Si"], AP = [\n  "Sa",\n  "Re",\n  "Ga",\n  "Ma",\n  "Pa",\n  "Dha",\n  "Ni"\n], DP = ["C", "Db", "D", "Eb", "E", "F", "Gb", "G", "Ab", "A", "Hb", "H"], PP = [\n  "Ni",\n  "Pab",\n  "Pa",\n  "Voub",\n  "Vou",\n  "Ga",\n  "Dib",\n  "Di",\n  "Keb",\n  "Ke",\n  "Zob",\n  "Zo"\n], EP = [\n  "I",\n  "Ro",\n  "Ha",\n  "Ni",\n  "Ho",\n  "He",\n  "To"\n], FP = ["C", "Db", "D", "Eb", "E", "F", "Gb", "G", "Ab", "A", "Bb", "B"], BP = (t, e = "letters") => {\n  const r = (e === "solfeggio" ? SP : e === "indian" ? AP : e === "german" ? DP : e === "byzantine" ? PP : e === "japanese" ? EP : FP)[t % 12], i = Math.floor(t / 12) - 1;\n  return r + i;\n};\nfunction MP(t) {\n  var e = {};\n  return t.filter(function(n) {\n    return e.hasOwn(n) ? !1 : e[n] = !0;\n  });\n}\nfunction QP(t) {\n  return t.sort().filter(function(e, n, r) {\n    return !n || e != r[n - 1];\n  });\n}\nfunction xb(t) {\n  return t.sort((e, n) => e.compare(n)).filter(function(e, n, r) {\n    return !n || e.ne(r[n - 1]);\n  });\n}\nfunction kb(t) {\n  const e = new TextEncoder().encode(t);\n  return btoa(String.fromCharCode(...e));\n}\nfunction wb(t) {\n  const e = new Uint8Array(\n    atob(t).split("").map((r) => r.charCodeAt(0))\n  );\n  return new TextDecoder().decode(e);\n}\nfunction TP(t) {\n  return encodeURIComponent(kb(t));\n}\nfunction jP(t) {\n  return wb(decodeURIComponent(t));\n}\nfunction Cb(t, e) {\n  return Array.isArray(t) ? t.map(e) : Object.fromEntries(Object.entries(t).map(([n, r], i) => [n, e(r, n, i)]));\n}\nfunction fp(t, e) {\n  return t / e;\n}\nclass Sb {\n  constructor({\n    getTargetClockTime: e = _P,\n    weight: n = 16,\n    offsetDelta: r = 5e-3,\n    checkAfterTime: i = 2,\n    resetAfterTime: s = 8\n  }) {\n    this.offsetTime, this.timeAtPrevOffsetSample, this.prevOffsetTimes = [], this.getTargetClockTime = e, this.weight = n, this.offsetDelta = r, this.checkAfterTime = i, this.resetAfterTime = s, this.reset = () => {\n      this.prevOffsetTimes = [], this.offsetTime = null, this.timeAtPrevOffsetSample = null;\n    };\n  }\n  calculateOffset(e) {\n    const n = this.getTargetClockTime(), r = n - this.timeAtPrevOffsetSample, i = n - e;\n    if (r > this.resetAfterTime && this.reset(), this.offsetTime == null && (this.offsetTime = i), this.prevOffsetTimes.push(i), this.prevOffsetTimes.length > this.weight && this.prevOffsetTimes.shift(), this.timeAtPrevOffsetSample == null || r > this.checkAfterTime) {\n      this.timeAtPrevOffsetSample = n;\n      const s = db(this.prevOffsetTimes);\n      Math.abs(s - this.offsetTime) > this.offsetDelta && (this.offsetTime = s);\n    }\n    return this.offsetTime;\n  }\n  calculateTimestamp(e, n) {\n    return this.calculateOffset(e) + n;\n  }\n}\nfunction RP() {\n  return performance.now() * 1e-3;\n}\nfunction _P() {\n  return Date.now() * 1e-3;\n}\nconst Ab = /* @__PURE__ */ new Map([\n  ["control", "Control"],\n  ["ctrl", "Control"],\n  ["alt", "Alt"],\n  ["shift", "Shift"],\n  ["down", "ArrowDown"],\n  ["up", "ArrowUp"],\n  ["left", "ArrowLeft"],\n  ["right", "ArrowRight"]\n]);\nlet Wa;\nfunction Db() {\n  if (Wa == null) {\n    if (typeof window > "u")\n      return;\n    Wa = {}, window.addEventListener("keydown", (t) => {\n      Wa[t.key] = !0;\n    }), window.addEventListener("keyup", (t) => {\n      Wa[t.key] = !1;\n    });\n  }\n  return { ...Wa };\n}\njt.prototype.sam = function() {\n  return this.floor();\n};\njt.prototype.nextSam = function() {\n  return this.sam().add(1);\n};\njt.prototype.wholeCycle = function() {\n  return new tn(this.sam(), this.nextSam());\n};\njt.prototype.cyclePos = function() {\n  return this.sub(this.sam());\n};\njt.prototype.lt = function(t) {\n  return this.compare(t) < 0;\n};\njt.prototype.gt = function(t) {\n  return this.compare(t) > 0;\n};\njt.prototype.lte = function(t) {\n  return this.compare(t) <= 0;\n};\njt.prototype.gte = function(t) {\n  return this.compare(t) >= 0;\n};\njt.prototype.eq = function(t) {\n  return this.compare(t) == 0;\n};\njt.prototype.ne = function(t) {\n  return this.compare(t) != 0;\n};\njt.prototype.max = function(t) {\n  return this.gt(t) ? this : t;\n};\njt.prototype.maximum = function(...t) {\n  return t = t.map((e) => new jt(e)), t.reduce((e, n) => n.max(e), this);\n};\njt.prototype.min = function(t) {\n  return this.lt(t) ? this : t;\n};\njt.prototype.mulmaybe = function(t) {\n  return t !== void 0 ? this.mul(t) : void 0;\n};\njt.prototype.divmaybe = function(t) {\n  return t !== void 0 ? this.div(t) : void 0;\n};\njt.prototype.addmaybe = function(t) {\n  return t !== void 0 ? this.add(t) : void 0;\n};\njt.prototype.submaybe = function(t) {\n  return t !== void 0 ? this.sub(t) : void 0;\n};\njt.prototype.show = function() {\n  return this.s * this.n + "/" + this.d;\n};\njt.prototype.or = function(t) {\n  return this.eq(0) ? t : this;\n};\nconst me = (t) => jt(t), ZP = (...t) => {\n  if (t = Da(t), t.length !== 0)\n    return t.reduce((e, n) => e.gcd(n), me(1));\n}, Ur = (...t) => {\n  if (t = Da(t), t.length === 0)\n    return;\n  const e = t.pop();\n  return t.reduce(\n    (n, r) => n === void 0 || r === void 0 ? void 0 : n.lcm(r),\n    e\n  );\n};\nme._original = jt;\nclass tn {\n  constructor(e, n) {\n    this.begin = me(e), this.end = me(n);\n  }\n  get spanCycles() {\n    const e = [];\n    var n = this.begin;\n    const r = this.end, i = r.sam();\n    if (n.equals(r))\n      return [new tn(n, r)];\n    for (; r.gt(n); ) {\n      if (n.sam().equals(i)) {\n        e.push(new tn(n, this.end));\n        break;\n      }\n      const s = n.nextSam();\n      e.push(new tn(n, s)), n = s;\n    }\n    return e;\n  }\n  get duration() {\n    return this.end.sub(this.begin);\n  }\n  cycleArc() {\n    const e = this.begin.cyclePos(), n = e.add(this.duration);\n    return new tn(e, n);\n  }\n  withTime(e) {\n    return new tn(e(this.begin), e(this.end));\n  }\n  withEnd(e) {\n    return new tn(this.begin, e(this.end));\n  }\n  withCycle(e) {\n    const n = this.begin.sam(), r = n.add(e(this.begin.sub(n))), i = n.add(e(this.end.sub(n)));\n    return new tn(r, i);\n  }\n  intersection(e) {\n    const n = this.begin.max(e.begin), r = this.end.min(e.end);\n    if (!n.gt(r) && !(n.equals(r) && (n.equals(this.end) && this.begin.lt(this.end) || n.equals(e.end) && e.begin.lt(e.end))))\n      return new tn(n, r);\n  }\n  intersection_e(e) {\n    const n = this.intersection(e);\n    if (n == null)\n      throw "TimeSpans do not intersect";\n    return n;\n  }\n  midpoint() {\n    return this.begin.add(this.duration.div(me(2)));\n  }\n  equals(e) {\n    return this.begin.equals(e.begin) && this.end.equals(e.end);\n  }\n  show() {\n    return this.begin.show() + " → " + this.end.show();\n  }\n}\nclass Gt {\n  /*\n        Event class, representing a value active during the timespan\n        \'part\'. This might be a fragment of an event, in which case the\n        timespan will be smaller than the \'whole\' timespan, otherwise the\n        two timespans will be the same. The \'part\' must never extend outside of the\n        \'whole\'. If the event represents a continuously changing value\n        then the whole will be returned as None, in which case the given\n        value will have been sampled from the point halfway between the\n        start and end of the \'part\' timespan.\n        The context is to store a list of source code locations causing the event.\n  \n        The word \'Event\' is more or less a reserved word in javascript, hence this\n        class is named called \'Hap\'.\n        */\n  constructor(e, n, r, i = {}, s = !1) {\n    this.whole = e, this.part = n, this.value = r, this.context = i, this.stateful = s, s && console.assert(typeof this.value == "function", "Stateful values must be functions");\n  }\n  get duration() {\n    let e;\n    return typeof this.value?.duration == "number" ? e = me(this.value.duration) : e = this.whole.end.sub(this.whole.begin), typeof this.value?.clip == "number" ? e.mul(this.value.clip) : e;\n  }\n  get endClipped() {\n    return this.whole.begin.add(this.duration);\n  }\n  isActive(e) {\n    return this.whole.begin <= e && this.endClipped >= e;\n  }\n  isInPast(e) {\n    return e > this.endClipped;\n  }\n  isInNearPast(e, n) {\n    return n - e <= this.endClipped;\n  }\n  isInFuture(e) {\n    return e < this.whole.begin;\n  }\n  isInNearFuture(e, n) {\n    return n < this.whole.begin && n > this.whole.begin - e;\n  }\n  isWithinTime(e, n) {\n    return this.whole.begin <= n && this.endClipped >= e;\n  }\n  wholeOrPart() {\n    return this.whole ? this.whole : this.part;\n  }\n  withSpan(e) {\n    const n = this.whole ? e(this.whole) : void 0;\n    return new Gt(n, e(this.part), this.value, this.context);\n  }\n  withValue(e) {\n    return new Gt(this.whole, this.part, e(this.value), this.context);\n  }\n  hasOnset() {\n    return this.whole != null && this.whole.begin.equals(this.part.begin);\n  }\n  hasTag(e) {\n    return this.context.tags?.includes(e);\n  }\n  resolveState(e) {\n    if (this.stateful && this.hasOnset()) {\n      console.log("stateful");\n      const n = this.value, [r, i] = n(e);\n      return [r, new Gt(this.whole, this.part, i, this.context, !1)];\n    }\n    return [e, this];\n  }\n  spanEquals(e) {\n    return this.whole == null && e.whole == null || this.whole.equals(e.whole);\n  }\n  equals(e) {\n    return this.spanEquals(e) && this.part.equals(e.part) && // TODO would == be better ??\n    this.value === e.value;\n  }\n  show(e = !1) {\n    const n = typeof this.value == "object" ? e ? JSON.stringify(this.value).slice(1, -1).replaceAll(\'"\', "").replaceAll(",", " ") : JSON.stringify(this.value) : this.value;\n    var r = "";\n    if (this.whole == null)\n      r = "~" + this.part.show;\n    else {\n      var i = this.whole.begin.equals(this.part.begin) && this.whole.end.equals(this.part.end);\n      this.whole.begin.equals(this.part.begin) || (r = this.whole.begin.show() + " ⇜ "), i || (r += "("), r += this.part.show(), i || (r += ")"), this.whole.end.equals(this.part.end) || (r += " ⇝ " + this.whole.end.show());\n    }\n    return "[ " + r + " | " + n + " ]";\n  }\n  showWhole(e = !1) {\n    return `${this.whole == null ? "~" : this.whole.show()}: ${typeof this.value == "object" ? e ? JSON.stringify(this.value).slice(1, -1).replaceAll(\'"\', "").replaceAll(",", " ") : JSON.stringify(this.value) : this.value}`;\n  }\n  combineContext(e) {\n    const n = this;\n    return { ...n.context, ...e.context, locations: (n.context.locations || []).concat(e.context.locations || []) };\n  }\n  setContext(e) {\n    return new Gt(this.whole, this.part, this.value, e);\n  }\n  ensureObjectValue() {\n    if (typeof this.value != "object")\n      throw new Error(\n        `expected hap.value to be an object, but got "${this.value}". Hint: append .note() or .s() to the end`,\n        "error"\n      );\n  }\n}\nclass da {\n  constructor(e, n = {}) {\n    this.span = e, this.controls = n;\n  }\n  // Returns new State with different span\n  setSpan(e) {\n    return new da(e, this.controls);\n  }\n  withSpan(e) {\n    return this.setSpan(e(this.span));\n  }\n  // Returns new State with different controls\n  setControls(e) {\n    return new da(this.span, e);\n  }\n}\nfunction $P(t, e, n) {\n  if (e?.value !== void 0 && Object.keys(e).length === 1)\n    return En("[warn]: Can\'t do arithmetic on control pattern."), t;\n  const r = Object.keys(t).filter((i) => Object.keys(e).includes(i));\n  return Object.assign({}, t, e, Object.fromEntries(r.map((i) => [i, n(t[i], e[i])])));\n}\nKe((t, e) => t * e);\nKe((t, e) => e.map(t));\nfunction Pb(t, e = 60) {\n  let n = 0, r = me(0), i = [""], s = "";\n  for (; i[0].length < e; ) {\n    const a = t.queryArc(n, n + 1), o = a.filter((h) => h.hasOnset()).map((h) => h.duration), l = ZP(...o), c = l.inverse();\n    i = i.map((h) => h + "|"), s += "|";\n    for (let h = 0; h < c; h++) {\n      const [f, m] = [r, r.add(l)], y = a.filter((C) => C.whole.begin.lte(f) && C.whole.end.gte(m)), v = y.length - i.length;\n      v > 0 && (i = i.concat(Array(v).fill(s))), i = i.map((C, S) => {\n        const M = y[S];\n        if (M) {\n          const U = M.whole.begin.eq(f) ? "" + M.value : "-";\n          return C + U;\n        }\n        return C + ".";\n      }), s += ".", r = r.add(l);\n    }\n    n++;\n  }\n  return i.join(`\n`);\n}\nlet dp, qr = !0;\nconst LP = function(t) {\n  qr = !!t;\n}, Eb = (t) => dp = t;\nlet de = class On {\n  /**\n   * Create a pattern. As an end user, you will most likely not create a Pattern directly.\n   *\n   * @param {function} query - The function that maps a `State` to an array of `Hap`.\n   * @noAutocomplete\n   */\n  constructor(e, n = void 0) {\n    this.query = e, this._Pattern = !0, this._steps = n;\n  }\n  get _steps() {\n    return this.__steps;\n  }\n  set _steps(e) {\n    this.__steps = e === void 0 ? void 0 : me(e);\n  }\n  setSteps(e) {\n    return this._steps = e, this;\n  }\n  withSteps(e) {\n    return qr ? new On(this.query, this._steps === void 0 ? void 0 : e(this._steps)) : this;\n  }\n  get hasSteps() {\n    return this._steps !== void 0;\n  }\n  //////////////////////////////////////////////////////////////////////\n  // Haskell-style functor, applicative and monadic operations\n  /**\n   * Returns a new pattern, with the function applied to the value of\n   * each hap. It has the alias `fmap`.\n   * @synonyms fmap\n   * @param {Function} func to to apply to the value\n   * @returns Pattern\n   * @example\n   * "0 1 2".withValue(v => v + 10).log()\n   */\n  withValue(e) {\n    const n = new On((r) => this.query(r).map((i) => i.withValue(e)));\n    return n._steps = this._steps, n;\n  }\n  // runs func on query state\n  withState(e) {\n    return this.withHaps((n, r) => (e(r), n));\n  }\n  /**\n   * see `withValue`\n   * @noAutocomplete\n   */\n  fmap(e) {\n    return this.withValue(e);\n  }\n  /**\n   * Assumes \'this\' is a pattern of functions, and given a function to\n   * resolve wholes, applies a given pattern of values to that\n   * pattern of functions.\n   * @param {Function} whole_func\n   * @param {Function} func\n   * @noAutocomplete\n   * @returns Pattern\n   */\n  appWhole(e, n) {\n    const r = this, i = function(s) {\n      const a = r.query(s), o = n.query(s), l = function(c, h) {\n        const f = c.part.intersection(h.part);\n        if (f != null)\n          return new Gt(\n            e(c.whole, h.whole),\n            f,\n            c.value(h.value),\n            h.combineContext(c)\n          );\n      };\n      return Ai(\n        a.map((c) => Da(o.map((h) => l(c, h))))\n      );\n    };\n    return new On(i);\n  }\n  /**\n   * When this method is called on a pattern of functions, it matches its haps\n   * with those in the given pattern of values.  A new pattern is returned, with\n   * each matching value applied to the corresponding function.\n   *\n   * In this `_appBoth` variant, where timespans of the function and value haps\n   * are not the same but do intersect, the resulting hap has a timespan of the\n   * intersection. This applies to both the part and the whole timespan.\n   * @param {Pattern} pat_val\n   * @noAutocomplete\n   * @returns Pattern\n   */\n  appBoth(e) {\n    const n = this, r = function(s, a) {\n      if (!(s == null || a == null))\n        return s.intersection_e(a);\n    }, i = n.appWhole(r, e);\n    return qr && (i._steps = Ur(e._steps, n._steps)), i;\n  }\n  /**\n   * As with `appBoth`, but the `whole` timespan is not the intersection,\n   * but the timespan from the function of patterns that this method is called\n   * on. In practice, this means that the pattern structure, including onsets,\n   * are preserved from the pattern of functions (often referred to as the left\n   * hand or inner pattern).\n   * @param {Pattern} pat_val\n   * @noAutocomplete\n   * @returns Pattern\n   */\n  appLeft(e) {\n    const n = this, r = function(s) {\n      const a = [];\n      for (const o of n.query(s)) {\n        const l = e.query(s.setSpan(o.wholeOrPart()));\n        for (const c of l) {\n          const h = o.whole, f = o.part.intersection(c.part);\n          if (f) {\n            const m = o.value(c.value), y = c.combineContext(o), v = new Gt(h, f, m, y);\n            a.push(v);\n          }\n        }\n      }\n      return a;\n    }, i = new On(r);\n    return i._steps = this._steps, i;\n  }\n  /**\n   * As with `appLeft`, but `whole` timespans are instead taken from the\n   * pattern of values, i.e. structure is preserved from the right hand/outer\n   * pattern.\n   * @param {Pattern} pat_val\n   * @noAutocomplete\n   * @returns Pattern\n   */\n  appRight(e) {\n    const n = this, r = function(s) {\n      const a = [];\n      for (const o of e.query(s)) {\n        const l = n.query(s.setSpan(o.wholeOrPart()));\n        for (const c of l) {\n          const h = o.whole, f = c.part.intersection(o.part);\n          if (f) {\n            const m = c.value(o.value), y = o.combineContext(c), v = new Gt(h, f, m, y);\n            a.push(v);\n          }\n        }\n      }\n      return a;\n    }, i = new On(r);\n    return i._steps = e._steps, i;\n  }\n  bindWhole(e, n) {\n    const r = this, i = function(s) {\n      const a = function(l, c) {\n        return new Gt(\n          e(l.whole, c.whole),\n          c.part,\n          c.value,\n          Object.assign({}, l.context, c.context, {\n            locations: (l.context.locations || []).concat(c.context.locations || [])\n          })\n        );\n      }, o = function(l) {\n        return n(l.value).query(s.setSpan(l.part)).map((c) => a(l, c));\n      };\n      return Ai(r.query(s).map((l) => o(l)));\n    };\n    return new On(i);\n  }\n  bind(e) {\n    const n = function(r, i) {\n      if (!(r == null || i == null))\n        return r.intersection_e(i);\n    };\n    return this.bindWhole(n, e);\n  }\n  join() {\n    return this.bind(Hs);\n  }\n  outerBind(e) {\n    return this.bindWhole((n) => n, e).setSteps(this._steps);\n  }\n  outerJoin() {\n    return this.outerBind(Hs);\n  }\n  innerBind(e) {\n    return this.bindWhole((n, r) => r, e);\n  }\n  innerJoin() {\n    return this.innerBind(Hs);\n  }\n  // Flatterns patterns of patterns, by retriggering/resetting inner patterns at onsets of outer pattern haps\n  resetJoin(e = !1) {\n    const n = this;\n    return new On((r) => n.discreteOnly().query(r).map((i) => i.value.late(e ? i.whole.begin : i.whole.begin.cyclePos()).query(r).map(\n      (s) => new Gt(\n        // Supports continuous haps in the inner pattern\n        s.whole ? s.whole.intersection(i.whole) : void 0,\n        s.part.intersection(i.part),\n        s.value\n      ).setContext(i.combineContext(s))\n    ).filter((s) => s.part)).flat());\n  }\n  restartJoin() {\n    return this.resetJoin(!0);\n  }\n  // Like the other joins above, joins a pattern of patterns of values, into a flatter\n  // pattern of values. In this case it takes whole cycles of the inner pattern to fit each event\n  // in the outer pattern.\n  squeezeJoin() {\n    const e = this;\n    function n(r) {\n      const i = e.discreteOnly().query(r);\n      function s(o) {\n        const c = o.value._focusSpan(o.wholeOrPart()).query(r.setSpan(o.part));\n        function h(f, m) {\n          let y;\n          if (m.whole && f.whole && (y = m.whole.intersection(f.whole), !y))\n            return;\n          const v = m.part.intersection(f.part);\n          if (!v)\n            return;\n          const C = m.combineContext(f);\n          return new Gt(y, v, m.value, C);\n        }\n        return c.map((f) => h(o, f));\n      }\n      return Ai(i.map(s)).filter((o) => o);\n    }\n    return new On(n);\n  }\n  squeezeBind(e) {\n    return this.fmap(e).squeezeJoin();\n  }\n  polyJoin = function() {\n    const e = this;\n    return e.fmap((n) => n.extend(e._steps.div(n._steps))).outerJoin();\n  };\n  polyBind(e) {\n    return this.fmap(e).polyJoin();\n  }\n  //////////////////////////////////////////////////////////////////////\n  // Utility methods mainly for internal use\n  /**\n   * Query haps inside the given time span.\n   *\n   * @param {Fraction | number} begin from time\n   * @param {Fraction | number} end to time\n   * @returns Hap[]\n   * @example\n   * const pattern = sequence(\'a\', [\'b\', \'c\'])\n   * const haps = pattern.queryArc(0, 1)\n   * console.log(haps)\n   * silence\n   * @noAutocomplete\n   */\n  queryArc(e, n, r = {}) {\n    try {\n      return this.query(new da(new tn(e, n), r));\n    } catch (i) {\n      return En(`[query]: ${i.message}`, "error"), [];\n    }\n  }\n  /**\n   * Returns a new pattern, with queries split at cycle boundaries. This makes\n   * some calculations easier to express, as all haps are then constrained to\n   * happen within a cycle.\n   * @returns Pattern\n   * @noAutocomplete\n   */\n  splitQueries() {\n    const e = this, n = (r) => Ai(r.span.spanCycles.map((i) => e.query(r.setSpan(i))));\n    return new On(n);\n  }\n  /**\n   * Returns a new pattern, where the given function is applied to the query\n   * timespan before passing it to the original pattern.\n   * @param {Function} func the function to apply\n   * @returns Pattern\n   * @noAutocomplete\n   */\n  withQuerySpan(e) {\n    return new On((n) => this.query(n.withSpan(e)));\n  }\n  withQuerySpanMaybe(e) {\n    const n = this;\n    return new On((r) => {\n      const i = r.withSpan(e);\n      return i.span ? n.query(i) : [];\n    });\n  }\n  /**\n   * As with `withQuerySpan`, but the function is applied to both the\n   * begin and end time of the query timespan.\n   * @param {Function} func the function to apply\n   * @returns Pattern\n   * @noAutocomplete\n   */\n  withQueryTime(e) {\n    return new On((n) => this.query(n.withSpan((r) => r.withTime(e))));\n  }\n  /**\n   * Similar to `withQuerySpan`, but the function is applied to the timespans\n   * of all haps returned by pattern queries (both `part` timespans, and where\n   * present, `whole` timespans).\n   * @param {Function} func\n   * @returns Pattern\n   * @noAutocomplete\n   */\n  withHapSpan(e) {\n    return new On((n) => this.query(n).map((r) => r.withSpan(e)));\n  }\n  /**\n   * As with `withHapSpan`, but the function is applied to both the\n   * begin and end time of the hap timespans.\n   * @param {Function} func the function to apply\n   * @returns Pattern\n   * @noAutocomplete\n   */\n  withHapTime(e) {\n    return this.withHapSpan((n) => n.withTime(e));\n  }\n  /**\n   * Returns a new pattern with the given function applied to the list of haps returned by every query.\n   * @param {Function} func\n   * @returns Pattern\n   * @noAutocomplete\n   */\n  withHaps(e) {\n    const n = new On((r) => e(this.query(r), r));\n    return n._steps = this._steps, n;\n  }\n  /**\n   * As with `withHaps`, but applies the function to every hap, rather than every list of haps.\n   * @param {Function} func\n   * @returns Pattern\n   * @noAutocomplete\n   */\n  withHap(e) {\n    return this.withHaps((n) => n.map(e));\n  }\n  /**\n   * Returns a new pattern with the context field set to every hap set to the given value.\n   * @param {*} context\n   * @returns Pattern\n   * @noAutocomplete\n   */\n  setContext(e) {\n    return this.withHap((n) => n.setContext(e));\n  }\n  /**\n   * Returns a new pattern with the given function applied to the context field of every hap.\n   * @param {Function} func\n   * @returns Pattern\n   * @noAutocomplete\n   */\n  withContext(e) {\n    const n = this.withHap((r) => r.setContext(e(r.context)));\n    return this.__pure !== void 0 && (n.__pure = this.__pure, n.__pure_loc = this.__pure_loc), n;\n  }\n  /**\n   * Returns a new pattern with the context field of every hap set to an empty object.\n   * @returns Pattern\n   * @noAutocomplete\n   */\n  stripContext() {\n    return this.withHap((e) => e.setContext({}));\n  }\n  /**\n   * Returns a new pattern with the given location information added to the\n   * context of every hap.\n   * @param {Number} start start offset\n   * @param {Number} end end offset\n   * @returns Pattern\n   * @noAutocomplete\n   */\n  withLoc(e, n) {\n    const r = {\n      start: e,\n      end: n\n    }, i = this.withContext((s) => {\n      const a = (s.locations || []).concat([r]);\n      return { ...s, locations: a };\n    });\n    return this.__pure && (i.__pure = this.__pure, i.__pure_loc = r), i;\n  }\n  /**\n   * Returns a new Pattern, which only returns haps that meet the given test.\n   * @param {Function} hap_test - a function which returns false for haps to be removed from the pattern\n   * @returns Pattern\n   * @noAutocomplete\n   */\n  filterHaps(e) {\n    return new On((n) => this.query(n).filter(e));\n  }\n  /**\n   * As with `filterHaps`, but the function is applied to values\n   * inside haps.\n   * @param {Function} value_test\n   * @returns Pattern\n   * @noAutocomplete\n   */\n  filterValues(e) {\n    return new On((n) => this.query(n).filter((r) => e(r.value))).setSteps(this._steps);\n  }\n  /**\n   * Returns a new pattern, with haps containing undefined values removed from\n   * query results.\n   * @returns Pattern\n   * @noAutocomplete\n   */\n  removeUndefineds() {\n    return this.filterValues((e) => e != null);\n  }\n  /**\n   * Returns a new pattern, with all haps without onsets filtered out. A hap\n   * with an onset is one with a `whole` timespan that begins at the same time\n   * as its `part` timespan.\n   * @returns Pattern\n   * @noAutocomplete\n   */\n  onsetsOnly() {\n    return this.filterHaps((e) => e.hasOnset());\n  }\n  /**\n   * Returns a new pattern, with \'continuous\' haps (those without \'whole\'\n   * timespans) removed from query results.\n   * @returns Pattern\n   * @noAutocomplete\n   */\n  discreteOnly() {\n    return this.filterHaps((e) => e.whole);\n  }\n  /**\n   * Combines adjacent haps with the same value and whole.  Only\n   * intended for use in tests.\n   * @noAutocomplete\n   */\n  defragmentHaps() {\n    return this.discreteOnly().withHaps((n) => {\n      const r = [];\n      for (var i = 0; i < n.length; ++i) {\n        for (var s = !0, a = n[i]; s; ) {\n          const c = JSON.stringify(n[i].value);\n          for (var o = !1, l = i + 1; l < n.length; l++) {\n            const h = n[l];\n            if (a.whole.equals(h.whole)) {\n              if (a.part.begin.eq(h.part.end)) {\n                if (c === JSON.stringify(h.value)) {\n                  a = new Gt(a.whole, new tn(h.part.begin, a.part.end), a.value), n.splice(l, 1), o = !0;\n                  break;\n                }\n              } else if (h.part.begin.eq(a.part.end) && c == JSON.stringify(h.value)) {\n                a = new Gt(a.whole, new tn(a.part.begin, h.part.end), a.value), n.splice(l, 1), o = !0;\n                break;\n              }\n            }\n          }\n          s = o;\n        }\n        r.push(a);\n      }\n      return r;\n    });\n  }\n  /**\n   * Queries the pattern for the first cycle, returning Haps. Mainly of use when\n   * debugging a pattern.\n   * @param {Boolean} with_context - set to true, otherwise the context field\n   * will be stripped from the resulting haps.\n   * @returns [Hap]\n   * @noAutocomplete\n   */\n  firstCycle(e = !1) {\n    var n = this;\n    return e || (n = n.stripContext()), n.query(new da(new tn(me(0), me(1))));\n  }\n  /**\n   * Accessor for a list of values returned by querying the first cycle.\n   * @noAutocomplete\n   */\n  get firstCycleValues() {\n    return this.firstCycle().map((e) => e.value);\n  }\n  /**\n   * More human-readable version of the `firstCycleValues` accessor.\n   * @noAutocomplete\n   */\n  get showFirstCycle() {\n    return this.firstCycle().map(\n      (e) => `${e.value}: ${e.whole.begin.toFraction()} - ${e.whole.end.toFraction()}`\n    );\n  }\n  /**\n   * Returns a new pattern, which returns haps sorted in temporal order. Mainly\n   * of use when comparing two patterns for equality, in tests.\n   * @returns Pattern\n   * @noAutocomplete\n   */\n  sortHapsByPart() {\n    return this.withHaps(\n      (e) => e.sort(\n        (n, r) => n.part.begin.sub(r.part.begin).or(n.part.end.sub(r.part.end)).or(n.whole.begin.sub(r.whole.begin).or(n.whole.end.sub(r.whole.end)))\n      )\n    );\n  }\n  asNumber() {\n    return this.fmap(Vf);\n  }\n  //////////////////////////////////////////////////////////////////////\n  // Operators - see \'make composers\' later..\n  _opIn(e, n) {\n    return this.fmap(n).appLeft(Oe(e));\n  }\n  _opOut(e, n) {\n    return this.fmap(n).appRight(Oe(e));\n  }\n  _opMix(e, n) {\n    return this.fmap(n).appBoth(Oe(e));\n  }\n  _opSqueeze(e, n) {\n    const r = Oe(e);\n    return this.fmap((i) => r.fmap((s) => n(i)(s))).squeezeJoin();\n  }\n  _opSqueezeOut(e, n) {\n    const r = this;\n    return Oe(e).fmap((s) => r.fmap((a) => n(a)(s))).squeezeJoin();\n  }\n  _opReset(e, n) {\n    return Oe(e).fmap((i) => this.fmap((s) => n(s)(i))).resetJoin();\n  }\n  _opRestart(e, n) {\n    return Oe(e).fmap((i) => this.fmap((s) => n(s)(i))).restartJoin();\n  }\n  _opPoly(e, n) {\n    const r = Oe(e);\n    return this.fmap((i) => r.fmap((s) => n(s)(i))).polyJoin();\n  }\n  //////////////////////////////////////////////////////////////////////\n  // End-user methods.\n  // Those beginning with an underscore (_) are \'patternified\',\n  // i.e. versions are created without the underscore, that are\n  // magically transformed to accept patterns for all their arguments.\n  //////////////////////////////////////////////////////////////////////\n  // Methods without corresponding toplevel functions\n  /**\n   * Layers the result of the given function(s). Like `superimpose`, but without the original pattern:\n   * @name layer\n   * @memberof Pattern\n   * @synonyms apply\n   * @returns Pattern\n   * @example\n   * "<0 2 4 6 ~ 4 ~ 2 0!3 ~!5>*8"\n   *   .layer(x=>x.add("0,2"))\n   *   .scale(\'C minor\').note()\n   */\n  layer(...e) {\n    return Nt(...e.map((n) => n(this)));\n  }\n  /**\n   * Superimposes the result of the given function(s) on top of the original pattern:\n   * @name superimpose\n   * @memberof Pattern\n   * @returns Pattern\n   * @example\n   * "<0 2 4 6 ~ 4 ~ 2 0!3 ~!5>*8"\n   *   .superimpose(x=>x.add(2))\n   *   .scale(\'C minor\').note()\n   */\n  superimpose(...e) {\n    return this.stack(...e.map((n) => n(this)));\n  }\n  //////////////////////////////////////////////////////////////////////\n  // Multi-pattern functions\n  stack(...e) {\n    return Nt(this, ...e);\n  }\n  sequence(...e) {\n    return Fr(this, ...e);\n  }\n  seq(...e) {\n    return Fr(this, ...e);\n  }\n  cat(...e) {\n    return Tb(this, ...e);\n  }\n  fastcat(...e) {\n    return Jn(this, ...e);\n  }\n  slowcat(...e) {\n    return as(this, ...e);\n  }\n  //////////////////////////////////////////////////////////////////////\n  // Context methods - ones that deal with metadata\n  onTrigger(e, n = !0) {\n    return this.withHap(\n      (r) => r.setContext({\n        ...r.context,\n        onTrigger: (...i) => {\n          r.context.onTrigger?.(...i), e(...i);\n        },\n        // if dominantTrigger is set to true, the default output (webaudio) will be disabled\n        // when using multiple triggers, you cannot flip this flag to false again!\n        // example: x.csound(\'CooLSynth\').log() as well as x.log().csound(\'CooLSynth\') should work the same\n        dominantTrigger: r.context.dominantTrigger || n\n      })\n    );\n  }\n  log(e = (r, i) => `[hap] ${i.showWhole(!0)}`, n = (r, i) => ({ hap: i })) {\n    return this.onTrigger((...r) => {\n      En(e(...r), void 0, n(...r));\n    }, !1);\n  }\n  logValues(e = Hs) {\n    return this.log((n, r) => e(r.value));\n  }\n  //////////////////////////////////////////////////////////////////////\n  // Visualisation\n  drawLine() {\n    return console.log(Pb(this)), this;\n  }\n};\nfunction IP(t, e) {\n  let n = [];\n  return e.forEach((r) => {\n    const i = n.findIndex(([s]) => t(r, s));\n    i === -1 ? n.push([r]) : n[i].push(r);\n  }), n;\n}\nconst NP = (t, e) => t.spanEquals(e);\nde.prototype.collect = function() {\n  return this.withHaps(\n    (t) => IP(NP, t).map((e) => new Gt(e[0].whole, e[0].part, e, {}))\n  );\n};\nde.prototype.arpWith = function(t) {\n  return this.collect().fmap((e) => Oe(t(e))).innerJoin().withHap((e) => new Gt(e.whole, e.part, e.value.value, e.combineContext(e.value)));\n};\nde.prototype.arp = function(t) {\n  return this.arpWith((e) => t.fmap((n) => e[n % e.length]));\n};\nfunction kl(t) {\n  return !Array.isArray(t) && typeof t == "object";\n}\nfunction VP(t, e, n) {\n  return kl(t) || kl(e) ? (kl(t) || (t = { value: t }), kl(e) || (e = { value: e }), $P(t, e, n)) : n(t, e);\n}\n(function() {\n  const t = {\n    set: [(n, r) => r],\n    keep: [(n) => n],\n    keepif: [(n, r) => r ? n : void 0],\n    // numerical functions\n    /**\n     *\n     * Assumes a pattern of numbers. Adds the given number to each item in the pattern.\n     * @name add\n     * @memberof Pattern\n     * @example\n     * // Here, the triad 0, 2, 4 is shifted by different amounts\n     * n("0 2 4".add("<0 3 4 0>")).scale("C:major")\n     * // Without add, the equivalent would be:\n     * // n("<[0 2 4] [3 5 7] [4 6 8] [0 2 4]>").scale("C:major")\n     * @example\n     * // You can also use add with notes:\n     * note("c3 e3 g3".add("<0 5 7 0>"))\n     * // Behind the scenes, the notes are converted to midi numbers:\n     * // note("48 52 55".add("<0 5 7 0>"))\n     */\n    add: [lr((n, r) => n + r)],\n    // support string concatenation\n    /**\n     *\n     * Like add, but the given numbers are subtracted.\n     * @name sub\n     * @memberof Pattern\n     * @example\n     * n("0 2 4".sub("<0 1 2 3>")).scale("C4:minor")\n     * // See add for more information.\n     */\n    sub: [lr((n, r) => n - r)],\n    /**\n     *\n     * Multiplies each number by the given factor.\n     * @name mul\n     * @memberof Pattern\n     * @example\n     * "<1 1.5 [1.66, <2 2.33>]>*4".mul(150).freq()\n     */\n    mul: [lr((n, r) => n * r)],\n    /**\n     *\n     * Divides each number by the given factor.\n     * @name div\n     * @memberof Pattern\n     */\n    div: [lr((n, r) => n / r)],\n    mod: [lr($o)],\n    pow: [lr(Math.pow)],\n    log2: [lr(Math.log2)],\n    band: [lr((n, r) => n & r)],\n    bor: [lr((n, r) => n | r)],\n    bxor: [lr((n, r) => n ^ r)],\n    blshift: [lr((n, r) => n << r)],\n    brshift: [lr((n, r) => n >> r)],\n    // TODO - force numerical comparison if both look like numbers?\n    lt: [(n, r) => n < r],\n    gt: [(n, r) => n > r],\n    lte: [(n, r) => n <= r],\n    gte: [(n, r) => n >= r],\n    eq: [(n, r) => n == r],\n    eqt: [(n, r) => n === r],\n    ne: [(n, r) => n != r],\n    net: [(n, r) => n !== r],\n    and: [(n, r) => n && r],\n    or: [(n, r) => n || r],\n    //  bitwise ops\n    func: [(n, r) => r(n)]\n  }, e = ["In", "Out", "Mix", "Squeeze", "SqueezeOut", "Reset", "Restart", "Poly"];\n  for (const [n, [r, i]] of Object.entries(t)) {\n    de.prototype["_" + n] = function(s) {\n      return this.fmap((a) => r(a, s));\n    }, Object.defineProperty(de.prototype, n, {\n      // a getter that returns a function, so \'pat\' can be\n      // accessed by closures that are methods of that function..\n      get: function() {\n        const s = this, a = (...o) => s[n].in(...o);\n        for (const o of e)\n          a[o.toLowerCase()] = function(...l) {\n            var c = s;\n            l = Fr(l), i && (c = i(c), l = i(l));\n            var h;\n            return n === "keepif" ? (h = c["_op" + o](l, (f) => (m) => r(f, m)), h = h.removeUndefineds()) : h = c["_op" + o](l, (f) => (m) => VP(f, m, r)), h;\n          };\n        return a.squeezein = a.squeeze, a;\n      }\n    });\n    for (const s of e)\n      de.prototype[s.toLowerCase()] = function(...a) {\n        return this.set[s.toLowerCase()](a);\n      };\n  }\n  de.prototype.struct = function(...n) {\n    return this.keepif.out(...n);\n  }, de.prototype.structAll = function(...n) {\n    return this.keep.out(...n);\n  }, de.prototype.mask = function(...n) {\n    return this.keepif.in(...n);\n  }, de.prototype.maskAll = function(...n) {\n    return this.keep.in(...n);\n  }, de.prototype.reset = function(...n) {\n    return this.keepif.reset(...n);\n  }, de.prototype.resetAll = function(...n) {\n    return this.keep.reset(...n);\n  }, de.prototype.restart = function(...n) {\n    return this.keepif.restart(...n);\n  }, de.prototype.restartAll = function(...n) {\n    return this.keep.restart(...n);\n  };\n})();\nconst XP = Nt, WP = Nt, UP = Oc, Pa = (t) => new de(() => [], t), St = Pa(1), pr = Pa(0);\nfunction cn(t) {\n  function e(r) {\n    return r.span.spanCycles.map((i) => new Gt(me(i.begin).wholeCycle(), i, t));\n  }\n  const n = new de(e, 1);\n  return n.__pure = t, n;\n}\nfunction yc(t) {\n  return t instanceof de || t?._Pattern;\n}\nfunction Oe(t) {\n  return yc(t) ? t : dp && typeof t == "string" ? dp(t) : cn(t);\n}\nfunction Fb(t) {\n  let e = cn([]);\n  for (const n of t)\n    e = e.bind((r) => n.fmap((i) => r.concat([i])));\n  return e;\n}\nfunction Nt(...t) {\n  t = t.map((r) => Array.isArray(r) ? Fr(...r) : Oe(r));\n  const e = (r) => Ai(t.map((i) => i.query(r))), n = new de(e);\n  return qr && (n._steps = Ur(...t.map((r) => r._steps))), n;\n}\nfunction qf(t, e) {\n  if (e = e.map((s) => Array.isArray(s) ? Fr(...s) : Oe(s)), e.length === 0)\n    return St;\n  if (e.length === 1)\n    return e[0];\n  const [n, ...r] = e.map((s) => s._steps), i = qr ? n.maximum(...r) : void 0;\n  return Nt(...t(i, e));\n}\nfunction Bb(...t) {\n  return qf(\n    (e, n) => n.map((r) => r._steps.eq(e) ? r : Hn(r, Pa(e.sub(r._steps)))),\n    t\n  );\n}\nfunction Mb(...t) {\n  return qf(\n    (e, n) => n.map((r) => r._steps.eq(e) ? r : Hn(Pa(e.sub(r._steps)), r)),\n    t\n  );\n}\nfunction Qb(...t) {\n  return qf(\n    (e, n) => n.map((r) => {\n      if (r._steps.eq(e))\n        return r;\n      const i = Pa(e.sub(r._steps).div(2));\n      return Hn(i, r, i);\n    }),\n    t\n  );\n}\nfunction qP(t, ...e) {\n  const [n, ...r] = e.map((a) => a._steps), i = n.maximum(...r), s = {\n    centre: Qb,\n    left: Bb,\n    right: Mb,\n    expand: Nt,\n    repeat: (...a) => Oc(...a).steps(i)\n  };\n  return t.inhabit(s).fmap((a) => a(...e)).innerJoin().setSteps(i);\n}\nfunction as(...t) {\n  if (t = t.map((r) => Array.isArray(r) ? Jn(...r) : Oe(r)), t.length == 1)\n    return t[0];\n  const e = function(r) {\n    const i = r.span, s = $o(i.begin.sam(), t.length), a = t[s];\n    if (!a)\n      return [];\n    const o = i.begin.floor().sub(i.begin.div(t.length).floor());\n    return a.withHapTime((l) => l.add(o)).query(r.setSpan(i.withTime((l) => l.sub(o))));\n  }, n = qr ? Ur(...t.map((r) => r._steps)) : void 0;\n  return new de(e).splitQueries().setSteps(n);\n}\nfunction Gf(...t) {\n  t = t.map(Oe);\n  const e = function(n) {\n    const r = Math.floor(n.span.begin) % t.length;\n    return t[r]?.query(n) || [];\n  };\n  return new de(e).splitQueries();\n}\nfunction Tb(...t) {\n  return as(...t);\n}\nfunction GP(...t) {\n  const e = t.reduce((n, [r]) => n + r, 0);\n  return t = t.map(([n, r]) => [n, r.fast(n)]), Hn(...t).slow(e);\n}\nfunction zP(...t) {\n  let e = me(0);\n  for (let n of t)\n    n.length == 2 && n.unshift(e), e = n[1];\n  return Nt(\n    ...t.map(\n      ([n, r, i]) => cn(Oe(i)).compress(me(n).div(e), me(r).div(e))\n    )\n  ).slow(e).innerJoin();\n}\nfunction Jn(...t) {\n  let e = as(...t);\n  return t.length > 1 && (e = e._fast(t.length), e._steps = t.length), t.length == 1 && t[0].__steps_source && (t._steps = t[0]._steps), e;\n}\nfunction Fr(...t) {\n  return Jn(...t);\n}\nfunction jb(...t) {\n  return Jn(...t);\n}\nfunction mp(t) {\n  return Array.isArray(t) ? t.length == 0 ? [St, 0] : t.length == 1 ? mp(t[0]) : [Jn(...t.map((e) => mp(e)[0])), t.length] : [Oe(t), 1];\n}\nconst HP = Ke((t, e) => Oe(e).mask(t)), YP = Ke((t, e) => Oe(e).struct(t)), KP = Ke((t, e) => Oe(e).superimpose(...t)), JP = Ke((t, e) => Oe(e).withValue(t)), e3 = Ke((t, e) => Oe(e).bind(t)), t3 = Ke((t, e) => Oe(e).innerBind(t)), n3 = Ke((t, e) => Oe(e).outerBind(t)), r3 = Ke((t, e) => Oe(e).squeezeBind(t)), i3 = Ke((t, e) => Oe(e).stepBind(t)), s3 = Ke((t, e) => Oe(e).polyBind(t)), a3 = Ke((t, e) => Oe(e).set(t)), o3 = Ke((t, e) => Oe(e).keep(t)), l3 = Ke((t, e) => Oe(e).keepif(t)), u3 = Ke((t, e) => Oe(e).add(t)), c3 = Ke((t, e) => Oe(e).sub(t)), h3 = Ke((t, e) => Oe(e).mul(t)), p3 = Ke((t, e) => Oe(e).div(t)), f3 = Ke((t, e) => Oe(e).mod(t)), d3 = Ke((t, e) => Oe(e).pow(t)), m3 = Ke((t, e) => Oe(e).band(t)), g3 = Ke((t, e) => Oe(e).bor(t)), b3 = Ke((t, e) => Oe(e).bxor(t)), y3 = Ke((t, e) => Oe(e).blshift(t)), O3 = Ke((t, e) => Oe(e).brshift(t)), v3 = Ke((t, e) => Oe(e).lt(t)), x3 = Ke((t, e) => Oe(e).gt(t)), k3 = Ke((t, e) => Oe(e).lte(t)), w3 = Ke((t, e) => Oe(e).gte(t)), C3 = Ke((t, e) => Oe(e).eq(t)), S3 = Ke((t, e) => Oe(e).eqt(t)), A3 = Ke((t, e) => Oe(e).ne(t)), D3 = Ke((t, e) => Oe(e).net(t)), P3 = Ke((t, e) => Oe(e).and(t)), E3 = Ke((t, e) => Oe(e).or(t)), F3 = Ke((t, e) => Oe(e).func(t));\nfunction le(t, e, n = !0, r = !1, i = (s) => s.innerJoin()) {\n  if (Array.isArray(t)) {\n    const o = {};\n    for (const l of t)\n      o[l] = le(l, e, n, r, i);\n    return o;\n  }\n  const s = e.length;\n  var a;\n  return n ? a = function(...o) {\n    o = o.map(Oe);\n    const l = o[o.length - 1];\n    let c;\n    if (s === 1)\n      c = e(l);\n    else {\n      const h = o.slice(0, -1);\n      if (h.every((f) => f.__pure != null)) {\n        const f = h.map((y) => y.__pure), m = h.filter((y) => y.__pure_loc).map((y) => y.__pure_loc);\n        c = e(...f, l), c = c.withContext((y) => {\n          const v = (y.locations || []).concat(m);\n          return { ...y, locations: v };\n        });\n      } else {\n        const [f, ...m] = h;\n        let y = (...v) => e(...v, l);\n        y = Ke(y, null, s - 1), c = i(m.reduce((v, C) => v.appLeft(C), f.fmap(y)));\n      }\n    }\n    return r && (c._steps = l._steps), c;\n  } : a = function(...o) {\n    o = o.map(Oe);\n    const l = e(...o);\n    return r && (l._steps = o[o.length - 1]._steps), l;\n  }, de.prototype[t] = function(...o) {\n    if (s === 2 && o.length !== 1)\n      o = [Fr(...o)];\n    else if (s !== o.length + 1)\n      throw new Error(`.${t}() expects ${s - 1} inputs but got ${o.length}.`);\n    return o = o.map(Oe), a(...o, this);\n  }, s > 1 && (de.prototype["_" + t] = function(...o) {\n    const l = e(...o, this);\n    return r && l.setSteps(this._steps), l;\n  }), Ke(a, null, s);\n}\nfunction Lo(t, e, n = !0, r = !1, i = (s) => s.stepJoin()) {\n  return le(t, e, n, r, i);\n}\nconst B3 = le("round", function(t) {\n  return t.asNumber().fmap((e) => Math.round(e));\n}), M3 = le("floor", function(t) {\n  return t.asNumber().fmap((e) => Math.floor(e));\n}), Q3 = le("ceil", function(t) {\n  return t.asNumber().fmap((e) => Math.ceil(e));\n}), T3 = le("toBipolar", function(t) {\n  return t.fmap((e) => e * 2 - 1);\n}), j3 = le("fromBipolar", function(t) {\n  return t.fmap((e) => (e + 1) / 2);\n}), R3 = le("range", function(t, e, n) {\n  return n.mul(e - t).add(t);\n}), _3 = le("rangex", function(t, e, n) {\n  return n._range(Math.log(t), Math.log(e)).fmap(Math.exp);\n}), Z3 = le("range2", function(t, e, n) {\n  return n.fromBipolar()._range(t, e);\n}), $3 = le(\n  "ratio",\n  (t) => t.fmap((e) => Array.isArray(e) ? e.slice(1).reduce((n, r) => n / r, e[0]) : e)\n), L3 = le("compress", function(t, e, n) {\n  return t = me(t), e = me(e), t.gt(e) || t.gt(1) || e.gt(1) || t.lt(0) || e.lt(0) ? St : n._fastGap(me(1).div(e.sub(t)))._late(t);\n}), { compressSpan: I3, compressspan: N3 } = le(["compressSpan", "compressspan"], function(t, e) {\n  return e._compress(t.begin, t.end);\n}), { fastGap: V3, fastgap: X3 } = le(["fastGap", "fastgap"], function(t, e) {\n  const n = function(i) {\n    const s = i.begin.sam(), a = i.begin.sub(s).mul(t).min(1), o = i.end.sub(s).mul(t).min(1);\n    if (!(a >= 1))\n      return new tn(s.add(a), s.add(o));\n  }, r = function(i) {\n    const s = i.part.begin, a = i.part.end, o = s.sam(), l = s.sub(o).div(t).min(1), c = a.sub(o).div(t).min(1), h = new tn(o.add(l), o.add(c)), f = i.whole ? new tn(\n      h.begin.sub(s.sub(i.whole.begin).div(t)),\n      h.end.add(i.whole.end.sub(a).div(t))\n    ) : void 0;\n    return new Gt(f, h, i.value, i.context);\n  };\n  return e.withQuerySpanMaybe(n).withHap(r).splitQueries();\n}), W3 = le("focus", function(t, e, n) {\n  return t = me(t), e = me(e), n._early(t.sam())._fast(me(1).div(e.sub(t)))._late(t);\n}), { focusSpan: U3, focusspan: q3 } = le(["focusSpan", "focusspan"], function(t, e) {\n  return e._focus(t.begin, t.end);\n}), G3 = le("ply", function(t, e) {\n  const n = e.fmap((r) => cn(r)._fast(t)).squeezeJoin();\n  return qr && (n._steps = me(t).mulmaybe(e._steps)), n;\n}), { fast: z3, density: dZ } = le(\n  ["fast", "density"],\n  function(t, e) {\n    return t === 0 ? St : (t = me(t), e.withQueryTime((r) => r.mul(t)).withHapTime((r) => r.div(t)).setSteps(e._steps));\n  },\n  !0,\n  !0\n), H3 = le("hurry", function(t, e) {\n  return e._fast(t).mul(cn({ speed: t }));\n}), { slow: Y3, sparsity: K3 } = le(["slow", "sparsity"], function(t, e) {\n  return t === 0 ? St : e._fast(me(1).div(t));\n}), J3 = le("inside", function(t, e, n) {\n  return e(n._slow(t))._fast(t);\n}), e5 = le("outside", function(t, e, n) {\n  return e(n._fast(t))._slow(t);\n}), t5 = le("lastOf", function(t, e, n) {\n  const r = Array(t - 1).fill(n);\n  return r.push(e(n)), Gf(...r);\n}), { firstOf: n5, every: r5 } = le(["firstOf", "every"], function(t, e, n) {\n  const r = Array(t - 1).fill(n);\n  return r.unshift(e(n)), Gf(...r);\n}), i5 = le("apply", function(t, e) {\n  return t(e);\n}), s5 = le("cpm", function(t, e) {\n  return e._fast(t / 60 / 1);\n}), a5 = le(\n  "early",\n  function(t, e) {\n    return t = me(t), e.withQueryTime((n) => n.add(t)).withHapTime((n) => n.sub(t));\n  },\n  !0,\n  !0\n), Rb = le(\n  "late",\n  function(t, e) {\n    return t = me(t), e._early(me(0).sub(t));\n  },\n  !0,\n  !0\n), o5 = le("zoom", function(t, e, n) {\n  if (e = me(e), t = me(t), t.gte(e))\n    return pr;\n  const r = e.sub(t), i = qr ? n._steps?.mulmaybe(r) : void 0;\n  return n.withQuerySpan((s) => s.withCycle((a) => a.mul(r).add(t))).withHapSpan((s) => s.withCycle((a) => a.sub(t).div(r))).splitQueries().setSteps(i);\n}), { zoomArc: l5, zoomarc: u5 } = le(["zoomArc", "zoomarc"], function(t, e) {\n  return e.zoom(t.begin, t.end);\n}), c5 = le(\n  "bite",\n  (t, e, n) => e.fmap((r) => (i) => {\n    const s = me(r).div(i).mod(1), a = s.add(me(1).div(i));\n    return n.zoom(s, a);\n  }).appLeft(t).squeezeJoin(),\n  !1\n), h5 = le(\n  "linger",\n  function(t, e) {\n    return t == 0 ? St : t < 0 ? e._zoom(t.add(1), 1)._slow(t) : e._zoom(0, t)._slow(t);\n  },\n  !0,\n  !0\n), { segment: p5, seg: f5 } = le(["segment", "seg"], function(t, e) {\n  return e.struct(cn(!0)._fast(t)).setSteps(t);\n}), d5 = le("swingBy", (t, e, n) => n.inside(e, Rb(jb(0, t / 2)))), m5 = le("swing", (t, e) => e.swingBy(1 / 3, t)), { invert: g5, inv: b5 } = le(\n  ["invert", "inv"],\n  function(t) {\n    return t.fmap((e) => !e);\n  },\n  !0,\n  !0\n), y5 = le("when", function(t, e, n) {\n  return t ? e(n) : n;\n}), O5 = le("off", function(t, e, n) {\n  return Nt(n, e(n.late(t)));\n}), v5 = le("brak", function(t) {\n  return t.when(as(!1, !0), (e) => Jn(e, St)._late(0.25));\n}), _b = le(\n  "rev",\n  function(t) {\n    const e = function(n) {\n      const r = n.span, i = r.begin.sam(), s = r.begin.nextSam(), a = function(l) {\n        const c = l.withTime((f) => i.add(s.sub(f))), h = c.begin;\n        return c.begin = c.end, c.end = h, c;\n      };\n      return t.query(n.setSpan(a(r))).map((l) => l.withSpan(a));\n    };\n    return new de(e).splitQueries();\n  },\n  !1,\n  !0\n), x5 = le("pressBy", function(t, e) {\n  return e.fmap((n) => cn(n).compress(t, 1)).squeezeJoin();\n}), k5 = le("press", function(t) {\n  return t._pressBy(0.5);\n});\nde.prototype.hush = function() {\n  return St;\n};\nconst w5 = le(\n  "palindrome",\n  function(t) {\n    return t.lastOf(2, _b);\n  },\n  !0,\n  !0\n), { juxBy: C5, juxby: S5 } = le(["juxBy", "juxby"], function(t, e, n) {\n  t /= 2;\n  const r = function(a, o, l) {\n    return o in a ? a[o] : l;\n  }, i = n.withValue((a) => Object.assign({}, a, { pan: r(a, "pan", 0.5) - t })), s = e(n.withValue((a) => Object.assign({}, a, { pan: r(a, "pan", 0.5) + t })));\n  return Nt(i, s).setSteps(qr ? Ur(i._steps, s._steps) : void 0);\n}), A5 = le("jux", function(t, e) {\n  return e._juxBy(1, t, e);\n}), { echoWith: D5, echowith: P5, stutWith: E5, stutwith: F5 } = le(\n  ["echoWith", "echowith", "stutWith", "stutwith"],\n  function(t, e, n, r) {\n    return Nt(...Nf(0, t - 1).map((i) => n(r.late(me(e).mul(i)), i)));\n  }\n), B5 = le("echo", function(t, e, n, r) {\n  return r._echoWith(t, e, (i, s) => i.gain(Math.pow(n, s)));\n}), M5 = le("stut", function(t, e, n, r) {\n  return r._echoWith(t, n, (i, s) => i.gain(Math.pow(e, s)));\n}), zf = function(t, e, n = !1) {\n  return t = me(t), as(\n    ...Nf(0, t.sub(1)).map(\n      (r) => n ? e.late(me(r).div(t)) : e.early(me(r).div(t))\n    )\n  );\n}, Q5 = le(\n  "iter",\n  function(t, e) {\n    return zf(t, e, !1);\n  },\n  !0,\n  !0\n), { iterBack: T5, iterback: j5 } = le(\n  ["iterBack", "iterback"],\n  function(t, e) {\n    return zf(t, e, !0);\n  },\n  !0,\n  !0\n), { repeatCycles: R5 } = le(\n  "repeatCycles",\n  function(t, e) {\n    return new de(function(n) {\n      const r = n.span.begin.sam(), i = r.div(t).sam(), s = r.sub(i);\n      return n = n.withSpan((a) => a.withTime((o) => o.sub(s))), e.query(n).map((a) => a.withSpan((o) => o.withTime((l) => l.add(s))));\n    }).splitQueries();\n  },\n  !0,\n  !0\n), Hf = function(t, e, n, r = !1, i = !1) {\n  const s = Array(t - 1).fill(!1);\n  s.unshift(!0);\n  const a = zf(t, Fr(...s), !r);\n  return i || (n = n.repeatCycles(t)), n.when(a, e);\n}, { chunk: _5, slowchunk: Z5, slowChunk: $5 } = le(\n  ["chunk", "slowchunk", "slowChunk"],\n  function(t, e, n) {\n    return Hf(t, e, n, !1, !1);\n  },\n  !0,\n  !0\n), { chunkBack: L5, chunkback: I5 } = le(\n  ["chunkBack", "chunkback"],\n  function(t, e, n) {\n    return Hf(t, e, n, !0);\n  },\n  !0,\n  !0\n), { fastchunk: N5, fastChunk: V5 } = le(\n  ["fastchunk", "fastChunk"],\n  function(t, e, n) {\n    return Hf(t, e, n, !1, !0);\n  },\n  !0,\n  !0\n), X5 = le(\n  "bypass",\n  function(t, e) {\n    return t = !!parseInt(t), t ? St : e;\n  },\n  !0,\n  !0\n), { ribbon: W5, rib: U5 } = le(\n  ["ribbon", "rib"],\n  (t, e, n) => n.early(t).restart(cn(1).slow(e))\n), q5 = le("hsla", (t, e, n, r, i) => i.color(`hsla(${t}turn,${e * 100}%,${n * 100}%,${r})`)), G5 = le("hsl", (t, e, n, r) => r.color(`hsl(${t}turn,${e * 100}%,${n * 100}%)`));\nde.prototype.tag = function(t) {\n  return this.withContext((e) => ({ ...e, tags: (e.tags || []).concat([t]) }));\n};\nconst z5 = le("filter", (t, e) => e.withHaps((n) => n.filter(t))), H5 = le("filterWhen", (t, e) => e.filter((n) => t(n.whole.begin))), Y5 = le(\n  "within",\n  (t, e, n, r) => Nt(\n    n(r.filterWhen((i) => i.cyclePos() >= t && i.cyclePos() <= e)),\n    r.filterWhen((i) => i.cyclePos() < t || i.cyclePos() > e)\n  )\n);\nde.prototype.stepJoin = function() {\n  const t = this, e = Hn(...gp(bp(t.queryArc(0, 1))))._steps, n = function(r) {\n    const s = t.early(r.span.begin.sam()).query(r.setSpan(new tn(me(0), me(1))));\n    return Hn(...gp(bp(s))).query(r);\n  };\n  return new de(n, e);\n};\nde.prototype.stepBind = function(t) {\n  return this.fmap(t).stepJoin();\n};\nfunction gp(t) {\n  const e = t.filter((s, a) => a.hasSteps).reduce((s, a) => s.add(a), me(0)), n = Da(t.map((s, a) => a._steps)).reduce(\n    (s, a) => s.add(a),\n    me(0)\n  ), r = e.eq(0) ? void 0 : n.div(e);\n  function i(s, a) {\n    return a._steps === void 0 ? [s.mulmaybe(r), a] : [a._steps, a];\n  }\n  return t.map((s) => i(...s));\n}\nfunction bp(t) {\n  const e = Ai(t.map((i) => [i.part.begin, i.part.end])), n = xb([me(0), me(1), ...e]);\n  return vb(n).map((i) => [\n    i[1].sub(i[0]),\n    Nt(...Zb(new tn(...i), t).map((s) => s.value.withHap((a) => a.setContext(a.combineContext(s)))))\n  ]);\n}\nfunction Zb(t, e) {\n  return Da(e.map((n) => $b(t, n)));\n}\nfunction $b(t, e) {\n  const n = t.intersection(e.part);\n  if (n != null)\n    return new Gt(e.whole, n, e.value, e.context);\n}\nconst Lb = le("pace", function(t, e) {\n  return e._steps === void 0 ? e : e._steps.eq(me(0)) ? pr : e._fast(me(t).div(e._steps)).setSteps(t);\n});\nfunction Ib(t, ...e) {\n  const n = e.map((i) => mp(i));\n  if (n.length == 0)\n    return St;\n  t == 0 && (t = n[0][1]);\n  const r = [];\n  for (const i of n)\n    i[1] != 0 && (t == i[1] ? r.push(i[0]) : r.push(i[0]._fast(me(t).div(me(i[1])))));\n  return Nt(...r);\n}\nfunction Oc(...t) {\n  if (Array.isArray(t[0]))\n    return Ib(0, ...t);\n  if (t = t.filter((r) => r.hasSteps), t.length == 0)\n    return St;\n  const e = Ur(...t.map((r) => r._steps));\n  if (e.eq(me(0)))\n    return pr;\n  const n = Nt(...t.map((r) => r.pace(e)));\n  return n._steps = e, n;\n}\nfunction Hn(...t) {\n  if (t.length === 0)\n    return pr;\n  const e = (a) => Array.isArray(a) ? a : [a._steps, a];\n  if (t = t.map(e), t.find((a) => a[0] === void 0)) {\n    const a = t.map((l) => l[0]).filter((l) => l !== void 0);\n    if (a.length === 0)\n      return Jn(...t.map((l) => l[1]));\n    if (a.length === t.length)\n      return pr;\n    const o = a.reduce((l, c) => l.add(c), me(0)).div(a.length);\n    for (let l of t)\n      l[0] === void 0 && (l[0] = o);\n  }\n  if (t.length == 1)\n    return Oe(t[0][1]).withSteps((o) => t[0][0]);\n  const n = t.map((a) => a[0]).reduce((a, o) => a.add(o), me(0));\n  let r = me(0);\n  const i = [];\n  for (const [a, o] of t) {\n    if (me(a).eq(0))\n      continue;\n    const l = r.add(a);\n    i.push(Oe(o)._compress(r.div(n), l.div(n))), r = l;\n  }\n  const s = Nt(...i);\n  return s._steps = n, s;\n}\nfunction Nb(...t) {\n  t = t.map((i) => Array.isArray(i) ? i.map(Oe) : [Oe(i)]);\n  const e = Ur(...t.map((i) => me(i.length)));\n  let n = [];\n  for (let i = 0; i < e; ++i)\n    n.push(...t.map((s) => s.length == 0 ? St : s[i % s.length]));\n  n = n.filter((i) => i.hasSteps && i._steps > 0);\n  const r = n.reduce((i, s) => i.add(s._steps), me(0));\n  return n = Hn(...n), n._steps = r, n;\n}\nconst Vb = Lo("take", function(t, e) {\n  if (!e.hasSteps || e._steps.lte(0) || (t = me(t), t.eq(0)))\n    return pr;\n  const n = t < 0;\n  n && (t = t.abs());\n  const r = t.div(e._steps);\n  return r.lte(0) ? pr : r.gte(1) ? e : n ? e.zoom(me(1).sub(r), 1) : e.zoom(0, r);\n}), Xb = Lo("drop", function(t, e) {\n  return e.hasSteps ? (t = me(t), t.lt(0) ? e.take(e._steps.add(t)) : e.take(me(0).sub(e._steps.sub(t)))) : pr;\n}), Wb = Lo("extend", function(t, e) {\n  return e.fast(t).expand(t);\n}), Ub = Lo("expand", function(t, e) {\n  return e.withSteps((n) => n.mul(me(t)));\n}), qb = Lo("contract", function(t, e) {\n  return e.withSteps((n) => n.div(me(t)));\n});\nde.prototype.shrinklist = function(t) {\n  const e = this;\n  if (!e.hasSteps)\n    return [e];\n  let [n, r] = Array.isArray(t) ? t : [t, e._steps];\n  if (n = me(n), r === 0 || n === 0)\n    return [e];\n  const i = n > 0, s = [];\n  if (i) {\n    const a = me(1).div(e._steps).mul(n);\n    for (let o = 0; o < r; ++o) {\n      const l = a.mul(o);\n      if (l.gt(1))\n        break;\n      s.push([l, 1]);\n    }\n  } else {\n    n = me(0).sub(n);\n    const a = me(1).div(e._steps).mul(n);\n    for (let o = 0; o < r; ++o) {\n      const l = me(1).sub(a.mul(o));\n      if (l.lt(0))\n        break;\n      s.push([me(0), l]);\n    }\n  }\n  return s.map((a) => e.zoom(...a));\n};\nconst Gb = (t, e) => e.shrinklist(t), zb = le(\n  "shrink",\n  function(t, e) {\n    if (!e.hasSteps)\n      return pr;\n    const n = e.shrinklist(t), r = Hn(...n);\n    return r._steps = n.reduce((i, s) => i.add(s._steps), me(0)), r;\n  },\n  !0,\n  !1,\n  (t) => t.stepJoin()\n), K5 = le(\n  "grow",\n  function(t, e) {\n    if (!e.hasSteps)\n      return pr;\n    const n = e.shrinklist(me(0).sub(t));\n    n.reverse();\n    const r = Hn(...n);\n    return r._steps = n.reduce((i, s) => i.add(s._steps), me(0)), r;\n  },\n  !0,\n  !1,\n  (t) => t.stepJoin()\n), Hb = function(t, ...e) {\n  return t.tour(...e);\n};\nde.prototype.tour = function(...t) {\n  return Hn(\n    ...[].concat(\n      ...t.map((e, n) => [...t.slice(0, t.length - n), this, ...t.slice(t.length - n)]),\n      this,\n      ...t\n    )\n  );\n};\nconst Yb = function(...t) {\n  t = t.filter((r) => r.hasSteps);\n  const e = as(...t.map((r) => r._slow(r._steps))), n = Ur(...t.map((r) => r._steps));\n  return e._fast(n).setSteps(n);\n}, J5 = Hn, Yf = Hn, eE = Hn, tE = Nb, nE = Oc;\nde.prototype.s_polymeter = de.prototype.polymeter;\nconst rE = zb;\nde.prototype.s_taper = de.prototype.shrink;\nconst iE = Gb;\nde.prototype.s_taperlist = de.prototype.shrinklist;\nconst sE = Vb;\nde.prototype.s_add = de.prototype.take;\nconst aE = Xb;\nde.prototype.s_sub = de.prototype.drop;\nconst oE = Ub;\nde.prototype.s_expand = de.prototype.expand;\nconst lE = Wb;\nde.prototype.s_extend = de.prototype.extend;\nconst uE = qb;\nde.prototype.s_contract = de.prototype.contract;\nconst cE = Hb;\nde.prototype.s_tour = de.prototype.tour;\nconst hE = Yb;\nde.prototype.s_zip = de.prototype.zip;\nconst pE = Lb;\nde.prototype.steps = de.prototype.pace;\nconst fE = le("chop", function(t, e) {\n  const r = Array.from({ length: t }, (a, o) => o).map((a) => ({ begin: a / t, end: (a + 1) / t })), i = function(a, o) {\n    if ("begin" in a && "end" in a && a.begin !== void 0 && a.end !== void 0) {\n      const l = a.end - a.begin;\n      o = { begin: a.begin + o.begin * l, end: a.begin + o.end * l };\n    }\n    return Object.assign({}, a, o);\n  }, s = function(a) {\n    return Fr(r.map((o) => i(a, o)));\n  };\n  return e.squeezeBind(s).setSteps(qr ? me(t).mulmaybe(e._steps) : void 0);\n}), dE = le("striate", function(t, e) {\n  const r = Array.from({ length: t }, (s, a) => a).map((s) => ({ begin: s / t, end: (s + 1) / t })), i = as(...r);\n  return e.set(i)._fast(t).setSteps(qr ? me(t).mulmaybe(e._steps) : void 0);\n}), Kb = function(t, e, n = 0.5) {\n  return e.speed(1 / t * n).unit("c").slow(t);\n}, Jb = le(\n  "slice",\n  function(t, e, n) {\n    return t.innerBind(\n      (r) => e.outerBind(\n        (i) => n.outerBind((s) => {\n          s = s instanceof Object ? s : { s };\n          const a = Array.isArray(r) ? r[i] : i / r, o = Array.isArray(r) ? r[i + 1] : (i + 1) / r;\n          return cn({ begin: a, end: o, _slices: r, ...s });\n        })\n      )\n    ).setSteps(e._steps);\n  },\n  !1\n  // turns off auto-patternification\n), mE = le(\n  "splice",\n  function(t, e, n) {\n    const r = Jb(t, e, n);\n    return new de((i) => {\n      const s = i.controls._cps || 1;\n      return r.query(i).map(\n        (o) => o.withValue((l) => ({\n          speed: s / l._slices / o.whole.duration * (l.speed || 1),\n          unit: "c",\n          ...l\n        }))\n      );\n    }).setSteps(e._steps);\n  },\n  !1\n  // turns off auto-patternification\n), { loopAt: gE, loopat: bE } = le(["loopAt", "loopat"], function(t, e) {\n  const n = e._steps ? e._steps.div(t) : void 0;\n  return new de((r) => Kb(t, e, r.controls._cps).query(r), n);\n}), yE = le(\n  "fit",\n  (t) => t.withHaps(\n    (e, n) => e.map(\n      (r) => r.withValue((i) => {\n        const s = ("end" in i ? i.end : 1) - ("begin" in i ? i.begin : 0);\n        return {\n          ...i,\n          speed: (n.controls._cps || 1) / r.whole.duration * s,\n          unit: "c"\n        };\n      })\n    )\n  )\n), { loopAtCps: OE, loopatcps: vE } = le(["loopAtCps", "loopatcps"], function(t, e, n) {\n  return Kb(t, n, e);\n}), ey = (t) => cn(1).withValue(() => Oe(t())).innerJoin();\nlet Fm = (t) => t < 0.5 ? 1 : 1 - (t - 0.5) / 0.5, ty = (t, e, n) => {\n  e = Oe(e), t = Oe(t), n = Oe(n);\n  let r = e.fmap((s) => ({ gain: Fm(s) })), i = e.fmap((s) => ({ gain: Fm(1 - s) }));\n  return Nt(t.mul(r), n.mul(i));\n};\nde.prototype.xfade = function(t, e) {\n  return ty(this, t, e);\n};\nconst xE = (t) => (e, n, r) => {\n  e = me(e).mod(n), n = me(n);\n  const i = e.div(n), s = e.add(1).div(n);\n  return t(r.fmap((a) => cn(a)._compress(i, s)));\n}, { beat: kE } = le(\n  ["beat"],\n  xE((t) => t.innerJoin())\n);\nfunction vc(t) {\n  let e = Array.isArray(t);\n  t = e ? t : [t];\n  const n = t[0], r = (a) => {\n    let o;\n    if (typeof a == "object" && a.value !== void 0 && (o = { ...a }, a = a.value, delete o.value), e && Array.isArray(a)) {\n      const l = o || {};\n      return a.forEach((c, h) => {\n        h < t.length && (l[t[h]] = c);\n      }), l;\n    } else return o ? (o[n] = a, o) : { [n]: a };\n  }, i = (...a) => Fr(...a).withValue(r), s = function(...a) {\n    return a.length ? this.set(i(...a)) : this.fmap(r);\n  };\n  return de.prototype[n] = s, i;\n}\nconst yp = /* @__PURE__ */ new Map();\nfunction W(t, ...e) {\n  const n = Array.isArray(t) ? t[0] : t;\n  let r = {};\n  return r[n] = vc(t), e.forEach((i) => {\n    r[i] = r[n], yp.set(i, n), de.prototype[i] = de.prototype[n];\n  }), r;\n}\nconst { s: ny, sound: ry } = W(["s", "n", "gain"], "sound"), { source: iy, src: sy } = W("source", "src"), { n: ay } = W("n"), { note: oy } = W(["note", "n"]), { accelerate: ly } = W("accelerate"), { velocity: uy } = W("velocity"), { gain: cy } = W("gain"), { postgain: hy } = W("postgain"), { amp: py } = W("amp"), { attack: fy, att: dy } = W("attack", "att"), { fmh: my } = W(["fmh", "fmi"], "fmh"), { fmi: gy, fm: by } = W(["fmi", "fmh"], "fm"), { fmenv: yy } = W("fmenv"), { fmattack: Oy } = W("fmattack"), { fmdecay: vy } = W("fmdecay"), { fmsustain: xy } = W("fmsustain"), { fmrelease: ky } = W("fmrelease"), { fmvelocity: wy } = W("fmvelocity"), { bank: Cy } = W("bank"), { analyze: Sy } = W("analyze"), { fft: Ay } = W("fft"), { decay: Dy, dec: Py } = W("decay", "dec"), { sustain: Ey, sus: Fy } = W("sustain", "sus"), { release: By, rel: My } = W("release", "rel"), { hold: Qy } = W("hold"), { bandf: Ty, bpf: jy, bp: Ry } = W(["bandf", "bandq", "bpenv"], "bpf", "bp"), { bandq: _y, bpq: Zy } = W("bandq", "bpq"), { begin: $y } = W("begin"), { end: Ly } = W("end"), { loop: Iy } = W("loop"), { loopBegin: Ny, loopb: Vy } = W("loopBegin", "loopb"), { loopEnd: Xy, loope: Wy } = W("loopEnd", "loope"), { crush: Uy } = W("crush"), { coarse: qy } = W("coarse"), { drive: Gy } = W("drive"), { byteBeatExpression: zy, bbexpr: Hy } = W("byteBeatExpression", "bbexpr"), { byteBeatStartTime: Yy, bbst: Ky } = W("byteBeatStartTime", "bbst"), { channels: Jy, ch: e1 } = W("channels", "ch"), { pw: t1 } = W(["pw", "pwrate", "pwsweep"]), { pwrate: n1 } = W("pwrate"), { pwsweep: r1 } = W("pwsweep"), { phaserrate: i1, ph: s1, phaser: a1 } = W(\n  ["phaserrate", "phaserdepth", "phasercenter", "phasersweep"],\n  "ph",\n  "phaser"\n), { phasersweep: o1, phs: l1 } = W("phasersweep", "phs"), { phasercenter: u1, phc: c1 } = W("phasercenter", "phc"), { phaserdepth: h1, phd: p1, phasdp: f1 } = W("phaserdepth", "phd", "phasdp"), { channel: d1 } = W("channel"), { cut: m1 } = W("cut"), { cutoff: g1, ctf: b1, lpf: y1, lp: O1 } = W(["cutoff", "resonance", "lpenv"], "ctf", "lpf", "lp"), { lpenv: v1, lpe: x1 } = W("lpenv", "lpe"), { hpenv: k1, hpe: w1 } = W("hpenv", "hpe"), { bpenv: C1, bpe: S1 } = W("bpenv", "bpe"), { lpattack: A1, lpa: D1 } = W("lpattack", "lpa"), { hpattack: P1, hpa: E1 } = W("hpattack", "hpa"), { bpattack: F1, bpa: B1 } = W("bpattack", "bpa"), { lpdecay: M1, lpd: Q1 } = W("lpdecay", "lpd"), { hpdecay: T1, hpd: j1 } = W("hpdecay", "hpd"), { bpdecay: R1, bpd: _1 } = W("bpdecay", "bpd"), { lpsustain: Z1, lps: $1 } = W("lpsustain", "lps"), { hpsustain: L1, hps: I1 } = W("hpsustain", "hps"), { bpsustain: N1, bps: V1 } = W("bpsustain", "bps"), { lprelease: X1, lpr: W1 } = W("lprelease", "lpr"), { hprelease: U1, hpr: q1 } = W("hprelease", "hpr"), { bprelease: G1, bpr: z1 } = W("bprelease", "bpr"), { ftype: H1 } = W("ftype"), { fanchor: Y1 } = W("fanchor"), { vib: K1, vibrato: J1, v: eO } = W(["vib", "vibmod"], "vibrato", "v"), { noise: tO } = W("noise"), { vibmod: nO, vmod: rO } = W(["vibmod", "vib"], "vmod"), { hcutoff: iO, hpf: sO, hp: aO } = W(["hcutoff", "hresonance", "hpenv"], "hpf", "hp"), { hresonance: oO, hpq: lO } = W("hresonance", "hpq"), { resonance: uO, lpq: cO } = W("resonance", "lpq"), { djf: hO } = W("djf"), { delay: pO } = W(["delay", "delaytime", "delayfeedback"]), { delayfeedback: fO, delayfb: dO, dfb: mO } = W("delayfeedback", "delayfb", "dfb"), { delaytime: gO, delayt: bO, dt: yO } = W("delaytime", "delayt", "dt"), { lock: OO } = W("lock"), { detune: vO, det: xO } = W("detune", "det"), { unison: kO } = W("unison"), { spread: wO } = W("spread"), { dry: CO } = W("dry"), { fadeTime: SO, fadeOutTime: AO } = W("fadeTime", "fadeOutTime"), { fadeInTime: DO } = W("fadeInTime"), { freq: PO } = W("freq"), { pattack: EO, patt: FO } = W("pattack", "patt"), { pdecay: BO, pdec: MO } = W("pdecay", "pdec"), { psustain: QO, psus: TO } = W("psustain", "psus"), { prelease: jO, prel: RO } = W("prelease", "prel"), { penv: _O } = W("penv"), { pcurve: ZO } = W("pcurve"), { panchor: $O } = W("panchor"), { gate: LO, gat: IO } = W("gate", "gat"), { leslie: NO } = W("leslie"), { lrate: VO } = W("lrate"), { lsize: XO } = W("lsize"), { activeLabel: WO } = W("activeLabel"), { label: UO } = W(["label", "activeLabel"]), { degree: qO } = W("degree"), { mtranspose: GO } = W("mtranspose"), { ctranspose: zO } = W("ctranspose"), { harmonic: HO } = W("harmonic"), { stepsPerOctave: YO } = W("stepsPerOctave"), { octaveR: KO } = W("octaveR"), { nudge: JO } = W("nudge"), { octave: ev } = W("octave"), { orbit: tv } = W("orbit"), { overgain: nv } = W("overgain"), { overshape: rv } = W("overshape"), { pan: iv } = W("pan"), { panspan: sv } = W("panspan"), { pansplay: av } = W("pansplay"), { panwidth: ov } = W("panwidth"), { panorient: lv } = W("panorient"), { rate: uv } = W("rate"), { slide: cv } = W("slide"), { semitone: hv } = W("semitone"), { voice: pv } = W("voice"), { chord: fv } = W("chord"), { dictionary: dv, dict: mv } = W("dictionary", "dict"), { anchor: gv } = W("anchor"), { offset: bv } = W("offset"), { octaves: yv } = W("octaves"), { mode: Ov } = W(["mode", "anchor"]), { room: vv } = W(["room", "size"]), { roomlp: xv, rlp: kv } = W("roomlp", "rlp"), { roomdim: wv, rdim: Cv } = W("roomdim", "rdim"), { roomfade: Sv, rfade: Av } = W("roomfade", "rfade"), { ir: Dv, iresponse: Pv } = W(["ir", "i"], "iresponse"), { roomsize: Ev, size: Fv, sz: Bv, rsize: Mv } = W("roomsize", "size", "sz", "rsize"), { shape: Qv } = W(["shape", "shapevol"]), { distort: Tv, dist: jv } = W(["distort", "distortvol"], "dist"), { compressor: Rv } = W([\n  "compressor",\n  "compressorRatio",\n  "compressorKnee",\n  "compressorAttack",\n  "compressorRelease"\n]), { compressorKnee: _v } = W("compressorKnee"), { compressorRatio: Zv } = W("compressorRatio"), { compressorAttack: $v } = W("compressorAttack"), { compressorRelease: Lv } = W("compressorRelease"), { speed: Kf } = W("speed"), { stretch: Iv } = W("stretch"), { unit: Nv } = W("unit"), { squiz: Vv } = W("squiz"), { vowel: Xv } = W("vowel"), { waveloss: Wv } = W("waveloss"), { density: wE } = W("density"), { expression: Uv } = W("expression"), { sustainpedal: qv } = W("sustainpedal"), { tremolodepth: Gv, tremdp: zv } = W("tremolodepth", "tremdp"), { tremolorate: Hv, tremr: Yv } = W("tremolorate", "tremr"), { fshift: Kv } = W("fshift"), { fshiftnote: Jv } = W("fshiftnote"), { fshiftphase: ex } = W("fshiftphase"), { triode: tx } = W("triode"), { krush: nx } = W("krush"), { kcutoff: rx } = W("kcutoff"), { octer: ix } = W("octer"), { octersub: sx } = W("octersub"), { octersubsub: ax } = W("octersubsub"), { ring: ox } = W("ring"), { ringf: lx } = W("ringf"), { ringdf: ux } = W("ringdf"), { freeze: cx } = W("freeze"), { xsdelay: hx } = W("xsdelay"), { tsdelay: px } = W("tsdelay"), { real: fx } = W("real"), { imag: dx } = W("imag"), { enhance: mx } = W("enhance"), { partials: gx } = W("partials"), { comb: bx } = W("comb"), { smear: yx } = W("smear"), { scram: Ox } = W("scram"), { binshift: vx } = W("binshift"), { hbrick: xx } = W("hbrick"), { lbrick: kx } = W("lbrick"), { frameRate: wx } = W("frameRate"), { frames: Cx } = W("frames"), { hours: Sx } = W("hours"), { minutes: Ax } = W("minutes"), { seconds: Dx } = W("seconds"), { songPtr: Px } = W("songPtr"), { uid: Ex } = W("uid"), { val: Fx } = W("val"), { cps: Bx } = W("cps"), { clip: Mx, legato: Qx } = W("clip", "legato"), { duration: Tx, dur: jx } = W("duration", "dur"), { zrand: Rx } = W("zrand"), { curve: _x } = W("curve"), { deltaSlide: Zx } = W("deltaSlide"), { pitchJump: $x } = W("pitchJump"), { pitchJumpTime: Lx } = W("pitchJumpTime"), { lfo: Ix, repeatTime: Nx } = W("lfo", "repeatTime"), { znoise: Vx } = W("znoise"), { zmod: Xx } = W("zmod"), { zcrush: Wx } = W("zcrush"), { zdelay: Ux } = W("zdelay"), { tremolo: qx } = W("tremolo"), { zzfx: Gx } = W("zzfx"), { color: zx, colour: Hx } = W(["color", "colour"]);\nlet Jf = (...t) => t.reduce((e, n) => Object.assign(e, { [n]: vc(n) }), {});\nconst Yx = le("adsr", (t, e) => {\n  t = Array.isArray(t) ? t : [t];\n  const [n, r, i, s] = t;\n  return e.set({ attack: n, decay: r, sustain: i, release: s });\n}), Kx = le("ad", (t, e) => {\n  t = Array.isArray(t) ? t : [t];\n  const [n, r = n] = t;\n  return e.attack(n).decay(r);\n}), Jx = le("ds", (t, e) => {\n  t = Array.isArray(t) ? t : [t];\n  const [n, r = 0] = t;\n  return e.set({ decay: n, sustain: r });\n}), ek = le("ar", (t, e) => {\n  t = Array.isArray(t) ? t : [t];\n  const [n, r = n] = t;\n  return e.set({ attack: n, release: r });\n}), { midichan: tk } = W("midichan"), { midimap: nk } = W("midimap"), { midiport: rk } = W("midiport"), { midicmd: ik } = W("midicmd"), sk = le("control", (t, e) => {\n  if (!Array.isArray(t))\n    throw new Error("control expects an array of [ccn, ccv]");\n  const [n, r] = t;\n  return e.ccn(n).ccv(r);\n}), { ccn: ak } = W("ccn"), { ccv: ok } = W("ccv"), { ctlNum: lk } = W("ctlNum"), { nrpnn: uk } = W("nrpnn"), { nrpv: ck } = W("nrpv"), { progNum: hk } = W("progNum"), pk = le("sysex", (t, e) => {\n  if (!Array.isArray(t))\n    throw new Error("sysex expects an array of [id, data]");\n  const [n, r] = t;\n  return e.sysexid(n).sysexdata(r);\n}), { sysexid: fk } = W("sysexid"), { sysexdata: dk } = W("sysexdata"), { midibend: mk } = W("midibend"), { miditouch: gk } = W("miditouch"), { polyTouch: bk } = W("polyTouch"), ed = (t) => yp.has(t) ? yp.get(t) : t, yk = le("as", (t, e) => (t = Array.isArray(t) ? t : [t], e.fmap((n) => (n = Array.isArray(n) ? n : [n], n = Object.fromEntries(t.map((r, i) => [ed(r), n[i]])), n)))), Ok = le(\n  "scrub",\n  (t, e) => t.outerBind((n) => {\n    Array.isArray(n) || (n = [n]);\n    const [r, i = 1] = n;\n    return e.begin(r).mul(Kf(i)).clip(1);\n  }),\n  !1\n), CE = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  accelerate: ly,\n  activeLabel: WO,\n  ad: Kx,\n  adsr: Yx,\n  amp: py,\n  analyze: Sy,\n  anchor: gv,\n  ar: ek,\n  as: yk,\n  att: dy,\n  attack: fy,\n  bandf: Ty,\n  bandq: _y,\n  bank: Cy,\n  bbexpr: Hy,\n  bbst: Ky,\n  begin: $y,\n  binshift: vx,\n  bp: Ry,\n  bpa: B1,\n  bpattack: F1,\n  bpd: _1,\n  bpdecay: R1,\n  bpe: S1,\n  bpenv: C1,\n  bpf: jy,\n  bpq: Zy,\n  bpr: z1,\n  bprelease: G1,\n  bps: V1,\n  bpsustain: N1,\n  byteBeatExpression: zy,\n  byteBeatStartTime: Yy,\n  ccn: ak,\n  ccv: ok,\n  ch: e1,\n  channel: d1,\n  channels: Jy,\n  chord: fv,\n  clip: Mx,\n  coarse: qy,\n  color: zx,\n  colour: Hx,\n  comb: bx,\n  compressor: Rv,\n  compressorAttack: $v,\n  compressorKnee: _v,\n  compressorRatio: Zv,\n  compressorRelease: Lv,\n  control: sk,\n  cps: Bx,\n  createParam: vc,\n  createParams: Jf,\n  crush: Uy,\n  ctf: b1,\n  ctlNum: lk,\n  ctranspose: zO,\n  curve: _x,\n  cut: m1,\n  cutoff: g1,\n  dec: Py,\n  decay: Dy,\n  degree: qO,\n  delay: pO,\n  delayfb: dO,\n  delayfeedback: fO,\n  delayt: bO,\n  delaytime: gO,\n  deltaSlide: Zx,\n  density: wE,\n  det: xO,\n  detune: vO,\n  dfb: mO,\n  dict: mv,\n  dictionary: dv,\n  dist: jv,\n  distort: Tv,\n  djf: hO,\n  drive: Gy,\n  dry: CO,\n  ds: Jx,\n  dt: yO,\n  dur: jx,\n  duration: Tx,\n  end: Ly,\n  enhance: mx,\n  expression: Uv,\n  fadeInTime: DO,\n  fadeOutTime: AO,\n  fadeTime: SO,\n  fanchor: Y1,\n  fft: Ay,\n  fm: by,\n  fmattack: Oy,\n  fmdecay: vy,\n  fmenv: yy,\n  fmh: my,\n  fmi: gy,\n  fmrelease: ky,\n  fmsustain: xy,\n  fmvelocity: wy,\n  frameRate: wx,\n  frames: Cx,\n  freeze: cx,\n  freq: PO,\n  fshift: Kv,\n  fshiftnote: Jv,\n  fshiftphase: ex,\n  ftype: H1,\n  gain: cy,\n  gat: IO,\n  gate: LO,\n  getControlName: ed,\n  harmonic: HO,\n  hbrick: xx,\n  hcutoff: iO,\n  hold: Qy,\n  hours: Sx,\n  hp: aO,\n  hpa: E1,\n  hpattack: P1,\n  hpd: j1,\n  hpdecay: T1,\n  hpe: w1,\n  hpenv: k1,\n  hpf: sO,\n  hpq: lO,\n  hpr: q1,\n  hprelease: U1,\n  hps: I1,\n  hpsustain: L1,\n  hresonance: oO,\n  imag: dx,\n  ir: Dv,\n  iresponse: Pv,\n  kcutoff: rx,\n  krush: nx,\n  label: UO,\n  lbrick: kx,\n  legato: Qx,\n  leslie: NO,\n  lfo: Ix,\n  lock: OO,\n  loop: Iy,\n  loopBegin: Ny,\n  loopEnd: Xy,\n  loopb: Vy,\n  loope: Wy,\n  lp: O1,\n  lpa: D1,\n  lpattack: A1,\n  lpd: Q1,\n  lpdecay: M1,\n  lpe: x1,\n  lpenv: v1,\n  lpf: y1,\n  lpq: cO,\n  lpr: W1,\n  lprelease: X1,\n  lps: $1,\n  lpsustain: Z1,\n  lrate: VO,\n  lsize: XO,\n  midibend: mk,\n  midichan: tk,\n  midicmd: ik,\n  midimap: nk,\n  midiport: rk,\n  miditouch: gk,\n  minutes: Ax,\n  mode: Ov,\n  mtranspose: GO,\n  n: ay,\n  noise: tO,\n  note: oy,\n  nrpnn: uk,\n  nrpv: ck,\n  nudge: JO,\n  octave: ev,\n  octaveR: KO,\n  octaves: yv,\n  octer: ix,\n  octersub: sx,\n  octersubsub: ax,\n  offset: bv,\n  orbit: tv,\n  overgain: nv,\n  overshape: rv,\n  pan: iv,\n  panchor: $O,\n  panorient: lv,\n  panspan: sv,\n  pansplay: av,\n  panwidth: ov,\n  partials: gx,\n  patt: FO,\n  pattack: EO,\n  pcurve: ZO,\n  pdec: MO,\n  pdecay: BO,\n  penv: _O,\n  ph: s1,\n  phasdp: f1,\n  phaser: a1,\n  phasercenter: u1,\n  phaserdepth: h1,\n  phaserrate: i1,\n  phasersweep: o1,\n  phc: c1,\n  phd: p1,\n  phs: l1,\n  pitchJump: $x,\n  pitchJumpTime: Lx,\n  polyTouch: bk,\n  postgain: hy,\n  prel: RO,\n  prelease: jO,\n  progNum: hk,\n  psus: TO,\n  psustain: QO,\n  pw: t1,\n  pwrate: n1,\n  pwsweep: r1,\n  rate: uv,\n  rdim: Cv,\n  real: fx,\n  registerControl: W,\n  rel: My,\n  release: By,\n  repeatTime: Nx,\n  resonance: uO,\n  rfade: Av,\n  ring: ox,\n  ringdf: ux,\n  ringf: lx,\n  rlp: kv,\n  room: vv,\n  roomdim: wv,\n  roomfade: Sv,\n  roomlp: xv,\n  roomsize: Ev,\n  rsize: Mv,\n  s: ny,\n  scram: Ox,\n  scrub: Ok,\n  seconds: Dx,\n  semitone: hv,\n  shape: Qv,\n  size: Fv,\n  slide: cv,\n  smear: yx,\n  songPtr: Px,\n  sound: ry,\n  source: iy,\n  speed: Kf,\n  spread: wO,\n  squiz: Vv,\n  src: sy,\n  stepsPerOctave: YO,\n  stretch: Iv,\n  sus: Fy,\n  sustain: Ey,\n  sustainpedal: qv,\n  sysex: pk,\n  sysexdata: dk,\n  sysexid: fk,\n  sz: Bv,\n  tremdp: zv,\n  tremolo: qx,\n  tremolodepth: Gv,\n  tremolorate: Hv,\n  tremr: Yv,\n  triode: tx,\n  tsdelay: px,\n  uid: Ex,\n  unison: kO,\n  unit: Nv,\n  v: eO,\n  val: Fx,\n  velocity: uy,\n  vib: K1,\n  vibmod: nO,\n  vibrato: J1,\n  vmod: rO,\n  voice: pv,\n  vowel: Xv,\n  waveloss: Wv,\n  xsdelay: hx,\n  zcrush: Wx,\n  zdelay: Ux,\n  zmod: Xx,\n  znoise: Vx,\n  zrand: Rx,\n  zzfx: Gx\n}, Symbol.toStringTag, { value: "Module" })), SE = function(t, e) {\n  const [n, r] = t, [i, s] = e, [a, o] = Wf(r, i);\n  return [\n    [r, n - r],\n    [Uf((l, c) => l.concat(c), a, s), o]\n  ];\n}, AE = function(t, e) {\n  const [n, r] = t, [i, s] = e, [a, o] = Wf(n, s);\n  return [\n    [n, r - n],\n    [Uf((c, h) => c.concat(h), i, a), o]\n  ];\n}, vk = function(t, e) {\n  const [n, r] = t;\n  return Math.min(n, r) <= 1 ? [t, e] : vk(...n > r ? SE(t, e) : AE(t, e));\n}, xk = function(t, e) {\n  const n = t < 0;\n  t = Math.abs(t);\n  const r = e - t, i = Array(t).fill([1]), s = Array(r).fill([0]), a = vk([t, r], [i, s]), o = Ai(a[1][0]).concat(Ai(a[1][1]));\n  return n ? o.map((l) => l === 0 ? 1 : 0) : o;\n}, td = function(t, e, n) {\n  const r = xk(t, e);\n  return n ? bb(r, -n) : r;\n}, DE = le("euclid", function(t, e, n) {\n  return n.struct(td(t, e, 0));\n}), { euclidrot: PE, euclidRot: EE } = le(["euclidrot", "euclidRot"], function(t, e, n, r) {\n  return r.struct(td(t, e, n));\n}), kk = function(t, e, n, r) {\n  if (t < 1)\n    return St;\n  const s = td(t, e, n).join("").split("1").slice(1).map((a) => [a.length + 1, !0]);\n  return r.struct(Yf(...s));\n}, FE = le(["euclidLegato"], function(t, e, n) {\n  return kk(t, e, 0, n);\n}), BE = le(["euclidLegatoRot"], function(t, e, n, r) {\n  return kk(t, e, n, r);\n});\nfunction wk(t, e, n = 0.05, r = 0.1, i = 0.1, s = globalThis.setInterval, a = globalThis.clearInterval, o = !0) {\n  let l = 0, c = 0, h = 10 ** 4, f = 0.01;\n  const m = (R) => n = R(n);\n  i = i || r / 2;\n  const y = () => {\n    const R = t(), B = R + r + i;\n    for (c === 0 && (c = R + f); c < B; )\n      c = o ? Math.round(c * h) / h : c, e(c, n, l, R), c += n, l++;\n  };\n  let v;\n  const C = () => {\n    S(), y(), v = s(y, r * 1e3);\n  }, S = () => {\n    v !== void 0 && a(v), v = void 0;\n  };\n  return { setDuration: m, start: C, stop: () => {\n    l = 0, c = 0, S();\n  }, pause: () => S(), duration: n, interval: r, getPhase: () => c, minLatency: f };\n}\nfunction ME(t) {\n  return new de((e) => [new Gt(void 0, e.span, t)]);\n}\nconst Mr = (t) => {\n  const e = (n) => [new Gt(void 0, n.span, t(n.span.begin))];\n  return new de(e);\n}, Io = Mr((t) => t % 1), nd = Io.toBipolar(), xc = Mr((t) => 1 - t % 1), rd = xc.toBipolar(), id = Mr((t) => Math.sin(Math.PI * 2 * t)), Ck = id.fromBipolar(), QE = Ck._early(me(1).div(4)), TE = id._early(me(1).div(4)), Sk = Mr((t) => Math.floor(t * 2 % 2)), jE = Sk.toBipolar(), RE = Jn(Io, xc), _E = Jn(nd, rd), ZE = Jn(xc, Io), $E = Jn(rd, nd), Ak = Mr(Hs);\nlet sd = 0, ad = 0;\ntypeof window < "u" && document.addEventListener("mousemove", (t) => {\n  sd = t.clientY / document.body.clientHeight, ad = t.clientX / document.body.clientWidth;\n});\nconst LE = Mr(() => sd), IE = Mr(() => sd), NE = Mr(() => ad), VE = Mr(() => ad), Dk = (t) => {\n  const e = t << 13 ^ t, n = e >> 17 ^ e;\n  return n << 5 ^ n;\n}, XE = (t) => t - Math.trunc(t), Pk = (t) => Dk(Math.trunc(XE(t / 300) * 536870912)), Ek = (t) => t % 536870912 / 536870912, Op = (t) => Math.abs(Ek(Pk(t))), WE = (t, e) => {\n  const n = [];\n  for (let r = 0; r < e; ++r)\n    n.push(Ek(t)), t = Dk(t);\n  return n;\n}, UE = (t, e) => WE(Pk(t), e), Fk = (t) => Io.range(0, t).round().segment(t), qE = (t) => {\n  const e = Oe(t).log2(0).floor().add(1);\n  return Bk(t, e);\n}, Bk = (t, e = 16) => {\n  e = Oe(e);\n  const n = Fk(e).mul(-1).add(e.sub(1));\n  return Oe(t).segment(e).brshift(n).band(cn(1));\n}, Mk = (t) => Mr((e) => {\n  const r = UE(e.floor().add(0.5), t).map((s, a) => [s, a]).sort((s, a) => s[0] > a[0] - s[0] < a[0]).map((s) => s[1]), i = e.cyclePos().mul(t).floor() % t;\n  return r[i];\n})._segment(t), Qk = (t, e, n) => {\n  const r = [...Array(e).keys()].map((i) => n.zoom(me(i).div(e), me(i + 1).div(e)));\n  return t.fmap((i) => r[i].repeatCycles(e)._fast(e)).innerJoin();\n}, GE = le("shuffle", (t, e) => Qk(Mk(t), t, e)), zE = le("scramble", (t, e) => Qk(ld(t)._segment(t), t, e)), Yn = Mr(Op), HE = Yn.toBipolar(), od = (t) => Yn.fmap((e) => e < t), YE = (t) => Oe(t).fmap(od).innerJoin(), KE = od(0.5), ld = (t) => Yn.fmap((e) => Math.trunc(e * t)), JE = (t) => Oe(t).fmap(ld).innerJoin(), ud = (t, e) => (e = e.map(Oe), e.length == 0 ? St : t.range(0, e.length).fmap((n) => {\n  const r = Math.min(Math.max(Math.floor(n), 0), e.length - 1);\n  return e[r];\n})), kc = (t, e) => ud(t, e).outerJoin(), cd = (t, e) => ud(t, e).innerJoin(), eF = (...t) => kc(Yn, t);\nde.prototype.choose = function(...t) {\n  return kc(this, t);\n};\nde.prototype.choose2 = function(...t) {\n  return kc(this.fromBipolar(), t);\n};\nconst Tk = (...t) => cd(Yn.segment(1), t), tF = Tk, jk = function(t, ...e) {\n  const n = e.map((o) => Oe(o[0])), r = [];\n  let i = cn(0);\n  for (const o of e)\n    i = i.add(o[1]), r.push(i);\n  const s = Fb(r), a = function(o) {\n    const l = i.mul(o);\n    return s.fmap((c) => (h) => n[c.findIndex((f) => f > h, c)]).appLeft(l);\n  };\n  return t.bind(a);\n}, nF = (...t) => jk(...t).outerJoin(), rF = (...t) => nF(Yn, ...t), Rk = (...t) => jk(Yn.segment(1), ...t).innerJoin(), iF = Rk, _k = (t) => {\n  const e = t.fmap(Math.floor), n = t.fmap((s) => Math.floor(s) + 1), r = (s) => 6 * s ** 5 - 15 * s ** 4 + 10 * s ** 3, i = (s) => (a) => (o) => a + r(s) * (o - a);\n  return t.sub(e).fmap(i).appBoth(e.fmap(Op)).appBoth(n.fmap(Op));\n}, sF = _k(Ak.fmap((t) => Number(t))), aF = le(\n  "degradeByWith",\n  (t, e, n) => n.fmap((r) => (i) => r).appLeft(t.filterValues((r) => r > e)),\n  !0,\n  !0\n), oF = le(\n  "degradeBy",\n  function(t, e) {\n    return e._degradeByWith(Yn, t);\n  },\n  !0,\n  !0\n), lF = le("degrade", (t) => t._degradeBy(0.5), !0, !0), uF = le(\n  "undegradeBy",\n  function(t, e) {\n    return e._degradeByWith(\n      Yn.fmap((n) => 1 - n),\n      t\n    );\n  },\n  !0,\n  !0\n), cF = le("undegrade", (t) => t._undegradeBy(0.5), !0, !0), hF = le("sometimesBy", function(t, e, n) {\n  return Oe(t).fmap((r) => Nt(n._degradeBy(r), e(n._undegradeBy(1 - r)))).innerJoin();\n}), pF = le("sometimes", function(t, e) {\n  return e._sometimesBy(0.5, t);\n}), fF = le("someCyclesBy", function(t, e, n) {\n  return Oe(t).fmap(\n    (r) => Nt(\n      n._degradeByWith(Yn._segment(1), r),\n      e(n._degradeByWith(Yn.fmap((i) => 1 - i)._segment(1), 1 - r))\n    )\n  ).innerJoin();\n}), dF = le("someCycles", function(t, e) {\n  return e._someCyclesBy(0.5, t);\n}), mF = le("often", function(t, e) {\n  return e.sometimesBy(0.75, t);\n}), gF = le("rarely", function(t, e) {\n  return e.sometimesBy(0.25, t);\n}), bF = le("almostNever", function(t, e) {\n  return e.sometimesBy(0.1, t);\n}), yF = le("almostAlways", function(t, e) {\n  return e.sometimesBy(0.9, t);\n}), OF = le("never", function(t, e) {\n  return e;\n}), vF = le("always", function(t, e) {\n  return t(e);\n});\nfunction hd(t) {\n  Array.isArray(t) === !1 && (t = [t]);\n  const e = Db();\n  return t.every((n) => {\n    const r = Ab.get(n) ?? n;\n    return e[r];\n  });\n}\nconst xF = le("whenKey", function(t, e, n) {\n  return n.when(hd(t), e);\n}), kF = le("keyDown", function(t) {\n  return t.fmap(hd);\n}), bi = function(t, e, n = !0) {\n  const r = Array.isArray(t), i = Object.keys(t).length;\n  return t = Cb(t, Oe), i === 0 ? St : e.fmap((s) => {\n    let a = s;\n    return r && (a = n ? Math.round(a) % i : bc(Math.round(a), 0, t.length - 1)), t[a];\n  });\n}, Zk = function(t, e) {\n  return Array.isArray(e) && ([e, t] = [t, e]), wF(t, e);\n}, wF = le("pick", function(t, e) {\n  return bi(t, e, !1).innerJoin();\n}), $k = le("pickmod", function(t, e) {\n  return bi(t, e, !0).innerJoin();\n}), CF = le("pickF", function(t, e, n) {\n  return n.apply(Zk(t, e));\n}), SF = le("pickmodF", function(t, e, n) {\n  return n.apply($k(t, e));\n}), AF = le("pickOut", function(t, e) {\n  return bi(t, e, !1).outerJoin();\n}), DF = le("pickmodOut", function(t, e) {\n  return bi(t, e, !0).outerJoin();\n}), PF = le("pickRestart", function(t, e) {\n  return bi(t, e, !1).restartJoin();\n}), EF = le("pickmodRestart", function(t, e) {\n  return bi(t, e, !0).restartJoin();\n}), FF = le("pickReset", function(t, e) {\n  return bi(t, e, !1).resetJoin();\n}), BF = le("pickmodReset", function(t, e) {\n  return bi(t, e, !0).resetJoin();\n}), { inhabit: MF, pickSqueeze: QF } = le(["inhabit", "pickSqueeze"], function(t, e) {\n  return bi(t, e, !1).squeezeJoin();\n}), { inhabitmod: TF, pickmodSqueeze: jF } = le(["inhabitmod", "pickmodSqueeze"], function(t, e) {\n  return bi(t, e, !0).squeezeJoin();\n}), RF = (t, e) => (e = e.map(Oe), e.length == 0 ? St : t.fmap((n) => {\n  const r = $o(Math.round(n), e.length);\n  return e[r];\n}).squeezeJoin());\nlet gu;\ntry {\n  gu = window?.speechSynthesis;\n} catch {\n  console.warn("cannot use window: not in browser?");\n}\nlet Bm = gu?.getVoices();\nfunction _F(t, e, n) {\n  gu.cancel();\n  const r = new SpeechSynthesisUtterance(t);\n  r.lang = e, Bm = gu.getVoices();\n  const i = Bm.filter((s) => s.lang.includes(e));\n  typeof n == "number" ? r.voice = i[n % i.length] : typeof n == "string" && (r.voice = i.find((s) => s.name === s)), speechSynthesis.speak(r);\n}\nconst ZF = le("speak", function(t, e, n) {\n  return n.onTrigger((r, i) => {\n    _F(i.value, t, e);\n  });\n}), pd = async (...t) => {\n  const e = await Promise.allSettled(t), n = e.filter((r) => r.status === "fulfilled").map((r) => r.value);\n  return e.forEach((r, i) => {\n    r.status === "rejected" && console.warn(`evalScope: module with index ${i} could not be loaded:`, r.reason);\n  }), n.forEach((r) => {\n    Object.entries(r).forEach(([i, s]) => {\n      globalThis[i] = s;\n    });\n  }), n;\n};\nfunction $F(t, e = {}) {\n  const { wrapExpression: n = !0, wrapAsync: r = !0 } = e;\n  n && (t = `{${t}}`), r && (t = `(async ()=>${t})()`);\n  const i = `"use strict";return (${t})`;\n  return Function(i)();\n}\nconst Lk = async (t, e, n) => {\n  let r = {};\n  if (e) {\n    const a = e(t, n);\n    t = a.output, r = a;\n  }\n  return { mode: "javascript", pattern: await $F(t, { wrapExpression: !!e }), meta: r };\n};\nclass LF {\n  constructor({ onTrigger: e, onToggle: n, getTime: r }) {\n    this.started = !1, this.cps = 0.5, this.lastTick = 0, this.getTime = r, this.time_at_last_tick_message = 0, this.collator = new Sb({ getTargetClockTime: r }), this.onToggle = n, this.latency = 0.1, this.cycle = 0, this.id = Math.round(Date.now() * Math.random()), this.worker = new SharedWorker(new URL(\n      /* @vite-ignore */\n      "" + new URL(/* asset import */ __webpack_require__(/*! assets/clockworker-ZDiUtESR.js */ "../node_modules/@strudel/repl/dist/assets/clockworker-ZDiUtESR.js"), __webpack_require__.b).href,\n      "file:///Users/tsudajun/Documents/project/audio_tools/node_modules/@strudel/repl/dist/index-DfdLyHnT.js"\n    )), this.worker.port.start(), this.channel = new BroadcastChannel("strudeltick");\n    const i = (a) => {\n      const { cps: o, begin: l, end: c, cycle: h, time: f } = a;\n      this.cps = o, this.cycle = h;\n      const m = this.collator.calculateOffset(f) + f;\n      s(l, c, m), this.time_at_last_tick_message = m;\n    }, s = (a, o, l) => {\n      if (this.started === !1)\n        return;\n      this.pattern.queryArc(a, o, { _cps: this.cps }).forEach((h) => {\n        if (h.hasOnset()) {\n          const m = fp(h.whole.begin - this.cycle, this.cps) + l + this.latency, y = fp(h.duration, this.cps);\n          e?.(h, 0, y, this.cps, m);\n        }\n      });\n    };\n    this.channel.onmessage = (a) => {\n      if (!this.started)\n        return;\n      const { payload: o, type: l } = a.data;\n      switch (l) {\n        case "tick":\n          i(o);\n      }\n    };\n  }\n  sendMessage(e, n) {\n    this.worker.port.postMessage({ type: e, payload: n, id: this.id });\n  }\n  now() {\n    const e = (this.getTime() - this.time_at_last_tick_message) * this.cps;\n    return this.cycle + e;\n  }\n  setCps(e = 1) {\n    this.sendMessage("cpschange", { cps: e });\n  }\n  setCycle(e) {\n    this.sendMessage("setcycle", { cycle: e });\n  }\n  setStarted(e) {\n    this.sendMessage("toggle", { started: e }), this.started = e, this.onToggle?.(e);\n  }\n  start() {\n    En("[cyclist] start"), this.setStarted(!0);\n  }\n  stop() {\n    En("[cyclist] stop"), this.collator.reset(), this.setStarted(!1);\n  }\n  setPattern(e, n = !1) {\n    this.pattern = e, n && !this.started && this.start();\n  }\n  log(e, n, r) {\n    const i = r.filter((s) => s.hasOnset());\n    console.log(`${e.toFixed(4)} - ${n.toFixed(4)} ${Array(i.length).fill("I").join("")}`);\n  }\n}\nclass Ik {\n  constructor({\n    interval: e,\n    onTrigger: n,\n    onToggle: r,\n    onError: i,\n    getTime: s,\n    latency: a = 0.1,\n    setInterval: o,\n    clearInterval: l,\n    beforeStart: c\n  }) {\n    this.started = !1, this.beforeStart = c, this.cps = 0.5, this.num_ticks_since_cps_change = 0, this.lastTick = 0, this.lastBegin = 0, this.lastEnd = 0, this.getTime = s, this.num_cycles_at_cps_change = 0, this.seconds_at_cps_change, this.onToggle = r, this.latency = a, this.clock = wk(\n      s,\n      // called slightly before each cycle\n      (h, f, m, y) => {\n        this.num_ticks_since_cps_change === 0 && (this.num_cycles_at_cps_change = this.lastEnd, this.seconds_at_cps_change = h), this.num_ticks_since_cps_change++;\n        const C = this.num_ticks_since_cps_change * f * this.cps;\n        try {\n          const S = this.lastEnd;\n          this.lastBegin = S;\n          const M = this.num_cycles_at_cps_change + C;\n          if (this.lastEnd = M, this.lastTick = h, h < y) {\n            console.log("skip query: too late");\n            return;\n          }\n          this.pattern.queryArc(S, M, { _cps: this.cps }).forEach((U) => {\n            if (U.hasOnset()) {\n              const R = (U.whole.begin - this.num_cycles_at_cps_change) / this.cps + this.seconds_at_cps_change + a, B = U.duration / this.cps, Z = R - h;\n              n?.(U, Z, B, this.cps, R), U.value.cps !== void 0 && this.cps != U.value.cps && (this.cps = U.value.cps, this.num_ticks_since_cps_change = 0);\n            }\n          });\n        } catch (S) {\n          En(`[cyclist] error: ${S.message}`), i?.(S);\n        }\n      },\n      e,\n      // duration of each cycle\n      0.1,\n      0.1,\n      o,\n      l\n    );\n  }\n  now() {\n    if (!this.started)\n      return 0;\n    const e = this.getTime() - this.lastTick - this.clock.duration;\n    return this.lastBegin + e * this.cps;\n  }\n  setStarted(e) {\n    this.started = e, this.onToggle?.(e);\n  }\n  async start() {\n    if (await this.beforeStart?.(), this.num_ticks_since_cps_change = 0, this.num_cycles_at_cps_change = 0, !this.pattern)\n      throw new Error("Scheduler: no pattern set! call .setPattern first.");\n    En("[cyclist] start"), this.clock.start(), this.setStarted(!0);\n  }\n  pause() {\n    En("[cyclist] pause"), this.clock.pause(), this.setStarted(!1);\n  }\n  stop() {\n    En("[cyclist] stop"), this.clock.stop(), this.lastEnd = 0, this.setStarted(!1);\n  }\n  async setPattern(e, n = !1) {\n    this.pattern = e, n && !this.started && await this.start();\n  }\n  setCps(e = 0.5) {\n    this.cps !== e && (this.cps = e, this.num_ticks_since_cps_change = 0);\n  }\n  log(e, n, r) {\n    const i = r.filter((s) => s.hasOnset());\n    console.log(`${e.toFixed(4)} - ${n.toFixed(4)} ${Array(i.length).fill("I").join("")}`);\n  }\n}\nlet vp;\nfunction xp() {\n  if (!vp)\n    throw new Error("no time set! use setTime to define a time source");\n  return vp();\n}\nfunction kp(t) {\n  vp = t;\n}\nfunction Nk({\n  defaultOutput: t,\n  onEvalError: e,\n  beforeEval: n,\n  beforeStart: r,\n  afterEval: i,\n  getTime: s,\n  transpiler: a,\n  onToggle: o,\n  editPattern: l,\n  onUpdateState: c,\n  sync: h = !1,\n  setInterval: f,\n  clearInterval: m,\n  id: y\n}) {\n  const v = {\n    schedulerError: void 0,\n    evalError: void 0,\n    code: "// LOADING",\n    activeCode: "// LOADING",\n    pattern: void 0,\n    miniLocations: [],\n    widgets: [],\n    pending: !1,\n    started: !1\n  }, C = {\n    id: y\n  }, S = (xe) => {\n    Object.assign(v, xe), v.isDirty = v.code !== v.activeCode, v.error = v.evalError || v.schedulerError, c?.(v);\n  }, M = {\n    onTrigger: Vk({ defaultOutput: t, getTime: s }),\n    getTime: s,\n    onToggle: (xe) => {\n      S({ started: xe }), o?.(xe);\n    },\n    setInterval: f,\n    clearInterval: m,\n    beforeStart: r\n  }, $ = h && typeof SharedWorker < "u" ? new LF(M) : new Ik(M);\n  let U = {}, R = 0, B, Z;\n  const N = function() {\n    return U = {}, R = 0, B = void 0, Z = void 0, St;\n  }, q = async (xe, je = !0) => (xe = l?.(xe) || xe, await $.setPattern(xe, je), xe);\n  kp(() => $.now());\n  const se = () => $.stop(), K = () => $.start(), ce = () => $.pause(), H = () => $.toggle(), ie = (xe) => $.setCps(xe), fe = (xe) => $.setCps(xe / 60), De = function(xe) {\n    return B = xe, St;\n  }, Ee = function(xe) {\n    return Z = xe, St;\n  }, re = () => {\n    de.prototype.p = function(je) {\n      return typeof je == "string" && (je.startsWith("_") || je.endsWith("_")) ? St : (je === "$" && (je = `$${R}`, R++), U[je] = this, this);\n    }, de.prototype.q = function(je) {\n      return St;\n    };\n    try {\n      for (let je = 1; je < 10; ++je)\n        Object.defineProperty(de.prototype, `d${je}`, {\n          get() {\n            return this.p(je);\n          },\n          configurable: !0\n        }), Object.defineProperty(de.prototype, `p${je}`, {\n          get() {\n            return this.p(je);\n          },\n          configurable: !0\n        }), de.prototype[`q${je}`] = St;\n    } catch (je) {\n      console.warn("injectPatternMethods: error:", je);\n    }\n    const xe = le("cpm", function(je, he) {\n      return he._fast(je / 60 / $.cps);\n    });\n    return pd({\n      all: De,\n      each: Ee,\n      hush: N,\n      cpm: xe,\n      setCps: ie,\n      setcps: ie,\n      setCpm: fe,\n      setcpm: fe\n    });\n  };\n  return { scheduler: $, evaluate: async (xe, je = !0, he = !0) => {\n    if (!xe)\n      throw new Error("no code to evaluate");\n    try {\n      S({ code: xe, pending: !0 }), await re(), kp(() => $.now()), await n?.({ code: xe }), he && N();\n      let { pattern: Pe, meta: Pt } = await Lk(xe, a, C);\n      if (Object.keys(U).length) {\n        let ut = Object.values(U);\n        Z && (ut = ut.map((We) => Z(We))), Pe = Nt(...ut);\n      } else Z && (Pe = Z(Pe));\n      if (B && (Pe = B(Pe)), !yc(Pe)) {\n        const ut = `got "${typeof evaluated}" instead of pattern`;\n        throw new Error(ut + (typeof evaluated == "function" ? ", did you forget to call a function?" : "."));\n      }\n      return En("[eval] code updated"), Pe = await q(Pe, je), S({\n        miniLocations: Pt?.miniLocations || [],\n        widgets: Pt?.widgets || [],\n        activeCode: xe,\n        pattern: Pe,\n        evalError: void 0,\n        schedulerError: void 0,\n        pending: !1\n      }), i?.({ code: xe, pattern: Pe, meta: Pt }), Pe;\n    } catch (Pe) {\n      En(`[eval] error: ${Pe.message}`, "error"), console.error(Pe), S({ evalError: Pe, pending: !1 }), e?.(Pe);\n    }\n  }, start: K, stop: se, pause: ce, setCps: ie, setPattern: q, setCode: (xe) => S({ code: xe }), toggle: H, state: v };\n}\nconst Vk = ({ getTime: t, defaultOutput: e }) => async (n, r, i, s, a) => {\n  try {\n    (!n.context.onTrigger || !n.context.dominantTrigger) && await e(n, r, i, s, a), n.context.onTrigger && await n.context.onTrigger(t() + r, n, t(), s, a);\n  } catch (o) {\n    En(`[cyclist] error: ${o.message}`, "error");\n  }\n}, IF = function(t, e = {}) {\n  const n = document.getElementById("code"), r = "background-image:url(" + t + ");background-size:contain;";\n  n.style = r;\n  const { className: i } = n, s = (l, c) => {\n    ({\n      style: () => n.style = r + ";" + c,\n      className: () => n.className = c + " " + i\n    })[l]();\n  }, a = Object.entries(e).filter(([l, c]) => typeof c == "function");\n  Object.entries(e).filter(([l, c]) => typeof c == "string").forEach(([l, c]) => s(l, c)), a.length;\n}, NF = () => {\n  const t = document.getElementById("code");\n  t && (t.style = "");\n};\nEn("🌀 @strudel/core loaded 🌀");\nglobalThis._strudelLoaded && console.warn(\n  `@strudel/core was loaded more than once...\nThis might happen when you have multiple versions of strudel installed. \nPlease check with "npm ls @strudel/core".`\n);\nglobalThis._strudelLoaded = !0;\nconst Xk = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  ClockCollator: Sb,\n  Cyclist: Ik,\n  Fraction: me,\n  Hap: Gt,\n  Pattern: de,\n  State: da,\n  TimeSpan: tn,\n  __chooseWith: ud,\n  _brandBy: od,\n  _fitslice: Zb,\n  _irand: ld,\n  _keyDown: hd,\n  _match: $b,\n  _mod: $o,\n  _polymeterListSteps: Ib,\n  _retime: gp,\n  _slices: bp,\n  accelerate: ly,\n  activeLabel: WO,\n  ad: Kx,\n  add: u3,\n  adsr: Yx,\n  almostAlways: yF,\n  almostNever: bF,\n  always: vF,\n  amp: py,\n  analyze: Sy,\n  anchor: gv,\n  and: P3,\n  apply: i5,\n  ar: ek,\n  arrange: GP,\n  as: yk,\n  att: dy,\n  attack: fy,\n  averageArray: db,\n  backgroundImage: IF,\n  band: m3,\n  bandf: Ty,\n  bandq: _y,\n  bank: Cy,\n  base64ToUnicode: wb,\n  bbexpr: Hy,\n  bbst: Ky,\n  beat: kE,\n  begin: $y,\n  binary: qE,\n  binaryN: Bk,\n  bind: e3,\n  binshift: vx,\n  bite: c5,\n  bjork: xk,\n  blshift: y3,\n  bor: g3,\n  bp: Ry,\n  bpa: B1,\n  bpattack: F1,\n  bpd: _1,\n  bpdecay: R1,\n  bpe: S1,\n  bpenv: C1,\n  bpf: jy,\n  bpq: Zy,\n  bpr: z1,\n  bprelease: G1,\n  bps: V1,\n  bpsustain: N1,\n  brak: v5,\n  brand: KE,\n  brandBy: YE,\n  brshift: O3,\n  bxor: b3,\n  bypass: X5,\n  byteBeatExpression: zy,\n  byteBeatStartTime: Yy,\n  calculateSteps: LP,\n  cat: Tb,\n  ccn: ak,\n  ccv: ok,\n  ceil: Q3,\n  ch: e1,\n  channel: d1,\n  channels: Jy,\n  choose: eF,\n  chooseCycles: Tk,\n  chooseInWith: cd,\n  chooseWith: kc,\n  chop: fE,\n  chord: fv,\n  chunk: _5,\n  chunkBack: L5,\n  chunkback: I5,\n  clamp: bc,\n  cleanupUi: NF,\n  clip: Mx,\n  coarse: qy,\n  code2hash: TP,\n  color: zx,\n  colour: Hx,\n  comb: bx,\n  compose: kP,\n  compress: L3,\n  compressSpan: I3,\n  compressor: Rv,\n  compressorAttack: $v,\n  compressorKnee: _v,\n  compressorRatio: Zv,\n  compressorRelease: Lv,\n  compressspan: N3,\n  constant: wP,\n  contract: qb,\n  control: sk,\n  controls: CE,\n  cosine: QE,\n  cosine2: TE,\n  cpm: s5,\n  cps: Bx,\n  createClock: wk,\n  createParam: vc,\n  createParams: Jf,\n  crush: Uy,\n  ctf: b1,\n  ctlNum: lk,\n  ctranspose: zO,\n  curry: Ke,\n  curve: _x,\n  cut: m1,\n  cutoff: g1,\n  cycleToSeconds: fp,\n  dec: Py,\n  decay: Dy,\n  degrade: lF,\n  degradeBy: oF,\n  degradeByWith: aF,\n  degree: qO,\n  delay: pO,\n  delayfb: dO,\n  delayfeedback: fO,\n  delayt: bO,\n  delaytime: gO,\n  deltaSlide: Zx,\n  det: xO,\n  detune: vO,\n  dfb: mO,\n  dict: mv,\n  dictionary: dv,\n  dist: jv,\n  distort: Tv,\n  div: p3,\n  djf: hO,\n  drawLine: Pb,\n  drive: Gy,\n  drop: Xb,\n  dry: CO,\n  ds: Jx,\n  dt: yO,\n  dur: jx,\n  duration: Tx,\n  early: a5,\n  echo: B5,\n  echoWith: D5,\n  echowith: P5,\n  end: Ly,\n  enhance: mx,\n  eq: C3,\n  eqt: S3,\n  euclid: DE,\n  euclidLegato: FE,\n  euclidLegatoRot: BE,\n  euclidRot: EE,\n  euclidrot: PE,\n  evalScope: pd,\n  evaluate: Lk,\n  every: r5,\n  expand: Ub,\n  expression: Uv,\n  extend: Wb,\n  fadeInTime: DO,\n  fadeOutTime: AO,\n  fadeTime: SO,\n  fanchor: Y1,\n  fast: z3,\n  fastChunk: V5,\n  fastGap: V3,\n  fastcat: Jn,\n  fastchunk: N5,\n  fastgap: X3,\n  fft: Ay,\n  filter: z5,\n  filterWhen: H5,\n  firstOf: n5,\n  fit: yE,\n  flatten: Ai,\n  floor: M3,\n  fm: by,\n  fmattack: Oy,\n  fmdecay: vy,\n  fmenv: yy,\n  fmh: my,\n  fmi: gy,\n  fmrelease: ky,\n  fmsustain: xy,\n  fmvelocity: wy,\n  focus: W3,\n  focusSpan: U3,\n  focusspan: q3,\n  fractionalArgs: CP,\n  frameRate: wx,\n  frames: Cx,\n  freeze: cx,\n  freq: PO,\n  freqToMidi: If,\n  fromBipolar: j3,\n  fshift: Kv,\n  fshiftnote: Jv,\n  fshiftphase: ex,\n  ftype: H1,\n  func: F3,\n  gain: cy,\n  gap: Pa,\n  gat: IO,\n  gate: LO,\n  getControlName: ed,\n  getCurrentKeyboardState: Db,\n  getEventOffsetMs: bP,\n  getFreq: fb,\n  getFrequency: gb,\n  getPerformanceTimeSeconds: RP,\n  getPlayableNoteValue: xP,\n  getSoundIndex: vP,\n  getTime: xp,\n  getTrigger: Vk,\n  grow: K5,\n  gt: x3,\n  gte: w3,\n  harmonic: HO,\n  hash2code: jP,\n  hbrick: xx,\n  hcutoff: iO,\n  hold: Qy,\n  hours: Sx,\n  hp: aO,\n  hpa: E1,\n  hpattack: P1,\n  hpd: j1,\n  hpdecay: T1,\n  hpe: w1,\n  hpenv: k1,\n  hpf: sO,\n  hpq: lO,\n  hpr: q1,\n  hprelease: U1,\n  hps: I1,\n  hpsustain: L1,\n  hresonance: oO,\n  hsl: G5,\n  hsla: q5,\n  hurry: H3,\n  id: Hs,\n  imag: dx,\n  inhabit: MF,\n  inhabitmod: TF,\n  innerBind: t3,\n  inside: J3,\n  inv: b5,\n  invert: g5,\n  ir: Dv,\n  irand: JE,\n  iresponse: Pv,\n  isNote: gc,\n  isNoteWithOctave: dP,\n  isPattern: yc,\n  isaw: xc,\n  isaw2: rd,\n  iter: Q5,\n  iterBack: T5,\n  iterback: j5,\n  itri: ZE,\n  itri2: $E,\n  jux: A5,\n  juxBy: C5,\n  juxby: S5,\n  kcutoff: rx,\n  keep: o3,\n  keepif: l3,\n  keyAlias: Ab,\n  keyDown: kF,\n  krush: nx,\n  label: UO,\n  lastOf: t5,\n  late: Rb,\n  lbrick: kx,\n  legato: Qx,\n  leslie: NO,\n  lfo: Ix,\n  linger: h5,\n  listRange: Nf,\n  lock: OO,\n  logKey: Lf,\n  logger: En,\n  loop: Iy,\n  loopAt: gE,\n  loopAtCps: OE,\n  loopBegin: Ny,\n  loopEnd: Xy,\n  loopat: bE,\n  loopatcps: vE,\n  loopb: Vy,\n  loope: Wy,\n  lp: O1,\n  lpa: D1,\n  lpattack: A1,\n  lpd: Q1,\n  lpdecay: M1,\n  lpe: x1,\n  lpenv: v1,\n  lpf: y1,\n  lpq: cO,\n  lpr: W1,\n  lprelease: X1,\n  lps: $1,\n  lpsustain: Z1,\n  lrate: VO,\n  lsize: XO,\n  lt: v3,\n  lte: k3,\n  mapArgs: Xf,\n  mask: HP,\n  midi2note: OP,\n  midiToFreq: Fs,\n  midibend: mk,\n  midichan: tk,\n  midicmd: ik,\n  midimap: nk,\n  midiport: rk,\n  miditouch: gk,\n  minutes: Ax,\n  mod: f3,\n  mode: Ov,\n  mouseX: VE,\n  mouseY: IE,\n  mousex: NE,\n  mousey: LE,\n  mtranspose: GO,\n  mul: h3,\n  n: ay,\n  nanFallback: mb,\n  ne: A3,\n  net: D3,\n  never: OF,\n  noise: tO,\n  note: oy,\n  noteToMidi: _s,\n  nothing: pr,\n  nrpnn: uk,\n  nrpv: ck,\n  nudge: JO,\n  numeralArgs: lr,\n  objectMap: Cb,\n  octave: ev,\n  octaveR: KO,\n  octaves: yv,\n  octer: ix,\n  octersub: sx,\n  octersubsub: ax,\n  off: O5,\n  offset: bv,\n  often: mF,\n  or: E3,\n  orbit: tv,\n  outerBind: n3,\n  outside: e5,\n  overgain: nv,\n  overshape: rv,\n  pace: Lb,\n  pairs: vb,\n  palindrome: w5,\n  pan: iv,\n  panchor: $O,\n  panorient: lv,\n  panspan: sv,\n  pansplay: av,\n  panwidth: ov,\n  parseFractional: Ob,\n  parseNumeral: Vf,\n  partials: gx,\n  patt: FO,\n  pattack: EO,\n  pcurve: ZO,\n  pdec: MO,\n  pdecay: BO,\n  penv: _O,\n  perlin: sF,\n  perlinWith: _k,\n  ph: s1,\n  phasdp: f1,\n  phaser: a1,\n  phasercenter: u1,\n  phaserdepth: h1,\n  phaserrate: i1,\n  phasersweep: o1,\n  phc: c1,\n  phd: p1,\n  phs: l1,\n  pick: Zk,\n  pickF: CF,\n  pickOut: AF,\n  pickReset: FF,\n  pickRestart: PF,\n  pickSqueeze: QF,\n  pickmod: $k,\n  pickmodF: SF,\n  pickmodOut: DF,\n  pickmodReset: BF,\n  pickmodRestart: EF,\n  pickmodSqueeze: jF,\n  pipe: yb,\n  pitchJump: $x,\n  pitchJumpTime: Lx,\n  ply: G3,\n  pm: UP,\n  polyBind: s3,\n  polyTouch: bk,\n  polymeter: Oc,\n  polyrhythm: XP,\n  postgain: hy,\n  pow: d3,\n  pr: WP,\n  prel: RO,\n  prelease: jO,\n  press: k5,\n  pressBy: x5,\n  progNum: hk,\n  psus: TO,\n  psustain: QO,\n  pure: cn,\n  pw: t1,\n  pwrate: n1,\n  pwsweep: r1,\n  rand: Yn,\n  rand2: HE,\n  randcat: tF,\n  randrun: Mk,\n  range: R3,\n  range2: Z3,\n  rangex: _3,\n  rarely: gF,\n  rate: uv,\n  ratio: $3,\n  rdim: Cv,\n  real: fx,\n  ref: ey,\n  register: le,\n  registerControl: W,\n  reify: Oe,\n  rel: My,\n  release: By,\n  removeUndefineds: Da,\n  repeatCycles: R5,\n  repeatTime: Nx,\n  repl: Nk,\n  resonance: uO,\n  rev: _b,\n  rfade: Av,\n  rib: U5,\n  ribbon: W5,\n  ring: ox,\n  ringdf: ux,\n  ringf: lx,\n  rlp: kv,\n  room: vv,\n  roomdim: wv,\n  roomfade: Sv,\n  roomlp: xv,\n  roomsize: Ev,\n  rotate: bb,\n  round: B3,\n  rsize: Mv,\n  run: Fk,\n  s: ny,\n  s_add: sE,\n  s_alt: tE,\n  s_cat: eE,\n  s_contract: uE,\n  s_expand: oE,\n  s_extend: lE,\n  s_polymeter: nE,\n  s_sub: aE,\n  s_taper: rE,\n  s_taperlist: iE,\n  s_tour: cE,\n  s_zip: hE,\n  saw: Io,\n  saw2: nd,\n  scram: Ox,\n  scramble: zE,\n  scrub: Ok,\n  seconds: Dx,\n  seg: f5,\n  segment: p5,\n  semitone: hv,\n  seq: jb,\n  seqPLoop: zP,\n  sequence: Fr,\n  sequenceP: Fb,\n  set: a3,\n  setStringParser: Eb,\n  setTime: kp,\n  shape: Qv,\n  shrink: zb,\n  shrinklist: Gb,\n  shuffle: GE,\n  signal: Mr,\n  silence: St,\n  sine: Ck,\n  sine2: id,\n  size: Fv,\n  slice: Jb,\n  slide: cv,\n  slow: Y3,\n  slowChunk: $5,\n  slowcat: as,\n  slowcatPrime: Gf,\n  slowchunk: Z5,\n  smear: yx,\n  sol2note: BP,\n  someCycles: dF,\n  someCyclesBy: fF,\n  sometimes: pF,\n  sometimesBy: hF,\n  songPtr: Px,\n  sound: ry,\n  source: iy,\n  sparsity: K3,\n  speak: ZF,\n  speed: Kf,\n  splice: mE,\n  splitAt: Wf,\n  spread: wO,\n  square: Sk,\n  square2: jE,\n  squeeze: RF,\n  squeezeBind: r3,\n  squiz: Vv,\n  src: sy,\n  stack: Nt,\n  stackBy: qP,\n  stackCentre: Qb,\n  stackLeft: Bb,\n  stackRight: Mb,\n  steady: ME,\n  stepBind: i3,\n  stepalt: Nb,\n  stepcat: Hn,\n  steps: pE,\n  stepsPerOctave: YO,\n  stretch: Iv,\n  striate: dE,\n  struct: YP,\n  stut: M5,\n  stutWith: E5,\n  stutwith: F5,\n  sub: c3,\n  superimpose: KP,\n  sus: Fy,\n  sustain: Ey,\n  sustainpedal: qv,\n  swing: m5,\n  swingBy: d5,\n  sysex: pk,\n  sysexdata: dk,\n  sysexid: fk,\n  sz: Bv,\n  take: Vb,\n  time: Ak,\n  timeCat: Yf,\n  timecat: J5,\n  toBipolar: T3,\n  tokenizeNote: hb,\n  tour: Hb,\n  tremdp: zv,\n  tremolo: qx,\n  tremolodepth: Gv,\n  tremolorate: Hv,\n  tremr: Yv,\n  tri: RE,\n  tri2: _E,\n  triode: tx,\n  tsdelay: px,\n  uid: Ex,\n  undegrade: cF,\n  undegradeBy: uF,\n  unicodeToBase64: kb,\n  uniq: MP,\n  uniqsort: QP,\n  uniqsortr: xb,\n  unison: kO,\n  unit: Nv,\n  v: eO,\n  val: Fx,\n  valueToMidi: pb,\n  velocity: uy,\n  vib: K1,\n  vibmod: nO,\n  vibrato: J1,\n  vmod: rO,\n  voice: pv,\n  vowel: Xv,\n  waveloss: Wv,\n  wchoose: rF,\n  wchooseCycles: Rk,\n  when: y5,\n  whenKey: xF,\n  withValue: JP,\n  within: Y5,\n  wrandcat: iF,\n  xfade: ty,\n  xsdelay: hx,\n  zcrush: Wx,\n  zdelay: Ux,\n  zip: Yb,\n  zipWith: Uf,\n  zmod: Xx,\n  znoise: Vx,\n  zoom: o5,\n  zoomArc: l5,\n  zoomarc: u5,\n  zrand: Rx,\n  zzfx: Gx\n}, Symbol.toStringTag, { value: "Module" })), ji = (t = "test-canvas", e) => {\n  let { contextType: n = "2d", pixelated: r = !1, pixelRatio: i = window.devicePixelRatio } = e || {}, s = document.querySelector("#" + t);\n  if (!s) {\n    s = document.createElement("canvas"), s.id = t, s.width = window.innerWidth * i, s.height = window.innerHeight * i, s.style = "pointer-events:none;width:100%;height:100%;position:fixed;top:0;left:0", r && (s.style.imageRendering = "pixelated"), document.body.prepend(s);\n    let a;\n    window.addEventListener("resize", () => {\n      a && clearTimeout(a), a = setTimeout(() => {\n        s.width = window.innerWidth * i, s.height = window.innerHeight * i;\n      }, 200);\n    });\n  }\n  return s.getContext(n, { willReadFrequently: !0 });\n};\nlet ta = {};\nfunction Wk(t) {\n  ta[t] !== void 0 && (cancelAnimationFrame(ta[t]), delete ta[t]);\n}\nfunction VF(t) {\n  Object.keys(ta).forEach((e) => (!t || e.startsWith(t)) && Wk(e));\n}\nlet wi = {};\nde.prototype.draw = function(t, e) {\n  if (typeof window > "u")\n    return this;\n  let { id: n = 1, lookbehind: r = 0, lookahead: i = 0 } = e, s = Math.max(xp(), 0);\n  Wk(n), r = Math.abs(r), wi[n] = (wi[n] || []).filter((c) => !c.isInFuture(s));\n  let a = this.queryArc(s, s + i).filter((c) => c.hasOnset());\n  wi[n] = wi[n].concat(a);\n  let o;\n  const l = () => {\n    const c = xp(), h = c + i;\n    wi[n] = wi[n].filter((y) => y.isInNearPast(r, c));\n    let f = Math.max(o || h, h - 1 / 10);\n    const m = this.queryArc(f, h).filter((y) => y.hasOnset());\n    wi[n] = wi[n].concat(m), o = h, t(wi[n], c, h, this), ta[n] = requestAnimationFrame(l);\n  };\n  return ta[n] = requestAnimationFrame(l), this;\n};\nconst Mm = (t = !0, e) => {\n  const n = ji();\n  t && n.clearRect(0, 0, n.canvas.width, n.canvas.height), VF(e);\n};\nde.prototype.onPaint = function(t) {\n  return this.withState((e) => {\n    e.controls.painters || (e.controls.painters = []), e.controls.painters.push(t);\n  });\n};\nde.prototype.getPainters = function() {\n  let t = [];\n  return this.queryArc(0, 0, { painters: t }), t;\n};\nclass XF {\n  constructor(e, n) {\n    this.onFrame = e, this.onError = n;\n  }\n  start() {\n    const e = this;\n    let n = requestAnimationFrame(function r(i) {\n      try {\n        e.onFrame(i);\n      } catch (s) {\n        e.onError(s);\n      }\n      n = requestAnimationFrame(r);\n    });\n    e.cancel = () => {\n      cancelAnimationFrame(n);\n    };\n  }\n  stop() {\n    this.cancel && this.cancel();\n  }\n}\nclass WF {\n  constructor(e, n) {\n    this.visibleHaps = [], this.lastFrame = null, this.drawTime = n, this.painters = [], this.framer = new XF(\n      () => {\n        if (!this.scheduler) {\n          console.warn("Drawer: no scheduler");\n          return;\n        }\n        const r = Math.abs(this.drawTime[0]), i = this.drawTime[1], s = this.scheduler.now() + i;\n        if (this.lastFrame === null) {\n          this.lastFrame = s;\n          return;\n        }\n        const a = this.scheduler.pattern.queryArc(Math.max(this.lastFrame, s - 1 / 10), s);\n        this.lastFrame = s, this.visibleHaps = (this.visibleHaps || []).filter((l) => l.endClipped >= s - r - i).concat(a.filter((l) => l.hasOnset()));\n        const o = s - i;\n        e(this.visibleHaps, o, this, this.painters);\n      },\n      (r) => {\n        console.warn("draw error", r);\n      }\n    );\n  }\n  setDrawTime(e) {\n    this.drawTime = e;\n  }\n  invalidate(e = this.scheduler, n) {\n    if (!e)\n      return;\n    n = n ?? e.now(), this.scheduler = e;\n    let [r, i] = this.drawTime;\n    const [s, a] = [Math.max(n, 0), n + i + 0.1];\n    this.visibleHaps = this.visibleHaps.filter((l) => l.whole.begin < n), this.painters = [];\n    const o = e.pattern.queryArc(s, a, { painters: this.painters });\n    this.visibleHaps = this.visibleHaps.concat(o);\n  }\n  start(e) {\n    this.scheduler = e, this.invalidate(), this.framer.start();\n  }\n  stop() {\n    this.framer && this.framer.stop();\n  }\n}\nfunction mZ(t) {\n  return typeof window > "u" ? "#fff" : getComputedStyle(document.documentElement).getPropertyValue(t);\n}\nlet Uk = {\n  background: "#222",\n  foreground: "#75baff",\n  caret: "#ffcc00",\n  selection: "rgba(128, 203, 196, 0.5)",\n  selectionMatch: "#036dd626",\n  lineHighlight: "#00000050",\n  gutterBackground: "transparent",\n  gutterForeground: "#8a919966"\n};\nfunction Pi() {\n  return Uk;\n}\nfunction UF(t) {\n  Uk = t;\n}\nlet Qm = "#22222210";\nde.prototype.animate = function({ callback: t, sync: e = !1, smear: n = 0.5 } = {}) {\n  window.frame && cancelAnimationFrame(window.frame);\n  const r = ji();\n  let { clientWidth: i, clientHeight: s } = r.canvas;\n  i *= window.devicePixelRatio, s *= window.devicePixelRatio;\n  let a = n === 0 ? "99" : Number((1 - n) * 100).toFixed(0);\n  a = a.length === 1 ? `0${a}` : a, Qm = `#200010${a}`;\n  const o = (l) => {\n    let c;\n    l = Math.round(l), c = this.slow(1e3).queryArc(l, l), r.fillStyle = Qm, r.fillRect(0, 0, i, s), c.forEach((h) => {\n      let { x: f, y: m, w: y, h: v, s: C, r: S, angle: M = 0, fill: $ = "darkseagreen" } = h.value;\n      if (y *= i, v *= s, S !== void 0 && M !== void 0) {\n        const R = M * 2 * Math.PI, [B, Z] = [(i - y) / 2, (s - v) / 2];\n        f = B + Math.cos(R) * S * B, m = Z + Math.sin(R) * S * Z;\n      } else\n        f *= i - y, m *= s - v;\n      const U = { ...h.value, x: f, y: m, w: y, h: v };\n      r.fillStyle = $, C === "rect" ? r.fillRect(f, m, y, v) : C === "ellipse" && (r.beginPath(), r.ellipse(f + y / 2, m + v / 2, y / 2, v / 2, 0, 0, 2 * Math.PI), r.fill()), t && t(r, U, h);\n    }), window.frame = requestAnimationFrame(o);\n  };\n  return window.frame = requestAnimationFrame(o), St;\n};\nconst { x: qk, y: gZ, w: bZ, h: yZ, angle: OZ, r: vZ, fill: xZ, smear: kZ } = Jf("x", "y", "w", "h", "angle", "r", "fill", "smear"), wZ = le("rescale", function(t, e) {\n  return e.mul(qk(t).w(t).y(t).h(t));\n}), CZ = le("moveXY", function(t, e, n) {\n  return n.add(qk(t).y(e));\n}), SZ = le("zoomIn", function(t, e) {\n  const n = cn(1).sub(t).div(2);\n  return e.rescale(t).move(n, n);\n}), Ua = (t, e, n) => t * (n - e) + e, Tm = (t) => {\n  let { value: e } = t;\n  typeof t.value != "object" && (e = { value: e });\n  let { note: n, n: r, freq: i, s } = e;\n  if (i)\n    return If(i);\n  if (n = n ?? r, typeof n == "string")\n    try {\n      return _s(n);\n    } catch {\n      return 0;\n    }\n  return typeof n == "number" ? n : s ? "_" + s : e;\n};\nde.prototype.pianoroll = function(t = {}) {\n  let { cycles: e = 4, playhead: n = 0.5, overscan: r = 0, hideNegative: i = !1, ctx: s = ji(), id: a = 1 } = t, o = -e * n, l = e * (1 - n);\n  const c = (h, f) => (!i || h.whole.begin >= 0) && h.isWithinTime(f + o, f + l);\n  return this.draw(\n    (h, f) => {\n      fd({\n        ...t,\n        time: f,\n        ctx: s,\n        haps: h.filter((m) => c(m, f))\n      });\n    },\n    {\n      lookbehind: o - r,\n      lookahead: l + r,\n      id: a\n    }\n  ), this;\n};\nfunction AZ(t) {\n  return yc(t) ? t.pianoroll() : (e) => e.pianoroll(t);\n}\nfunction fd({\n  time: t,\n  haps: e,\n  cycles: n = 4,\n  playhead: r = 0.5,\n  flipTime: i = 0,\n  flipValues: s = 0,\n  hideNegative: a = !1,\n  inactive: o = Pi().foreground,\n  active: l = Pi().foreground,\n  background: c = "transparent",\n  smear: h = 0,\n  playheadColor: f = Pi().foreground,\n  minMidi: m = 10,\n  maxMidi: y = 90,\n  autorange: v = 0,\n  timeframe: C,\n  fold: S = 1,\n  vertical: M = 0,\n  labels: $ = !1,\n  fill: U = 1,\n  fillActive: R = !1,\n  strokeActive: B = !0,\n  stroke: Z,\n  hideInactive: N = 0,\n  colorizeInactive: q = 1,\n  fontFamily: se,\n  ctx: K,\n  id: ce\n} = {}) {\n  const H = K.canvas.width, ie = K.canvas.height;\n  let fe = -n * r, De = n * (1 - r);\n  ce && (e = e.filter((He) => He.hasTag(ce))), C && (console.warn("timeframe is deprecated! use from/to instead"), fe = 0, De = C);\n  const Ee = M ? ie : H, re = M ? H : ie;\n  let Ce = M ? [Ee, 0] : [0, Ee];\n  const Le = De - fe, xe = M ? [0, re] : [re, 0];\n  let je = y - m + 1, he = re / je, Pe = [];\n  i && Ce.reverse(), s && xe.reverse();\n  const { min: Pt, max: ut, values: We } = e.reduce(\n    ({ min: He, max: xt, values: Bn }, fn) => {\n      const yt = Tm(fn);\n      return {\n        min: yt < He ? yt : He,\n        max: yt > xt ? yt : xt,\n        values: Bn.includes(yt) ? Bn : [...Bn, yt]\n      };\n    },\n    { min: 1 / 0, max: -1 / 0, values: [] }\n  );\n  v && (m = Pt, y = ut, je = y - m + 1), Pe = We.sort(\n    (He, xt) => typeof He == "number" && typeof xt == "number" ? He - xt : typeof He == "number" ? 1 : String(He).localeCompare(String(xt))\n  ), he = S ? re / Pe.length : re / je, K.fillStyle = c, K.globalAlpha = 1, h || (K.clearRect(0, 0, H, ie), K.fillRect(0, 0, H, ie)), e.forEach((He) => {\n    const xt = He.whole.begin <= t && He.endClipped > t;\n    let Bn = Z ?? (B && xt), fn = !xt && U || xt && R;\n    if (N && !xt)\n      return;\n    let yt = He.value?.color;\n    l = yt || l, o = q && yt || o, yt = xt ? l : o, K.fillStyle = fn ? yt : "transparent", K.strokeStyle = yt;\n    const { velocity: kt = 1, gain: Ot = 1 } = He.value || {};\n    K.globalAlpha = kt * Ot;\n    const Xt = (He.whole.begin - (i ? De : fe)) / Le, er = Ua(Xt, ...Ce);\n    let tr = Ua(He.duration / Le, 0, Ee);\n    const dr = Tm(He), Mn = S ? Pe.indexOf(dr) / Pe.length : (Number(dr) - m) / je, zt = Ua(Mn, ...xe);\n    let _r = 0;\n    const nr = Ua(t / Le, ...Ce);\n    let bn;\n    if (M ? bn = [\n      zt + 1 - (s ? he : 0),\n      // x\n      Ee - nr + er + _r + 1 - (i ? 0 : tr),\n      // y\n      he - 2,\n      // width\n      tr - 2\n      // height\n    ] : bn = [\n      er - nr + _r + 1 - (i ? tr : 0),\n      // x\n      zt + 1 - (s ? 0 : he),\n      // y\n      tr - 2,\n      // widith\n      he - 2\n      // height\n    ], Bn && K.strokeRect(...bn), fn && K.fillRect(...bn), $) {\n      const Yr = He.value.note ?? He.value.s + (He.value.n ? `:${He.value.n}` : ""), { label: qe, activeLabel: Qt } = He.value, wt = (xt && Qt || qe) ?? Yr;\n      let Xe = M ? tr : he * 0.75;\n      K.font = `${Xe}px ${se || "monospace"}`, K.fillStyle = /* isActive &&  */\n      fn ? "black" : yt, K.textBaseline = "top", K.fillText(wt, ...bn);\n    }\n  }), K.globalAlpha = 1;\n  const Mt = Ua(-fe / Le, ...Ce);\n  return K.strokeStyle = f, K.beginPath(), M ? (K.moveTo(0, Mt), K.lineTo(re, Mt)) : (K.moveTo(Mt, 0), K.lineTo(Mt, re)), K.stroke(), this;\n}\nfunction Gk(t, e = {}) {\n  let [n, r] = t;\n  n = Math.abs(n);\n  const i = r + n, s = i !== 0 ? n / i : 0;\n  return { fold: 1, ...e, cycles: i, playhead: s };\n}\nconst qF = (t = {}) => (e, n, r, i) => fd({ ctx: e, time: n, haps: r, ...Gk(i, t) });\nde.prototype.punchcard = function(t) {\n  return this.onPaint(qF(t));\n};\nde.prototype.wordfall = function(t) {\n  return this.punchcard({ vertical: 1, labels: 1, stroke: 0, fillActive: 1, active: "white", ...t });\n};\nfunction DZ(t) {\n  const { drawTime: e, ...n } = t;\n  fd({ ...Gk(e), ...n });\n}\nfunction GF(t, e, n, r) {\n  const i = (t - 90) * Math.PI / 180;\n  return [n + Math.cos(i) * e, r + Math.sin(i) * e];\n}\nconst jm = (t, e, n, r, i = 0) => GF((t + i) * 360, e * t, n, r);\nfunction Rm(t) {\n  let {\n    ctx: e,\n    from: n = 0,\n    to: r = 3,\n    margin: i = 50,\n    cx: s = 100,\n    cy: a = 100,\n    rotate: o = 0,\n    thickness: l = i / 2,\n    color: c = Pi().foreground,\n    cap: h = "round",\n    stretch: f = 1,\n    fromOpacity: m = 1,\n    toOpacity: y = 1\n  } = t;\n  n *= f, r *= f, o *= f, e.lineWidth = l, e.lineCap = h, e.strokeStyle = c, e.globalAlpha = m, e.beginPath();\n  let [v, C] = jm(n, i, s, a, o);\n  e.moveTo(v, C);\n  const S = 1 / 60;\n  let M = n;\n  for (; M <= r; ) {\n    const [$, U] = jm(M, i, s, a, o);\n    e.globalAlpha = (M - n) / (r - n) * y, e.lineTo($, U), M += S;\n  }\n  e.stroke();\n}\nfunction zF(t) {\n  let {\n    stretch: e = 1,\n    size: n = 80,\n    thickness: r = n / 2,\n    cap: i = "butt",\n    // round butt squar,\n    inset: s = 3,\n    // start angl,\n    playheadColor: a = "#ffffff",\n    playheadLength: o = 0.02,\n    playheadThickness: l = r,\n    padding: c = 0,\n    steady: h = 1,\n    activeColor: f = Pi().foreground,\n    inactiveColor: m = Pi().gutterForeground,\n    colorizeInactive: y = 0,\n    fade: v = !0,\n    // logSpiral = true,\n    ctx: C,\n    time: S,\n    haps: M,\n    drawTime: $,\n    id: U\n  } = t;\n  U && (M = M.filter((H) => H.hasTag(U)));\n  const [R, B] = [C.canvas.width, C.canvas.height];\n  C.clearRect(0, 0, R * 2, B * 2);\n  const [Z, N] = [R / 2, B / 2], q = {\n    margin: n / e,\n    cx: Z,\n    cy: N,\n    stretch: e,\n    cap: i,\n    thickness: r\n  }, se = {\n    ...q,\n    thickness: l,\n    from: s - o,\n    to: s,\n    color: a\n  }, [K] = $, ce = h * S;\n  M.forEach((H) => {\n    const ie = H.whole.begin <= S && H.endClipped > S, fe = H.whole.begin - S + s, De = H.endClipped - S + s - c, Ee = H.value?.color || f, re = y || ie ? Ee : m, Ce = v ? 1 - Math.abs((H.whole.begin - S) / K) : 1;\n    Rm({\n      ctx: C,\n      ...q,\n      from: fe,\n      to: De,\n      rotate: ce,\n      color: re,\n      fromOpacity: Ce,\n      toOpacity: Ce\n    });\n  }), Rm({\n    ctx: C,\n    ...se,\n    rotate: ce\n  });\n}\nde.prototype.spiral = function(t = {}) {\n  return this.onPaint((e, n, r, i) => zF({ ctx: e, time: n, haps: r, drawTime: i, ...t }));\n};\nconst HF = Fs(36), _m = (t, e, n, r) => {\n  r = r * Math.PI * 2;\n  const i = Math.sin(r) * n + t, s = Math.cos(r) * n + e;\n  return [i, s];\n}, Zm = (t, e) => 0.5 - Math.log2(t / e) % 1;\nfunction YF({\n  haps: t,\n  ctx: e,\n  id: n,\n  hapcircles: r = 1,\n  circle: i = 0,\n  edo: s = 12,\n  root: a = HF,\n  thickness: o = 3,\n  hapRadius: l = 6,\n  mode: c = "flake",\n  margin: h = 10\n} = {}) {\n  const f = c === "polygon", m = c === "flake", y = e.canvas.width, v = e.canvas.height;\n  e.clearRect(0, 0, y, v);\n  const C = Pi().foreground, M = Math.min(y, v) / 2 - o / 2 - l - h, $ = y / 2, U = v / 2;\n  n && (t = t.filter((B) => B.hasTag(n))), e.strokeStyle = C, e.fillStyle = C, e.globalAlpha = 1, e.lineWidth = o, i && (e.beginPath(), e.arc($, U, M, 0, 2 * Math.PI), e.stroke()), s && (Array.from({ length: s }, (B, Z) => {\n    const N = Zm(a * Math.pow(2, Z / s), a), [q, se] = _m($, U, M, N);\n    e.beginPath(), e.arc(q, se, l, 0, 2 * Math.PI), e.fill();\n  }), e.stroke());\n  let R = [];\n  e.lineWidth = l, t.forEach((B) => {\n    let Z;\n    try {\n      Z = gb(B);\n    } catch {\n      return;\n    }\n    const N = Zm(Z, a), [q, se] = _m($, U, M, N), K = B.value.color || C;\n    e.strokeStyle = K, e.fillStyle = K;\n    const { velocity: ce = 1, gain: H = 1 } = B.value || {}, ie = ce * H;\n    e.globalAlpha = ie, R.push([q, se, N, K, ie]), e.beginPath(), r && (e.moveTo(q + l, se), e.arc(q, se, l, 0, 2 * Math.PI), e.fill()), m && (e.moveTo($, U), e.lineTo(q, se)), e.stroke();\n  }), e.strokeStyle = C, e.globalAlpha = 1, f && R.length && (R = R.sort((B, Z) => B[2] - Z[2]), e.beginPath(), e.moveTo(R[0][0], R[0][1]), R.forEach(([B, Z, N, q, se]) => {\n    e.strokeStyle = q, e.globalAlpha = se, e.lineTo(B, Z);\n  }), e.lineTo(R[0][0], R[0][1]), e.stroke());\n}\nde.prototype.pitchwheel = function(t = {}) {\n  let { ctx: e = ji(), id: n = 1 } = t;\n  return this.tag(n).onPaint(\n    (r, i, s) => YF({\n      ...t,\n      time: i,\n      ctx: e,\n      haps: s.filter((a) => a.isActive(i)),\n      id: n\n    })\n  );\n};\nfunction KF(t, e) {\n  function n() {\n    this.constructor = t;\n  }\n  n.prototype = e.prototype, t.prototype = new n();\n}\nfunction Bs(t, e, n, r) {\n  var i = Error.call(this, t);\n  return Object.setPrototypeOf && Object.setPrototypeOf(i, Bs.prototype), i.expected = e, i.found = n, i.location = r, i.name = "SyntaxError", i;\n}\nKF(Bs, Error);\nfunction dh(t, e, n) {\n  return n = n || " ", t.length > e ? t : (e -= t.length, n += n.repeat(e), t + n.slice(0, e));\n}\nBs.prototype.format = function(t) {\n  var e = "Error: " + this.message;\n  if (this.location) {\n    var n = null, r;\n    for (r = 0; r < t.length; r++)\n      if (t[r].source === this.location.source) {\n        n = t[r].text.split(/\\r\\n|\\n|\\r/g);\n        break;\n      }\n    var i = this.location.start, s = this.location.source && typeof this.location.source.offset == "function" ? this.location.source.offset(i) : i, a = this.location.source + ":" + s.line + ":" + s.column;\n    if (n) {\n      var o = this.location.end, l = dh("", s.line.toString().length, " "), c = n[i.line - 1], h = i.line === o.line ? o.column : c.length + 1, f = h - i.column || 1;\n      e += `\n --\x3e ` + a + `\n` + l + ` |\n` + s.line + " | " + c + `\n` + l + " | " + dh("", i.column - 1, " ") + dh("", f, "^");\n    } else\n      e += `\n at ` + a;\n  }\n  return e;\n};\nBs.buildMessage = function(t, e) {\n  var n = {\n    literal: function(c) {\n      return \'"\' + i(c.text) + \'"\';\n    },\n    class: function(c) {\n      var h = c.parts.map(function(f) {\n        return Array.isArray(f) ? s(f[0]) + "-" + s(f[1]) : s(f);\n      });\n      return "[" + (c.inverted ? "^" : "") + h.join("") + "]";\n    },\n    any: function() {\n      return "any character";\n    },\n    end: function() {\n      return "end of input";\n    },\n    other: function(c) {\n      return c.description;\n    }\n  };\n  function r(c) {\n    return c.charCodeAt(0).toString(16).toUpperCase();\n  }\n  function i(c) {\n    return c.replace(/\\\\/g, "\\\\\\\\").replace(/"/g, \'\\\\"\').replace(/\\0/g, "\\\\0").replace(/\\t/g, "\\\\t").replace(/\\n/g, "\\\\n").replace(/\\r/g, "\\\\r").replace(/[\\x00-\\x0F]/g, function(h) {\n      return "\\\\x0" + r(h);\n    }).replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(h) {\n      return "\\\\x" + r(h);\n    });\n  }\n  function s(c) {\n    return c.replace(/\\\\/g, "\\\\\\\\").replace(/\\]/g, "\\\\]").replace(/\\^/g, "\\\\^").replace(/-/g, "\\\\-").replace(/\\0/g, "\\\\0").replace(/\\t/g, "\\\\t").replace(/\\n/g, "\\\\n").replace(/\\r/g, "\\\\r").replace(/[\\x00-\\x0F]/g, function(h) {\n      return "\\\\x0" + r(h);\n    }).replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(h) {\n      return "\\\\x" + r(h);\n    });\n  }\n  function a(c) {\n    return n[c.type](c);\n  }\n  function o(c) {\n    var h = c.map(a), f, m;\n    if (h.sort(), h.length > 0) {\n      for (f = 1, m = 1; f < h.length; f++)\n        h[f - 1] !== h[f] && (h[m] = h[f], m++);\n      h.length = m;\n    }\n    switch (h.length) {\n      case 1:\n        return h[0];\n      case 2:\n        return h[0] + " or " + h[1];\n      default:\n        return h.slice(0, -1).join(", ") + ", or " + h[h.length - 1];\n    }\n  }\n  function l(c) {\n    return c ? \'"\' + i(c) + \'"\' : "end of input";\n  }\n  return "Expected " + o(t) + " but " + l(e) + " found.";\n};\nfunction zk(t, e) {\n  e = e !== void 0 ? e : {};\n  var n = {}, r = e.grammarSource, i = { start: Is }, s = Is, a = ".", o = "-", l = "0", c = ",", h = "|", f = "[", m = "]", y = "{", v = "}", C = "%", S = "<", M = ">", $ = "!", U = "(", R = ")", B = "/", Z = "*", N = "?", q = ":", se = "..", K = "^", ce = "struct", H = "target", ie = "euclid", fe = "slow", De = "rotL", Ee = "rotR", re = "fast", Ce = "scale", Le = "//", xe = "cat", je = "$", he = "setcps", Pe = "setbpm", Pt = "hush", ut = /^[1-9]/, We = /^[eE]/, Mt = /^[+\\-]/, He = /^[0-9]/, xt = /^[ \\n\\r\\t\\xA0]/, Bn = /^["\']/, fn = /^[#\\--.0-9A-Z\\^-_a-z~\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376-\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E-\\u066F\\u0671-\\u06D3\\u06D5\\u06E5-\\u06E6\\u06EE-\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4-\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F-\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC-\\u09DD\\u09DF-\\u09E1\\u09F0-\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F-\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32-\\u0A33\\u0A35-\\u0A36\\u0A38-\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2-\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0-\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F-\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32-\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C-\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99-\\u0B9A\\u0B9C\\u0B9E-\\u0B9F\\u0BA3-\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60-\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0-\\u0CE1\\u0CF1-\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32-\\u0E33\\u0E40-\\u0E46\\u0E81-\\u0E82\\u0E84\\u0E87-\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA-\\u0EAB\\u0EAD-\\u0EB0\\u0EB2-\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065-\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE-\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5-\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEF\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7B9\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD-\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5-\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40-\\uFB41\\uFB43-\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/, yt = /^[@_]/, kt = /^[^\\n]/, Ot = Na("number"), Xt = rt(".", !1), er = $r([["1", "9"]], !1, !1), tr = $r(["e", "E"], !1, !1), dr = $r(["+", "-"], !1, !1), Mn = rt("-", !1), zt = rt("0", !1), _r = $r([["0", "9"]], !1, !1), nr = Na("whitespace"), bn = $r([" ", `\n`, "\\r", "\t", " "], !1, !1), Yr = rt(",", !1), qe = rt("|", !1), Qt = $r([\'"\', "\'"], !1, !1), Se = Na(\'a letter, a number, "-", "#", ".", "^", "_"\'), wt = $r(["#", ["-", "."], ["0", "9"], ["A", "Z"], ["^", "_"], ["a", "z"], "~", "ª", "µ", "º", ["À", "Ö"], ["Ø", "ö"], ["ø", "ˁ"], ["ˆ", "ˑ"], ["ˠ", "ˤ"], "ˬ", "ˮ", ["Ͱ", "ʹ"], ["Ͷ", "ͷ"], ["ͺ", "ͽ"], "Ϳ", "Ά", ["Έ", "Ί"], "Ό", ["Ύ", "Ρ"], ["Σ", "ϵ"], ["Ϸ", "ҁ"], ["Ҋ", "ԯ"], ["Ա", "Ֆ"], "ՙ", ["ՠ", "ֈ"], ["א", "ת"], ["ׯ", "ײ"], ["ؠ", "ي"], ["ٮ", "ٯ"], ["ٱ", "ۓ"], "ە", ["ۥ", "ۦ"], ["ۮ", "ۯ"], ["ۺ", "ۼ"], "ۿ", "ܐ", ["ܒ", "ܯ"], ["ݍ", "ޥ"], "ޱ", ["ߊ", "ߪ"], ["ߴ", "ߵ"], "ߺ", ["ࠀ", "ࠕ"], "ࠚ", "ࠤ", "ࠨ", ["ࡀ", "ࡘ"], ["ࡠ", "ࡪ"], ["ࢠ", "ࢴ"], ["ࢶ", "ࢽ"], ["ऄ", "ह"], "ऽ", "ॐ", ["क़", "ॡ"], ["ॱ", "ঀ"], ["অ", "ঌ"], ["এ", "ঐ"], ["ও", "ন"], ["প", "র"], "ল", ["শ", "হ"], "ঽ", "ৎ", ["ড়", "ঢ়"], ["য়", "ৡ"], ["ৰ", "ৱ"], "ৼ", ["ਅ", "ਊ"], ["ਏ", "ਐ"], ["ਓ", "ਨ"], ["ਪ", "ਰ"], ["ਲ", "ਲ਼"], ["ਵ", "ਸ਼"], ["ਸ", "ਹ"], ["ਖ਼", "ੜ"], "ਫ਼", ["ੲ", "ੴ"], ["અ", "ઍ"], ["એ", "ઑ"], ["ઓ", "ન"], ["પ", "ર"], ["લ", "ળ"], ["વ", "હ"], "ઽ", "ૐ", ["ૠ", "ૡ"], "ૹ", ["ଅ", "ଌ"], ["ଏ", "ଐ"], ["ଓ", "ନ"], ["ପ", "ର"], ["ଲ", "ଳ"], ["ଵ", "ହ"], "ଽ", ["ଡ଼", "ଢ଼"], ["ୟ", "ୡ"], "ୱ", "ஃ", ["அ", "ஊ"], ["எ", "ஐ"], ["ஒ", "க"], ["ங", "ச"], "ஜ", ["ஞ", "ட"], ["ண", "த"], ["ந", "ப"], ["ம", "ஹ"], "ௐ", ["అ", "ఌ"], ["ఎ", "ఐ"], ["ఒ", "న"], ["ప", "హ"], "ఽ", ["ౘ", "ౚ"], ["ౠ", "ౡ"], "ಀ", ["ಅ", "ಌ"], ["ಎ", "ಐ"], ["ಒ", "ನ"], ["ಪ", "ಳ"], ["ವ", "ಹ"], "ಽ", "ೞ", ["ೠ", "ೡ"], ["ೱ", "ೲ"], ["അ", "ഌ"], ["എ", "ഐ"], ["ഒ", "ഺ"], "ഽ", "ൎ", ["ൔ", "ൖ"], ["ൟ", "ൡ"], ["ൺ", "ൿ"], ["අ", "ඖ"], ["ක", "න"], ["ඳ", "ර"], "ල", ["ව", "ෆ"], ["ก", "ะ"], ["า", "ำ"], ["เ", "ๆ"], ["ກ", "ຂ"], "ຄ", ["ງ", "ຈ"], "ຊ", "ຍ", ["ດ", "ທ"], ["ນ", "ຟ"], ["ມ", "ຣ"], "ລ", "ວ", ["ສ", "ຫ"], ["ອ", "ະ"], ["າ", "ຳ"], "ຽ", ["ເ", "ໄ"], "ໆ", ["ໜ", "ໟ"], "ༀ", ["ཀ", "ཇ"], ["ཉ", "ཬ"], ["ྈ", "ྌ"], ["က", "ဪ"], "ဿ", ["ၐ", "ၕ"], ["ၚ", "ၝ"], "ၡ", ["ၥ", "ၦ"], ["ၮ", "ၰ"], ["ၵ", "ႁ"], "ႎ", ["Ⴀ", "Ⴥ"], "Ⴧ", "Ⴭ", ["ა", "ჺ"], ["ჼ", "ቈ"], ["ቊ", "ቍ"], ["ቐ", "ቖ"], "ቘ", ["ቚ", "ቝ"], ["በ", "ኈ"], ["ኊ", "ኍ"], ["ነ", "ኰ"], ["ኲ", "ኵ"], ["ኸ", "ኾ"], "ዀ", ["ዂ", "ዅ"], ["ወ", "ዖ"], ["ዘ", "ጐ"], ["ጒ", "ጕ"], ["ጘ", "ፚ"], ["ᎀ", "ᎏ"], ["Ꭰ", "Ᏽ"], ["ᏸ", "ᏽ"], ["ᐁ", "ᙬ"], ["ᙯ", "ᙿ"], ["ᚁ", "ᚚ"], ["ᚠ", "ᛪ"], ["ᛮ", "ᛸ"], ["ᜀ", "ᜌ"], ["ᜎ", "ᜑ"], ["ᜠ", "ᜱ"], ["ᝀ", "ᝑ"], ["ᝠ", "ᝬ"], ["ᝮ", "ᝰ"], ["ក", "ឳ"], "ៗ", "ៜ", ["ᠠ", "ᡸ"], ["ᢀ", "ᢄ"], ["ᢇ", "ᢨ"], "ᢪ", ["ᢰ", "ᣵ"], ["ᤀ", "ᤞ"], ["ᥐ", "ᥭ"], ["ᥰ", "ᥴ"], ["ᦀ", "ᦫ"], ["ᦰ", "ᧉ"], ["ᨀ", "ᨖ"], ["ᨠ", "ᩔ"], "ᪧ", ["ᬅ", "ᬳ"], ["ᭅ", "ᭋ"], ["ᮃ", "ᮠ"], ["ᮮ", "ᮯ"], ["ᮺ", "ᯥ"], ["ᰀ", "ᰣ"], ["ᱍ", "ᱏ"], ["ᱚ", "ᱽ"], ["ᲀ", "ᲈ"], ["Ა", "Ჺ"], ["Ჽ", "Ჿ"], ["ᳩ", "ᳬ"], ["ᳮ", "ᳱ"], ["ᳵ", "ᳶ"], ["ᴀ", "ᶿ"], ["Ḁ", "ἕ"], ["Ἐ", "Ἕ"], ["ἠ", "ὅ"], ["Ὀ", "Ὅ"], ["ὐ", "ὗ"], "Ὑ", "Ὓ", "Ὕ", ["Ὗ", "ώ"], ["ᾀ", "ᾴ"], ["ᾶ", "ᾼ"], "ι", ["ῂ", "ῄ"], ["ῆ", "ῌ"], ["ῐ", "ΐ"], ["ῖ", "Ί"], ["ῠ", "Ῥ"], ["ῲ", "ῴ"], ["ῶ", "ῼ"], "ⁱ", "ⁿ", ["ₐ", "ₜ"], "ℂ", "ℇ", ["ℊ", "ℓ"], "ℕ", ["ℙ", "ℝ"], "ℤ", "Ω", "ℨ", ["K", "ℭ"], ["ℯ", "ℹ"], ["ℼ", "ℿ"], ["ⅅ", "ⅉ"], "ⅎ", ["Ⅰ", "ↈ"], ["Ⰰ", "Ⱞ"], ["ⰰ", "ⱞ"], ["Ⱡ", "ⳤ"], ["Ⳬ", "ⳮ"], ["Ⳳ", "ⳳ"], ["ⴀ", "ⴥ"], "ⴧ", "ⴭ", ["ⴰ", "ⵧ"], "ⵯ", ["ⶀ", "ⶖ"], ["ⶠ", "ⶦ"], ["ⶨ", "ⶮ"], ["ⶰ", "ⶶ"], ["ⶸ", "ⶾ"], ["ⷀ", "ⷆ"], ["ⷈ", "ⷎ"], ["ⷐ", "ⷖ"], ["ⷘ", "ⷞ"], "ⸯ", ["々", "〇"], ["〡", "〩"], ["〱", "〵"], ["〸", "〼"], ["ぁ", "ゖ"], ["ゝ", "ゟ"], ["ァ", "ヺ"], ["ー", "ヿ"], ["ㄅ", "ㄯ"], ["ㄱ", "ㆎ"], ["ㆠ", "ㆺ"], ["ㇰ", "ㇿ"], ["㐀", "䶵"], ["一", "鿯"], ["ꀀ", "ꒌ"], ["ꓐ", "ꓽ"], ["ꔀ", "ꘌ"], ["ꘐ", "ꘟ"], ["ꘪ", "ꘫ"], ["Ꙁ", "ꙮ"], ["ꙿ", "ꚝ"], ["ꚠ", "ꛯ"], ["ꜗ", "ꜟ"], ["Ꜣ", "ꞈ"], ["Ꞌ", "ꞹ"], ["ꟷ", "ꠁ"], ["ꠃ", "ꠅ"], ["ꠇ", "ꠊ"], ["ꠌ", "ꠢ"], ["ꡀ", "ꡳ"], ["ꢂ", "ꢳ"], ["ꣲ", "ꣷ"], "ꣻ", ["ꣽ", "ꣾ"], ["ꤊ", "ꤥ"], ["ꤰ", "ꥆ"], ["ꥠ", "ꥼ"], ["ꦄ", "ꦲ"], "ꧏ", ["ꧠ", "ꧤ"], ["ꧦ", "ꧯ"], ["ꧺ", "ꧾ"], ["ꨀ", "ꨨ"], ["ꩀ", "ꩂ"], ["ꩄ", "ꩋ"], ["ꩠ", "ꩶ"], "ꩺ", ["ꩾ", "ꪯ"], "ꪱ", ["ꪵ", "ꪶ"], ["ꪹ", "ꪽ"], "ꫀ", "ꫂ", ["ꫛ", "ꫝ"], ["ꫠ", "ꫪ"], ["ꫲ", "ꫴ"], ["ꬁ", "ꬆ"], ["ꬉ", "ꬎ"], ["ꬑ", "ꬖ"], ["ꬠ", "ꬦ"], ["ꬨ", "ꬮ"], ["ꬰ", "ꭚ"], ["ꭜ", "ꭥ"], ["ꭰ", "ꯢ"], ["가", "힣"], ["ힰ", "ퟆ"], ["ퟋ", "ퟻ"], ["豈", "舘"], ["並", "龎"], ["ﬀ", "ﬆ"], ["ﬓ", "ﬗ"], "יִ", ["ײַ", "ﬨ"], ["שׁ", "זּ"], ["טּ", "לּ"], "מּ", ["נּ", "סּ"], ["ףּ", "פּ"], ["צּ", "ﮱ"], ["ﯓ", "ﴽ"], ["ﵐ", "ﶏ"], ["ﶒ", "ﷇ"], ["ﷰ", "ﷻ"], ["ﹰ", "ﹴ"], ["ﹶ", "ﻼ"], ["Ａ", "Ｚ"], ["ａ", "ｚ"], ["ｦ", "ﾾ"], ["ￂ", "ￇ"], ["ￊ", "ￏ"], ["ￒ", "ￗ"], ["ￚ", "ￜ"]], !1, !1), Xe = rt("[", !1), Kr = rt("]", !1), cs = rt("{", !1), Cn = rt("}", !1), $n = rt("%", !1), Ye = rt("<", !1), Re = rt(">", !1), ft = $r(["@", "_"], !1, !1), It = rt("!", !1), ct = rt("(", !1), Wt = rt(")", !1), vt = rt("/", !1), ze = rt("*", !1), Ln = rt("?", !1), Sn = rt(":", !1), yn = rt("..", !1), O = rt("^", !1), D = rt("struct", !1), A = rt("target", !1), P = rt("euclid", !1), _ = rt("slow", !1), J = rt("rotL", !1), ae = rt("rotR", !1), pe = rt("fast", !1), ge = rt("scale", !1), Je = rt("//", !1), Rt = $r([`\n`], !0, !1), Ht = rt("cat", !1), mr = rt("$", !1), $s = rt("setcps", !1), hs = rt("setbpm", !1), Qn = rt("hush", !1), Wc = function() {\n    return parseFloat(ei());\n  }, nl = function(k) {\n    const T = k.join("");\n    return T === "." || T === "_";\n  }, Uc = function(k) {\n    return new aP(k.join(""));\n  }, rl = function(k) {\n    return k;\n  }, qc = function(k, T) {\n    return k.arguments_.stepsPerCycle = T, k;\n  }, il = function(k) {\n    return k;\n  }, $a = function(k) {\n    return k.arguments_.alignment = "polymeter_slowcat", k;\n  }, Gc = function(k) {\n    return (T) => T.options_.weight = (T.options_.weight ?? 1) + (k ?? 2) - 1;\n  }, Zr = function(k) {\n    return (T) => {\n      const I = (T.options_.reps ?? 1) + (k ?? 2) - 1;\n      T.options_.reps = I, T.options_.ops = T.options_.ops.filter((oe) => oe.type_ !== "replicate"), T.options_.ops.push({ type_: "replicate", arguments_: { amount: I } }), T.options_.weight = I;\n    };\n  }, zc = function(k, T, I) {\n    return (oe) => oe.options_.ops.push({ type_: "bjorklund", arguments_: { pulse: k, step: T, rotation: I } });\n  }, sl = function(k) {\n    return (T) => T.options_.ops.push({ type_: "stretch", arguments_: { amount: k, type: "slow" } });\n  }, al = function(k) {\n    return (T) => T.options_.ops.push({ type_: "stretch", arguments_: { amount: k, type: "fast" } });\n  }, Hc = function(k) {\n    return (T) => T.options_.ops.push({ type_: "degradeBy", arguments_: { amount: k, seed: fh++ } });\n  }, ol = function(k) {\n    return (T) => T.options_.ops.push({ type_: "tail", arguments_: { element: k } });\n  }, Yc = function(k) {\n    return (T) => T.options_.ops.push({ type_: "range", arguments_: { element: k } });\n  }, Kc = function(k, T) {\n    const I = new lP(k, { ops: [], weight: 1, reps: 1 });\n    for (const oe of T)\n      oe(I);\n    return I;\n  }, rr = function(k, T) {\n    return new xl(T, "fastcat", void 0, !!k);\n  }, Jc = function(k) {\n    return { alignment: "stack", list: k };\n  }, eh = function(k) {\n    return { alignment: "rand", list: k, seed: fh++ };\n  }, ll = function(k) {\n    return { alignment: "feet", list: k, seed: fh++ };\n  }, ul = function(k, T) {\n    return T && T.list.length > 0 ? new xl([k, ...T.list], T.alignment, T.seed) : k;\n  }, th = function(k, T) {\n    return new xl(T ? [k, ...T.list] : [k], "polymeter");\n  }, cl = function(k) {\n    return k;\n  }, nh = function(k) {\n    return { name: "struct", args: { mini: k } };\n  }, hl = function(k) {\n    return { name: "target", args: { name: k } };\n  }, rh = function(k, T, I) {\n    return { name: "bjorklund", args: { pulse: k, step: parseInt(T) } };\n  }, ih = function(k) {\n    return { name: "stretch", args: { amount: k } };\n  }, Jr = function(k) {\n    return { name: "shift", args: { amount: "-" + k } };\n  }, gt = function(k) {\n    return { name: "shift", args: { amount: k } };\n  }, sh = function(k) {\n    return { name: "stretch", args: { amount: "1/" + k } };\n  }, ps = function(k) {\n    return { name: "scale", args: { scale: k.join("") } };\n  }, pl = function(k, T) {\n    return T;\n  }, fs = function(k, T) {\n    return T.unshift(k), new xl(T, "slowcat");\n  }, ah = function(k) {\n    return k;\n  }, ds = function(k, T) {\n    return new oP(k.name, k.args, T);\n  }, fl = function(k) {\n    return k;\n  }, dl = function(k) {\n    return k;\n  }, oh = function(k) {\n    return new ph("setcps", { value: k });\n  }, La = function(k) {\n    return new ph("setcps", { value: k / 120 / 2 });\n  }, lh = function() {\n    return new ph("hush");\n  }, L = e.peg$currPos | 0, Ne = L, xi = [{ line: 1, column: 1 }], ir = L, ms = e.peg$maxFailExpected || [], we = e.peg$silentFails | 0, gs;\n  if (e.startRule) {\n    if (!(e.startRule in i))\n      throw new Error(`Can\'t start parsing from rule "` + e.startRule + \'".\');\n    s = i[e.startRule];\n  }\n  function ei() {\n    return t.substring(Ne, L);\n  }\n  function Ia() {\n    return Ls(Ne, L);\n  }\n  function rt(k, T) {\n    return { type: "literal", text: k, ignoreCase: T };\n  }\n  function $r(k, T, I) {\n    return { type: "class", parts: k, inverted: T, ignoreCase: I };\n  }\n  function uh() {\n    return { type: "end" };\n  }\n  function Na(k) {\n    return { type: "other", description: k };\n  }\n  function ml(k) {\n    var T = xi[k], I;\n    if (T)\n      return T;\n    if (k >= xi.length)\n      I = xi.length - 1;\n    else\n      for (I = k; !xi[--I]; )\n        ;\n    for (T = xi[I], T = {\n      line: T.line,\n      column: T.column\n    }; I < k; )\n      t.charCodeAt(I) === 10 ? (T.line++, T.column = 1) : T.column++, I++;\n    return xi[k] = T, T;\n  }\n  function Ls(k, T, I) {\n    var oe = ml(k), Qe = ml(T), Zt = {\n      source: r,\n      start: {\n        offset: k,\n        line: oe.line,\n        column: oe.column\n      },\n      end: {\n        offset: T,\n        line: Qe.line,\n        column: Qe.column\n      }\n    };\n    return Zt;\n  }\n  function _e(k) {\n    L < ir || (L > ir && (ir = L, ms = []), ms.push(k));\n  }\n  function gl(k, T, I) {\n    return new Bs(\n      Bs.buildMessage(k, T),\n      k,\n      T,\n      I\n    );\n  }\n  function Is() {\n    var k;\n    return k = sP(), k;\n  }\n  function gr() {\n    var k, T;\n    return we++, k = L, d(), T = p(), T !== n ? (ch(), Va(), Ne = k, k = Wc()) : (L = k, k = n), we--, k === n && we === 0 && _e(Ot), k;\n  }\n  function bl() {\n    var k;\n    return t.charCodeAt(L) === 46 ? (k = a, L++) : (k = n, we === 0 && _e(Xt)), k;\n  }\n  function yl() {\n    var k;\n    return k = t.charAt(L), ut.test(k) ? L++ : (k = n, we === 0 && _e(er)), k;\n  }\n  function Ol() {\n    var k;\n    return k = t.charAt(L), We.test(k) ? L++ : (k = n, we === 0 && _e(tr)), k;\n  }\n  function Va() {\n    var k, T, I, oe, Qe;\n    if (k = L, T = Ol(), T !== n) {\n      if (I = t.charAt(L), Mt.test(I) ? L++ : (I = n, we === 0 && _e(dr)), I === n && (I = null), oe = [], Qe = b(), Qe !== n)\n        for (; Qe !== n; )\n          oe.push(Qe), Qe = b();\n      else\n        oe = n;\n      oe !== n ? (T = [T, I, oe], k = T) : (L = k, k = n);\n    } else\n      L = k, k = n;\n    return k;\n  }\n  function ch() {\n    var k, T, I, oe;\n    if (k = L, T = bl(), T !== n) {\n      if (I = [], oe = b(), oe !== n)\n        for (; oe !== n; )\n          I.push(oe), oe = b();\n      else\n        I = n;\n      I !== n ? (T = [T, I], k = T) : (L = k, k = n);\n    } else\n      L = k, k = n;\n    return k;\n  }\n  function p() {\n    var k, T, I, oe;\n    if (k = g(), k === n)\n      if (k = L, T = yl(), T !== n) {\n        for (I = [], oe = b(); oe !== n; )\n          I.push(oe), oe = b();\n        T = [T, I], k = T;\n      } else\n        L = k, k = n;\n    return k;\n  }\n  function d() {\n    var k;\n    return t.charCodeAt(L) === 45 ? (k = o, L++) : (k = n, we === 0 && _e(Mn)), k;\n  }\n  function g() {\n    var k;\n    return t.charCodeAt(L) === 48 ? (k = l, L++) : (k = n, we === 0 && _e(zt)), k;\n  }\n  function b() {\n    var k;\n    return k = t.charAt(L), He.test(k) ? L++ : (k = n, we === 0 && _e(_r)), k;\n  }\n  function x() {\n    var k, T;\n    for (we++, k = [], T = t.charAt(L), xt.test(T) ? L++ : (T = n, we === 0 && _e(bn)); T !== n; )\n      k.push(T), T = t.charAt(L), xt.test(T) ? L++ : (T = n, we === 0 && _e(bn));\n    return we--, T = n, we === 0 && _e(nr), k;\n  }\n  function w() {\n    var k, T, I, oe;\n    return k = L, T = x(), t.charCodeAt(L) === 44 ? (I = c, L++) : (I = n, we === 0 && _e(Yr)), I !== n ? (oe = x(), T = [T, I, oe], k = T) : (L = k, k = n), k;\n  }\n  function E() {\n    var k, T, I, oe;\n    return k = L, T = x(), t.charCodeAt(L) === 124 ? (I = h, L++) : (I = n, we === 0 && _e(qe)), I !== n ? (oe = x(), T = [T, I, oe], k = T) : (L = k, k = n), k;\n  }\n  function Q() {\n    var k, T, I, oe;\n    return k = L, T = x(), t.charCodeAt(L) === 46 ? (I = a, L++) : (I = n, we === 0 && _e(Xt)), I !== n ? (oe = x(), T = [T, I, oe], k = T) : (L = k, k = n), k;\n  }\n  function j() {\n    var k;\n    return k = t.charAt(L), Bn.test(k) ? L++ : (k = n, we === 0 && _e(Qt)), k;\n  }\n  function V() {\n    var k;\n    return we++, k = t.charAt(L), fn.test(k) ? L++ : (k = n, we === 0 && _e(wt)), we--, k === n && we === 0 && _e(Se), k;\n  }\n  function X() {\n    var k, T, I, oe;\n    if (k = L, x(), T = [], I = V(), I !== n)\n      for (; I !== n; )\n        T.push(I), I = V();\n    else\n      T = n;\n    return T !== n ? (I = x(), Ne = L, oe = nl(T), oe ? oe = n : oe = void 0, oe !== n ? (Ne = k, k = Uc(T)) : (L = k, k = n)) : (L = k, k = n), k;\n  }\n  function Y() {\n    var k, T, I, oe;\n    return k = L, x(), t.charCodeAt(L) === 91 ? (T = f, L++) : (T = n, we === 0 && _e(Xe)), T !== n ? (x(), I = Ns(), I !== n ? (x(), t.charCodeAt(L) === 93 ? (oe = m, L++) : (oe = n, we === 0 && _e(Kr)), oe !== n ? (x(), Ne = k, k = rl(I)) : (L = k, k = n)) : (L = k, k = n)) : (L = k, k = n), k;\n  }\n  function ee() {\n    var k, T, I, oe, Qe;\n    return k = L, x(), t.charCodeAt(L) === 123 ? (T = y, L++) : (T = n, we === 0 && _e(cs)), T !== n ? (x(), I = vl(), I !== n ? (x(), t.charCodeAt(L) === 125 ? (oe = v, L++) : (oe = n, we === 0 && _e(Cn)), oe !== n ? (Qe = z(), Qe === n && (Qe = null), x(), Ne = k, k = qc(I, Qe)) : (L = k, k = n)) : (L = k, k = n)) : (L = k, k = n), k;\n  }\n  function z() {\n    var k, T, I;\n    return k = L, t.charCodeAt(L) === 37 ? (T = C, L++) : (T = n, we === 0 && _e($n)), T !== n ? (I = te(), I !== n ? (Ne = k, k = il(I)) : (L = k, k = n)) : (L = k, k = n), k;\n  }\n  function G() {\n    var k, T, I, oe;\n    return k = L, x(), t.charCodeAt(L) === 60 ? (T = S, L++) : (T = n, we === 0 && _e(Ye)), T !== n ? (x(), I = vl(), I !== n ? (x(), t.charCodeAt(L) === 62 ? (oe = M, L++) : (oe = n, we === 0 && _e(Re)), oe !== n ? (x(), Ne = k, k = $a(I)) : (L = k, k = n)) : (L = k, k = n)) : (L = k, k = n), k;\n  }\n  function te() {\n    var k;\n    return k = X(), k === n && (k = Y(), k === n && (k = ee(), k === n && (k = G()))), k;\n  }\n  function ue() {\n    var k;\n    return k = $e(), k === n && (k = Ve(), k === n && (k = bt(), k === n && (k = dn(), k === n && (k = Be(), k === n && (k = Ut(), k === n && (k = on(), k === n && (k = it()))))))), k;\n  }\n  function $e() {\n    var k, T, I;\n    return k = L, x(), T = t.charAt(L), yt.test(T) ? L++ : (T = n, we === 0 && _e(ft)), T !== n ? (I = gr(), I === n && (I = null), Ne = k, k = Gc(I)) : (L = k, k = n), k;\n  }\n  function Be() {\n    var k, T, I;\n    return k = L, x(), t.charCodeAt(L) === 33 ? (T = $, L++) : (T = n, we === 0 && _e(It)), T !== n ? (I = gr(), I === n && (I = null), Ne = k, k = Zr(I)) : (L = k, k = n), k;\n  }\n  function Ve() {\n    var k, T, I, oe, Qe, Zt, Lr;\n    return k = L, t.charCodeAt(L) === 40 ? (T = U, L++) : (T = n, we === 0 && _e(ct)), T !== n ? (x(), I = et(), I !== n ? (x(), oe = w(), oe !== n ? (x(), Qe = et(), Qe !== n ? (x(), w(), x(), Zt = et(), Zt === n && (Zt = null), x(), t.charCodeAt(L) === 41 ? (Lr = R, L++) : (Lr = n, we === 0 && _e(Wt)), Lr !== n ? (Ne = k, k = zc(I, Qe, Zt)) : (L = k, k = n)) : (L = k, k = n)) : (L = k, k = n)) : (L = k, k = n)) : (L = k, k = n), k;\n  }\n  function bt() {\n    var k, T, I;\n    return k = L, t.charCodeAt(L) === 47 ? (T = B, L++) : (T = n, we === 0 && _e(vt)), T !== n ? (I = te(), I !== n ? (Ne = k, k = sl(I)) : (L = k, k = n)) : (L = k, k = n), k;\n  }\n  function dn() {\n    var k, T, I;\n    return k = L, t.charCodeAt(L) === 42 ? (T = Z, L++) : (T = n, we === 0 && _e(ze)), T !== n ? (I = te(), I !== n ? (Ne = k, k = al(I)) : (L = k, k = n)) : (L = k, k = n), k;\n  }\n  function Ut() {\n    var k, T, I;\n    return k = L, t.charCodeAt(L) === 63 ? (T = N, L++) : (T = n, we === 0 && _e(Ln)), T !== n ? (I = gr(), I === n && (I = null), Ne = k, k = Hc(I)) : (L = k, k = n), k;\n  }\n  function on() {\n    var k, T, I;\n    return k = L, t.charCodeAt(L) === 58 ? (T = q, L++) : (T = n, we === 0 && _e(Sn)), T !== n ? (I = te(), I !== n ? (Ne = k, k = ol(I)) : (L = k, k = n)) : (L = k, k = n), k;\n  }\n  function it() {\n    var k, T, I;\n    return k = L, t.substr(L, 2) === se ? (T = se, L += 2) : (T = n, we === 0 && _e(yn)), T !== n ? (I = te(), I !== n ? (Ne = k, k = Yc(I)) : (L = k, k = n)) : (L = k, k = n), k;\n  }\n  function et() {\n    var k, T, I, oe;\n    if (k = L, T = te(), T !== n) {\n      for (I = [], oe = ue(); oe !== n; )\n        I.push(oe), oe = ue();\n      Ne = k, k = Kc(T, I);\n    } else\n      L = k, k = n;\n    return k;\n  }\n  function _t() {\n    var k, T, I, oe;\n    if (k = L, t.charCodeAt(L) === 94 ? (T = K, L++) : (T = n, we === 0 && _e(O)), T === n && (T = null), I = [], oe = et(), oe !== n)\n      for (; oe !== n; )\n        I.push(oe), oe = et();\n    else\n      I = n;\n    return I !== n ? (Ne = k, k = rr(T, I)) : (L = k, k = n), k;\n  }\n  function Yt() {\n    var k, T, I, oe, Qe;\n    if (k = L, T = [], I = L, oe = w(), oe !== n ? (Qe = _t(), Qe !== n ? I = Qe : (L = I, I = n)) : (L = I, I = n), I !== n)\n      for (; I !== n; )\n        T.push(I), I = L, oe = w(), oe !== n ? (Qe = _t(), Qe !== n ? I = Qe : (L = I, I = n)) : (L = I, I = n);\n    else\n      T = n;\n    return T !== n && (Ne = k, T = Jc(T)), k = T, k;\n  }\n  function Kt() {\n    var k, T, I, oe, Qe;\n    if (k = L, T = [], I = L, oe = E(), oe !== n ? (Qe = _t(), Qe !== n ? I = Qe : (L = I, I = n)) : (L = I, I = n), I !== n)\n      for (; I !== n; )\n        T.push(I), I = L, oe = E(), oe !== n ? (Qe = _t(), Qe !== n ? I = Qe : (L = I, I = n)) : (L = I, I = n);\n    else\n      T = n;\n    return T !== n && (Ne = k, T = eh(T)), k = T, k;\n  }\n  function br() {\n    var k, T, I, oe, Qe;\n    if (k = L, T = [], I = L, oe = Q(), oe !== n ? (Qe = _t(), Qe !== n ? I = Qe : (L = I, I = n)) : (L = I, I = n), I !== n)\n      for (; I !== n; )\n        T.push(I), I = L, oe = Q(), oe !== n ? (Qe = _t(), Qe !== n ? I = Qe : (L = I, I = n)) : (L = I, I = n);\n    else\n      T = n;\n    return T !== n && (Ne = k, T = ll(T)), k = T, k;\n  }\n  function Ns() {\n    var k, T, I;\n    return k = L, T = _t(), T !== n ? (I = Yt(), I === n && (I = Kt(), I === n && (I = br())), I === n && (I = null), Ne = k, k = ul(T, I)) : (L = k, k = n), k;\n  }\n  function vl() {\n    var k, T, I;\n    return k = L, T = _t(), T !== n ? (I = Yt(), I === n && (I = null), Ne = k, k = th(T, I)) : (L = k, k = n), k;\n  }\n  function Xa() {\n    var k, T, I, oe;\n    return k = L, x(), T = j(), T !== n ? (x(), I = Ns(), I !== n ? (x(), oe = j(), oe !== n ? (Ne = k, k = cl(I)) : (L = k, k = n)) : (L = k, k = n)) : (L = k, k = n), k;\n  }\n  function ND() {\n    var k;\n    return k = HD(), k === n && (k = UD(), k === n && (k = zD(), k === n && (k = XD(), k === n && (k = WD(), k === n && (k = VD(), k === n && (k = GD(), k === n && (k = qD()))))))), k;\n  }\n  function VD() {\n    var k, T, I;\n    return k = L, t.substr(L, 6) === ce ? (T = ce, L += 6) : (T = n, we === 0 && _e(D)), T !== n ? (x(), I = Vs(), I !== n ? (Ne = k, k = nh(I)) : (L = k, k = n)) : (L = k, k = n), k;\n  }\n  function XD() {\n    var k, T, I, oe, Qe;\n    return k = L, t.substr(L, 6) === H ? (T = H, L += 6) : (T = n, we === 0 && _e(A)), T !== n ? (x(), I = j(), I !== n ? (oe = X(), oe !== n ? (Qe = j(), Qe !== n ? (Ne = k, k = hl(oe)) : (L = k, k = n)) : (L = k, k = n)) : (L = k, k = n)) : (L = k, k = n), k;\n  }\n  function WD() {\n    var k, T, I, oe;\n    return k = L, t.substr(L, 6) === ie ? (T = ie, L += 6) : (T = n, we === 0 && _e(P)), T !== n ? (x(), I = p(), I !== n ? (x(), oe = p(), oe !== n ? (x(), p(), Ne = k, k = rh(I, oe)) : (L = k, k = n)) : (L = k, k = n)) : (L = k, k = n), k;\n  }\n  function UD() {\n    var k, T, I;\n    return k = L, t.substr(L, 4) === fe ? (T = fe, L += 4) : (T = n, we === 0 && _e(_)), T !== n ? (x(), I = gr(), I !== n ? (Ne = k, k = ih(I)) : (L = k, k = n)) : (L = k, k = n), k;\n  }\n  function qD() {\n    var k, T, I;\n    return k = L, t.substr(L, 4) === De ? (T = De, L += 4) : (T = n, we === 0 && _e(J)), T !== n ? (x(), I = gr(), I !== n ? (Ne = k, k = Jr(I)) : (L = k, k = n)) : (L = k, k = n), k;\n  }\n  function GD() {\n    var k, T, I;\n    return k = L, t.substr(L, 4) === Ee ? (T = Ee, L += 4) : (T = n, we === 0 && _e(ae)), T !== n ? (x(), I = gr(), I !== n ? (Ne = k, k = gt(I)) : (L = k, k = n)) : (L = k, k = n), k;\n  }\n  function zD() {\n    var k, T, I;\n    return k = L, t.substr(L, 4) === re ? (T = re, L += 4) : (T = n, we === 0 && _e(pe)), T !== n ? (x(), I = gr(), I !== n ? (Ne = k, k = sh(I)) : (L = k, k = n)) : (L = k, k = n), k;\n  }\n  function HD() {\n    var k, T, I, oe, Qe;\n    if (k = L, t.substr(L, 5) === Ce ? (T = Ce, L += 5) : (T = n, we === 0 && _e(ge)), T !== n)\n      if (x(), I = j(), I !== n) {\n        if (oe = [], Qe = V(), Qe !== n)\n          for (; Qe !== n; )\n            oe.push(Qe), Qe = V();\n        else\n          oe = n;\n        oe !== n ? (Qe = j(), Qe !== n ? (Ne = k, k = ps(oe)) : (L = k, k = n)) : (L = k, k = n);\n      } else\n        L = k, k = n;\n    else\n      L = k, k = n;\n    return k;\n  }\n  function hh() {\n    var k, T, I, oe;\n    if (k = L, t.substr(L, 2) === Le ? (T = Le, L += 2) : (T = n, we === 0 && _e(Je)), T !== n) {\n      for (I = [], oe = t.charAt(L), kt.test(oe) ? L++ : (oe = n, we === 0 && _e(Rt)); oe !== n; )\n        I.push(oe), oe = t.charAt(L), kt.test(oe) ? L++ : (oe = n, we === 0 && _e(Rt));\n      T = [T, I], k = T;\n    } else\n      L = k, k = n;\n    return k;\n  }\n  function YD() {\n    var k, T, I, oe, Qe, Zt, Lr, Xs;\n    if (k = L, t.substr(L, 3) === xe ? (T = xe, L += 3) : (T = n, we === 0 && _e(Ht)), T !== n)\n      if (x(), t.charCodeAt(L) === 91 ? (I = f, L++) : (I = n, we === 0 && _e(Xe)), I !== n)\n        if (x(), oe = Vs(), oe !== n) {\n          for (Qe = [], Zt = L, Lr = w(), Lr !== n ? (Xs = Vs(), Xs !== n ? (Ne = Zt, Zt = pl(oe, Xs)) : (L = Zt, Zt = n)) : (L = Zt, Zt = n); Zt !== n; )\n            Qe.push(Zt), Zt = L, Lr = w(), Lr !== n ? (Xs = Vs(), Xs !== n ? (Ne = Zt, Zt = pl(oe, Xs)) : (L = Zt, Zt = n)) : (L = Zt, Zt = n);\n          Zt = x(), t.charCodeAt(L) === 93 ? (Lr = m, L++) : (Lr = n, we === 0 && _e(Kr)), Lr !== n ? (Ne = k, k = fs(oe, Qe)) : (L = k, k = n);\n        } else\n          L = k, k = n;\n      else\n        L = k, k = n;\n    else\n      L = k, k = n;\n    return k;\n  }\n  function KD() {\n    var k;\n    return k = YD(), k === n && (k = Xa()), k;\n  }\n  function Vs() {\n    var k, T, I, oe, Qe;\n    if (k = L, T = KD(), T !== n) {\n      for (x(), I = [], oe = hh(); oe !== n; )\n        I.push(oe), oe = hh();\n      Ne = k, k = ah(T);\n    } else\n      L = k, k = n;\n    return k === n && (k = L, T = ND(), T !== n ? (x(), t.charCodeAt(L) === 36 ? (I = je, L++) : (I = n, we === 0 && _e(mr)), I !== n ? (oe = x(), Qe = Vs(), Qe !== n ? (Ne = k, k = ds(T, Qe)) : (L = k, k = n)) : (L = k, k = n)) : (L = k, k = n)), k;\n  }\n  function JD() {\n    var k, T;\n    return k = L, T = Vs(), T !== n && (Ne = k, T = fl(T)), k = T, k === n && (k = hh()), k;\n  }\n  function eP() {\n    var k;\n    return k = JD(), k;\n  }\n  function tP() {\n    var k, T;\n    return k = L, x(), T = nP(), T === n && (T = rP(), T === n && (T = iP())), T !== n ? (x(), Ne = k, k = dl(T)) : (L = k, k = n), k;\n  }\n  function nP() {\n    var k, T, I;\n    return k = L, t.substr(L, 6) === he ? (T = he, L += 6) : (T = n, we === 0 && _e($s)), T !== n ? (x(), I = gr(), I !== n ? (Ne = k, k = oh(I)) : (L = k, k = n)) : (L = k, k = n), k;\n  }\n  function rP() {\n    var k, T, I;\n    return k = L, t.substr(L, 6) === Pe ? (T = Pe, L += 6) : (T = n, we === 0 && _e(hs)), T !== n ? (x(), I = gr(), I !== n ? (Ne = k, k = La(I)) : (L = k, k = n)) : (L = k, k = n), k;\n  }\n  function iP() {\n    var k, T;\n    return k = L, t.substr(L, 4) === Pt ? (T = Pt, L += 4) : (T = n, we === 0 && _e(Qn)), T !== n && (Ne = k, T = lh()), k = T, k;\n  }\n  function sP() {\n    var k;\n    return k = eP(), k === n && (k = tP()), k;\n  }\n  var aP = function(k) {\n    this.type_ = "atom", this.source_ = k, this.location_ = Ia();\n  }, xl = function(k, T, I, oe) {\n    this.type_ = "pattern", this.arguments_ = { alignment: T, _steps: oe }, I !== void 0 && (this.arguments_.seed = I), this.source_ = k;\n  }, oP = function(k, T, I) {\n    this.type_ = k, this.arguments_ = T, this.source_ = I;\n  }, lP = function(k, T) {\n    this.type_ = "element", this.source_ = k, this.options_ = T, this.location_ = Ia();\n  }, ph = function(k, T) {\n    this.type_ = "command", this.name_ = k, this.options_ = T;\n  }, fh = 0;\n  if (gs = s(), e.peg$library)\n    return (\n      /** @type {any} */\n      {\n        peg$result: gs,\n        peg$currPos: L,\n        peg$FAILED: n,\n        peg$maxFailExpected: ms,\n        peg$maxFailPos: ir\n      }\n    );\n  if (gs !== n && L === t.length)\n    return gs;\n  throw gs !== n && L < t.length && _e(uh()), gl(\n    ms,\n    ir < t.length ? t.charAt(ir) : null,\n    ir < t.length ? Ls(ir, ir + 1) : Ls(ir, ir)\n  );\n}\nconst JF = [\n  "start"\n], Hk = 3e-4, eB = (t, e) => (n, r) => {\n  const a = t.source_[r].options_?.ops, o = n.__steps_source;\n  if (a)\n    for (const l of a)\n      switch (l.type_) {\n        case "stretch": {\n          const c = ["fast", "slow"], { type: h, amount: f } = l.arguments_;\n          if (!c.includes(h))\n            throw new Error(`mini: stretch: type must be one of ${c.join("|")} but got ${h}`);\n          n = Oe(n)[h](e(f));\n          break;\n        }\n        case "replicate": {\n          const { amount: c } = l.arguments_;\n          n = Oe(n), n = n._repeatCycles(c)._fast(c);\n          break;\n        }\n        case "bjorklund": {\n          l.arguments_.rotation ? n = n.euclidRot(e(l.arguments_.pulse), e(l.arguments_.step), e(l.arguments_.rotation)) : n = n.euclid(e(l.arguments_.pulse), e(l.arguments_.step));\n          break;\n        }\n        case "degradeBy": {\n          n = Oe(n)._degradeByWith(Yn.early(Hk * l.arguments_.seed), l.arguments_.amount ?? 0.5);\n          break;\n        }\n        case "tail": {\n          const c = e(l.arguments_.element);\n          n = n.fmap((h) => (f) => Array.isArray(h) ? [...h, f] : [h, f]).appLeft(c);\n          break;\n        }\n        case "range": {\n          const c = e(l.arguments_.element);\n          n = Oe(n);\n          const h = (m, y, v = 1) => Array.from(\n            { length: Math.abs(y - m) / v + 1 },\n            (C, S) => m < y ? m + S * v : m - S * v\n          );\n          n = ((m, y) => m.squeezeBind((v) => y.bind((C) => Jn(...h(v, C)))))(n, c);\n          break;\n        }\n        default:\n          console.warn(`operator "${l.type_}" not implemented`);\n      }\n  return n.__steps_source = n.__steps_source || o, n;\n};\nfunction Ea(t, e, n, r = 0) {\n  n?.(t);\n  const i = (s) => Ea(s, e, n, r);\n  switch (t.type_) {\n    case "pattern": {\n      const s = t.source_.map((c) => i(c)).map(eB(t, i)), a = t.arguments_.alignment, o = s.filter((c) => c.__steps_source);\n      let l;\n      switch (a) {\n        case "stack": {\n          l = Nt(...s), o.length && (l._steps = Ur(...o.map((c) => me(c._steps))));\n          break;\n        }\n        case "polymeter_slowcat": {\n          l = Nt(...s.map((c) => c._slow(c.__weight))), o.length && (l._steps = Ur(...o.map((c) => me(c._steps))));\n          break;\n        }\n        case "polymeter": {\n          const c = t.arguments_.stepsPerCycle ? i(t.arguments_.stepsPerCycle).fmap((f) => me(f)) : cn(me(s.length > 0 ? s[0].__weight : 1)), h = s.map((f) => f.fast(c.fmap((m) => m.div(f.__weight))));\n          l = Nt(...h);\n          break;\n        }\n        case "rand": {\n          l = cd(Yn.early(Hk * t.arguments_.seed).segment(1), s), o.length && (l._steps = Ur(...o.map((c) => me(c._steps))));\n          break;\n        }\n        case "feet": {\n          l = Jn(...s);\n          break;\n        }\n        default: {\n          if (t.source_.some((h) => !!h.options_?.weight)) {\n            const h = t.source_.reduce(\n              (f, m) => f.add(m.options_?.weight || me(1)),\n              me(0)\n            );\n            l = Yf(\n              ...t.source_.map((f, m) => [f.options_?.weight || me(1), s[m]])\n            ), l.__weight = h, l._steps = h, o.length && (l._steps = l._steps.mul(Ur(...o.map((f) => me(f._steps)))));\n          } else\n            l = Fr(...s), l._steps = s.length;\n          t.arguments_._steps && (l.__steps_source = !0);\n        }\n      }\n      return o.length && (l.__steps_source = !0), l;\n    }\n    case "element":\n      return i(t.source_);\n    case "atom": {\n      if (t.source_ === "~" || t.source_ === "-")\n        return St;\n      if (!t.location_)\n        return console.warn("no location for", t), t.source_;\n      const s = isNaN(Number(t.source_)) ? t.source_ : Number(t.source_);\n      if (r === -1)\n        return cn(s);\n      const [a, o] = dd(e, t, r);\n      return cn(s).withLoc(a, o);\n    }\n    case "stretch":\n      return i(t.source_).slow(i(t.arguments_.amount));\n    default:\n      return console.warn(`node type "${t.type_}" not implemented -> returning silence`), St;\n  }\n}\nconst dd = (t, e, n = 0) => {\n  const { start: r, end: i } = e.location_, s = t?.split("").slice(r.offset, i.offset).join(""), [a = 0, o = 0] = s ? s.split(e.source_).map((l) => l.split("").filter((c) => c === " ").length) : [];\n  return [r.offset + a + n, i.offset - o + n];\n}, No = (t, e = 0, n = t) => {\n  try {\n    return zk(t);\n  } catch (r) {\n    const i = [r.location.start.offset + e, r.location.end.offset + e], s = n.slice(0, i[0]).split(`\n`).length;\n    throw new Error(`[mini] parse error at line ${s}: ${r.message}`);\n  }\n}, Yk = (t, e, n) => {\n  const r = No(t, e, n);\n  let i = [];\n  return Ea(\n    r,\n    t,\n    (s) => {\n      s.type_ === "atom" && i.push(s);\n    },\n    -1\n  ), i;\n}, md = (t, e = 0, n) => Yk(t, e, n).map((r) => dd(t, r, e)), gd = (...t) => {\n  const e = t.map((n) => {\n    const r = `"${n}"`, i = No(r);\n    return Ea(i, r);\n  });\n  return Fr(...e);\n}, tB = (t, e) => {\n  const n = `"${t}"`, r = No(n);\n  return Ea(r, n, null, e);\n}, nB = (t) => {\n  const e = No(t);\n  return Ea(e, t);\n};\nfunction rB(t) {\n  return typeof t == "string" ? gd(t) : Oe(t);\n}\nfunction iB() {\n  Eb(gd);\n}\nconst sB = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  StartRules: JF,\n  SyntaxError: Bs,\n  getLeafLocation: dd,\n  getLeafLocations: md,\n  getLeaves: Yk,\n  h: nB,\n  m: tB,\n  mini: gd,\n  mini2ast: No,\n  miniAllStrings: iB,\n  minify: rB,\n  parse: zk,\n  patternifyAST: Ea\n}, Symbol.toStringTag, { value: "Module" }));\nvar aB = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 7, 9, 32, 4, 318, 1, 80, 3, 71, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 3, 0, 158, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 68, 8, 2, 0, 3, 0, 2, 3, 2, 4, 2, 0, 15, 1, 83, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 7, 19, 58, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 343, 9, 54, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 10, 1, 2, 0, 49, 6, 4, 4, 14, 10, 5350, 0, 7, 14, 11465, 27, 2343, 9, 87, 9, 39, 4, 60, 6, 26, 9, 535, 9, 470, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4178, 9, 519, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 101, 0, 161, 6, 10, 9, 357, 0, 62, 13, 499, 13, 245, 1, 2, 9, 726, 6, 110, 6, 6, 9, 4759, 9, 787719, 239], Kk = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 4, 51, 13, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 39, 27, 10, 22, 251, 41, 7, 1, 17, 2, 60, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 20, 1, 64, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 31, 9, 2, 0, 3, 0, 2, 37, 2, 0, 26, 0, 2, 0, 45, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 200, 32, 32, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 16, 0, 2, 12, 2, 33, 125, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1071, 18, 5, 26, 3994, 6, 582, 6842, 29, 1763, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 433, 44, 212, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 42, 9, 8936, 3, 2, 6, 2, 1, 2, 290, 16, 0, 30, 2, 3, 0, 15, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 7, 5, 262, 61, 147, 44, 11, 6, 17, 0, 322, 29, 19, 43, 485, 27, 229, 29, 3, 0, 496, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4153, 7, 221, 3, 5761, 15, 7472, 16, 621, 2467, 541, 1507, 4938, 6, 4191], oB = "‌‍·̀-ͯ·҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-٩ٰۖ-ۜ۟-۪ۤۧۨ-ۭ۰-۹ܑܰ-݊ަ-ް߀-߉߫-߽߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛ࢗ-࢟࣊-ࣣ࣡-ःऺ-़ा-ॏ॑-ॗॢॣ०-९ঁ-ঃ়া-ৄেৈো-্ৗৢৣ০-৯৾ਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣ૦-૯ૺ-૿ଁ-ଃ଼ା-ୄେୈୋ-୍୕-ୗୢୣ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఀ-ఄ఼ా-ౄె-ైొ-్ౕౖౢౣ౦-౯ಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣ೦-೯ೳഀ-ഃ഻഼ാ-ൄെ-ൈൊ-്ൗൢൣ൦-൯ඁ-ඃ්ා-ුූෘ-ෟ෦-෯ෲෳัิ-ฺ็-๎๐-๙ັິ-ຼ່-໎໐-໙༘༙༠-༩༹༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှ၀-၉ၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟፩-፱ᜒ-᜕ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝០-៩᠋-᠍᠏-᠙ᢩᤠ-ᤫᤰ-᤻᥆-᥏᧐-᧚ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪰-᪽ᪿ-ᫎᬀ-ᬄ᬴-᭄᭐-᭙᭫-᭳ᮀ-ᮂᮡ-ᮭ᮰-᮹᯦-᯳ᰤ-᰷᱀-᱉᱐-᱙᳐-᳔᳒-᳨᳭᳴᳷-᳹᷀-᷿‌‍‿⁀⁔⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯・꘠-꘩꙯ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧ꠬ꢀꢁꢴ-ꣅ꣐-꣙꣠-꣱ꣿ-꤉ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀꧐-꧙ꧥ꧰-꧹ꨩ-ꨶꩃꩌꩍ꩐-꩙ꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭꯰-꯹ﬞ︀-️︠-︯︳︴﹍-﹏０-９＿･", Jk = "ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈא-תׯ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࡠ-ࡪࡰ-ࢇࢉ-ࢎࢠ-ࣉऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱৼਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౝౠౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೝೞೠೡೱೲഄ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄຆ-ຊຌ-ຣລວ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜑᜟ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡸᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭌᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲊᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳳᳵᳶᳺᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖ゛-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆿㇰ-ㇿ㐀-䶿一-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꟍꟐꟑꟓꟕ-Ƛꟲ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭩꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ", mh = {\n  3: "abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile",\n  5: "class enum extends super const export import",\n  6: "enum",\n  strict: "implements interface let package private protected public static yield",\n  strictBind: "eval arguments"\n}, gh = "break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this", lB = {\n  5: gh,\n  "5module": gh + " export import",\n  6: gh + " const class extends export import super"\n}, uB = /^in(stanceof)?$/, cB = new RegExp("[" + Jk + "]"), hB = new RegExp("[" + Jk + oB + "]");\nfunction wp(t, e) {\n  for (var n = 65536, r = 0; r < e.length; r += 2) {\n    if (n += e[r], n > t)\n      return !1;\n    if (n += e[r + 1], n >= t)\n      return !0;\n  }\n  return !1;\n}\nfunction Fi(t, e) {\n  return t < 65 ? t === 36 : t < 91 ? !0 : t < 97 ? t === 95 : t < 123 ? !0 : t <= 65535 ? t >= 170 && cB.test(String.fromCharCode(t)) : e === !1 ? !1 : wp(t, Kk);\n}\nfunction ma(t, e) {\n  return t < 48 ? t === 36 : t < 58 ? !0 : t < 65 ? !1 : t < 91 ? !0 : t < 97 ? t === 95 : t < 123 ? !0 : t <= 65535 ? t >= 170 && hB.test(String.fromCharCode(t)) : e === !1 ? !1 : wp(t, Kk) || wp(t, aB);\n}\nvar pt = function(e, n) {\n  n === void 0 && (n = {}), this.label = e, this.keyword = n.keyword, this.beforeExpr = !!n.beforeExpr, this.startsExpr = !!n.startsExpr, this.isLoop = !!n.isLoop, this.isAssign = !!n.isAssign, this.prefix = !!n.prefix, this.postfix = !!n.postfix, this.binop = n.binop || null, this.updateContext = null;\n};\nfunction yr(t, e) {\n  return new pt(t, { beforeExpr: !0, binop: e });\n}\nvar Or = { beforeExpr: !0 }, In = { startsExpr: !0 }, bd = {};\nfunction ot(t, e) {\n  return e === void 0 && (e = {}), e.keyword = t, bd[t] = new pt(t, e);\n}\nvar F = {\n  num: new pt("num", In),\n  regexp: new pt("regexp", In),\n  string: new pt("string", In),\n  name: new pt("name", In),\n  privateId: new pt("privateId", In),\n  eof: new pt("eof"),\n  // Punctuation token types.\n  bracketL: new pt("[", { beforeExpr: !0, startsExpr: !0 }),\n  bracketR: new pt("]"),\n  braceL: new pt("{", { beforeExpr: !0, startsExpr: !0 }),\n  braceR: new pt("}"),\n  parenL: new pt("(", { beforeExpr: !0, startsExpr: !0 }),\n  parenR: new pt(")"),\n  comma: new pt(",", Or),\n  semi: new pt(";", Or),\n  colon: new pt(":", Or),\n  dot: new pt("."),\n  question: new pt("?", Or),\n  questionDot: new pt("?."),\n  arrow: new pt("=>", Or),\n  template: new pt("template"),\n  invalidTemplate: new pt("invalidTemplate"),\n  ellipsis: new pt("...", Or),\n  backQuote: new pt("`", In),\n  dollarBraceL: new pt("${", { beforeExpr: !0, startsExpr: !0 }),\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n  eq: new pt("=", { beforeExpr: !0, isAssign: !0 }),\n  assign: new pt("_=", { beforeExpr: !0, isAssign: !0 }),\n  incDec: new pt("++/--", { prefix: !0, postfix: !0, startsExpr: !0 }),\n  prefix: new pt("!/~", { beforeExpr: !0, prefix: !0, startsExpr: !0 }),\n  logicalOR: yr("||", 1),\n  logicalAND: yr("&&", 2),\n  bitwiseOR: yr("|", 3),\n  bitwiseXOR: yr("^", 4),\n  bitwiseAND: yr("&", 5),\n  equality: yr("==/!=/===/!==", 6),\n  relational: yr("</>/<=/>=", 7),\n  bitShift: yr("<</>>/>>>", 8),\n  plusMin: new pt("+/-", { beforeExpr: !0, binop: 9, prefix: !0, startsExpr: !0 }),\n  modulo: yr("%", 10),\n  star: yr("*", 10),\n  slash: yr("/", 10),\n  starstar: new pt("**", { beforeExpr: !0 }),\n  coalesce: yr("??", 1),\n  // Keyword token types.\n  _break: ot("break"),\n  _case: ot("case", Or),\n  _catch: ot("catch"),\n  _continue: ot("continue"),\n  _debugger: ot("debugger"),\n  _default: ot("default", Or),\n  _do: ot("do", { isLoop: !0, beforeExpr: !0 }),\n  _else: ot("else", Or),\n  _finally: ot("finally"),\n  _for: ot("for", { isLoop: !0 }),\n  _function: ot("function", In),\n  _if: ot("if"),\n  _return: ot("return", Or),\n  _switch: ot("switch"),\n  _throw: ot("throw", Or),\n  _try: ot("try"),\n  _var: ot("var"),\n  _const: ot("const"),\n  _while: ot("while", { isLoop: !0 }),\n  _with: ot("with"),\n  _new: ot("new", { beforeExpr: !0, startsExpr: !0 }),\n  _this: ot("this", In),\n  _super: ot("super", In),\n  _class: ot("class", In),\n  _extends: ot("extends", Or),\n  _export: ot("export"),\n  _import: ot("import", In),\n  _null: ot("null", In),\n  _true: ot("true", In),\n  _false: ot("false", In),\n  _in: ot("in", { beforeExpr: !0, binop: 7 }),\n  _instanceof: ot("instanceof", { beforeExpr: !0, binop: 7 }),\n  _typeof: ot("typeof", { beforeExpr: !0, prefix: !0, startsExpr: !0 }),\n  _void: ot("void", { beforeExpr: !0, prefix: !0, startsExpr: !0 }),\n  _delete: ot("delete", { beforeExpr: !0, prefix: !0, startsExpr: !0 })\n}, Qr = /\\r\\n?|\\n|\\u2028|\\u2029/, pB = new RegExp(Qr.source, "g");\nfunction Fa(t) {\n  return t === 10 || t === 13 || t === 8232 || t === 8233;\n}\nfunction e2(t, e, n) {\n  n === void 0 && (n = t.length);\n  for (var r = e; r < n; r++) {\n    var i = t.charCodeAt(r);\n    if (Fa(i))\n      return r < n - 1 && i === 13 && t.charCodeAt(r + 1) === 10 ? r + 2 : r + 1;\n  }\n  return -1;\n}\nvar t2 = /[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/, xr = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g, n2 = Object.prototype, fB = n2.hasOwnProperty, dB = n2.toString, Ba = Object.hasOwn || function(t, e) {\n  return fB.call(t, e);\n}, $m = Array.isArray || function(t) {\n  return dB.call(t) === "[object Array]";\n}, Lm = /* @__PURE__ */ Object.create(null);\nfunction qi(t) {\n  return Lm[t] || (Lm[t] = new RegExp("^(?:" + t.replace(/ /g, "|") + ")$"));\n}\nfunction Bi(t) {\n  return t <= 65535 ? String.fromCharCode(t) : (t -= 65536, String.fromCharCode((t >> 10) + 55296, (t & 1023) + 56320));\n}\nvar mB = /(?:[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/, yo = function(e, n) {\n  this.line = e, this.column = n;\n};\nyo.prototype.offset = function(e) {\n  return new yo(this.line, this.column + e);\n};\nvar wc = function(e, n, r) {\n  this.start = n, this.end = r, e.sourceFile !== null && (this.source = e.sourceFile);\n};\nfunction r2(t, e) {\n  for (var n = 1, r = 0; ; ) {\n    var i = e2(t, r, e);\n    if (i < 0)\n      return new yo(n, e - r);\n    ++n, r = i;\n  }\n}\nvar Cp = {\n  // `ecmaVersion` indicates the ECMAScript version to parse. Must be\n  // either 3, 5, 6 (or 2015), 7 (2016), 8 (2017), 9 (2018), 10\n  // (2019), 11 (2020), 12 (2021), 13 (2022), 14 (2023), or `"latest"`\n  // (the latest version the library supports). This influences\n  // support for strict mode, the set of reserved words, and support\n  // for new syntax features.\n  ecmaVersion: null,\n  // `sourceType` indicates the mode the code should be parsed in.\n  // Can be either `"script"` or `"module"`. This influences global\n  // strict mode and parsing of `import` and `export` declarations.\n  sourceType: "script",\n  // `onInsertedSemicolon` can be a callback that will be called when\n  // a semicolon is automatically inserted. It will be passed the\n  // position of the inserted semicolon as an offset, and if\n  // `locations` is enabled, it is given the location as a `{line,\n  // column}` object as second argument.\n  onInsertedSemicolon: null,\n  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n  // trailing commas.\n  onTrailingComma: null,\n  // By default, reserved words are only enforced if ecmaVersion >= 5.\n  // Set `allowReserved` to a boolean value to explicitly turn this on\n  // an off. When this option has the value "never", reserved words\n  // and keywords can also not be used as property names.\n  allowReserved: null,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: !1,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program, and an import.meta expression\n  // in a script isn\'t considered an error.\n  allowImportExportEverywhere: !1,\n  // By default, await identifiers are allowed to appear at the top-level scope only if ecmaVersion >= 2022.\n  // When enabled, await identifiers are allowed to appear at the top-level scope,\n  // but they are still not allowed in non-async functions.\n  allowAwaitOutsideFunction: null,\n  // When enabled, super identifiers are not constrained to\n  // appearing in methods and do not raise an error when they appear elsewhere.\n  allowSuperOutsideMethod: null,\n  // When enabled, hashbang directive in the beginning of file is\n  // allowed and treated as a line comment. Enabled by default when\n  // `ecmaVersion` >= 2023.\n  allowHashBang: !1,\n  // By default, the parser will verify that private properties are\n  // only used in places where they are valid and have been declared.\n  // Set this to false to turn such checks off.\n  checkPrivateFields: !0,\n  // When `locations` is on, `loc` properties holding objects with\n  // `start` and `end` properties in `{line, column}` form (with\n  // line being 1-based and column 0-based) will be attached to the\n  // nodes.\n  locations: !1,\n  // A function can be passed as `onToken` option, which will\n  // cause Acorn to call that function with object in the same\n  // format as tokens returned from `tokenizer().getToken()`. Note\n  // that you are not allowed to call the parser from the\n  // callback—that will corrupt its internal state.\n  onToken: null,\n  // A function can be passed as `onComment` option, which will\n  // cause Acorn to call that function with `(block, text, start,\n  // end)` parameters whenever a comment is skipped. `block` is a\n  // boolean indicating whether this is a block (`/* */`) comment,\n  // `text` is the content of the comment, and `start` and `end` are\n  // character offsets that denote the start and end of the comment.\n  // When the `locations` option is on, two more parameters are\n  // passed, the full `{line, column}` locations of the start and\n  // end of the comments. Note that you are not allowed to call the\n  // parser from the callback—that will corrupt its internal state.\n  // When this option has an array as value, objects representing the\n  // comments are pushed to it.\n  onComment: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: !1,\n  // It is possible to parse multiple files into a single AST by\n  // passing the tree produced by parsing the first file as\n  // `program` option in subsequent parses. This will add the\n  // toplevel forms of the parsed file to the `Program` (top) node\n  // of an existing parse tree.\n  program: null,\n  // When `locations` is on, you can pass this to record the source\n  // file in every node\'s `loc` object.\n  sourceFile: null,\n  // This value, if given, is stored in every node, whether\n  // `locations` is on or off.\n  directSourceFile: null,\n  // When enabled, parenthesized expressions are represented by\n  // (non-standard) ParenthesizedExpression nodes\n  preserveParens: !1\n}, Im = !1;\nfunction gB(t) {\n  var e = {};\n  for (var n in Cp)\n    e[n] = t && Ba(t, n) ? t[n] : Cp[n];\n  if (e.ecmaVersion === "latest" ? e.ecmaVersion = 1e8 : e.ecmaVersion == null ? (!Im && typeof console == "object" && console.warn && (Im = !0, console.warn(`Since Acorn 8.0.0, options.ecmaVersion is required.\nDefaulting to 2020, but this will stop working in the future.`)), e.ecmaVersion = 11) : e.ecmaVersion >= 2015 && (e.ecmaVersion -= 2009), e.allowReserved == null && (e.allowReserved = e.ecmaVersion < 5), (!t || t.allowHashBang == null) && (e.allowHashBang = e.ecmaVersion >= 14), $m(e.onToken)) {\n    var r = e.onToken;\n    e.onToken = function(i) {\n      return r.push(i);\n    };\n  }\n  return $m(e.onComment) && (e.onComment = bB(e, e.onComment)), e;\n}\nfunction bB(t, e) {\n  return function(n, r, i, s, a, o) {\n    var l = {\n      type: n ? "Block" : "Line",\n      value: r,\n      start: i,\n      end: s\n    };\n    t.locations && (l.loc = new wc(this, a, o)), t.ranges && (l.range = [i, s]), e.push(l);\n  };\n}\nvar Oo = 1, Ma = 2, yd = 4, i2 = 8, s2 = 16, a2 = 32, Od = 64, o2 = 128, Vo = 256, vd = Oo | Ma | Vo;\nfunction xd(t, e) {\n  return Ma | (t ? yd : 0) | (e ? i2 : 0);\n}\nvar bu = 0, kd = 1, Ri = 2, l2 = 3, u2 = 4, c2 = 5, hn = function(e, n, r) {\n  this.options = e = gB(e), this.sourceFile = e.sourceFile, this.keywords = qi(lB[e.ecmaVersion >= 6 ? 6 : e.sourceType === "module" ? "5module" : 5]);\n  var i = "";\n  e.allowReserved !== !0 && (i = mh[e.ecmaVersion >= 6 ? 6 : e.ecmaVersion === 5 ? 5 : 3], e.sourceType === "module" && (i += " await")), this.reservedWords = qi(i);\n  var s = (i ? i + " " : "") + mh.strict;\n  this.reservedWordsStrict = qi(s), this.reservedWordsStrictBind = qi(s + " " + mh.strictBind), this.input = String(n), this.containsEsc = !1, r ? (this.pos = r, this.lineStart = this.input.lastIndexOf(`\n`, r - 1) + 1, this.curLine = this.input.slice(0, this.lineStart).split(Qr).length) : (this.pos = this.lineStart = 0, this.curLine = 1), this.type = F.eof, this.value = null, this.start = this.end = this.pos, this.startLoc = this.endLoc = this.curPosition(), this.lastTokEndLoc = this.lastTokStartLoc = null, this.lastTokStart = this.lastTokEnd = this.pos, this.context = this.initialContext(), this.exprAllowed = !0, this.inModule = e.sourceType === "module", this.strict = this.inModule || this.strictDirective(this.pos), this.potentialArrowAt = -1, this.potentialArrowInForAwait = !1, this.yieldPos = this.awaitPos = this.awaitIdentPos = 0, this.labels = [], this.undefinedExports = /* @__PURE__ */ Object.create(null), this.pos === 0 && e.allowHashBang && this.input.slice(0, 2) === "#!" && this.skipLineComment(2), this.scopeStack = [], this.enterScope(Oo), this.regexpState = null, this.privateNameStack = [];\n}, yi = { inFunction: { configurable: !0 }, inGenerator: { configurable: !0 }, inAsync: { configurable: !0 }, canAwait: { configurable: !0 }, allowSuper: { configurable: !0 }, allowDirectSuper: { configurable: !0 }, treatFunctionsAsVar: { configurable: !0 }, allowNewDotTarget: { configurable: !0 }, inClassStaticBlock: { configurable: !0 } };\nhn.prototype.parse = function() {\n  var e = this.options.program || this.startNode();\n  return this.nextToken(), this.parseTopLevel(e);\n};\nyi.inFunction.get = function() {\n  return (this.currentVarScope().flags & Ma) > 0;\n};\nyi.inGenerator.get = function() {\n  return (this.currentVarScope().flags & i2) > 0 && !this.currentVarScope().inClassFieldInit;\n};\nyi.inAsync.get = function() {\n  return (this.currentVarScope().flags & yd) > 0 && !this.currentVarScope().inClassFieldInit;\n};\nyi.canAwait.get = function() {\n  for (var t = this.scopeStack.length - 1; t >= 0; t--) {\n    var e = this.scopeStack[t];\n    if (e.inClassFieldInit || e.flags & Vo)\n      return !1;\n    if (e.flags & Ma)\n      return (e.flags & yd) > 0;\n  }\n  return this.inModule && this.options.ecmaVersion >= 13 || this.options.allowAwaitOutsideFunction;\n};\nyi.allowSuper.get = function() {\n  var t = this.currentThisScope(), e = t.flags, n = t.inClassFieldInit;\n  return (e & Od) > 0 || n || this.options.allowSuperOutsideMethod;\n};\nyi.allowDirectSuper.get = function() {\n  return (this.currentThisScope().flags & o2) > 0;\n};\nyi.treatFunctionsAsVar.get = function() {\n  return this.treatFunctionsAsVarInScope(this.currentScope());\n};\nyi.allowNewDotTarget.get = function() {\n  var t = this.currentThisScope(), e = t.flags, n = t.inClassFieldInit;\n  return (e & (Ma | Vo)) > 0 || n;\n};\nyi.inClassStaticBlock.get = function() {\n  return (this.currentVarScope().flags & Vo) > 0;\n};\nhn.extend = function() {\n  for (var e = [], n = arguments.length; n--; ) e[n] = arguments[n];\n  for (var r = this, i = 0; i < e.length; i++)\n    r = e[i](r);\n  return r;\n};\nhn.parse = function(e, n) {\n  return new this(n, e).parse();\n};\nhn.parseExpressionAt = function(e, n, r) {\n  var i = new this(r, e, n);\n  return i.nextToken(), i.parseExpression();\n};\nhn.tokenizer = function(e, n) {\n  return new this(n, e);\n};\nObject.defineProperties(hn.prototype, yi);\nvar Zn = hn.prototype, yB = /^(?:\'((?:\\\\[^]|[^\'\\\\])*?)\'|"((?:\\\\[^]|[^"\\\\])*?)")/;\nZn.strictDirective = function(t) {\n  if (this.options.ecmaVersion < 5)\n    return !1;\n  for (; ; ) {\n    xr.lastIndex = t, t += xr.exec(this.input)[0].length;\n    var e = yB.exec(this.input.slice(t));\n    if (!e)\n      return !1;\n    if ((e[1] || e[2]) === "use strict") {\n      xr.lastIndex = t + e[0].length;\n      var n = xr.exec(this.input), r = n.index + n[0].length, i = this.input.charAt(r);\n      return i === ";" || i === "}" || Qr.test(n[0]) && !(/[(`.[+\\-/*%<>=,?^&]/.test(i) || i === "!" && this.input.charAt(r + 1) === "=");\n    }\n    t += e[0].length, xr.lastIndex = t, t += xr.exec(this.input)[0].length, this.input[t] === ";" && t++;\n  }\n};\nZn.eat = function(t) {\n  return this.type === t ? (this.next(), !0) : !1;\n};\nZn.isContextual = function(t) {\n  return this.type === F.name && this.value === t && !this.containsEsc;\n};\nZn.eatContextual = function(t) {\n  return this.isContextual(t) ? (this.next(), !0) : !1;\n};\nZn.expectContextual = function(t) {\n  this.eatContextual(t) || this.unexpected();\n};\nZn.canInsertSemicolon = function() {\n  return this.type === F.eof || this.type === F.braceR || Qr.test(this.input.slice(this.lastTokEnd, this.start));\n};\nZn.insertSemicolon = function() {\n  if (this.canInsertSemicolon())\n    return this.options.onInsertedSemicolon && this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc), !0;\n};\nZn.semicolon = function() {\n  !this.eat(F.semi) && !this.insertSemicolon() && this.unexpected();\n};\nZn.afterTrailingComma = function(t, e) {\n  if (this.type === t)\n    return this.options.onTrailingComma && this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc), e || this.next(), !0;\n};\nZn.expect = function(t) {\n  this.eat(t) || this.unexpected();\n};\nZn.unexpected = function(t) {\n  this.raise(t ?? this.start, "Unexpected token");\n};\nvar Cc = function() {\n  this.shorthandAssign = this.trailingComma = this.parenthesizedAssign = this.parenthesizedBind = this.doubleProto = -1;\n};\nZn.checkPatternErrors = function(t, e) {\n  if (t) {\n    t.trailingComma > -1 && this.raiseRecoverable(t.trailingComma, "Comma is not permitted after the rest element");\n    var n = e ? t.parenthesizedAssign : t.parenthesizedBind;\n    n > -1 && this.raiseRecoverable(n, e ? "Assigning to rvalue" : "Parenthesized pattern");\n  }\n};\nZn.checkExpressionErrors = function(t, e) {\n  if (!t)\n    return !1;\n  var n = t.shorthandAssign, r = t.doubleProto;\n  if (!e)\n    return n >= 0 || r >= 0;\n  n >= 0 && this.raise(n, "Shorthand property assignments are valid only in destructuring patterns"), r >= 0 && this.raiseRecoverable(r, "Redefinition of __proto__ property");\n};\nZn.checkYieldAwaitInDefaultParams = function() {\n  this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos) && this.raise(this.yieldPos, "Yield expression cannot be a default value"), this.awaitPos && this.raise(this.awaitPos, "Await expression cannot be a default value");\n};\nZn.isSimpleAssignTarget = function(t) {\n  return t.type === "ParenthesizedExpression" ? this.isSimpleAssignTarget(t.expression) : t.type === "Identifier" || t.type === "MemberExpression";\n};\nvar Me = hn.prototype;\nMe.parseTopLevel = function(t) {\n  var e = /* @__PURE__ */ Object.create(null);\n  for (t.body || (t.body = []); this.type !== F.eof; ) {\n    var n = this.parseStatement(null, !0, e);\n    t.body.push(n);\n  }\n  if (this.inModule)\n    for (var r = 0, i = Object.keys(this.undefinedExports); r < i.length; r += 1) {\n      var s = i[r];\n      this.raiseRecoverable(this.undefinedExports[s].start, "Export \'" + s + "\' is not defined");\n    }\n  return this.adaptDirectivePrologue(t.body), this.next(), t.sourceType = this.options.sourceType, this.finishNode(t, "Program");\n};\nvar wd = { kind: "loop" }, OB = { kind: "switch" };\nMe.isLet = function(t) {\n  if (this.options.ecmaVersion < 6 || !this.isContextual("let"))\n    return !1;\n  xr.lastIndex = this.pos;\n  var e = xr.exec(this.input), n = this.pos + e[0].length, r = this.input.charCodeAt(n);\n  if (r === 91 || r === 92)\n    return !0;\n  if (t)\n    return !1;\n  if (r === 123 || r > 55295 && r < 56320)\n    return !0;\n  if (Fi(r, !0)) {\n    for (var i = n + 1; ma(r = this.input.charCodeAt(i), !0); )\n      ++i;\n    if (r === 92 || r > 55295 && r < 56320)\n      return !0;\n    var s = this.input.slice(n, i);\n    if (!uB.test(s))\n      return !0;\n  }\n  return !1;\n};\nMe.isAsyncFunction = function() {\n  if (this.options.ecmaVersion < 8 || !this.isContextual("async"))\n    return !1;\n  xr.lastIndex = this.pos;\n  var t = xr.exec(this.input), e = this.pos + t[0].length, n;\n  return !Qr.test(this.input.slice(this.pos, e)) && this.input.slice(e, e + 8) === "function" && (e + 8 === this.input.length || !(ma(n = this.input.charCodeAt(e + 8)) || n > 55295 && n < 56320));\n};\nMe.parseStatement = function(t, e, n) {\n  var r = this.type, i = this.startNode(), s;\n  switch (this.isLet(t) && (r = F._var, s = "let"), r) {\n    case F._break:\n    case F._continue:\n      return this.parseBreakContinueStatement(i, r.keyword);\n    case F._debugger:\n      return this.parseDebuggerStatement(i);\n    case F._do:\n      return this.parseDoStatement(i);\n    case F._for:\n      return this.parseForStatement(i);\n    case F._function:\n      return t && (this.strict || t !== "if" && t !== "label") && this.options.ecmaVersion >= 6 && this.unexpected(), this.parseFunctionStatement(i, !1, !t);\n    case F._class:\n      return t && this.unexpected(), this.parseClass(i, !0);\n    case F._if:\n      return this.parseIfStatement(i);\n    case F._return:\n      return this.parseReturnStatement(i);\n    case F._switch:\n      return this.parseSwitchStatement(i);\n    case F._throw:\n      return this.parseThrowStatement(i);\n    case F._try:\n      return this.parseTryStatement(i);\n    case F._const:\n    case F._var:\n      return s = s || this.value, t && s !== "var" && this.unexpected(), this.parseVarStatement(i, s);\n    case F._while:\n      return this.parseWhileStatement(i);\n    case F._with:\n      return this.parseWithStatement(i);\n    case F.braceL:\n      return this.parseBlock(!0, i);\n    case F.semi:\n      return this.parseEmptyStatement(i);\n    case F._export:\n    case F._import:\n      if (this.options.ecmaVersion > 10 && r === F._import) {\n        xr.lastIndex = this.pos;\n        var a = xr.exec(this.input), o = this.pos + a[0].length, l = this.input.charCodeAt(o);\n        if (l === 40 || l === 46)\n          return this.parseExpressionStatement(i, this.parseExpression());\n      }\n      return this.options.allowImportExportEverywhere || (e || this.raise(this.start, "\'import\' and \'export\' may only appear at the top level"), this.inModule || this.raise(this.start, "\'import\' and \'export\' may appear only with \'sourceType: module\'")), r === F._import ? this.parseImport(i) : this.parseExport(i, n);\n    // If the statement does not start with a statement keyword or a\n    // brace, it\'s an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n    default:\n      if (this.isAsyncFunction())\n        return t && this.unexpected(), this.next(), this.parseFunctionStatement(i, !0, !t);\n      var c = this.value, h = this.parseExpression();\n      return r === F.name && h.type === "Identifier" && this.eat(F.colon) ? this.parseLabeledStatement(i, c, h, t) : this.parseExpressionStatement(i, h);\n  }\n};\nMe.parseBreakContinueStatement = function(t, e) {\n  var n = e === "break";\n  this.next(), this.eat(F.semi) || this.insertSemicolon() ? t.label = null : this.type !== F.name ? this.unexpected() : (t.label = this.parseIdent(), this.semicolon());\n  for (var r = 0; r < this.labels.length; ++r) {\n    var i = this.labels[r];\n    if ((t.label == null || i.name === t.label.name) && (i.kind != null && (n || i.kind === "loop") || t.label && n))\n      break;\n  }\n  return r === this.labels.length && this.raise(t.start, "Unsyntactic " + e), this.finishNode(t, n ? "BreakStatement" : "ContinueStatement");\n};\nMe.parseDebuggerStatement = function(t) {\n  return this.next(), this.semicolon(), this.finishNode(t, "DebuggerStatement");\n};\nMe.parseDoStatement = function(t) {\n  return this.next(), this.labels.push(wd), t.body = this.parseStatement("do"), this.labels.pop(), this.expect(F._while), t.test = this.parseParenExpression(), this.options.ecmaVersion >= 6 ? this.eat(F.semi) : this.semicolon(), this.finishNode(t, "DoWhileStatement");\n};\nMe.parseForStatement = function(t) {\n  this.next();\n  var e = this.options.ecmaVersion >= 9 && this.canAwait && this.eatContextual("await") ? this.lastTokStart : -1;\n  if (this.labels.push(wd), this.enterScope(0), this.expect(F.parenL), this.type === F.semi)\n    return e > -1 && this.unexpected(e), this.parseFor(t, null);\n  var n = this.isLet();\n  if (this.type === F._var || this.type === F._const || n) {\n    var r = this.startNode(), i = n ? "let" : this.value;\n    return this.next(), this.parseVar(r, !0, i), this.finishNode(r, "VariableDeclaration"), (this.type === F._in || this.options.ecmaVersion >= 6 && this.isContextual("of")) && r.declarations.length === 1 ? (this.options.ecmaVersion >= 9 && (this.type === F._in ? e > -1 && this.unexpected(e) : t.await = e > -1), this.parseForIn(t, r)) : (e > -1 && this.unexpected(e), this.parseFor(t, r));\n  }\n  var s = this.isContextual("let"), a = !1, o = this.containsEsc, l = new Cc(), c = this.start, h = e > -1 ? this.parseExprSubscripts(l, "await") : this.parseExpression(!0, l);\n  return this.type === F._in || (a = this.options.ecmaVersion >= 6 && this.isContextual("of")) ? (e > -1 ? (this.type === F._in && this.unexpected(e), t.await = !0) : a && this.options.ecmaVersion >= 8 && (h.start === c && !o && h.type === "Identifier" && h.name === "async" ? this.unexpected() : this.options.ecmaVersion >= 9 && (t.await = !1)), s && a && this.raise(h.start, "The left-hand side of a for-of loop may not start with \'let\'."), this.toAssignable(h, !1, l), this.checkLValPattern(h), this.parseForIn(t, h)) : (this.checkExpressionErrors(l, !0), e > -1 && this.unexpected(e), this.parseFor(t, h));\n};\nMe.parseFunctionStatement = function(t, e, n) {\n  return this.next(), this.parseFunction(t, co | (n ? 0 : Sp), !1, e);\n};\nMe.parseIfStatement = function(t) {\n  return this.next(), t.test = this.parseParenExpression(), t.consequent = this.parseStatement("if"), t.alternate = this.eat(F._else) ? this.parseStatement("if") : null, this.finishNode(t, "IfStatement");\n};\nMe.parseReturnStatement = function(t) {\n  return !this.inFunction && !this.options.allowReturnOutsideFunction && this.raise(this.start, "\'return\' outside of function"), this.next(), this.eat(F.semi) || this.insertSemicolon() ? t.argument = null : (t.argument = this.parseExpression(), this.semicolon()), this.finishNode(t, "ReturnStatement");\n};\nMe.parseSwitchStatement = function(t) {\n  this.next(), t.discriminant = this.parseParenExpression(), t.cases = [], this.expect(F.braceL), this.labels.push(OB), this.enterScope(0);\n  for (var e, n = !1; this.type !== F.braceR; )\n    if (this.type === F._case || this.type === F._default) {\n      var r = this.type === F._case;\n      e && this.finishNode(e, "SwitchCase"), t.cases.push(e = this.startNode()), e.consequent = [], this.next(), r ? e.test = this.parseExpression() : (n && this.raiseRecoverable(this.lastTokStart, "Multiple default clauses"), n = !0, e.test = null), this.expect(F.colon);\n    } else\n      e || this.unexpected(), e.consequent.push(this.parseStatement(null));\n  return this.exitScope(), e && this.finishNode(e, "SwitchCase"), this.next(), this.labels.pop(), this.finishNode(t, "SwitchStatement");\n};\nMe.parseThrowStatement = function(t) {\n  return this.next(), Qr.test(this.input.slice(this.lastTokEnd, this.start)) && this.raise(this.lastTokEnd, "Illegal newline after throw"), t.argument = this.parseExpression(), this.semicolon(), this.finishNode(t, "ThrowStatement");\n};\nvar vB = [];\nMe.parseCatchClauseParam = function() {\n  var t = this.parseBindingAtom(), e = t.type === "Identifier";\n  return this.enterScope(e ? a2 : 0), this.checkLValPattern(t, e ? u2 : Ri), this.expect(F.parenR), t;\n};\nMe.parseTryStatement = function(t) {\n  if (this.next(), t.block = this.parseBlock(), t.handler = null, this.type === F._catch) {\n    var e = this.startNode();\n    this.next(), this.eat(F.parenL) ? e.param = this.parseCatchClauseParam() : (this.options.ecmaVersion < 10 && this.unexpected(), e.param = null, this.enterScope(0)), e.body = this.parseBlock(!1), this.exitScope(), t.handler = this.finishNode(e, "CatchClause");\n  }\n  return t.finalizer = this.eat(F._finally) ? this.parseBlock() : null, !t.handler && !t.finalizer && this.raise(t.start, "Missing catch or finally clause"), this.finishNode(t, "TryStatement");\n};\nMe.parseVarStatement = function(t, e, n) {\n  return this.next(), this.parseVar(t, !1, e, n), this.semicolon(), this.finishNode(t, "VariableDeclaration");\n};\nMe.parseWhileStatement = function(t) {\n  return this.next(), t.test = this.parseParenExpression(), this.labels.push(wd), t.body = this.parseStatement("while"), this.labels.pop(), this.finishNode(t, "WhileStatement");\n};\nMe.parseWithStatement = function(t) {\n  return this.strict && this.raise(this.start, "\'with\' in strict mode"), this.next(), t.object = this.parseParenExpression(), t.body = this.parseStatement("with"), this.finishNode(t, "WithStatement");\n};\nMe.parseEmptyStatement = function(t) {\n  return this.next(), this.finishNode(t, "EmptyStatement");\n};\nMe.parseLabeledStatement = function(t, e, n, r) {\n  for (var i = 0, s = this.labels; i < s.length; i += 1) {\n    var a = s[i];\n    a.name === e && this.raise(n.start, "Label \'" + e + "\' is already declared");\n  }\n  for (var o = this.type.isLoop ? "loop" : this.type === F._switch ? "switch" : null, l = this.labels.length - 1; l >= 0; l--) {\n    var c = this.labels[l];\n    if (c.statementStart === t.start)\n      c.statementStart = this.start, c.kind = o;\n    else\n      break;\n  }\n  return this.labels.push({ name: e, kind: o, statementStart: this.start }), t.body = this.parseStatement(r ? r.indexOf("label") === -1 ? r + "label" : r : "label"), this.labels.pop(), t.label = n, this.finishNode(t, "LabeledStatement");\n};\nMe.parseExpressionStatement = function(t, e) {\n  return t.expression = e, this.semicolon(), this.finishNode(t, "ExpressionStatement");\n};\nMe.parseBlock = function(t, e, n) {\n  for (t === void 0 && (t = !0), e === void 0 && (e = this.startNode()), e.body = [], this.expect(F.braceL), t && this.enterScope(0); this.type !== F.braceR; ) {\n    var r = this.parseStatement(null);\n    e.body.push(r);\n  }\n  return n && (this.strict = !1), this.next(), t && this.exitScope(), this.finishNode(e, "BlockStatement");\n};\nMe.parseFor = function(t, e) {\n  return t.init = e, this.expect(F.semi), t.test = this.type === F.semi ? null : this.parseExpression(), this.expect(F.semi), t.update = this.type === F.parenR ? null : this.parseExpression(), this.expect(F.parenR), t.body = this.parseStatement("for"), this.exitScope(), this.labels.pop(), this.finishNode(t, "ForStatement");\n};\nMe.parseForIn = function(t, e) {\n  var n = this.type === F._in;\n  return this.next(), e.type === "VariableDeclaration" && e.declarations[0].init != null && (!n || this.options.ecmaVersion < 8 || this.strict || e.kind !== "var" || e.declarations[0].id.type !== "Identifier") && this.raise(\n    e.start,\n    (n ? "for-in" : "for-of") + " loop variable declaration may not have an initializer"\n  ), t.left = e, t.right = n ? this.parseExpression() : this.parseMaybeAssign(), this.expect(F.parenR), t.body = this.parseStatement("for"), this.exitScope(), this.labels.pop(), this.finishNode(t, n ? "ForInStatement" : "ForOfStatement");\n};\nMe.parseVar = function(t, e, n, r) {\n  for (t.declarations = [], t.kind = n; ; ) {\n    var i = this.startNode();\n    if (this.parseVarId(i, n), this.eat(F.eq) ? i.init = this.parseMaybeAssign(e) : !r && n === "const" && !(this.type === F._in || this.options.ecmaVersion >= 6 && this.isContextual("of")) ? this.unexpected() : !r && i.id.type !== "Identifier" && !(e && (this.type === F._in || this.isContextual("of"))) ? this.raise(this.lastTokEnd, "Complex binding patterns require an initialization value") : i.init = null, t.declarations.push(this.finishNode(i, "VariableDeclarator")), !this.eat(F.comma))\n      break;\n  }\n  return t;\n};\nMe.parseVarId = function(t, e) {\n  t.id = this.parseBindingAtom(), this.checkLValPattern(t.id, e === "var" ? kd : Ri, !1);\n};\nvar co = 1, Sp = 2, h2 = 4;\nMe.parseFunction = function(t, e, n, r, i) {\n  this.initFunction(t), (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !r) && (this.type === F.star && e & Sp && this.unexpected(), t.generator = this.eat(F.star)), this.options.ecmaVersion >= 8 && (t.async = !!r), e & co && (t.id = e & h2 && this.type !== F.name ? null : this.parseIdent(), t.id && !(e & Sp) && this.checkLValSimple(t.id, this.strict || t.generator || t.async ? this.treatFunctionsAsVar ? kd : Ri : l2));\n  var s = this.yieldPos, a = this.awaitPos, o = this.awaitIdentPos;\n  return this.yieldPos = 0, this.awaitPos = 0, this.awaitIdentPos = 0, this.enterScope(xd(t.async, t.generator)), e & co || (t.id = this.type === F.name ? this.parseIdent() : null), this.parseFunctionParams(t), this.parseFunctionBody(t, n, !1, i), this.yieldPos = s, this.awaitPos = a, this.awaitIdentPos = o, this.finishNode(t, e & co ? "FunctionDeclaration" : "FunctionExpression");\n};\nMe.parseFunctionParams = function(t) {\n  this.expect(F.parenL), t.params = this.parseBindingList(F.parenR, !1, this.options.ecmaVersion >= 8), this.checkYieldAwaitInDefaultParams();\n};\nMe.parseClass = function(t, e) {\n  this.next();\n  var n = this.strict;\n  this.strict = !0, this.parseClassId(t, e), this.parseClassSuper(t);\n  var r = this.enterClassBody(), i = this.startNode(), s = !1;\n  for (i.body = [], this.expect(F.braceL); this.type !== F.braceR; ) {\n    var a = this.parseClassElement(t.superClass !== null);\n    a && (i.body.push(a), a.type === "MethodDefinition" && a.kind === "constructor" ? (s && this.raiseRecoverable(a.start, "Duplicate constructor in the same class"), s = !0) : a.key && a.key.type === "PrivateIdentifier" && xB(r, a) && this.raiseRecoverable(a.key.start, "Identifier \'#" + a.key.name + "\' has already been declared"));\n  }\n  return this.strict = n, this.next(), t.body = this.finishNode(i, "ClassBody"), this.exitClassBody(), this.finishNode(t, e ? "ClassDeclaration" : "ClassExpression");\n};\nMe.parseClassElement = function(t) {\n  if (this.eat(F.semi))\n    return null;\n  var e = this.options.ecmaVersion, n = this.startNode(), r = "", i = !1, s = !1, a = "method", o = !1;\n  if (this.eatContextual("static")) {\n    if (e >= 13 && this.eat(F.braceL))\n      return this.parseClassStaticBlock(n), n;\n    this.isClassElementNameStart() || this.type === F.star ? o = !0 : r = "static";\n  }\n  if (n.static = o, !r && e >= 8 && this.eatContextual("async") && ((this.isClassElementNameStart() || this.type === F.star) && !this.canInsertSemicolon() ? s = !0 : r = "async"), !r && (e >= 9 || !s) && this.eat(F.star) && (i = !0), !r && !s && !i) {\n    var l = this.value;\n    (this.eatContextual("get") || this.eatContextual("set")) && (this.isClassElementNameStart() ? a = l : r = l);\n  }\n  if (r ? (n.computed = !1, n.key = this.startNodeAt(this.lastTokStart, this.lastTokStartLoc), n.key.name = r, this.finishNode(n.key, "Identifier")) : this.parseClassElementName(n), e < 13 || this.type === F.parenL || a !== "method" || i || s) {\n    var c = !n.static && yu(n, "constructor"), h = c && t;\n    c && a !== "method" && this.raise(n.key.start, "Constructor can\'t have get/set modifier"), n.kind = c ? "constructor" : a, this.parseClassMethod(n, i, s, h);\n  } else\n    this.parseClassField(n);\n  return n;\n};\nMe.isClassElementNameStart = function() {\n  return this.type === F.name || this.type === F.privateId || this.type === F.num || this.type === F.string || this.type === F.bracketL || this.type.keyword;\n};\nMe.parseClassElementName = function(t) {\n  this.type === F.privateId ? (this.value === "constructor" && this.raise(this.start, "Classes can\'t have an element named \'#constructor\'"), t.computed = !1, t.key = this.parsePrivateIdent()) : this.parsePropertyName(t);\n};\nMe.parseClassMethod = function(t, e, n, r) {\n  var i = t.key;\n  t.kind === "constructor" ? (e && this.raise(i.start, "Constructor can\'t be a generator"), n && this.raise(i.start, "Constructor can\'t be an async method")) : t.static && yu(t, "prototype") && this.raise(i.start, "Classes may not have a static property named prototype");\n  var s = t.value = this.parseMethod(e, n, r);\n  return t.kind === "get" && s.params.length !== 0 && this.raiseRecoverable(s.start, "getter should have no params"), t.kind === "set" && s.params.length !== 1 && this.raiseRecoverable(s.start, "setter should have exactly one param"), t.kind === "set" && s.params[0].type === "RestElement" && this.raiseRecoverable(s.params[0].start, "Setter cannot use rest params"), this.finishNode(t, "MethodDefinition");\n};\nMe.parseClassField = function(t) {\n  if (yu(t, "constructor") ? this.raise(t.key.start, "Classes can\'t have a field named \'constructor\'") : t.static && yu(t, "prototype") && this.raise(t.key.start, "Classes can\'t have a static field named \'prototype\'"), this.eat(F.eq)) {\n    var e = this.currentThisScope(), n = e.inClassFieldInit;\n    e.inClassFieldInit = !0, t.value = this.parseMaybeAssign(), e.inClassFieldInit = n;\n  } else\n    t.value = null;\n  return this.semicolon(), this.finishNode(t, "PropertyDefinition");\n};\nMe.parseClassStaticBlock = function(t) {\n  t.body = [];\n  var e = this.labels;\n  for (this.labels = [], this.enterScope(Vo | Od); this.type !== F.braceR; ) {\n    var n = this.parseStatement(null);\n    t.body.push(n);\n  }\n  return this.next(), this.exitScope(), this.labels = e, this.finishNode(t, "StaticBlock");\n};\nMe.parseClassId = function(t, e) {\n  this.type === F.name ? (t.id = this.parseIdent(), e && this.checkLValSimple(t.id, Ri, !1)) : (e === !0 && this.unexpected(), t.id = null);\n};\nMe.parseClassSuper = function(t) {\n  t.superClass = this.eat(F._extends) ? this.parseExprSubscripts(null, !1) : null;\n};\nMe.enterClassBody = function() {\n  var t = { declared: /* @__PURE__ */ Object.create(null), used: [] };\n  return this.privateNameStack.push(t), t.declared;\n};\nMe.exitClassBody = function() {\n  var t = this.privateNameStack.pop(), e = t.declared, n = t.used;\n  if (this.options.checkPrivateFields)\n    for (var r = this.privateNameStack.length, i = r === 0 ? null : this.privateNameStack[r - 1], s = 0; s < n.length; ++s) {\n      var a = n[s];\n      Ba(e, a.name) || (i ? i.used.push(a) : this.raiseRecoverable(a.start, "Private field \'#" + a.name + "\' must be declared in an enclosing class"));\n    }\n};\nfunction xB(t, e) {\n  var n = e.key.name, r = t[n], i = "true";\n  return e.type === "MethodDefinition" && (e.kind === "get" || e.kind === "set") && (i = (e.static ? "s" : "i") + e.kind), r === "iget" && i === "iset" || r === "iset" && i === "iget" || r === "sget" && i === "sset" || r === "sset" && i === "sget" ? (t[n] = "true", !1) : r ? !0 : (t[n] = i, !1);\n}\nfunction yu(t, e) {\n  var n = t.computed, r = t.key;\n  return !n && (r.type === "Identifier" && r.name === e || r.type === "Literal" && r.value === e);\n}\nMe.parseExportAllDeclaration = function(t, e) {\n  return this.options.ecmaVersion >= 11 && (this.eatContextual("as") ? (t.exported = this.parseModuleExportName(), this.checkExport(e, t.exported, this.lastTokStart)) : t.exported = null), this.expectContextual("from"), this.type !== F.string && this.unexpected(), t.source = this.parseExprAtom(), this.options.ecmaVersion >= 16 && (t.attributes = this.parseWithClause()), this.semicolon(), this.finishNode(t, "ExportAllDeclaration");\n};\nMe.parseExport = function(t, e) {\n  if (this.next(), this.eat(F.star))\n    return this.parseExportAllDeclaration(t, e);\n  if (this.eat(F._default))\n    return this.checkExport(e, "default", this.lastTokStart), t.declaration = this.parseExportDefaultDeclaration(), this.finishNode(t, "ExportDefaultDeclaration");\n  if (this.shouldParseExportStatement())\n    t.declaration = this.parseExportDeclaration(t), t.declaration.type === "VariableDeclaration" ? this.checkVariableExport(e, t.declaration.declarations) : this.checkExport(e, t.declaration.id, t.declaration.id.start), t.specifiers = [], t.source = null;\n  else {\n    if (t.declaration = null, t.specifiers = this.parseExportSpecifiers(e), this.eatContextual("from"))\n      this.type !== F.string && this.unexpected(), t.source = this.parseExprAtom(), this.options.ecmaVersion >= 16 && (t.attributes = this.parseWithClause());\n    else {\n      for (var n = 0, r = t.specifiers; n < r.length; n += 1) {\n        var i = r[n];\n        this.checkUnreserved(i.local), this.checkLocalExport(i.local), i.local.type === "Literal" && this.raise(i.local.start, "A string literal cannot be used as an exported binding without `from`.");\n      }\n      t.source = null;\n    }\n    this.semicolon();\n  }\n  return this.finishNode(t, "ExportNamedDeclaration");\n};\nMe.parseExportDeclaration = function(t) {\n  return this.parseStatement(null);\n};\nMe.parseExportDefaultDeclaration = function() {\n  var t;\n  if (this.type === F._function || (t = this.isAsyncFunction())) {\n    var e = this.startNode();\n    return this.next(), t && this.next(), this.parseFunction(e, co | h2, !1, t);\n  } else if (this.type === F._class) {\n    var n = this.startNode();\n    return this.parseClass(n, "nullableID");\n  } else {\n    var r = this.parseMaybeAssign();\n    return this.semicolon(), r;\n  }\n};\nMe.checkExport = function(t, e, n) {\n  t && (typeof e != "string" && (e = e.type === "Identifier" ? e.name : e.value), Ba(t, e) && this.raiseRecoverable(n, "Duplicate export \'" + e + "\'"), t[e] = !0);\n};\nMe.checkPatternExport = function(t, e) {\n  var n = e.type;\n  if (n === "Identifier")\n    this.checkExport(t, e, e.start);\n  else if (n === "ObjectPattern")\n    for (var r = 0, i = e.properties; r < i.length; r += 1) {\n      var s = i[r];\n      this.checkPatternExport(t, s);\n    }\n  else if (n === "ArrayPattern")\n    for (var a = 0, o = e.elements; a < o.length; a += 1) {\n      var l = o[a];\n      l && this.checkPatternExport(t, l);\n    }\n  else n === "Property" ? this.checkPatternExport(t, e.value) : n === "AssignmentPattern" ? this.checkPatternExport(t, e.left) : n === "RestElement" && this.checkPatternExport(t, e.argument);\n};\nMe.checkVariableExport = function(t, e) {\n  if (t)\n    for (var n = 0, r = e; n < r.length; n += 1) {\n      var i = r[n];\n      this.checkPatternExport(t, i.id);\n    }\n};\nMe.shouldParseExportStatement = function() {\n  return this.type.keyword === "var" || this.type.keyword === "const" || this.type.keyword === "class" || this.type.keyword === "function" || this.isLet() || this.isAsyncFunction();\n};\nMe.parseExportSpecifier = function(t) {\n  var e = this.startNode();\n  return e.local = this.parseModuleExportName(), e.exported = this.eatContextual("as") ? this.parseModuleExportName() : e.local, this.checkExport(\n    t,\n    e.exported,\n    e.exported.start\n  ), this.finishNode(e, "ExportSpecifier");\n};\nMe.parseExportSpecifiers = function(t) {\n  var e = [], n = !0;\n  for (this.expect(F.braceL); !this.eat(F.braceR); ) {\n    if (n)\n      n = !1;\n    else if (this.expect(F.comma), this.afterTrailingComma(F.braceR))\n      break;\n    e.push(this.parseExportSpecifier(t));\n  }\n  return e;\n};\nMe.parseImport = function(t) {\n  return this.next(), this.type === F.string ? (t.specifiers = vB, t.source = this.parseExprAtom()) : (t.specifiers = this.parseImportSpecifiers(), this.expectContextual("from"), t.source = this.type === F.string ? this.parseExprAtom() : this.unexpected()), this.options.ecmaVersion >= 16 && (t.attributes = this.parseWithClause()), this.semicolon(), this.finishNode(t, "ImportDeclaration");\n};\nMe.parseImportSpecifier = function() {\n  var t = this.startNode();\n  return t.imported = this.parseModuleExportName(), this.eatContextual("as") ? t.local = this.parseIdent() : (this.checkUnreserved(t.imported), t.local = t.imported), this.checkLValSimple(t.local, Ri), this.finishNode(t, "ImportSpecifier");\n};\nMe.parseImportDefaultSpecifier = function() {\n  var t = this.startNode();\n  return t.local = this.parseIdent(), this.checkLValSimple(t.local, Ri), this.finishNode(t, "ImportDefaultSpecifier");\n};\nMe.parseImportNamespaceSpecifier = function() {\n  var t = this.startNode();\n  return this.next(), this.expectContextual("as"), t.local = this.parseIdent(), this.checkLValSimple(t.local, Ri), this.finishNode(t, "ImportNamespaceSpecifier");\n};\nMe.parseImportSpecifiers = function() {\n  var t = [], e = !0;\n  if (this.type === F.name && (t.push(this.parseImportDefaultSpecifier()), !this.eat(F.comma)))\n    return t;\n  if (this.type === F.star)\n    return t.push(this.parseImportNamespaceSpecifier()), t;\n  for (this.expect(F.braceL); !this.eat(F.braceR); ) {\n    if (e)\n      e = !1;\n    else if (this.expect(F.comma), this.afterTrailingComma(F.braceR))\n      break;\n    t.push(this.parseImportSpecifier());\n  }\n  return t;\n};\nMe.parseWithClause = function() {\n  var t = [];\n  if (!this.eat(F._with))\n    return t;\n  this.expect(F.braceL);\n  for (var e = {}, n = !0; !this.eat(F.braceR); ) {\n    if (n)\n      n = !1;\n    else if (this.expect(F.comma), this.afterTrailingComma(F.braceR))\n      break;\n    var r = this.parseImportAttribute(), i = r.key.type === "Identifier" ? r.key.name : r.key.value;\n    Ba(e, i) && this.raiseRecoverable(r.key.start, "Duplicate attribute key \'" + i + "\'"), e[i] = !0, t.push(r);\n  }\n  return t;\n};\nMe.parseImportAttribute = function() {\n  var t = this.startNode();\n  return t.key = this.type === F.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== "never"), this.expect(F.colon), this.type !== F.string && this.unexpected(), t.value = this.parseExprAtom(), this.finishNode(t, "ImportAttribute");\n};\nMe.parseModuleExportName = function() {\n  if (this.options.ecmaVersion >= 13 && this.type === F.string) {\n    var t = this.parseLiteral(this.value);\n    return mB.test(t.value) && this.raise(t.start, "An export name cannot include a lone surrogate."), t;\n  }\n  return this.parseIdent(!0);\n};\nMe.adaptDirectivePrologue = function(t) {\n  for (var e = 0; e < t.length && this.isDirectiveCandidate(t[e]); ++e)\n    t[e].directive = t[e].expression.raw.slice(1, -1);\n};\nMe.isDirectiveCandidate = function(t) {\n  return this.options.ecmaVersion >= 5 && t.type === "ExpressionStatement" && t.expression.type === "Literal" && typeof t.expression.value == "string" && // Reject parenthesized strings.\n  (this.input[t.start] === \'"\' || this.input[t.start] === "\'");\n};\nvar Tr = hn.prototype;\nTr.toAssignable = function(t, e, n) {\n  if (this.options.ecmaVersion >= 6 && t)\n    switch (t.type) {\n      case "Identifier":\n        this.inAsync && t.name === "await" && this.raise(t.start, "Cannot use \'await\' as identifier inside an async function");\n        break;\n      case "ObjectPattern":\n      case "ArrayPattern":\n      case "AssignmentPattern":\n      case "RestElement":\n        break;\n      case "ObjectExpression":\n        t.type = "ObjectPattern", n && this.checkPatternErrors(n, !0);\n        for (var r = 0, i = t.properties; r < i.length; r += 1) {\n          var s = i[r];\n          this.toAssignable(s, e), s.type === "RestElement" && (s.argument.type === "ArrayPattern" || s.argument.type === "ObjectPattern") && this.raise(s.argument.start, "Unexpected token");\n        }\n        break;\n      case "Property":\n        t.kind !== "init" && this.raise(t.key.start, "Object pattern can\'t contain getter or setter"), this.toAssignable(t.value, e);\n        break;\n      case "ArrayExpression":\n        t.type = "ArrayPattern", n && this.checkPatternErrors(n, !0), this.toAssignableList(t.elements, e);\n        break;\n      case "SpreadElement":\n        t.type = "RestElement", this.toAssignable(t.argument, e), t.argument.type === "AssignmentPattern" && this.raise(t.argument.start, "Rest elements cannot have a default value");\n        break;\n      case "AssignmentExpression":\n        t.operator !== "=" && this.raise(t.left.end, "Only \'=\' operator can be used for specifying default value."), t.type = "AssignmentPattern", delete t.operator, this.toAssignable(t.left, e);\n        break;\n      case "ParenthesizedExpression":\n        this.toAssignable(t.expression, e, n);\n        break;\n      case "ChainExpression":\n        this.raiseRecoverable(t.start, "Optional chaining cannot appear in left-hand side");\n        break;\n      case "MemberExpression":\n        if (!e)\n          break;\n      default:\n        this.raise(t.start, "Assigning to rvalue");\n    }\n  else n && this.checkPatternErrors(n, !0);\n  return t;\n};\nTr.toAssignableList = function(t, e) {\n  for (var n = t.length, r = 0; r < n; r++) {\n    var i = t[r];\n    i && this.toAssignable(i, e);\n  }\n  if (n) {\n    var s = t[n - 1];\n    this.options.ecmaVersion === 6 && e && s && s.type === "RestElement" && s.argument.type !== "Identifier" && this.unexpected(s.argument.start);\n  }\n  return t;\n};\nTr.parseSpread = function(t) {\n  var e = this.startNode();\n  return this.next(), e.argument = this.parseMaybeAssign(!1, t), this.finishNode(e, "SpreadElement");\n};\nTr.parseRestBinding = function() {\n  var t = this.startNode();\n  return this.next(), this.options.ecmaVersion === 6 && this.type !== F.name && this.unexpected(), t.argument = this.parseBindingAtom(), this.finishNode(t, "RestElement");\n};\nTr.parseBindingAtom = function() {\n  if (this.options.ecmaVersion >= 6)\n    switch (this.type) {\n      case F.bracketL:\n        var t = this.startNode();\n        return this.next(), t.elements = this.parseBindingList(F.bracketR, !0, !0), this.finishNode(t, "ArrayPattern");\n      case F.braceL:\n        return this.parseObj(!0);\n    }\n  return this.parseIdent();\n};\nTr.parseBindingList = function(t, e, n, r) {\n  for (var i = [], s = !0; !this.eat(t); )\n    if (s ? s = !1 : this.expect(F.comma), e && this.type === F.comma)\n      i.push(null);\n    else {\n      if (n && this.afterTrailingComma(t))\n        break;\n      if (this.type === F.ellipsis) {\n        var a = this.parseRestBinding();\n        this.parseBindingListItem(a), i.push(a), this.type === F.comma && this.raiseRecoverable(this.start, "Comma is not permitted after the rest element"), this.expect(t);\n        break;\n      } else\n        i.push(this.parseAssignableListItem(r));\n    }\n  return i;\n};\nTr.parseAssignableListItem = function(t) {\n  var e = this.parseMaybeDefault(this.start, this.startLoc);\n  return this.parseBindingListItem(e), e;\n};\nTr.parseBindingListItem = function(t) {\n  return t;\n};\nTr.parseMaybeDefault = function(t, e, n) {\n  if (n = n || this.parseBindingAtom(), this.options.ecmaVersion < 6 || !this.eat(F.eq))\n    return n;\n  var r = this.startNodeAt(t, e);\n  return r.left = n, r.right = this.parseMaybeAssign(), this.finishNode(r, "AssignmentPattern");\n};\nTr.checkLValSimple = function(t, e, n) {\n  e === void 0 && (e = bu);\n  var r = e !== bu;\n  switch (t.type) {\n    case "Identifier":\n      this.strict && this.reservedWordsStrictBind.test(t.name) && this.raiseRecoverable(t.start, (r ? "Binding " : "Assigning to ") + t.name + " in strict mode"), r && (e === Ri && t.name === "let" && this.raiseRecoverable(t.start, "let is disallowed as a lexically bound name"), n && (Ba(n, t.name) && this.raiseRecoverable(t.start, "Argument name clash"), n[t.name] = !0), e !== c2 && this.declareName(t.name, e, t.start));\n      break;\n    case "ChainExpression":\n      this.raiseRecoverable(t.start, "Optional chaining cannot appear in left-hand side");\n      break;\n    case "MemberExpression":\n      r && this.raiseRecoverable(t.start, "Binding member expression");\n      break;\n    case "ParenthesizedExpression":\n      return r && this.raiseRecoverable(t.start, "Binding parenthesized expression"), this.checkLValSimple(t.expression, e, n);\n    default:\n      this.raise(t.start, (r ? "Binding" : "Assigning to") + " rvalue");\n  }\n};\nTr.checkLValPattern = function(t, e, n) {\n  switch (e === void 0 && (e = bu), t.type) {\n    case "ObjectPattern":\n      for (var r = 0, i = t.properties; r < i.length; r += 1) {\n        var s = i[r];\n        this.checkLValInnerPattern(s, e, n);\n      }\n      break;\n    case "ArrayPattern":\n      for (var a = 0, o = t.elements; a < o.length; a += 1) {\n        var l = o[a];\n        l && this.checkLValInnerPattern(l, e, n);\n      }\n      break;\n    default:\n      this.checkLValSimple(t, e, n);\n  }\n};\nTr.checkLValInnerPattern = function(t, e, n) {\n  switch (e === void 0 && (e = bu), t.type) {\n    case "Property":\n      this.checkLValInnerPattern(t.value, e, n);\n      break;\n    case "AssignmentPattern":\n      this.checkLValPattern(t.left, e, n);\n      break;\n    case "RestElement":\n      this.checkLValPattern(t.argument, e, n);\n      break;\n    default:\n      this.checkLValPattern(t, e, n);\n  }\n};\nvar Vr = function(e, n, r, i, s) {\n  this.token = e, this.isExpr = !!n, this.preserveSpace = !!r, this.override = i, this.generator = !!s;\n}, Lt = {\n  b_stat: new Vr("{", !1),\n  b_expr: new Vr("{", !0),\n  b_tmpl: new Vr("${", !1),\n  p_stat: new Vr("(", !1),\n  p_expr: new Vr("(", !0),\n  q_tmpl: new Vr("`", !0, !0, function(t) {\n    return t.tryReadTemplateToken();\n  }),\n  f_stat: new Vr("function", !1),\n  f_expr: new Vr("function", !0),\n  f_expr_gen: new Vr("function", !0, !1, null, !0),\n  f_gen: new Vr("function", !1, !1, null, !0)\n}, Qa = hn.prototype;\nQa.initialContext = function() {\n  return [Lt.b_stat];\n};\nQa.curContext = function() {\n  return this.context[this.context.length - 1];\n};\nQa.braceIsBlock = function(t) {\n  var e = this.curContext();\n  return e === Lt.f_expr || e === Lt.f_stat ? !0 : t === F.colon && (e === Lt.b_stat || e === Lt.b_expr) ? !e.isExpr : t === F._return || t === F.name && this.exprAllowed ? Qr.test(this.input.slice(this.lastTokEnd, this.start)) : t === F._else || t === F.semi || t === F.eof || t === F.parenR || t === F.arrow ? !0 : t === F.braceL ? e === Lt.b_stat : t === F._var || t === F._const || t === F.name ? !1 : !this.exprAllowed;\n};\nQa.inGeneratorContext = function() {\n  for (var t = this.context.length - 1; t >= 1; t--) {\n    var e = this.context[t];\n    if (e.token === "function")\n      return e.generator;\n  }\n  return !1;\n};\nQa.updateContext = function(t) {\n  var e, n = this.type;\n  n.keyword && t === F.dot ? this.exprAllowed = !1 : (e = n.updateContext) ? e.call(this, t) : this.exprAllowed = n.beforeExpr;\n};\nQa.overrideContext = function(t) {\n  this.curContext() !== t && (this.context[this.context.length - 1] = t);\n};\nF.parenR.updateContext = F.braceR.updateContext = function() {\n  if (this.context.length === 1) {\n    this.exprAllowed = !0;\n    return;\n  }\n  var t = this.context.pop();\n  t === Lt.b_stat && this.curContext().token === "function" && (t = this.context.pop()), this.exprAllowed = !t.isExpr;\n};\nF.braceL.updateContext = function(t) {\n  this.context.push(this.braceIsBlock(t) ? Lt.b_stat : Lt.b_expr), this.exprAllowed = !0;\n};\nF.dollarBraceL.updateContext = function() {\n  this.context.push(Lt.b_tmpl), this.exprAllowed = !0;\n};\nF.parenL.updateContext = function(t) {\n  var e = t === F._if || t === F._for || t === F._with || t === F._while;\n  this.context.push(e ? Lt.p_stat : Lt.p_expr), this.exprAllowed = !0;\n};\nF.incDec.updateContext = function() {\n};\nF._function.updateContext = F._class.updateContext = function(t) {\n  t.beforeExpr && t !== F._else && !(t === F.semi && this.curContext() !== Lt.p_stat) && !(t === F._return && Qr.test(this.input.slice(this.lastTokEnd, this.start))) && !((t === F.colon || t === F.braceL) && this.curContext() === Lt.b_stat) ? this.context.push(Lt.f_expr) : this.context.push(Lt.f_stat), this.exprAllowed = !1;\n};\nF.colon.updateContext = function() {\n  this.curContext().token === "function" && this.context.pop(), this.exprAllowed = !0;\n};\nF.backQuote.updateContext = function() {\n  this.curContext() === Lt.q_tmpl ? this.context.pop() : this.context.push(Lt.q_tmpl), this.exprAllowed = !1;\n};\nF.star.updateContext = function(t) {\n  if (t === F._function) {\n    var e = this.context.length - 1;\n    this.context[e] === Lt.f_expr ? this.context[e] = Lt.f_expr_gen : this.context[e] = Lt.f_gen;\n  }\n  this.exprAllowed = !0;\n};\nF.name.updateContext = function(t) {\n  var e = !1;\n  this.options.ecmaVersion >= 6 && t !== F.dot && (this.value === "of" && !this.exprAllowed || this.value === "yield" && this.inGeneratorContext()) && (e = !0), this.exprAllowed = e;\n};\nvar Ue = hn.prototype;\nUe.checkPropClash = function(t, e, n) {\n  if (!(this.options.ecmaVersion >= 9 && t.type === "SpreadElement") && !(this.options.ecmaVersion >= 6 && (t.computed || t.method || t.shorthand))) {\n    var r = t.key, i;\n    switch (r.type) {\n      case "Identifier":\n        i = r.name;\n        break;\n      case "Literal":\n        i = String(r.value);\n        break;\n      default:\n        return;\n    }\n    var s = t.kind;\n    if (this.options.ecmaVersion >= 6) {\n      i === "__proto__" && s === "init" && (e.proto && (n ? n.doubleProto < 0 && (n.doubleProto = r.start) : this.raiseRecoverable(r.start, "Redefinition of __proto__ property")), e.proto = !0);\n      return;\n    }\n    i = "$" + i;\n    var a = e[i];\n    if (a) {\n      var o;\n      s === "init" ? o = this.strict && a.init || a.get || a.set : o = a.init || a[s], o && this.raiseRecoverable(r.start, "Redefinition of property");\n    } else\n      a = e[i] = {\n        init: !1,\n        get: !1,\n        set: !1\n      };\n    a[s] = !0;\n  }\n};\nUe.parseExpression = function(t, e) {\n  var n = this.start, r = this.startLoc, i = this.parseMaybeAssign(t, e);\n  if (this.type === F.comma) {\n    var s = this.startNodeAt(n, r);\n    for (s.expressions = [i]; this.eat(F.comma); )\n      s.expressions.push(this.parseMaybeAssign(t, e));\n    return this.finishNode(s, "SequenceExpression");\n  }\n  return i;\n};\nUe.parseMaybeAssign = function(t, e, n) {\n  if (this.isContextual("yield")) {\n    if (this.inGenerator)\n      return this.parseYield(t);\n    this.exprAllowed = !1;\n  }\n  var r = !1, i = -1, s = -1, a = -1;\n  e ? (i = e.parenthesizedAssign, s = e.trailingComma, a = e.doubleProto, e.parenthesizedAssign = e.trailingComma = -1) : (e = new Cc(), r = !0);\n  var o = this.start, l = this.startLoc;\n  (this.type === F.parenL || this.type === F.name) && (this.potentialArrowAt = this.start, this.potentialArrowInForAwait = t === "await");\n  var c = this.parseMaybeConditional(t, e);\n  if (n && (c = n.call(this, c, o, l)), this.type.isAssign) {\n    var h = this.startNodeAt(o, l);\n    return h.operator = this.value, this.type === F.eq && (c = this.toAssignable(c, !1, e)), r || (e.parenthesizedAssign = e.trailingComma = e.doubleProto = -1), e.shorthandAssign >= c.start && (e.shorthandAssign = -1), this.type === F.eq ? this.checkLValPattern(c) : this.checkLValSimple(c), h.left = c, this.next(), h.right = this.parseMaybeAssign(t), a > -1 && (e.doubleProto = a), this.finishNode(h, "AssignmentExpression");\n  } else\n    r && this.checkExpressionErrors(e, !0);\n  return i > -1 && (e.parenthesizedAssign = i), s > -1 && (e.trailingComma = s), c;\n};\nUe.parseMaybeConditional = function(t, e) {\n  var n = this.start, r = this.startLoc, i = this.parseExprOps(t, e);\n  if (this.checkExpressionErrors(e))\n    return i;\n  if (this.eat(F.question)) {\n    var s = this.startNodeAt(n, r);\n    return s.test = i, s.consequent = this.parseMaybeAssign(), this.expect(F.colon), s.alternate = this.parseMaybeAssign(t), this.finishNode(s, "ConditionalExpression");\n  }\n  return i;\n};\nUe.parseExprOps = function(t, e) {\n  var n = this.start, r = this.startLoc, i = this.parseMaybeUnary(e, !1, !1, t);\n  return this.checkExpressionErrors(e) || i.start === n && i.type === "ArrowFunctionExpression" ? i : this.parseExprOp(i, n, r, -1, t);\n};\nUe.parseExprOp = function(t, e, n, r, i) {\n  var s = this.type.binop;\n  if (s != null && (!i || this.type !== F._in) && s > r) {\n    var a = this.type === F.logicalOR || this.type === F.logicalAND, o = this.type === F.coalesce;\n    o && (s = F.logicalAND.binop);\n    var l = this.value;\n    this.next();\n    var c = this.start, h = this.startLoc, f = this.parseExprOp(this.parseMaybeUnary(null, !1, !1, i), c, h, s, i), m = this.buildBinary(e, n, t, f, l, a || o);\n    return (a && this.type === F.coalesce || o && (this.type === F.logicalOR || this.type === F.logicalAND)) && this.raiseRecoverable(this.start, "Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses"), this.parseExprOp(m, e, n, r, i);\n  }\n  return t;\n};\nUe.buildBinary = function(t, e, n, r, i, s) {\n  r.type === "PrivateIdentifier" && this.raise(r.start, "Private identifier can only be left side of binary expression");\n  var a = this.startNodeAt(t, e);\n  return a.left = n, a.operator = i, a.right = r, this.finishNode(a, s ? "LogicalExpression" : "BinaryExpression");\n};\nUe.parseMaybeUnary = function(t, e, n, r) {\n  var i = this.start, s = this.startLoc, a;\n  if (this.isContextual("await") && this.canAwait)\n    a = this.parseAwait(r), e = !0;\n  else if (this.type.prefix) {\n    var o = this.startNode(), l = this.type === F.incDec;\n    o.operator = this.value, o.prefix = !0, this.next(), o.argument = this.parseMaybeUnary(null, !0, l, r), this.checkExpressionErrors(t, !0), l ? this.checkLValSimple(o.argument) : this.strict && o.operator === "delete" && p2(o.argument) ? this.raiseRecoverable(o.start, "Deleting local variable in strict mode") : o.operator === "delete" && Ap(o.argument) ? this.raiseRecoverable(o.start, "Private fields can not be deleted") : e = !0, a = this.finishNode(o, l ? "UpdateExpression" : "UnaryExpression");\n  } else if (!e && this.type === F.privateId)\n    (r || this.privateNameStack.length === 0) && this.options.checkPrivateFields && this.unexpected(), a = this.parsePrivateIdent(), this.type !== F._in && this.unexpected();\n  else {\n    if (a = this.parseExprSubscripts(t, r), this.checkExpressionErrors(t))\n      return a;\n    for (; this.type.postfix && !this.canInsertSemicolon(); ) {\n      var c = this.startNodeAt(i, s);\n      c.operator = this.value, c.prefix = !1, c.argument = a, this.checkLValSimple(a), this.next(), a = this.finishNode(c, "UpdateExpression");\n    }\n  }\n  if (!n && this.eat(F.starstar))\n    if (e)\n      this.unexpected(this.lastTokStart);\n    else\n      return this.buildBinary(i, s, a, this.parseMaybeUnary(null, !1, !1, r), "**", !1);\n  else\n    return a;\n};\nfunction p2(t) {\n  return t.type === "Identifier" || t.type === "ParenthesizedExpression" && p2(t.expression);\n}\nfunction Ap(t) {\n  return t.type === "MemberExpression" && t.property.type === "PrivateIdentifier" || t.type === "ChainExpression" && Ap(t.expression) || t.type === "ParenthesizedExpression" && Ap(t.expression);\n}\nUe.parseExprSubscripts = function(t, e) {\n  var n = this.start, r = this.startLoc, i = this.parseExprAtom(t, e);\n  if (i.type === "ArrowFunctionExpression" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== ")")\n    return i;\n  var s = this.parseSubscripts(i, n, r, !1, e);\n  return t && s.type === "MemberExpression" && (t.parenthesizedAssign >= s.start && (t.parenthesizedAssign = -1), t.parenthesizedBind >= s.start && (t.parenthesizedBind = -1), t.trailingComma >= s.start && (t.trailingComma = -1)), s;\n};\nUe.parseSubscripts = function(t, e, n, r, i) {\n  for (var s = this.options.ecmaVersion >= 8 && t.type === "Identifier" && t.name === "async" && this.lastTokEnd === t.end && !this.canInsertSemicolon() && t.end - t.start === 5 && this.potentialArrowAt === t.start, a = !1; ; ) {\n    var o = this.parseSubscript(t, e, n, r, s, a, i);\n    if (o.optional && (a = !0), o === t || o.type === "ArrowFunctionExpression") {\n      if (a) {\n        var l = this.startNodeAt(e, n);\n        l.expression = o, o = this.finishNode(l, "ChainExpression");\n      }\n      return o;\n    }\n    t = o;\n  }\n};\nUe.shouldParseAsyncArrow = function() {\n  return !this.canInsertSemicolon() && this.eat(F.arrow);\n};\nUe.parseSubscriptAsyncArrow = function(t, e, n, r) {\n  return this.parseArrowExpression(this.startNodeAt(t, e), n, !0, r);\n};\nUe.parseSubscript = function(t, e, n, r, i, s, a) {\n  var o = this.options.ecmaVersion >= 11, l = o && this.eat(F.questionDot);\n  r && l && this.raise(this.lastTokStart, "Optional chaining cannot appear in the callee of new expressions");\n  var c = this.eat(F.bracketL);\n  if (c || l && this.type !== F.parenL && this.type !== F.backQuote || this.eat(F.dot)) {\n    var h = this.startNodeAt(e, n);\n    h.object = t, c ? (h.property = this.parseExpression(), this.expect(F.bracketR)) : this.type === F.privateId && t.type !== "Super" ? h.property = this.parsePrivateIdent() : h.property = this.parseIdent(this.options.allowReserved !== "never"), h.computed = !!c, o && (h.optional = l), t = this.finishNode(h, "MemberExpression");\n  } else if (!r && this.eat(F.parenL)) {\n    var f = new Cc(), m = this.yieldPos, y = this.awaitPos, v = this.awaitIdentPos;\n    this.yieldPos = 0, this.awaitPos = 0, this.awaitIdentPos = 0;\n    var C = this.parseExprList(F.parenR, this.options.ecmaVersion >= 8, !1, f);\n    if (i && !l && this.shouldParseAsyncArrow())\n      return this.checkPatternErrors(f, !1), this.checkYieldAwaitInDefaultParams(), this.awaitIdentPos > 0 && this.raise(this.awaitIdentPos, "Cannot use \'await\' as identifier inside an async function"), this.yieldPos = m, this.awaitPos = y, this.awaitIdentPos = v, this.parseSubscriptAsyncArrow(e, n, C, a);\n    this.checkExpressionErrors(f, !0), this.yieldPos = m || this.yieldPos, this.awaitPos = y || this.awaitPos, this.awaitIdentPos = v || this.awaitIdentPos;\n    var S = this.startNodeAt(e, n);\n    S.callee = t, S.arguments = C, o && (S.optional = l), t = this.finishNode(S, "CallExpression");\n  } else if (this.type === F.backQuote) {\n    (l || s) && this.raise(this.start, "Optional chaining cannot appear in the tag of tagged template expressions");\n    var M = this.startNodeAt(e, n);\n    M.tag = t, M.quasi = this.parseTemplate({ isTagged: !0 }), t = this.finishNode(M, "TaggedTemplateExpression");\n  }\n  return t;\n};\nUe.parseExprAtom = function(t, e, n) {\n  this.type === F.slash && this.readRegexp();\n  var r, i = this.potentialArrowAt === this.start;\n  switch (this.type) {\n    case F._super:\n      return this.allowSuper || this.raise(this.start, "\'super\' keyword outside a method"), r = this.startNode(), this.next(), this.type === F.parenL && !this.allowDirectSuper && this.raise(r.start, "super() call outside constructor of a subclass"), this.type !== F.dot && this.type !== F.bracketL && this.type !== F.parenL && this.unexpected(), this.finishNode(r, "Super");\n    case F._this:\n      return r = this.startNode(), this.next(), this.finishNode(r, "ThisExpression");\n    case F.name:\n      var s = this.start, a = this.startLoc, o = this.containsEsc, l = this.parseIdent(!1);\n      if (this.options.ecmaVersion >= 8 && !o && l.name === "async" && !this.canInsertSemicolon() && this.eat(F._function))\n        return this.overrideContext(Lt.f_expr), this.parseFunction(this.startNodeAt(s, a), 0, !1, !0, e);\n      if (i && !this.canInsertSemicolon()) {\n        if (this.eat(F.arrow))\n          return this.parseArrowExpression(this.startNodeAt(s, a), [l], !1, e);\n        if (this.options.ecmaVersion >= 8 && l.name === "async" && this.type === F.name && !o && (!this.potentialArrowInForAwait || this.value !== "of" || this.containsEsc))\n          return l = this.parseIdent(!1), (this.canInsertSemicolon() || !this.eat(F.arrow)) && this.unexpected(), this.parseArrowExpression(this.startNodeAt(s, a), [l], !0, e);\n      }\n      return l;\n    case F.regexp:\n      var c = this.value;\n      return r = this.parseLiteral(c.value), r.regex = { pattern: c.pattern, flags: c.flags }, r;\n    case F.num:\n    case F.string:\n      return this.parseLiteral(this.value);\n    case F._null:\n    case F._true:\n    case F._false:\n      return r = this.startNode(), r.value = this.type === F._null ? null : this.type === F._true, r.raw = this.type.keyword, this.next(), this.finishNode(r, "Literal");\n    case F.parenL:\n      var h = this.start, f = this.parseParenAndDistinguishExpression(i, e);\n      return t && (t.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(f) && (t.parenthesizedAssign = h), t.parenthesizedBind < 0 && (t.parenthesizedBind = h)), f;\n    case F.bracketL:\n      return r = this.startNode(), this.next(), r.elements = this.parseExprList(F.bracketR, !0, !0, t), this.finishNode(r, "ArrayExpression");\n    case F.braceL:\n      return this.overrideContext(Lt.b_expr), this.parseObj(!1, t);\n    case F._function:\n      return r = this.startNode(), this.next(), this.parseFunction(r, 0);\n    case F._class:\n      return this.parseClass(this.startNode(), !1);\n    case F._new:\n      return this.parseNew();\n    case F.backQuote:\n      return this.parseTemplate();\n    case F._import:\n      return this.options.ecmaVersion >= 11 ? this.parseExprImport(n) : this.unexpected();\n    default:\n      return this.parseExprAtomDefault();\n  }\n};\nUe.parseExprAtomDefault = function() {\n  this.unexpected();\n};\nUe.parseExprImport = function(t) {\n  var e = this.startNode();\n  if (this.containsEsc && this.raiseRecoverable(this.start, "Escape sequence in keyword import"), this.next(), this.type === F.parenL && !t)\n    return this.parseDynamicImport(e);\n  if (this.type === F.dot) {\n    var n = this.startNodeAt(e.start, e.loc && e.loc.start);\n    return n.name = "import", e.meta = this.finishNode(n, "Identifier"), this.parseImportMeta(e);\n  } else\n    this.unexpected();\n};\nUe.parseDynamicImport = function(t) {\n  if (this.next(), t.source = this.parseMaybeAssign(), this.options.ecmaVersion >= 16)\n    this.eat(F.parenR) ? t.options = null : (this.expect(F.comma), this.afterTrailingComma(F.parenR) ? t.options = null : (t.options = this.parseMaybeAssign(), this.eat(F.parenR) || (this.expect(F.comma), this.afterTrailingComma(F.parenR) || this.unexpected())));\n  else if (!this.eat(F.parenR)) {\n    var e = this.start;\n    this.eat(F.comma) && this.eat(F.parenR) ? this.raiseRecoverable(e, "Trailing comma is not allowed in import()") : this.unexpected(e);\n  }\n  return this.finishNode(t, "ImportExpression");\n};\nUe.parseImportMeta = function(t) {\n  this.next();\n  var e = this.containsEsc;\n  return t.property = this.parseIdent(!0), t.property.name !== "meta" && this.raiseRecoverable(t.property.start, "The only valid meta property for import is \'import.meta\'"), e && this.raiseRecoverable(t.start, "\'import.meta\' must not contain escaped characters"), this.options.sourceType !== "module" && !this.options.allowImportExportEverywhere && this.raiseRecoverable(t.start, "Cannot use \'import.meta\' outside a module"), this.finishNode(t, "MetaProperty");\n};\nUe.parseLiteral = function(t) {\n  var e = this.startNode();\n  return e.value = t, e.raw = this.input.slice(this.start, this.end), e.raw.charCodeAt(e.raw.length - 1) === 110 && (e.bigint = e.raw.slice(0, -1).replace(/_/g, "")), this.next(), this.finishNode(e, "Literal");\n};\nUe.parseParenExpression = function() {\n  this.expect(F.parenL);\n  var t = this.parseExpression();\n  return this.expect(F.parenR), t;\n};\nUe.shouldParseArrow = function(t) {\n  return !this.canInsertSemicolon();\n};\nUe.parseParenAndDistinguishExpression = function(t, e) {\n  var n = this.start, r = this.startLoc, i, s = this.options.ecmaVersion >= 8;\n  if (this.options.ecmaVersion >= 6) {\n    this.next();\n    var a = this.start, o = this.startLoc, l = [], c = !0, h = !1, f = new Cc(), m = this.yieldPos, y = this.awaitPos, v;\n    for (this.yieldPos = 0, this.awaitPos = 0; this.type !== F.parenR; )\n      if (c ? c = !1 : this.expect(F.comma), s && this.afterTrailingComma(F.parenR, !0)) {\n        h = !0;\n        break;\n      } else if (this.type === F.ellipsis) {\n        v = this.start, l.push(this.parseParenItem(this.parseRestBinding())), this.type === F.comma && this.raiseRecoverable(\n          this.start,\n          "Comma is not permitted after the rest element"\n        );\n        break;\n      } else\n        l.push(this.parseMaybeAssign(!1, f, this.parseParenItem));\n    var C = this.lastTokEnd, S = this.lastTokEndLoc;\n    if (this.expect(F.parenR), t && this.shouldParseArrow(l) && this.eat(F.arrow))\n      return this.checkPatternErrors(f, !1), this.checkYieldAwaitInDefaultParams(), this.yieldPos = m, this.awaitPos = y, this.parseParenArrowList(n, r, l, e);\n    (!l.length || h) && this.unexpected(this.lastTokStart), v && this.unexpected(v), this.checkExpressionErrors(f, !0), this.yieldPos = m || this.yieldPos, this.awaitPos = y || this.awaitPos, l.length > 1 ? (i = this.startNodeAt(a, o), i.expressions = l, this.finishNodeAt(i, "SequenceExpression", C, S)) : i = l[0];\n  } else\n    i = this.parseParenExpression();\n  if (this.options.preserveParens) {\n    var M = this.startNodeAt(n, r);\n    return M.expression = i, this.finishNode(M, "ParenthesizedExpression");\n  } else\n    return i;\n};\nUe.parseParenItem = function(t) {\n  return t;\n};\nUe.parseParenArrowList = function(t, e, n, r) {\n  return this.parseArrowExpression(this.startNodeAt(t, e), n, !1, r);\n};\nvar kB = [];\nUe.parseNew = function() {\n  this.containsEsc && this.raiseRecoverable(this.start, "Escape sequence in keyword new");\n  var t = this.startNode();\n  if (this.next(), this.options.ecmaVersion >= 6 && this.type === F.dot) {\n    var e = this.startNodeAt(t.start, t.loc && t.loc.start);\n    e.name = "new", t.meta = this.finishNode(e, "Identifier"), this.next();\n    var n = this.containsEsc;\n    return t.property = this.parseIdent(!0), t.property.name !== "target" && this.raiseRecoverable(t.property.start, "The only valid meta property for new is \'new.target\'"), n && this.raiseRecoverable(t.start, "\'new.target\' must not contain escaped characters"), this.allowNewDotTarget || this.raiseRecoverable(t.start, "\'new.target\' can only be used in functions and class static block"), this.finishNode(t, "MetaProperty");\n  }\n  var r = this.start, i = this.startLoc;\n  return t.callee = this.parseSubscripts(this.parseExprAtom(null, !1, !0), r, i, !0, !1), this.eat(F.parenL) ? t.arguments = this.parseExprList(F.parenR, this.options.ecmaVersion >= 8, !1) : t.arguments = kB, this.finishNode(t, "NewExpression");\n};\nUe.parseTemplateElement = function(t) {\n  var e = t.isTagged, n = this.startNode();\n  return this.type === F.invalidTemplate ? (e || this.raiseRecoverable(this.start, "Bad escape sequence in untagged template literal"), n.value = {\n    raw: this.value.replace(/\\r\\n?/g, `\n`),\n    cooked: null\n  }) : n.value = {\n    raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, `\n`),\n    cooked: this.value\n  }, this.next(), n.tail = this.type === F.backQuote, this.finishNode(n, "TemplateElement");\n};\nUe.parseTemplate = function(t) {\n  t === void 0 && (t = {});\n  var e = t.isTagged;\n  e === void 0 && (e = !1);\n  var n = this.startNode();\n  this.next(), n.expressions = [];\n  var r = this.parseTemplateElement({ isTagged: e });\n  for (n.quasis = [r]; !r.tail; )\n    this.type === F.eof && this.raise(this.pos, "Unterminated template literal"), this.expect(F.dollarBraceL), n.expressions.push(this.parseExpression()), this.expect(F.braceR), n.quasis.push(r = this.parseTemplateElement({ isTagged: e }));\n  return this.next(), this.finishNode(n, "TemplateLiteral");\n};\nUe.isAsyncProp = function(t) {\n  return !t.computed && t.key.type === "Identifier" && t.key.name === "async" && (this.type === F.name || this.type === F.num || this.type === F.string || this.type === F.bracketL || this.type.keyword || this.options.ecmaVersion >= 9 && this.type === F.star) && !Qr.test(this.input.slice(this.lastTokEnd, this.start));\n};\nUe.parseObj = function(t, e) {\n  var n = this.startNode(), r = !0, i = {};\n  for (n.properties = [], this.next(); !this.eat(F.braceR); ) {\n    if (r)\n      r = !1;\n    else if (this.expect(F.comma), this.options.ecmaVersion >= 5 && this.afterTrailingComma(F.braceR))\n      break;\n    var s = this.parseProperty(t, e);\n    t || this.checkPropClash(s, i, e), n.properties.push(s);\n  }\n  return this.finishNode(n, t ? "ObjectPattern" : "ObjectExpression");\n};\nUe.parseProperty = function(t, e) {\n  var n = this.startNode(), r, i, s, a;\n  if (this.options.ecmaVersion >= 9 && this.eat(F.ellipsis))\n    return t ? (n.argument = this.parseIdent(!1), this.type === F.comma && this.raiseRecoverable(this.start, "Comma is not permitted after the rest element"), this.finishNode(n, "RestElement")) : (n.argument = this.parseMaybeAssign(!1, e), this.type === F.comma && e && e.trailingComma < 0 && (e.trailingComma = this.start), this.finishNode(n, "SpreadElement"));\n  this.options.ecmaVersion >= 6 && (n.method = !1, n.shorthand = !1, (t || e) && (s = this.start, a = this.startLoc), t || (r = this.eat(F.star)));\n  var o = this.containsEsc;\n  return this.parsePropertyName(n), !t && !o && this.options.ecmaVersion >= 8 && !r && this.isAsyncProp(n) ? (i = !0, r = this.options.ecmaVersion >= 9 && this.eat(F.star), this.parsePropertyName(n)) : i = !1, this.parsePropertyValue(n, t, r, i, s, a, e, o), this.finishNode(n, "Property");\n};\nUe.parseGetterSetter = function(t) {\n  t.kind = t.key.name, this.parsePropertyName(t), t.value = this.parseMethod(!1);\n  var e = t.kind === "get" ? 0 : 1;\n  if (t.value.params.length !== e) {\n    var n = t.value.start;\n    t.kind === "get" ? this.raiseRecoverable(n, "getter should have no params") : this.raiseRecoverable(n, "setter should have exactly one param");\n  } else\n    t.kind === "set" && t.value.params[0].type === "RestElement" && this.raiseRecoverable(t.value.params[0].start, "Setter cannot use rest params");\n};\nUe.parsePropertyValue = function(t, e, n, r, i, s, a, o) {\n  (n || r) && this.type === F.colon && this.unexpected(), this.eat(F.colon) ? (t.value = e ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(!1, a), t.kind = "init") : this.options.ecmaVersion >= 6 && this.type === F.parenL ? (e && this.unexpected(), t.kind = "init", t.method = !0, t.value = this.parseMethod(n, r)) : !e && !o && this.options.ecmaVersion >= 5 && !t.computed && t.key.type === "Identifier" && (t.key.name === "get" || t.key.name === "set") && this.type !== F.comma && this.type !== F.braceR && this.type !== F.eq ? ((n || r) && this.unexpected(), this.parseGetterSetter(t)) : this.options.ecmaVersion >= 6 && !t.computed && t.key.type === "Identifier" ? ((n || r) && this.unexpected(), this.checkUnreserved(t.key), t.key.name === "await" && !this.awaitIdentPos && (this.awaitIdentPos = i), t.kind = "init", e ? t.value = this.parseMaybeDefault(i, s, this.copyNode(t.key)) : this.type === F.eq && a ? (a.shorthandAssign < 0 && (a.shorthandAssign = this.start), t.value = this.parseMaybeDefault(i, s, this.copyNode(t.key))) : t.value = this.copyNode(t.key), t.shorthand = !0) : this.unexpected();\n};\nUe.parsePropertyName = function(t) {\n  if (this.options.ecmaVersion >= 6) {\n    if (this.eat(F.bracketL))\n      return t.computed = !0, t.key = this.parseMaybeAssign(), this.expect(F.bracketR), t.key;\n    t.computed = !1;\n  }\n  return t.key = this.type === F.num || this.type === F.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== "never");\n};\nUe.initFunction = function(t) {\n  t.id = null, this.options.ecmaVersion >= 6 && (t.generator = t.expression = !1), this.options.ecmaVersion >= 8 && (t.async = !1);\n};\nUe.parseMethod = function(t, e, n) {\n  var r = this.startNode(), i = this.yieldPos, s = this.awaitPos, a = this.awaitIdentPos;\n  return this.initFunction(r), this.options.ecmaVersion >= 6 && (r.generator = t), this.options.ecmaVersion >= 8 && (r.async = !!e), this.yieldPos = 0, this.awaitPos = 0, this.awaitIdentPos = 0, this.enterScope(xd(e, r.generator) | Od | (n ? o2 : 0)), this.expect(F.parenL), r.params = this.parseBindingList(F.parenR, !1, this.options.ecmaVersion >= 8), this.checkYieldAwaitInDefaultParams(), this.parseFunctionBody(r, !1, !0, !1), this.yieldPos = i, this.awaitPos = s, this.awaitIdentPos = a, this.finishNode(r, "FunctionExpression");\n};\nUe.parseArrowExpression = function(t, e, n, r) {\n  var i = this.yieldPos, s = this.awaitPos, a = this.awaitIdentPos;\n  return this.enterScope(xd(n, !1) | s2), this.initFunction(t), this.options.ecmaVersion >= 8 && (t.async = !!n), this.yieldPos = 0, this.awaitPos = 0, this.awaitIdentPos = 0, t.params = this.toAssignableList(e, !0), this.parseFunctionBody(t, !0, !1, r), this.yieldPos = i, this.awaitPos = s, this.awaitIdentPos = a, this.finishNode(t, "ArrowFunctionExpression");\n};\nUe.parseFunctionBody = function(t, e, n, r) {\n  var i = e && this.type !== F.braceL, s = this.strict, a = !1;\n  if (i)\n    t.body = this.parseMaybeAssign(r), t.expression = !0, this.checkParams(t, !1);\n  else {\n    var o = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(t.params);\n    (!s || o) && (a = this.strictDirective(this.end), a && o && this.raiseRecoverable(t.start, "Illegal \'use strict\' directive in function with non-simple parameter list"));\n    var l = this.labels;\n    this.labels = [], a && (this.strict = !0), this.checkParams(t, !s && !a && !e && !n && this.isSimpleParamList(t.params)), this.strict && t.id && this.checkLValSimple(t.id, c2), t.body = this.parseBlock(!1, void 0, a && !s), t.expression = !1, this.adaptDirectivePrologue(t.body.body), this.labels = l;\n  }\n  this.exitScope();\n};\nUe.isSimpleParamList = function(t) {\n  for (var e = 0, n = t; e < n.length; e += 1) {\n    var r = n[e];\n    if (r.type !== "Identifier")\n      return !1;\n  }\n  return !0;\n};\nUe.checkParams = function(t, e) {\n  for (var n = /* @__PURE__ */ Object.create(null), r = 0, i = t.params; r < i.length; r += 1) {\n    var s = i[r];\n    this.checkLValInnerPattern(s, kd, e ? null : n);\n  }\n};\nUe.parseExprList = function(t, e, n, r) {\n  for (var i = [], s = !0; !this.eat(t); ) {\n    if (s)\n      s = !1;\n    else if (this.expect(F.comma), e && this.afterTrailingComma(t))\n      break;\n    var a = void 0;\n    n && this.type === F.comma ? a = null : this.type === F.ellipsis ? (a = this.parseSpread(r), r && this.type === F.comma && r.trailingComma < 0 && (r.trailingComma = this.start)) : a = this.parseMaybeAssign(!1, r), i.push(a);\n  }\n  return i;\n};\nUe.checkUnreserved = function(t) {\n  var e = t.start, n = t.end, r = t.name;\n  if (this.inGenerator && r === "yield" && this.raiseRecoverable(e, "Cannot use \'yield\' as identifier inside a generator"), this.inAsync && r === "await" && this.raiseRecoverable(e, "Cannot use \'await\' as identifier inside an async function"), this.currentThisScope().inClassFieldInit && r === "arguments" && this.raiseRecoverable(e, "Cannot use \'arguments\' in class field initializer"), this.inClassStaticBlock && (r === "arguments" || r === "await") && this.raise(e, "Cannot use " + r + " in class static initialization block"), this.keywords.test(r) && this.raise(e, "Unexpected keyword \'" + r + "\'"), !(this.options.ecmaVersion < 6 && this.input.slice(e, n).indexOf("\\\\") !== -1)) {\n    var i = this.strict ? this.reservedWordsStrict : this.reservedWords;\n    i.test(r) && (!this.inAsync && r === "await" && this.raiseRecoverable(e, "Cannot use keyword \'await\' outside an async function"), this.raiseRecoverable(e, "The keyword \'" + r + "\' is reserved"));\n  }\n};\nUe.parseIdent = function(t) {\n  var e = this.parseIdentNode();\n  return this.next(!!t), this.finishNode(e, "Identifier"), t || (this.checkUnreserved(e), e.name === "await" && !this.awaitIdentPos && (this.awaitIdentPos = e.start)), e;\n};\nUe.parseIdentNode = function() {\n  var t = this.startNode();\n  return this.type === F.name ? t.name = this.value : this.type.keyword ? (t.name = this.type.keyword, (t.name === "class" || t.name === "function") && (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46) && this.context.pop(), this.type = F.name) : this.unexpected(), t;\n};\nUe.parsePrivateIdent = function() {\n  var t = this.startNode();\n  return this.type === F.privateId ? t.name = this.value : this.unexpected(), this.next(), this.finishNode(t, "PrivateIdentifier"), this.options.checkPrivateFields && (this.privateNameStack.length === 0 ? this.raise(t.start, "Private field \'#" + t.name + "\' must be declared in an enclosing class") : this.privateNameStack[this.privateNameStack.length - 1].used.push(t)), t;\n};\nUe.parseYield = function(t) {\n  this.yieldPos || (this.yieldPos = this.start);\n  var e = this.startNode();\n  return this.next(), this.type === F.semi || this.canInsertSemicolon() || this.type !== F.star && !this.type.startsExpr ? (e.delegate = !1, e.argument = null) : (e.delegate = this.eat(F.star), e.argument = this.parseMaybeAssign(t)), this.finishNode(e, "YieldExpression");\n};\nUe.parseAwait = function(t) {\n  this.awaitPos || (this.awaitPos = this.start);\n  var e = this.startNode();\n  return this.next(), e.argument = this.parseMaybeUnary(null, !0, !1, t), this.finishNode(e, "AwaitExpression");\n};\nvar Ou = hn.prototype;\nOu.raise = function(t, e) {\n  var n = r2(this.input, t);\n  e += " (" + n.line + ":" + n.column + ")";\n  var r = new SyntaxError(e);\n  throw r.pos = t, r.loc = n, r.raisedAt = this.pos, r;\n};\nOu.raiseRecoverable = Ou.raise;\nOu.curPosition = function() {\n  if (this.options.locations)\n    return new yo(this.curLine, this.pos - this.lineStart);\n};\nvar os = hn.prototype, wB = function(e) {\n  this.flags = e, this.var = [], this.lexical = [], this.functions = [], this.inClassFieldInit = !1;\n};\nos.enterScope = function(t) {\n  this.scopeStack.push(new wB(t));\n};\nos.exitScope = function() {\n  this.scopeStack.pop();\n};\nos.treatFunctionsAsVarInScope = function(t) {\n  return t.flags & Ma || !this.inModule && t.flags & Oo;\n};\nos.declareName = function(t, e, n) {\n  var r = !1;\n  if (e === Ri) {\n    var i = this.currentScope();\n    r = i.lexical.indexOf(t) > -1 || i.functions.indexOf(t) > -1 || i.var.indexOf(t) > -1, i.lexical.push(t), this.inModule && i.flags & Oo && delete this.undefinedExports[t];\n  } else if (e === u2) {\n    var s = this.currentScope();\n    s.lexical.push(t);\n  } else if (e === l2) {\n    var a = this.currentScope();\n    this.treatFunctionsAsVar ? r = a.lexical.indexOf(t) > -1 : r = a.lexical.indexOf(t) > -1 || a.var.indexOf(t) > -1, a.functions.push(t);\n  } else\n    for (var o = this.scopeStack.length - 1; o >= 0; --o) {\n      var l = this.scopeStack[o];\n      if (l.lexical.indexOf(t) > -1 && !(l.flags & a2 && l.lexical[0] === t) || !this.treatFunctionsAsVarInScope(l) && l.functions.indexOf(t) > -1) {\n        r = !0;\n        break;\n      }\n      if (l.var.push(t), this.inModule && l.flags & Oo && delete this.undefinedExports[t], l.flags & vd)\n        break;\n    }\n  r && this.raiseRecoverable(n, "Identifier \'" + t + "\' has already been declared");\n};\nos.checkLocalExport = function(t) {\n  this.scopeStack[0].lexical.indexOf(t.name) === -1 && this.scopeStack[0].var.indexOf(t.name) === -1 && (this.undefinedExports[t.name] = t);\n};\nos.currentScope = function() {\n  return this.scopeStack[this.scopeStack.length - 1];\n};\nos.currentVarScope = function() {\n  for (var t = this.scopeStack.length - 1; ; t--) {\n    var e = this.scopeStack[t];\n    if (e.flags & vd)\n      return e;\n  }\n};\nos.currentThisScope = function() {\n  for (var t = this.scopeStack.length - 1; ; t--) {\n    var e = this.scopeStack[t];\n    if (e.flags & vd && !(e.flags & s2))\n      return e;\n  }\n};\nvar Sc = function(e, n, r) {\n  this.type = "", this.start = n, this.end = 0, e.options.locations && (this.loc = new wc(e, r)), e.options.directSourceFile && (this.sourceFile = e.options.directSourceFile), e.options.ranges && (this.range = [n, 0]);\n}, Xo = hn.prototype;\nXo.startNode = function() {\n  return new Sc(this, this.start, this.startLoc);\n};\nXo.startNodeAt = function(t, e) {\n  return new Sc(this, t, e);\n};\nfunction f2(t, e, n, r) {\n  return t.type = e, t.end = n, this.options.locations && (t.loc.end = r), this.options.ranges && (t.range[1] = n), t;\n}\nXo.finishNode = function(t, e) {\n  return f2.call(this, t, e, this.lastTokEnd, this.lastTokEndLoc);\n};\nXo.finishNodeAt = function(t, e, n, r) {\n  return f2.call(this, t, e, n, r);\n};\nXo.copyNode = function(t) {\n  var e = new Sc(this, t.start, this.startLoc);\n  for (var n in t)\n    e[n] = t[n];\n  return e;\n};\nvar CB = "Gara Garay Gukh Gurung_Khema Hrkt Katakana_Or_Hiragana Kawi Kirat_Rai Krai Nag_Mundari Nagm Ol_Onal Onao Sunu Sunuwar Todhri Todr Tulu_Tigalari Tutg Unknown Zzzz", d2 = "ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS", m2 = d2 + " Extended_Pictographic", g2 = m2, b2 = g2 + " EBase EComp EMod EPres ExtPict", y2 = b2, SB = y2, AB = {\n  9: d2,\n  10: m2,\n  11: g2,\n  12: b2,\n  13: y2,\n  14: SB\n}, DB = "Basic_Emoji Emoji_Keycap_Sequence RGI_Emoji_Modifier_Sequence RGI_Emoji_Flag_Sequence RGI_Emoji_Tag_Sequence RGI_Emoji_ZWJ_Sequence RGI_Emoji", PB = {\n  9: "",\n  10: "",\n  11: "",\n  12: "",\n  13: "",\n  14: DB\n}, Nm = "Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu", O2 = "Adlam Adlm Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb", v2 = O2 + " Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd", x2 = v2 + " Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho", k2 = x2 + " Chorasmian Chrs Diak Dives_Akuru Khitan_Small_Script Kits Yezi Yezidi", w2 = k2 + " Cypro_Minoan Cpmn Old_Uyghur Ougr Tangsa Tnsa Toto Vithkuqi Vith", EB = w2 + " " + CB, FB = {\n  9: O2,\n  10: v2,\n  11: x2,\n  12: k2,\n  13: w2,\n  14: EB\n}, C2 = {};\nfunction BB(t) {\n  var e = C2[t] = {\n    binary: qi(AB[t] + " " + Nm),\n    binaryOfStrings: qi(PB[t]),\n    nonBinary: {\n      General_Category: qi(Nm),\n      Script: qi(FB[t])\n    }\n  };\n  e.nonBinary.Script_Extensions = e.nonBinary.Script, e.nonBinary.gc = e.nonBinary.General_Category, e.nonBinary.sc = e.nonBinary.Script, e.nonBinary.scx = e.nonBinary.Script_Extensions;\n}\nfor (var bh = 0, Vm = [9, 10, 11, 12, 13, 14]; bh < Vm.length; bh += 1) {\n  var MB = Vm[bh];\n  BB(MB);\n}\nvar Fe = hn.prototype, vu = function(e, n) {\n  this.parent = e, this.base = n || this;\n};\nvu.prototype.separatedFrom = function(e) {\n  for (var n = this; n; n = n.parent)\n    for (var r = e; r; r = r.parent)\n      if (n.base === r.base && n !== r)\n        return !0;\n  return !1;\n};\nvu.prototype.sibling = function() {\n  return new vu(this.parent, this.base);\n};\nvar Oi = function(e) {\n  this.parser = e, this.validFlags = "gim" + (e.options.ecmaVersion >= 6 ? "uy" : "") + (e.options.ecmaVersion >= 9 ? "s" : "") + (e.options.ecmaVersion >= 13 ? "d" : "") + (e.options.ecmaVersion >= 15 ? "v" : ""), this.unicodeProperties = C2[e.options.ecmaVersion >= 14 ? 14 : e.options.ecmaVersion], this.source = "", this.flags = "", this.start = 0, this.switchU = !1, this.switchV = !1, this.switchN = !1, this.pos = 0, this.lastIntValue = 0, this.lastStringValue = "", this.lastAssertionIsQuantifiable = !1, this.numCapturingParens = 0, this.maxBackReference = 0, this.groupNames = /* @__PURE__ */ Object.create(null), this.backReferenceNames = [], this.branchID = null;\n};\nOi.prototype.reset = function(e, n, r) {\n  var i = r.indexOf("v") !== -1, s = r.indexOf("u") !== -1;\n  this.start = e | 0, this.source = n + "", this.flags = r, i && this.parser.options.ecmaVersion >= 15 ? (this.switchU = !0, this.switchV = !0, this.switchN = !0) : (this.switchU = s && this.parser.options.ecmaVersion >= 6, this.switchV = !1, this.switchN = s && this.parser.options.ecmaVersion >= 9);\n};\nOi.prototype.raise = function(e) {\n  this.parser.raiseRecoverable(this.start, "Invalid regular expression: /" + this.source + "/: " + e);\n};\nOi.prototype.at = function(e, n) {\n  n === void 0 && (n = !1);\n  var r = this.source, i = r.length;\n  if (e >= i)\n    return -1;\n  var s = r.charCodeAt(e);\n  if (!(n || this.switchU) || s <= 55295 || s >= 57344 || e + 1 >= i)\n    return s;\n  var a = r.charCodeAt(e + 1);\n  return a >= 56320 && a <= 57343 ? (s << 10) + a - 56613888 : s;\n};\nOi.prototype.nextIndex = function(e, n) {\n  n === void 0 && (n = !1);\n  var r = this.source, i = r.length;\n  if (e >= i)\n    return i;\n  var s = r.charCodeAt(e), a;\n  return !(n || this.switchU) || s <= 55295 || s >= 57344 || e + 1 >= i || (a = r.charCodeAt(e + 1)) < 56320 || a > 57343 ? e + 1 : e + 2;\n};\nOi.prototype.current = function(e) {\n  return e === void 0 && (e = !1), this.at(this.pos, e);\n};\nOi.prototype.lookahead = function(e) {\n  return e === void 0 && (e = !1), this.at(this.nextIndex(this.pos, e), e);\n};\nOi.prototype.advance = function(e) {\n  e === void 0 && (e = !1), this.pos = this.nextIndex(this.pos, e);\n};\nOi.prototype.eat = function(e, n) {\n  return n === void 0 && (n = !1), this.current(n) === e ? (this.advance(n), !0) : !1;\n};\nOi.prototype.eatChars = function(e, n) {\n  n === void 0 && (n = !1);\n  for (var r = this.pos, i = 0, s = e; i < s.length; i += 1) {\n    var a = s[i], o = this.at(r, n);\n    if (o === -1 || o !== a)\n      return !1;\n    r = this.nextIndex(r, n);\n  }\n  return this.pos = r, !0;\n};\nFe.validateRegExpFlags = function(t) {\n  for (var e = t.validFlags, n = t.flags, r = !1, i = !1, s = 0; s < n.length; s++) {\n    var a = n.charAt(s);\n    e.indexOf(a) === -1 && this.raise(t.start, "Invalid regular expression flag"), n.indexOf(a, s + 1) > -1 && this.raise(t.start, "Duplicate regular expression flag"), a === "u" && (r = !0), a === "v" && (i = !0);\n  }\n  this.options.ecmaVersion >= 15 && r && i && this.raise(t.start, "Invalid regular expression flag");\n};\nfunction QB(t) {\n  for (var e in t)\n    return !0;\n  return !1;\n}\nFe.validateRegExpPattern = function(t) {\n  this.regexp_pattern(t), !t.switchN && this.options.ecmaVersion >= 9 && QB(t.groupNames) && (t.switchN = !0, this.regexp_pattern(t));\n};\nFe.regexp_pattern = function(t) {\n  t.pos = 0, t.lastIntValue = 0, t.lastStringValue = "", t.lastAssertionIsQuantifiable = !1, t.numCapturingParens = 0, t.maxBackReference = 0, t.groupNames = /* @__PURE__ */ Object.create(null), t.backReferenceNames.length = 0, t.branchID = null, this.regexp_disjunction(t), t.pos !== t.source.length && (t.eat(\n    41\n    /* ) */\n  ) && t.raise("Unmatched \')\'"), (t.eat(\n    93\n    /* ] */\n  ) || t.eat(\n    125\n    /* } */\n  )) && t.raise("Lone quantifier brackets")), t.maxBackReference > t.numCapturingParens && t.raise("Invalid escape");\n  for (var e = 0, n = t.backReferenceNames; e < n.length; e += 1) {\n    var r = n[e];\n    t.groupNames[r] || t.raise("Invalid named capture referenced");\n  }\n};\nFe.regexp_disjunction = function(t) {\n  var e = this.options.ecmaVersion >= 16;\n  for (e && (t.branchID = new vu(t.branchID, null)), this.regexp_alternative(t); t.eat(\n    124\n    /* | */\n  ); )\n    e && (t.branchID = t.branchID.sibling()), this.regexp_alternative(t);\n  e && (t.branchID = t.branchID.parent), this.regexp_eatQuantifier(t, !0) && t.raise("Nothing to repeat"), t.eat(\n    123\n    /* { */\n  ) && t.raise("Lone quantifier brackets");\n};\nFe.regexp_alternative = function(t) {\n  for (; t.pos < t.source.length && this.regexp_eatTerm(t); )\n    ;\n};\nFe.regexp_eatTerm = function(t) {\n  return this.regexp_eatAssertion(t) ? (t.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(t) && t.switchU && t.raise("Invalid quantifier"), !0) : (t.switchU ? this.regexp_eatAtom(t) : this.regexp_eatExtendedAtom(t)) ? (this.regexp_eatQuantifier(t), !0) : !1;\n};\nFe.regexp_eatAssertion = function(t) {\n  var e = t.pos;\n  if (t.lastAssertionIsQuantifiable = !1, t.eat(\n    94\n    /* ^ */\n  ) || t.eat(\n    36\n    /* $ */\n  ))\n    return !0;\n  if (t.eat(\n    92\n    /* \\ */\n  )) {\n    if (t.eat(\n      66\n      /* B */\n    ) || t.eat(\n      98\n      /* b */\n    ))\n      return !0;\n    t.pos = e;\n  }\n  if (t.eat(\n    40\n    /* ( */\n  ) && t.eat(\n    63\n    /* ? */\n  )) {\n    var n = !1;\n    if (this.options.ecmaVersion >= 9 && (n = t.eat(\n      60\n      /* < */\n    )), t.eat(\n      61\n      /* = */\n    ) || t.eat(\n      33\n      /* ! */\n    ))\n      return this.regexp_disjunction(t), t.eat(\n        41\n        /* ) */\n      ) || t.raise("Unterminated group"), t.lastAssertionIsQuantifiable = !n, !0;\n  }\n  return t.pos = e, !1;\n};\nFe.regexp_eatQuantifier = function(t, e) {\n  return e === void 0 && (e = !1), this.regexp_eatQuantifierPrefix(t, e) ? (t.eat(\n    63\n    /* ? */\n  ), !0) : !1;\n};\nFe.regexp_eatQuantifierPrefix = function(t, e) {\n  return t.eat(\n    42\n    /* * */\n  ) || t.eat(\n    43\n    /* + */\n  ) || t.eat(\n    63\n    /* ? */\n  ) || this.regexp_eatBracedQuantifier(t, e);\n};\nFe.regexp_eatBracedQuantifier = function(t, e) {\n  var n = t.pos;\n  if (t.eat(\n    123\n    /* { */\n  )) {\n    var r = 0, i = -1;\n    if (this.regexp_eatDecimalDigits(t) && (r = t.lastIntValue, t.eat(\n      44\n      /* , */\n    ) && this.regexp_eatDecimalDigits(t) && (i = t.lastIntValue), t.eat(\n      125\n      /* } */\n    )))\n      return i !== -1 && i < r && !e && t.raise("numbers out of order in {} quantifier"), !0;\n    t.switchU && !e && t.raise("Incomplete quantifier"), t.pos = n;\n  }\n  return !1;\n};\nFe.regexp_eatAtom = function(t) {\n  return this.regexp_eatPatternCharacters(t) || t.eat(\n    46\n    /* . */\n  ) || this.regexp_eatReverseSolidusAtomEscape(t) || this.regexp_eatCharacterClass(t) || this.regexp_eatUncapturingGroup(t) || this.regexp_eatCapturingGroup(t);\n};\nFe.regexp_eatReverseSolidusAtomEscape = function(t) {\n  var e = t.pos;\n  if (t.eat(\n    92\n    /* \\ */\n  )) {\n    if (this.regexp_eatAtomEscape(t))\n      return !0;\n    t.pos = e;\n  }\n  return !1;\n};\nFe.regexp_eatUncapturingGroup = function(t) {\n  var e = t.pos;\n  if (t.eat(\n    40\n    /* ( */\n  )) {\n    if (t.eat(\n      63\n      /* ? */\n    )) {\n      if (this.options.ecmaVersion >= 16) {\n        var n = this.regexp_eatModifiers(t), r = t.eat(\n          45\n          /* - */\n        );\n        if (n || r) {\n          for (var i = 0; i < n.length; i++) {\n            var s = n.charAt(i);\n            n.indexOf(s, i + 1) > -1 && t.raise("Duplicate regular expression modifiers");\n          }\n          if (r) {\n            var a = this.regexp_eatModifiers(t);\n            !n && !a && t.current() === 58 && t.raise("Invalid regular expression modifiers");\n            for (var o = 0; o < a.length; o++) {\n              var l = a.charAt(o);\n              (a.indexOf(l, o + 1) > -1 || n.indexOf(l) > -1) && t.raise("Duplicate regular expression modifiers");\n            }\n          }\n        }\n      }\n      if (t.eat(\n        58\n        /* : */\n      )) {\n        if (this.regexp_disjunction(t), t.eat(\n          41\n          /* ) */\n        ))\n          return !0;\n        t.raise("Unterminated group");\n      }\n    }\n    t.pos = e;\n  }\n  return !1;\n};\nFe.regexp_eatCapturingGroup = function(t) {\n  if (t.eat(\n    40\n    /* ( */\n  )) {\n    if (this.options.ecmaVersion >= 9 ? this.regexp_groupSpecifier(t) : t.current() === 63 && t.raise("Invalid group"), this.regexp_disjunction(t), t.eat(\n      41\n      /* ) */\n    ))\n      return t.numCapturingParens += 1, !0;\n    t.raise("Unterminated group");\n  }\n  return !1;\n};\nFe.regexp_eatModifiers = function(t) {\n  for (var e = "", n = 0; (n = t.current()) !== -1 && TB(n); )\n    e += Bi(n), t.advance();\n  return e;\n};\nfunction TB(t) {\n  return t === 105 || t === 109 || t === 115;\n}\nFe.regexp_eatExtendedAtom = function(t) {\n  return t.eat(\n    46\n    /* . */\n  ) || this.regexp_eatReverseSolidusAtomEscape(t) || this.regexp_eatCharacterClass(t) || this.regexp_eatUncapturingGroup(t) || this.regexp_eatCapturingGroup(t) || this.regexp_eatInvalidBracedQuantifier(t) || this.regexp_eatExtendedPatternCharacter(t);\n};\nFe.regexp_eatInvalidBracedQuantifier = function(t) {\n  return this.regexp_eatBracedQuantifier(t, !0) && t.raise("Nothing to repeat"), !1;\n};\nFe.regexp_eatSyntaxCharacter = function(t) {\n  var e = t.current();\n  return S2(e) ? (t.lastIntValue = e, t.advance(), !0) : !1;\n};\nfunction S2(t) {\n  return t === 36 || t >= 40 && t <= 43 || t === 46 || t === 63 || t >= 91 && t <= 94 || t >= 123 && t <= 125;\n}\nFe.regexp_eatPatternCharacters = function(t) {\n  for (var e = t.pos, n = 0; (n = t.current()) !== -1 && !S2(n); )\n    t.advance();\n  return t.pos !== e;\n};\nFe.regexp_eatExtendedPatternCharacter = function(t) {\n  var e = t.current();\n  return e !== -1 && e !== 36 && !(e >= 40 && e <= 43) && e !== 46 && e !== 63 && e !== 91 && e !== 94 && e !== 124 ? (t.advance(), !0) : !1;\n};\nFe.regexp_groupSpecifier = function(t) {\n  if (t.eat(\n    63\n    /* ? */\n  )) {\n    this.regexp_eatGroupName(t) || t.raise("Invalid group");\n    var e = this.options.ecmaVersion >= 16, n = t.groupNames[t.lastStringValue];\n    if (n)\n      if (e)\n        for (var r = 0, i = n; r < i.length; r += 1) {\n          var s = i[r];\n          s.separatedFrom(t.branchID) || t.raise("Duplicate capture group name");\n        }\n      else\n        t.raise("Duplicate capture group name");\n    e ? (n || (t.groupNames[t.lastStringValue] = [])).push(t.branchID) : t.groupNames[t.lastStringValue] = !0;\n  }\n};\nFe.regexp_eatGroupName = function(t) {\n  if (t.lastStringValue = "", t.eat(\n    60\n    /* < */\n  )) {\n    if (this.regexp_eatRegExpIdentifierName(t) && t.eat(\n      62\n      /* > */\n    ))\n      return !0;\n    t.raise("Invalid capture group name");\n  }\n  return !1;\n};\nFe.regexp_eatRegExpIdentifierName = function(t) {\n  if (t.lastStringValue = "", this.regexp_eatRegExpIdentifierStart(t)) {\n    for (t.lastStringValue += Bi(t.lastIntValue); this.regexp_eatRegExpIdentifierPart(t); )\n      t.lastStringValue += Bi(t.lastIntValue);\n    return !0;\n  }\n  return !1;\n};\nFe.regexp_eatRegExpIdentifierStart = function(t) {\n  var e = t.pos, n = this.options.ecmaVersion >= 11, r = t.current(n);\n  return t.advance(n), r === 92 && this.regexp_eatRegExpUnicodeEscapeSequence(t, n) && (r = t.lastIntValue), jB(r) ? (t.lastIntValue = r, !0) : (t.pos = e, !1);\n};\nfunction jB(t) {\n  return Fi(t, !0) || t === 36 || t === 95;\n}\nFe.regexp_eatRegExpIdentifierPart = function(t) {\n  var e = t.pos, n = this.options.ecmaVersion >= 11, r = t.current(n);\n  return t.advance(n), r === 92 && this.regexp_eatRegExpUnicodeEscapeSequence(t, n) && (r = t.lastIntValue), RB(r) ? (t.lastIntValue = r, !0) : (t.pos = e, !1);\n};\nfunction RB(t) {\n  return ma(t, !0) || t === 36 || t === 95 || t === 8204 || t === 8205;\n}\nFe.regexp_eatAtomEscape = function(t) {\n  return this.regexp_eatBackReference(t) || this.regexp_eatCharacterClassEscape(t) || this.regexp_eatCharacterEscape(t) || t.switchN && this.regexp_eatKGroupName(t) ? !0 : (t.switchU && (t.current() === 99 && t.raise("Invalid unicode escape"), t.raise("Invalid escape")), !1);\n};\nFe.regexp_eatBackReference = function(t) {\n  var e = t.pos;\n  if (this.regexp_eatDecimalEscape(t)) {\n    var n = t.lastIntValue;\n    if (t.switchU)\n      return n > t.maxBackReference && (t.maxBackReference = n), !0;\n    if (n <= t.numCapturingParens)\n      return !0;\n    t.pos = e;\n  }\n  return !1;\n};\nFe.regexp_eatKGroupName = function(t) {\n  if (t.eat(\n    107\n    /* k */\n  )) {\n    if (this.regexp_eatGroupName(t))\n      return t.backReferenceNames.push(t.lastStringValue), !0;\n    t.raise("Invalid named reference");\n  }\n  return !1;\n};\nFe.regexp_eatCharacterEscape = function(t) {\n  return this.regexp_eatControlEscape(t) || this.regexp_eatCControlLetter(t) || this.regexp_eatZero(t) || this.regexp_eatHexEscapeSequence(t) || this.regexp_eatRegExpUnicodeEscapeSequence(t, !1) || !t.switchU && this.regexp_eatLegacyOctalEscapeSequence(t) || this.regexp_eatIdentityEscape(t);\n};\nFe.regexp_eatCControlLetter = function(t) {\n  var e = t.pos;\n  if (t.eat(\n    99\n    /* c */\n  )) {\n    if (this.regexp_eatControlLetter(t))\n      return !0;\n    t.pos = e;\n  }\n  return !1;\n};\nFe.regexp_eatZero = function(t) {\n  return t.current() === 48 && !Ac(t.lookahead()) ? (t.lastIntValue = 0, t.advance(), !0) : !1;\n};\nFe.regexp_eatControlEscape = function(t) {\n  var e = t.current();\n  return e === 116 ? (t.lastIntValue = 9, t.advance(), !0) : e === 110 ? (t.lastIntValue = 10, t.advance(), !0) : e === 118 ? (t.lastIntValue = 11, t.advance(), !0) : e === 102 ? (t.lastIntValue = 12, t.advance(), !0) : e === 114 ? (t.lastIntValue = 13, t.advance(), !0) : !1;\n};\nFe.regexp_eatControlLetter = function(t) {\n  var e = t.current();\n  return A2(e) ? (t.lastIntValue = e % 32, t.advance(), !0) : !1;\n};\nfunction A2(t) {\n  return t >= 65 && t <= 90 || t >= 97 && t <= 122;\n}\nFe.regexp_eatRegExpUnicodeEscapeSequence = function(t, e) {\n  e === void 0 && (e = !1);\n  var n = t.pos, r = e || t.switchU;\n  if (t.eat(\n    117\n    /* u */\n  )) {\n    if (this.regexp_eatFixedHexDigits(t, 4)) {\n      var i = t.lastIntValue;\n      if (r && i >= 55296 && i <= 56319) {\n        var s = t.pos;\n        if (t.eat(\n          92\n          /* \\ */\n        ) && t.eat(\n          117\n          /* u */\n        ) && this.regexp_eatFixedHexDigits(t, 4)) {\n          var a = t.lastIntValue;\n          if (a >= 56320 && a <= 57343)\n            return t.lastIntValue = (i - 55296) * 1024 + (a - 56320) + 65536, !0;\n        }\n        t.pos = s, t.lastIntValue = i;\n      }\n      return !0;\n    }\n    if (r && t.eat(\n      123\n      /* { */\n    ) && this.regexp_eatHexDigits(t) && t.eat(\n      125\n      /* } */\n    ) && _B(t.lastIntValue))\n      return !0;\n    r && t.raise("Invalid unicode escape"), t.pos = n;\n  }\n  return !1;\n};\nfunction _B(t) {\n  return t >= 0 && t <= 1114111;\n}\nFe.regexp_eatIdentityEscape = function(t) {\n  if (t.switchU)\n    return this.regexp_eatSyntaxCharacter(t) ? !0 : t.eat(\n      47\n      /* / */\n    ) ? (t.lastIntValue = 47, !0) : !1;\n  var e = t.current();\n  return e !== 99 && (!t.switchN || e !== 107) ? (t.lastIntValue = e, t.advance(), !0) : !1;\n};\nFe.regexp_eatDecimalEscape = function(t) {\n  t.lastIntValue = 0;\n  var e = t.current();\n  if (e >= 49 && e <= 57) {\n    do\n      t.lastIntValue = 10 * t.lastIntValue + (e - 48), t.advance();\n    while ((e = t.current()) >= 48 && e <= 57);\n    return !0;\n  }\n  return !1;\n};\nvar D2 = 0, Mi = 1, wr = 2;\nFe.regexp_eatCharacterClassEscape = function(t) {\n  var e = t.current();\n  if (ZB(e))\n    return t.lastIntValue = -1, t.advance(), Mi;\n  var n = !1;\n  if (t.switchU && this.options.ecmaVersion >= 9 && ((n = e === 80) || e === 112)) {\n    t.lastIntValue = -1, t.advance();\n    var r;\n    if (t.eat(\n      123\n      /* { */\n    ) && (r = this.regexp_eatUnicodePropertyValueExpression(t)) && t.eat(\n      125\n      /* } */\n    ))\n      return n && r === wr && t.raise("Invalid property name"), r;\n    t.raise("Invalid property name");\n  }\n  return D2;\n};\nfunction ZB(t) {\n  return t === 100 || t === 68 || t === 115 || t === 83 || t === 119 || t === 87;\n}\nFe.regexp_eatUnicodePropertyValueExpression = function(t) {\n  var e = t.pos;\n  if (this.regexp_eatUnicodePropertyName(t) && t.eat(\n    61\n    /* = */\n  )) {\n    var n = t.lastStringValue;\n    if (this.regexp_eatUnicodePropertyValue(t)) {\n      var r = t.lastStringValue;\n      return this.regexp_validateUnicodePropertyNameAndValue(t, n, r), Mi;\n    }\n  }\n  if (t.pos = e, this.regexp_eatLoneUnicodePropertyNameOrValue(t)) {\n    var i = t.lastStringValue;\n    return this.regexp_validateUnicodePropertyNameOrValue(t, i);\n  }\n  return D2;\n};\nFe.regexp_validateUnicodePropertyNameAndValue = function(t, e, n) {\n  Ba(t.unicodeProperties.nonBinary, e) || t.raise("Invalid property name"), t.unicodeProperties.nonBinary[e].test(n) || t.raise("Invalid property value");\n};\nFe.regexp_validateUnicodePropertyNameOrValue = function(t, e) {\n  if (t.unicodeProperties.binary.test(e))\n    return Mi;\n  if (t.switchV && t.unicodeProperties.binaryOfStrings.test(e))\n    return wr;\n  t.raise("Invalid property name");\n};\nFe.regexp_eatUnicodePropertyName = function(t) {\n  var e = 0;\n  for (t.lastStringValue = ""; P2(e = t.current()); )\n    t.lastStringValue += Bi(e), t.advance();\n  return t.lastStringValue !== "";\n};\nfunction P2(t) {\n  return A2(t) || t === 95;\n}\nFe.regexp_eatUnicodePropertyValue = function(t) {\n  var e = 0;\n  for (t.lastStringValue = ""; $B(e = t.current()); )\n    t.lastStringValue += Bi(e), t.advance();\n  return t.lastStringValue !== "";\n};\nfunction $B(t) {\n  return P2(t) || Ac(t);\n}\nFe.regexp_eatLoneUnicodePropertyNameOrValue = function(t) {\n  return this.regexp_eatUnicodePropertyValue(t);\n};\nFe.regexp_eatCharacterClass = function(t) {\n  if (t.eat(\n    91\n    /* [ */\n  )) {\n    var e = t.eat(\n      94\n      /* ^ */\n    ), n = this.regexp_classContents(t);\n    return t.eat(\n      93\n      /* ] */\n    ) || t.raise("Unterminated character class"), e && n === wr && t.raise("Negated character class may contain strings"), !0;\n  }\n  return !1;\n};\nFe.regexp_classContents = function(t) {\n  return t.current() === 93 ? Mi : t.switchV ? this.regexp_classSetExpression(t) : (this.regexp_nonEmptyClassRanges(t), Mi);\n};\nFe.regexp_nonEmptyClassRanges = function(t) {\n  for (; this.regexp_eatClassAtom(t); ) {\n    var e = t.lastIntValue;\n    if (t.eat(\n      45\n      /* - */\n    ) && this.regexp_eatClassAtom(t)) {\n      var n = t.lastIntValue;\n      t.switchU && (e === -1 || n === -1) && t.raise("Invalid character class"), e !== -1 && n !== -1 && e > n && t.raise("Range out of order in character class");\n    }\n  }\n};\nFe.regexp_eatClassAtom = function(t) {\n  var e = t.pos;\n  if (t.eat(\n    92\n    /* \\ */\n  )) {\n    if (this.regexp_eatClassEscape(t))\n      return !0;\n    if (t.switchU) {\n      var n = t.current();\n      (n === 99 || B2(n)) && t.raise("Invalid class escape"), t.raise("Invalid escape");\n    }\n    t.pos = e;\n  }\n  var r = t.current();\n  return r !== 93 ? (t.lastIntValue = r, t.advance(), !0) : !1;\n};\nFe.regexp_eatClassEscape = function(t) {\n  var e = t.pos;\n  if (t.eat(\n    98\n    /* b */\n  ))\n    return t.lastIntValue = 8, !0;\n  if (t.switchU && t.eat(\n    45\n    /* - */\n  ))\n    return t.lastIntValue = 45, !0;\n  if (!t.switchU && t.eat(\n    99\n    /* c */\n  )) {\n    if (this.regexp_eatClassControlLetter(t))\n      return !0;\n    t.pos = e;\n  }\n  return this.regexp_eatCharacterClassEscape(t) || this.regexp_eatCharacterEscape(t);\n};\nFe.regexp_classSetExpression = function(t) {\n  var e = Mi, n;\n  if (!this.regexp_eatClassSetRange(t)) if (n = this.regexp_eatClassSetOperand(t)) {\n    n === wr && (e = wr);\n    for (var r = t.pos; t.eatChars(\n      [38, 38]\n      /* && */\n    ); ) {\n      if (t.current() !== 38 && (n = this.regexp_eatClassSetOperand(t))) {\n        n !== wr && (e = Mi);\n        continue;\n      }\n      t.raise("Invalid character in character class");\n    }\n    if (r !== t.pos)\n      return e;\n    for (; t.eatChars(\n      [45, 45]\n      /* -- */\n    ); )\n      this.regexp_eatClassSetOperand(t) || t.raise("Invalid character in character class");\n    if (r !== t.pos)\n      return e;\n  } else\n    t.raise("Invalid character in character class");\n  for (; ; )\n    if (!this.regexp_eatClassSetRange(t)) {\n      if (n = this.regexp_eatClassSetOperand(t), !n)\n        return e;\n      n === wr && (e = wr);\n    }\n};\nFe.regexp_eatClassSetRange = function(t) {\n  var e = t.pos;\n  if (this.regexp_eatClassSetCharacter(t)) {\n    var n = t.lastIntValue;\n    if (t.eat(\n      45\n      /* - */\n    ) && this.regexp_eatClassSetCharacter(t)) {\n      var r = t.lastIntValue;\n      return n !== -1 && r !== -1 && n > r && t.raise("Range out of order in character class"), !0;\n    }\n    t.pos = e;\n  }\n  return !1;\n};\nFe.regexp_eatClassSetOperand = function(t) {\n  return this.regexp_eatClassSetCharacter(t) ? Mi : this.regexp_eatClassStringDisjunction(t) || this.regexp_eatNestedClass(t);\n};\nFe.regexp_eatNestedClass = function(t) {\n  var e = t.pos;\n  if (t.eat(\n    91\n    /* [ */\n  )) {\n    var n = t.eat(\n      94\n      /* ^ */\n    ), r = this.regexp_classContents(t);\n    if (t.eat(\n      93\n      /* ] */\n    ))\n      return n && r === wr && t.raise("Negated character class may contain strings"), r;\n    t.pos = e;\n  }\n  if (t.eat(\n    92\n    /* \\ */\n  )) {\n    var i = this.regexp_eatCharacterClassEscape(t);\n    if (i)\n      return i;\n    t.pos = e;\n  }\n  return null;\n};\nFe.regexp_eatClassStringDisjunction = function(t) {\n  var e = t.pos;\n  if (t.eatChars(\n    [92, 113]\n    /* \\q */\n  )) {\n    if (t.eat(\n      123\n      /* { */\n    )) {\n      var n = this.regexp_classStringDisjunctionContents(t);\n      if (t.eat(\n        125\n        /* } */\n      ))\n        return n;\n    } else\n      t.raise("Invalid escape");\n    t.pos = e;\n  }\n  return null;\n};\nFe.regexp_classStringDisjunctionContents = function(t) {\n  for (var e = this.regexp_classString(t); t.eat(\n    124\n    /* | */\n  ); )\n    this.regexp_classString(t) === wr && (e = wr);\n  return e;\n};\nFe.regexp_classString = function(t) {\n  for (var e = 0; this.regexp_eatClassSetCharacter(t); )\n    e++;\n  return e === 1 ? Mi : wr;\n};\nFe.regexp_eatClassSetCharacter = function(t) {\n  var e = t.pos;\n  if (t.eat(\n    92\n    /* \\ */\n  ))\n    return this.regexp_eatCharacterEscape(t) || this.regexp_eatClassSetReservedPunctuator(t) ? !0 : t.eat(\n      98\n      /* b */\n    ) ? (t.lastIntValue = 8, !0) : (t.pos = e, !1);\n  var n = t.current();\n  return n < 0 || n === t.lookahead() && LB(n) || IB(n) ? !1 : (t.advance(), t.lastIntValue = n, !0);\n};\nfunction LB(t) {\n  return t === 33 || t >= 35 && t <= 38 || t >= 42 && t <= 44 || t === 46 || t >= 58 && t <= 64 || t === 94 || t === 96 || t === 126;\n}\nfunction IB(t) {\n  return t === 40 || t === 41 || t === 45 || t === 47 || t >= 91 && t <= 93 || t >= 123 && t <= 125;\n}\nFe.regexp_eatClassSetReservedPunctuator = function(t) {\n  var e = t.current();\n  return NB(e) ? (t.lastIntValue = e, t.advance(), !0) : !1;\n};\nfunction NB(t) {\n  return t === 33 || t === 35 || t === 37 || t === 38 || t === 44 || t === 45 || t >= 58 && t <= 62 || t === 64 || t === 96 || t === 126;\n}\nFe.regexp_eatClassControlLetter = function(t) {\n  var e = t.current();\n  return Ac(e) || e === 95 ? (t.lastIntValue = e % 32, t.advance(), !0) : !1;\n};\nFe.regexp_eatHexEscapeSequence = function(t) {\n  var e = t.pos;\n  if (t.eat(\n    120\n    /* x */\n  )) {\n    if (this.regexp_eatFixedHexDigits(t, 2))\n      return !0;\n    t.switchU && t.raise("Invalid escape"), t.pos = e;\n  }\n  return !1;\n};\nFe.regexp_eatDecimalDigits = function(t) {\n  var e = t.pos, n = 0;\n  for (t.lastIntValue = 0; Ac(n = t.current()); )\n    t.lastIntValue = 10 * t.lastIntValue + (n - 48), t.advance();\n  return t.pos !== e;\n};\nfunction Ac(t) {\n  return t >= 48 && t <= 57;\n}\nFe.regexp_eatHexDigits = function(t) {\n  var e = t.pos, n = 0;\n  for (t.lastIntValue = 0; E2(n = t.current()); )\n    t.lastIntValue = 16 * t.lastIntValue + F2(n), t.advance();\n  return t.pos !== e;\n};\nfunction E2(t) {\n  return t >= 48 && t <= 57 || t >= 65 && t <= 70 || t >= 97 && t <= 102;\n}\nfunction F2(t) {\n  return t >= 65 && t <= 70 ? 10 + (t - 65) : t >= 97 && t <= 102 ? 10 + (t - 97) : t - 48;\n}\nFe.regexp_eatLegacyOctalEscapeSequence = function(t) {\n  if (this.regexp_eatOctalDigit(t)) {\n    var e = t.lastIntValue;\n    if (this.regexp_eatOctalDigit(t)) {\n      var n = t.lastIntValue;\n      e <= 3 && this.regexp_eatOctalDigit(t) ? t.lastIntValue = e * 64 + n * 8 + t.lastIntValue : t.lastIntValue = e * 8 + n;\n    } else\n      t.lastIntValue = e;\n    return !0;\n  }\n  return !1;\n};\nFe.regexp_eatOctalDigit = function(t) {\n  var e = t.current();\n  return B2(e) ? (t.lastIntValue = e - 48, t.advance(), !0) : (t.lastIntValue = 0, !1);\n};\nfunction B2(t) {\n  return t >= 48 && t <= 55;\n}\nFe.regexp_eatFixedHexDigits = function(t, e) {\n  var n = t.pos;\n  t.lastIntValue = 0;\n  for (var r = 0; r < e; ++r) {\n    var i = t.current();\n    if (!E2(i))\n      return t.pos = n, !1;\n    t.lastIntValue = 16 * t.lastIntValue + F2(i), t.advance();\n  }\n  return !0;\n};\nvar Cd = function(e) {\n  this.type = e.type, this.value = e.value, this.start = e.start, this.end = e.end, e.options.locations && (this.loc = new wc(e, e.startLoc, e.endLoc)), e.options.ranges && (this.range = [e.start, e.end]);\n}, st = hn.prototype;\nst.next = function(t) {\n  !t && this.type.keyword && this.containsEsc && this.raiseRecoverable(this.start, "Escape sequence in keyword " + this.type.keyword), this.options.onToken && this.options.onToken(new Cd(this)), this.lastTokEnd = this.end, this.lastTokStart = this.start, this.lastTokEndLoc = this.endLoc, this.lastTokStartLoc = this.startLoc, this.nextToken();\n};\nst.getToken = function() {\n  return this.next(), new Cd(this);\n};\ntypeof Symbol < "u" && (st[Symbol.iterator] = function() {\n  var t = this;\n  return {\n    next: function() {\n      var e = t.getToken();\n      return {\n        done: e.type === F.eof,\n        value: e\n      };\n    }\n  };\n});\nst.nextToken = function() {\n  var t = this.curContext();\n  if ((!t || !t.preserveSpace) && this.skipSpace(), this.start = this.pos, this.options.locations && (this.startLoc = this.curPosition()), this.pos >= this.input.length)\n    return this.finishToken(F.eof);\n  if (t.override)\n    return t.override(this);\n  this.readToken(this.fullCharCodeAtPos());\n};\nst.readToken = function(t) {\n  return Fi(t, this.options.ecmaVersion >= 6) || t === 92 ? this.readWord() : this.getTokenFromCode(t);\n};\nst.fullCharCodeAtPos = function() {\n  var t = this.input.charCodeAt(this.pos);\n  if (t <= 55295 || t >= 56320)\n    return t;\n  var e = this.input.charCodeAt(this.pos + 1);\n  return e <= 56319 || e >= 57344 ? t : (t << 10) + e - 56613888;\n};\nst.skipBlockComment = function() {\n  var t = this.options.onComment && this.curPosition(), e = this.pos, n = this.input.indexOf("*/", this.pos += 2);\n  if (n === -1 && this.raise(this.pos - 2, "Unterminated comment"), this.pos = n + 2, this.options.locations)\n    for (var r = void 0, i = e; (r = e2(this.input, i, this.pos)) > -1; )\n      ++this.curLine, i = this.lineStart = r;\n  this.options.onComment && this.options.onComment(\n    !0,\n    this.input.slice(e + 2, n),\n    e,\n    this.pos,\n    t,\n    this.curPosition()\n  );\n};\nst.skipLineComment = function(t) {\n  for (var e = this.pos, n = this.options.onComment && this.curPosition(), r = this.input.charCodeAt(this.pos += t); this.pos < this.input.length && !Fa(r); )\n    r = this.input.charCodeAt(++this.pos);\n  this.options.onComment && this.options.onComment(\n    !1,\n    this.input.slice(e + t, this.pos),\n    e,\n    this.pos,\n    n,\n    this.curPosition()\n  );\n};\nst.skipSpace = function() {\n  e: for (; this.pos < this.input.length; ) {\n    var t = this.input.charCodeAt(this.pos);\n    switch (t) {\n      case 32:\n      case 160:\n        ++this.pos;\n        break;\n      case 13:\n        this.input.charCodeAt(this.pos + 1) === 10 && ++this.pos;\n      case 10:\n      case 8232:\n      case 8233:\n        ++this.pos, this.options.locations && (++this.curLine, this.lineStart = this.pos);\n        break;\n      case 47:\n        switch (this.input.charCodeAt(this.pos + 1)) {\n          case 42:\n            this.skipBlockComment();\n            break;\n          case 47:\n            this.skipLineComment(2);\n            break;\n          default:\n            break e;\n        }\n        break;\n      default:\n        if (t > 8 && t < 14 || t >= 5760 && t2.test(String.fromCharCode(t)))\n          ++this.pos;\n        else\n          break e;\n    }\n  }\n};\nst.finishToken = function(t, e) {\n  this.end = this.pos, this.options.locations && (this.endLoc = this.curPosition());\n  var n = this.type;\n  this.type = t, this.value = e, this.updateContext(n);\n};\nst.readToken_dot = function() {\n  var t = this.input.charCodeAt(this.pos + 1);\n  if (t >= 48 && t <= 57)\n    return this.readNumber(!0);\n  var e = this.input.charCodeAt(this.pos + 2);\n  return this.options.ecmaVersion >= 6 && t === 46 && e === 46 ? (this.pos += 3, this.finishToken(F.ellipsis)) : (++this.pos, this.finishToken(F.dot));\n};\nst.readToken_slash = function() {\n  var t = this.input.charCodeAt(this.pos + 1);\n  return this.exprAllowed ? (++this.pos, this.readRegexp()) : t === 61 ? this.finishOp(F.assign, 2) : this.finishOp(F.slash, 1);\n};\nst.readToken_mult_modulo_exp = function(t) {\n  var e = this.input.charCodeAt(this.pos + 1), n = 1, r = t === 42 ? F.star : F.modulo;\n  return this.options.ecmaVersion >= 7 && t === 42 && e === 42 && (++n, r = F.starstar, e = this.input.charCodeAt(this.pos + 2)), e === 61 ? this.finishOp(F.assign, n + 1) : this.finishOp(r, n);\n};\nst.readToken_pipe_amp = function(t) {\n  var e = this.input.charCodeAt(this.pos + 1);\n  if (e === t) {\n    if (this.options.ecmaVersion >= 12) {\n      var n = this.input.charCodeAt(this.pos + 2);\n      if (n === 61)\n        return this.finishOp(F.assign, 3);\n    }\n    return this.finishOp(t === 124 ? F.logicalOR : F.logicalAND, 2);\n  }\n  return e === 61 ? this.finishOp(F.assign, 2) : this.finishOp(t === 124 ? F.bitwiseOR : F.bitwiseAND, 1);\n};\nst.readToken_caret = function() {\n  var t = this.input.charCodeAt(this.pos + 1);\n  return t === 61 ? this.finishOp(F.assign, 2) : this.finishOp(F.bitwiseXOR, 1);\n};\nst.readToken_plus_min = function(t) {\n  var e = this.input.charCodeAt(this.pos + 1);\n  return e === t ? e === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 && (this.lastTokEnd === 0 || Qr.test(this.input.slice(this.lastTokEnd, this.pos))) ? (this.skipLineComment(3), this.skipSpace(), this.nextToken()) : this.finishOp(F.incDec, 2) : e === 61 ? this.finishOp(F.assign, 2) : this.finishOp(F.plusMin, 1);\n};\nst.readToken_lt_gt = function(t) {\n  var e = this.input.charCodeAt(this.pos + 1), n = 1;\n  return e === t ? (n = t === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2, this.input.charCodeAt(this.pos + n) === 61 ? this.finishOp(F.assign, n + 1) : this.finishOp(F.bitShift, n)) : e === 33 && t === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 && this.input.charCodeAt(this.pos + 3) === 45 ? (this.skipLineComment(4), this.skipSpace(), this.nextToken()) : (e === 61 && (n = 2), this.finishOp(F.relational, n));\n};\nst.readToken_eq_excl = function(t) {\n  var e = this.input.charCodeAt(this.pos + 1);\n  return e === 61 ? this.finishOp(F.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) : t === 61 && e === 62 && this.options.ecmaVersion >= 6 ? (this.pos += 2, this.finishToken(F.arrow)) : this.finishOp(t === 61 ? F.eq : F.prefix, 1);\n};\nst.readToken_question = function() {\n  var t = this.options.ecmaVersion;\n  if (t >= 11) {\n    var e = this.input.charCodeAt(this.pos + 1);\n    if (e === 46) {\n      var n = this.input.charCodeAt(this.pos + 2);\n      if (n < 48 || n > 57)\n        return this.finishOp(F.questionDot, 2);\n    }\n    if (e === 63) {\n      if (t >= 12) {\n        var r = this.input.charCodeAt(this.pos + 2);\n        if (r === 61)\n          return this.finishOp(F.assign, 3);\n      }\n      return this.finishOp(F.coalesce, 2);\n    }\n  }\n  return this.finishOp(F.question, 1);\n};\nst.readToken_numberSign = function() {\n  var t = this.options.ecmaVersion, e = 35;\n  if (t >= 13 && (++this.pos, e = this.fullCharCodeAtPos(), Fi(e, !0) || e === 92))\n    return this.finishToken(F.privateId, this.readWord1());\n  this.raise(this.pos, "Unexpected character \'" + Bi(e) + "\'");\n};\nst.getTokenFromCode = function(t) {\n  switch (t) {\n    // The interpretation of a dot depends on whether it is followed\n    // by a digit or another two dots.\n    case 46:\n      return this.readToken_dot();\n    // Punctuation tokens.\n    case 40:\n      return ++this.pos, this.finishToken(F.parenL);\n    case 41:\n      return ++this.pos, this.finishToken(F.parenR);\n    case 59:\n      return ++this.pos, this.finishToken(F.semi);\n    case 44:\n      return ++this.pos, this.finishToken(F.comma);\n    case 91:\n      return ++this.pos, this.finishToken(F.bracketL);\n    case 93:\n      return ++this.pos, this.finishToken(F.bracketR);\n    case 123:\n      return ++this.pos, this.finishToken(F.braceL);\n    case 125:\n      return ++this.pos, this.finishToken(F.braceR);\n    case 58:\n      return ++this.pos, this.finishToken(F.colon);\n    case 96:\n      if (this.options.ecmaVersion < 6)\n        break;\n      return ++this.pos, this.finishToken(F.backQuote);\n    case 48:\n      var e = this.input.charCodeAt(this.pos + 1);\n      if (e === 120 || e === 88)\n        return this.readRadixNumber(16);\n      if (this.options.ecmaVersion >= 6) {\n        if (e === 111 || e === 79)\n          return this.readRadixNumber(8);\n        if (e === 98 || e === 66)\n          return this.readRadixNumber(2);\n      }\n    // Anything else beginning with a digit is an integer, octal\n    // number, or float.\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      return this.readNumber(!1);\n    // Quotes produce strings.\n    case 34:\n    case 39:\n      return this.readString(t);\n    // Operators are parsed inline in tiny state machines. \'=\' (61) is\n    // often referred to. `finishOp` simply skips the amount of\n    // characters it is given as second argument, and returns a token\n    // of the type given by its first argument.\n    case 47:\n      return this.readToken_slash();\n    case 37:\n    case 42:\n      return this.readToken_mult_modulo_exp(t);\n    case 124:\n    case 38:\n      return this.readToken_pipe_amp(t);\n    case 94:\n      return this.readToken_caret();\n    case 43:\n    case 45:\n      return this.readToken_plus_min(t);\n    case 60:\n    case 62:\n      return this.readToken_lt_gt(t);\n    case 61:\n    case 33:\n      return this.readToken_eq_excl(t);\n    case 63:\n      return this.readToken_question();\n    case 126:\n      return this.finishOp(F.prefix, 1);\n    case 35:\n      return this.readToken_numberSign();\n  }\n  this.raise(this.pos, "Unexpected character \'" + Bi(t) + "\'");\n};\nst.finishOp = function(t, e) {\n  var n = this.input.slice(this.pos, this.pos + e);\n  return this.pos += e, this.finishToken(t, n);\n};\nst.readRegexp = function() {\n  for (var t, e, n = this.pos; ; ) {\n    this.pos >= this.input.length && this.raise(n, "Unterminated regular expression");\n    var r = this.input.charAt(this.pos);\n    if (Qr.test(r) && this.raise(n, "Unterminated regular expression"), t)\n      t = !1;\n    else {\n      if (r === "[")\n        e = !0;\n      else if (r === "]" && e)\n        e = !1;\n      else if (r === "/" && !e)\n        break;\n      t = r === "\\\\";\n    }\n    ++this.pos;\n  }\n  var i = this.input.slice(n, this.pos);\n  ++this.pos;\n  var s = this.pos, a = this.readWord1();\n  this.containsEsc && this.unexpected(s);\n  var o = this.regexpState || (this.regexpState = new Oi(this));\n  o.reset(n, i, a), this.validateRegExpFlags(o), this.validateRegExpPattern(o);\n  var l = null;\n  try {\n    l = new RegExp(i, a);\n  } catch {\n  }\n  return this.finishToken(F.regexp, { pattern: i, flags: a, value: l });\n};\nst.readInt = function(t, e, n) {\n  for (var r = this.options.ecmaVersion >= 12 && e === void 0, i = n && this.input.charCodeAt(this.pos) === 48, s = this.pos, a = 0, o = 0, l = 0, c = e ?? 1 / 0; l < c; ++l, ++this.pos) {\n    var h = this.input.charCodeAt(this.pos), f = void 0;\n    if (r && h === 95) {\n      i && this.raiseRecoverable(this.pos, "Numeric separator is not allowed in legacy octal numeric literals"), o === 95 && this.raiseRecoverable(this.pos, "Numeric separator must be exactly one underscore"), l === 0 && this.raiseRecoverable(this.pos, "Numeric separator is not allowed at the first of digits"), o = h;\n      continue;\n    }\n    if (h >= 97 ? f = h - 97 + 10 : h >= 65 ? f = h - 65 + 10 : h >= 48 && h <= 57 ? f = h - 48 : f = 1 / 0, f >= t)\n      break;\n    o = h, a = a * t + f;\n  }\n  return r && o === 95 && this.raiseRecoverable(this.pos - 1, "Numeric separator is not allowed at the last of digits"), this.pos === s || e != null && this.pos - s !== e ? null : a;\n};\nfunction VB(t, e) {\n  return e ? parseInt(t, 8) : parseFloat(t.replace(/_/g, ""));\n}\nfunction M2(t) {\n  return typeof BigInt != "function" ? null : BigInt(t.replace(/_/g, ""));\n}\nst.readRadixNumber = function(t) {\n  var e = this.pos;\n  this.pos += 2;\n  var n = this.readInt(t);\n  return n == null && this.raise(this.start + 2, "Expected number in radix " + t), this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110 ? (n = M2(this.input.slice(e, this.pos)), ++this.pos) : Fi(this.fullCharCodeAtPos()) && this.raise(this.pos, "Identifier directly after number"), this.finishToken(F.num, n);\n};\nst.readNumber = function(t) {\n  var e = this.pos;\n  !t && this.readInt(10, void 0, !0) === null && this.raise(e, "Invalid number");\n  var n = this.pos - e >= 2 && this.input.charCodeAt(e) === 48;\n  n && this.strict && this.raise(e, "Invalid number");\n  var r = this.input.charCodeAt(this.pos);\n  if (!n && !t && this.options.ecmaVersion >= 11 && r === 110) {\n    var i = M2(this.input.slice(e, this.pos));\n    return ++this.pos, Fi(this.fullCharCodeAtPos()) && this.raise(this.pos, "Identifier directly after number"), this.finishToken(F.num, i);\n  }\n  n && /[89]/.test(this.input.slice(e, this.pos)) && (n = !1), r === 46 && !n && (++this.pos, this.readInt(10), r = this.input.charCodeAt(this.pos)), (r === 69 || r === 101) && !n && (r = this.input.charCodeAt(++this.pos), (r === 43 || r === 45) && ++this.pos, this.readInt(10) === null && this.raise(e, "Invalid number")), Fi(this.fullCharCodeAtPos()) && this.raise(this.pos, "Identifier directly after number");\n  var s = VB(this.input.slice(e, this.pos), n);\n  return this.finishToken(F.num, s);\n};\nst.readCodePoint = function() {\n  var t = this.input.charCodeAt(this.pos), e;\n  if (t === 123) {\n    this.options.ecmaVersion < 6 && this.unexpected();\n    var n = ++this.pos;\n    e = this.readHexChar(this.input.indexOf("}", this.pos) - this.pos), ++this.pos, e > 1114111 && this.invalidStringToken(n, "Code point out of bounds");\n  } else\n    e = this.readHexChar(4);\n  return e;\n};\nst.readString = function(t) {\n  for (var e = "", n = ++this.pos; ; ) {\n    this.pos >= this.input.length && this.raise(this.start, "Unterminated string constant");\n    var r = this.input.charCodeAt(this.pos);\n    if (r === t)\n      break;\n    r === 92 ? (e += this.input.slice(n, this.pos), e += this.readEscapedChar(!1), n = this.pos) : r === 8232 || r === 8233 ? (this.options.ecmaVersion < 10 && this.raise(this.start, "Unterminated string constant"), ++this.pos, this.options.locations && (this.curLine++, this.lineStart = this.pos)) : (Fa(r) && this.raise(this.start, "Unterminated string constant"), ++this.pos);\n  }\n  return e += this.input.slice(n, this.pos++), this.finishToken(F.string, e);\n};\nvar Q2 = {};\nst.tryReadTemplateToken = function() {\n  this.inTemplateElement = !0;\n  try {\n    this.readTmplToken();\n  } catch (t) {\n    if (t === Q2)\n      this.readInvalidTemplateToken();\n    else\n      throw t;\n  }\n  this.inTemplateElement = !1;\n};\nst.invalidStringToken = function(t, e) {\n  if (this.inTemplateElement && this.options.ecmaVersion >= 9)\n    throw Q2;\n  this.raise(t, e);\n};\nst.readTmplToken = function() {\n  for (var t = "", e = this.pos; ; ) {\n    this.pos >= this.input.length && this.raise(this.start, "Unterminated template");\n    var n = this.input.charCodeAt(this.pos);\n    if (n === 96 || n === 36 && this.input.charCodeAt(this.pos + 1) === 123)\n      return this.pos === this.start && (this.type === F.template || this.type === F.invalidTemplate) ? n === 36 ? (this.pos += 2, this.finishToken(F.dollarBraceL)) : (++this.pos, this.finishToken(F.backQuote)) : (t += this.input.slice(e, this.pos), this.finishToken(F.template, t));\n    if (n === 92)\n      t += this.input.slice(e, this.pos), t += this.readEscapedChar(!0), e = this.pos;\n    else if (Fa(n)) {\n      switch (t += this.input.slice(e, this.pos), ++this.pos, n) {\n        case 13:\n          this.input.charCodeAt(this.pos) === 10 && ++this.pos;\n        case 10:\n          t += `\n`;\n          break;\n        default:\n          t += String.fromCharCode(n);\n          break;\n      }\n      this.options.locations && (++this.curLine, this.lineStart = this.pos), e = this.pos;\n    } else\n      ++this.pos;\n  }\n};\nst.readInvalidTemplateToken = function() {\n  for (; this.pos < this.input.length; this.pos++)\n    switch (this.input[this.pos]) {\n      case "\\\\":\n        ++this.pos;\n        break;\n      case "$":\n        if (this.input[this.pos + 1] !== "{")\n          break;\n      // fall through\n      case "`":\n        return this.finishToken(F.invalidTemplate, this.input.slice(this.start, this.pos));\n      case "\\r":\n        this.input[this.pos + 1] === `\n` && ++this.pos;\n      // fall through\n      case `\n`:\n      case "\\u2028":\n      case "\\u2029":\n        ++this.curLine, this.lineStart = this.pos + 1;\n        break;\n    }\n  this.raise(this.start, "Unterminated template");\n};\nst.readEscapedChar = function(t) {\n  var e = this.input.charCodeAt(++this.pos);\n  switch (++this.pos, e) {\n    case 110:\n      return `\n`;\n    // \'n\' -> \'\\n\'\n    case 114:\n      return "\\r";\n    // \'r\' -> \'\\r\'\n    case 120:\n      return String.fromCharCode(this.readHexChar(2));\n    // \'x\'\n    case 117:\n      return Bi(this.readCodePoint());\n    // \'u\'\n    case 116:\n      return "\t";\n    // \'t\' -> \'\\t\'\n    case 98:\n      return "\\b";\n    // \'b\' -> \'\\b\'\n    case 118:\n      return "\\v";\n    // \'v\' -> \'\\u000b\'\n    case 102:\n      return "\\f";\n    // \'f\' -> \'\\f\'\n    case 13:\n      this.input.charCodeAt(this.pos) === 10 && ++this.pos;\n    // \'\\r\\n\'\n    case 10:\n      return this.options.locations && (this.lineStart = this.pos, ++this.curLine), "";\n    case 56:\n    case 57:\n      if (this.strict && this.invalidStringToken(\n        this.pos - 1,\n        "Invalid escape sequence"\n      ), t) {\n        var n = this.pos - 1;\n        this.invalidStringToken(\n          n,\n          "Invalid escape sequence in template string"\n        );\n      }\n    default:\n      if (e >= 48 && e <= 55) {\n        var r = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0], i = parseInt(r, 8);\n        return i > 255 && (r = r.slice(0, -1), i = parseInt(r, 8)), this.pos += r.length - 1, e = this.input.charCodeAt(this.pos), (r !== "0" || e === 56 || e === 57) && (this.strict || t) && this.invalidStringToken(\n          this.pos - 1 - r.length,\n          t ? "Octal literal in template string" : "Octal literal in strict mode"\n        ), String.fromCharCode(i);\n      }\n      return Fa(e) ? (this.options.locations && (this.lineStart = this.pos, ++this.curLine), "") : String.fromCharCode(e);\n  }\n};\nst.readHexChar = function(t) {\n  var e = this.pos, n = this.readInt(16, t);\n  return n === null && this.invalidStringToken(e, "Bad character escape sequence"), n;\n};\nst.readWord1 = function() {\n  this.containsEsc = !1;\n  for (var t = "", e = !0, n = this.pos, r = this.options.ecmaVersion >= 6; this.pos < this.input.length; ) {\n    var i = this.fullCharCodeAtPos();\n    if (ma(i, r))\n      this.pos += i <= 65535 ? 1 : 2;\n    else if (i === 92) {\n      this.containsEsc = !0, t += this.input.slice(n, this.pos);\n      var s = this.pos;\n      this.input.charCodeAt(++this.pos) !== 117 && this.invalidStringToken(this.pos, "Expecting Unicode escape sequence \\\\uXXXX"), ++this.pos;\n      var a = this.readCodePoint();\n      (e ? Fi : ma)(a, r) || this.invalidStringToken(s, "Invalid Unicode escape"), t += Bi(a), n = this.pos;\n    } else\n      break;\n    e = !1;\n  }\n  return t + this.input.slice(n, this.pos);\n};\nst.readWord = function() {\n  var t = this.readWord1(), e = F.name;\n  return this.keywords.test(t) && (e = bd[t]), this.finishToken(e, t);\n};\nvar XB = "8.14.0";\nhn.acorn = {\n  Parser: hn,\n  version: XB,\n  defaultOptions: Cp,\n  Position: yo,\n  SourceLocation: wc,\n  getLineInfo: r2,\n  Node: Sc,\n  TokenType: pt,\n  tokTypes: F,\n  keywordTypes: bd,\n  TokContext: Vr,\n  tokContexts: Lt,\n  isIdentifierChar: ma,\n  isIdentifierStart: Fi,\n  Token: Cd,\n  isNewLine: Fa,\n  lineBreak: Qr,\n  lineBreakG: pB,\n  nonASCIIwhitespace: t2\n};\nfunction WB(t, e) {\n  return hn.parse(t, e);\n}\nvar UB = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};\nfunction qB(t) {\n  return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default") ? t.default : t;\n}\nfunction PZ(t) {\n  if (t.__esModule) return t;\n  var e = t.default;\n  if (typeof e == "function") {\n    var n = function r() {\n      return this instanceof r ? Reflect.construct(e, arguments, this.constructor) : e.apply(this, arguments);\n    };\n    n.prototype = e.prototype;\n  } else n = {};\n  return Object.defineProperty(n, "__esModule", { value: !0 }), Object.keys(t).forEach(function(r) {\n    var i = Object.getOwnPropertyDescriptor(t, r);\n    Object.defineProperty(n, r, i.get ? i : {\n      enumerable: !0,\n      get: function() {\n        return t[r];\n      }\n    });\n  }), n;\n}\nvar yh = {}, Oh = {}, Xm;\nfunction GB() {\n  return Xm || (Xm = 1, function(t) {\n    (function e(n) {\n      var r, i, s, a, o, l;\n      function c(B) {\n        var Z = {}, N, q;\n        for (N in B)\n          B.hasOwnProperty(N) && (q = B[N], typeof q == "object" && q !== null ? Z[N] = c(q) : Z[N] = q);\n        return Z;\n      }\n      function h(B, Z) {\n        var N, q, se, K;\n        for (q = B.length, se = 0; q; )\n          N = q >>> 1, K = se + N, Z(B[K]) ? q = N : (se = K + 1, q -= N + 1);\n        return se;\n      }\n      r = {\n        AssignmentExpression: "AssignmentExpression",\n        AssignmentPattern: "AssignmentPattern",\n        ArrayExpression: "ArrayExpression",\n        ArrayPattern: "ArrayPattern",\n        ArrowFunctionExpression: "ArrowFunctionExpression",\n        AwaitExpression: "AwaitExpression",\n        // CAUTION: It\'s deferred to ES7.\n        BlockStatement: "BlockStatement",\n        BinaryExpression: "BinaryExpression",\n        BreakStatement: "BreakStatement",\n        CallExpression: "CallExpression",\n        CatchClause: "CatchClause",\n        ChainExpression: "ChainExpression",\n        ClassBody: "ClassBody",\n        ClassDeclaration: "ClassDeclaration",\n        ClassExpression: "ClassExpression",\n        ComprehensionBlock: "ComprehensionBlock",\n        // CAUTION: It\'s deferred to ES7.\n        ComprehensionExpression: "ComprehensionExpression",\n        // CAUTION: It\'s deferred to ES7.\n        ConditionalExpression: "ConditionalExpression",\n        ContinueStatement: "ContinueStatement",\n        DebuggerStatement: "DebuggerStatement",\n        DirectiveStatement: "DirectiveStatement",\n        DoWhileStatement: "DoWhileStatement",\n        EmptyStatement: "EmptyStatement",\n        ExportAllDeclaration: "ExportAllDeclaration",\n        ExportDefaultDeclaration: "ExportDefaultDeclaration",\n        ExportNamedDeclaration: "ExportNamedDeclaration",\n        ExportSpecifier: "ExportSpecifier",\n        ExpressionStatement: "ExpressionStatement",\n        ForStatement: "ForStatement",\n        ForInStatement: "ForInStatement",\n        ForOfStatement: "ForOfStatement",\n        FunctionDeclaration: "FunctionDeclaration",\n        FunctionExpression: "FunctionExpression",\n        GeneratorExpression: "GeneratorExpression",\n        // CAUTION: It\'s deferred to ES7.\n        Identifier: "Identifier",\n        IfStatement: "IfStatement",\n        ImportExpression: "ImportExpression",\n        ImportDeclaration: "ImportDeclaration",\n        ImportDefaultSpecifier: "ImportDefaultSpecifier",\n        ImportNamespaceSpecifier: "ImportNamespaceSpecifier",\n        ImportSpecifier: "ImportSpecifier",\n        Literal: "Literal",\n        LabeledStatement: "LabeledStatement",\n        LogicalExpression: "LogicalExpression",\n        MemberExpression: "MemberExpression",\n        MetaProperty: "MetaProperty",\n        MethodDefinition: "MethodDefinition",\n        ModuleSpecifier: "ModuleSpecifier",\n        NewExpression: "NewExpression",\n        ObjectExpression: "ObjectExpression",\n        ObjectPattern: "ObjectPattern",\n        PrivateIdentifier: "PrivateIdentifier",\n        Program: "Program",\n        Property: "Property",\n        PropertyDefinition: "PropertyDefinition",\n        RestElement: "RestElement",\n        ReturnStatement: "ReturnStatement",\n        SequenceExpression: "SequenceExpression",\n        SpreadElement: "SpreadElement",\n        Super: "Super",\n        SwitchStatement: "SwitchStatement",\n        SwitchCase: "SwitchCase",\n        TaggedTemplateExpression: "TaggedTemplateExpression",\n        TemplateElement: "TemplateElement",\n        TemplateLiteral: "TemplateLiteral",\n        ThisExpression: "ThisExpression",\n        ThrowStatement: "ThrowStatement",\n        TryStatement: "TryStatement",\n        UnaryExpression: "UnaryExpression",\n        UpdateExpression: "UpdateExpression",\n        VariableDeclaration: "VariableDeclaration",\n        VariableDeclarator: "VariableDeclarator",\n        WhileStatement: "WhileStatement",\n        WithStatement: "WithStatement",\n        YieldExpression: "YieldExpression"\n      }, s = {\n        AssignmentExpression: ["left", "right"],\n        AssignmentPattern: ["left", "right"],\n        ArrayExpression: ["elements"],\n        ArrayPattern: ["elements"],\n        ArrowFunctionExpression: ["params", "body"],\n        AwaitExpression: ["argument"],\n        // CAUTION: It\'s deferred to ES7.\n        BlockStatement: ["body"],\n        BinaryExpression: ["left", "right"],\n        BreakStatement: ["label"],\n        CallExpression: ["callee", "arguments"],\n        CatchClause: ["param", "body"],\n        ChainExpression: ["expression"],\n        ClassBody: ["body"],\n        ClassDeclaration: ["id", "superClass", "body"],\n        ClassExpression: ["id", "superClass", "body"],\n        ComprehensionBlock: ["left", "right"],\n        // CAUTION: It\'s deferred to ES7.\n        ComprehensionExpression: ["blocks", "filter", "body"],\n        // CAUTION: It\'s deferred to ES7.\n        ConditionalExpression: ["test", "consequent", "alternate"],\n        ContinueStatement: ["label"],\n        DebuggerStatement: [],\n        DirectiveStatement: [],\n        DoWhileStatement: ["body", "test"],\n        EmptyStatement: [],\n        ExportAllDeclaration: ["source"],\n        ExportDefaultDeclaration: ["declaration"],\n        ExportNamedDeclaration: ["declaration", "specifiers", "source"],\n        ExportSpecifier: ["exported", "local"],\n        ExpressionStatement: ["expression"],\n        ForStatement: ["init", "test", "update", "body"],\n        ForInStatement: ["left", "right", "body"],\n        ForOfStatement: ["left", "right", "body"],\n        FunctionDeclaration: ["id", "params", "body"],\n        FunctionExpression: ["id", "params", "body"],\n        GeneratorExpression: ["blocks", "filter", "body"],\n        // CAUTION: It\'s deferred to ES7.\n        Identifier: [],\n        IfStatement: ["test", "consequent", "alternate"],\n        ImportExpression: ["source"],\n        ImportDeclaration: ["specifiers", "source"],\n        ImportDefaultSpecifier: ["local"],\n        ImportNamespaceSpecifier: ["local"],\n        ImportSpecifier: ["imported", "local"],\n        Literal: [],\n        LabeledStatement: ["label", "body"],\n        LogicalExpression: ["left", "right"],\n        MemberExpression: ["object", "property"],\n        MetaProperty: ["meta", "property"],\n        MethodDefinition: ["key", "value"],\n        ModuleSpecifier: [],\n        NewExpression: ["callee", "arguments"],\n        ObjectExpression: ["properties"],\n        ObjectPattern: ["properties"],\n        PrivateIdentifier: [],\n        Program: ["body"],\n        Property: ["key", "value"],\n        PropertyDefinition: ["key", "value"],\n        RestElement: ["argument"],\n        ReturnStatement: ["argument"],\n        SequenceExpression: ["expressions"],\n        SpreadElement: ["argument"],\n        Super: [],\n        SwitchStatement: ["discriminant", "cases"],\n        SwitchCase: ["test", "consequent"],\n        TaggedTemplateExpression: ["tag", "quasi"],\n        TemplateElement: [],\n        TemplateLiteral: ["quasis", "expressions"],\n        ThisExpression: [],\n        ThrowStatement: ["argument"],\n        TryStatement: ["block", "handler", "finalizer"],\n        UnaryExpression: ["argument"],\n        UpdateExpression: ["argument"],\n        VariableDeclaration: ["declarations"],\n        VariableDeclarator: ["id", "init"],\n        WhileStatement: ["test", "body"],\n        WithStatement: ["object", "body"],\n        YieldExpression: ["argument"]\n      }, a = {}, o = {}, l = {}, i = {\n        Break: a,\n        Skip: o,\n        Remove: l\n      };\n      function f(B, Z) {\n        this.parent = B, this.key = Z;\n      }\n      f.prototype.replace = function(Z) {\n        this.parent[this.key] = Z;\n      }, f.prototype.remove = function() {\n        return Array.isArray(this.parent) ? (this.parent.splice(this.key, 1), !0) : (this.replace(null), !1);\n      };\n      function m(B, Z, N, q) {\n        this.node = B, this.path = Z, this.wrap = N, this.ref = q;\n      }\n      function y() {\n      }\n      y.prototype.path = function() {\n        var Z, N, q, se, K, ce;\n        function H(ie, fe) {\n          if (Array.isArray(fe))\n            for (q = 0, se = fe.length; q < se; ++q)\n              ie.push(fe[q]);\n          else\n            ie.push(fe);\n        }\n        if (!this.__current.path)\n          return null;\n        for (K = [], Z = 2, N = this.__leavelist.length; Z < N; ++Z)\n          ce = this.__leavelist[Z], H(K, ce.path);\n        return H(K, this.__current.path), K;\n      }, y.prototype.type = function() {\n        var B = this.current();\n        return B.type || this.__current.wrap;\n      }, y.prototype.parents = function() {\n        var Z, N, q;\n        for (q = [], Z = 1, N = this.__leavelist.length; Z < N; ++Z)\n          q.push(this.__leavelist[Z].node);\n        return q;\n      }, y.prototype.current = function() {\n        return this.__current.node;\n      }, y.prototype.__execute = function(Z, N) {\n        var q, se;\n        return se = void 0, q = this.__current, this.__current = N, this.__state = null, Z && (se = Z.call(this, N.node, this.__leavelist[this.__leavelist.length - 1].node)), this.__current = q, se;\n      }, y.prototype.notify = function(Z) {\n        this.__state = Z;\n      }, y.prototype.skip = function() {\n        this.notify(o);\n      }, y.prototype.break = function() {\n        this.notify(a);\n      }, y.prototype.remove = function() {\n        this.notify(l);\n      }, y.prototype.__initialize = function(B, Z) {\n        this.visitor = Z, this.root = B, this.__worklist = [], this.__leavelist = [], this.__current = null, this.__state = null, this.__fallback = null, Z.fallback === "iteration" ? this.__fallback = Object.keys : typeof Z.fallback == "function" && (this.__fallback = Z.fallback), this.__keys = s, Z.keys && (this.__keys = Object.assign(Object.create(this.__keys), Z.keys));\n      };\n      function v(B) {\n        return B == null ? !1 : typeof B == "object" && typeof B.type == "string";\n      }\n      function C(B, Z) {\n        return (B === r.ObjectExpression || B === r.ObjectPattern) && Z === "properties";\n      }\n      function S(B, Z) {\n        for (var N = B.length - 1; N >= 0; --N)\n          if (B[N].node === Z)\n            return !0;\n        return !1;\n      }\n      y.prototype.traverse = function(Z, N) {\n        var q, se, K, ce, H, ie, fe, De, Ee, re, Ce, Le;\n        for (this.__initialize(Z, N), Le = {}, q = this.__worklist, se = this.__leavelist, q.push(new m(Z, null, null, null)), se.push(new m(null, null, null, null)); q.length; ) {\n          if (K = q.pop(), K === Le) {\n            if (K = se.pop(), ie = this.__execute(N.leave, K), this.__state === a || ie === a)\n              return;\n            continue;\n          }\n          if (K.node) {\n            if (ie = this.__execute(N.enter, K), this.__state === a || ie === a)\n              return;\n            if (q.push(Le), se.push(K), this.__state === o || ie === o)\n              continue;\n            if (ce = K.node, H = ce.type || K.wrap, re = this.__keys[H], !re)\n              if (this.__fallback)\n                re = this.__fallback(ce);\n              else\n                throw new Error("Unknown node type " + H + ".");\n            for (De = re.length; (De -= 1) >= 0; )\n              if (fe = re[De], Ce = ce[fe], !!Ce) {\n                if (Array.isArray(Ce)) {\n                  for (Ee = Ce.length; (Ee -= 1) >= 0; )\n                    if (Ce[Ee] && !S(se, Ce[Ee])) {\n                      if (C(H, re[De]))\n                        K = new m(Ce[Ee], [fe, Ee], "Property", null);\n                      else if (v(Ce[Ee]))\n                        K = new m(Ce[Ee], [fe, Ee], null, null);\n                      else\n                        continue;\n                      q.push(K);\n                    }\n                } else if (v(Ce)) {\n                  if (S(se, Ce))\n                    continue;\n                  q.push(new m(Ce, fe, null, null));\n                }\n              }\n          }\n        }\n      }, y.prototype.replace = function(Z, N) {\n        var q, se, K, ce, H, ie, fe, De, Ee, re, Ce, Le, xe;\n        function je(he) {\n          var Pe, Pt, ut, We;\n          if (he.ref.remove()) {\n            for (Pt = he.ref.key, We = he.ref.parent, Pe = q.length; Pe--; )\n              if (ut = q[Pe], ut.ref && ut.ref.parent === We) {\n                if (ut.ref.key < Pt)\n                  break;\n                --ut.ref.key;\n              }\n          }\n        }\n        for (this.__initialize(Z, N), Ce = {}, q = this.__worklist, se = this.__leavelist, Le = {\n          root: Z\n        }, ie = new m(Z, null, null, new f(Le, "root")), q.push(ie), se.push(ie); q.length; ) {\n          if (ie = q.pop(), ie === Ce) {\n            if (ie = se.pop(), H = this.__execute(N.leave, ie), H !== void 0 && H !== a && H !== o && H !== l && ie.ref.replace(H), (this.__state === l || H === l) && je(ie), this.__state === a || H === a)\n              return Le.root;\n            continue;\n          }\n          if (H = this.__execute(N.enter, ie), H !== void 0 && H !== a && H !== o && H !== l && (ie.ref.replace(H), ie.node = H), (this.__state === l || H === l) && (je(ie), ie.node = null), this.__state === a || H === a)\n            return Le.root;\n          if (K = ie.node, !!K && (q.push(Ce), se.push(ie), !(this.__state === o || H === o))) {\n            if (ce = K.type || ie.wrap, Ee = this.__keys[ce], !Ee)\n              if (this.__fallback)\n                Ee = this.__fallback(K);\n              else\n                throw new Error("Unknown node type " + ce + ".");\n            for (fe = Ee.length; (fe -= 1) >= 0; )\n              if (xe = Ee[fe], re = K[xe], !!re)\n                if (Array.isArray(re)) {\n                  for (De = re.length; (De -= 1) >= 0; )\n                    if (re[De]) {\n                      if (C(ce, Ee[fe]))\n                        ie = new m(re[De], [xe, De], "Property", new f(re, De));\n                      else if (v(re[De]))\n                        ie = new m(re[De], [xe, De], null, new f(re, De));\n                      else\n                        continue;\n                      q.push(ie);\n                    }\n                } else v(re) && q.push(new m(re, xe, null, new f(K, xe)));\n          }\n        }\n        return Le.root;\n      };\n      function M(B, Z) {\n        var N = new y();\n        return N.traverse(B, Z);\n      }\n      function $(B, Z) {\n        var N = new y();\n        return N.replace(B, Z);\n      }\n      function U(B, Z) {\n        var N;\n        return N = h(Z, function(se) {\n          return se.range[0] > B.range[0];\n        }), B.extendedRange = [B.range[0], B.range[1]], N !== Z.length && (B.extendedRange[1] = Z[N].range[0]), N -= 1, N >= 0 && (B.extendedRange[0] = Z[N].range[1]), B;\n      }\n      function R(B, Z, N) {\n        var q = [], se, K, ce, H;\n        if (!B.range)\n          throw new Error("attachComments needs range information");\n        if (!N.length) {\n          if (Z.length) {\n            for (ce = 0, K = Z.length; ce < K; ce += 1)\n              se = c(Z[ce]), se.extendedRange = [0, B.range[0]], q.push(se);\n            B.leadingComments = q;\n          }\n          return B;\n        }\n        for (ce = 0, K = Z.length; ce < K; ce += 1)\n          q.push(U(c(Z[ce]), N));\n        return H = 0, M(B, {\n          enter: function(ie) {\n            for (var fe; H < q.length && (fe = q[H], !(fe.extendedRange[1] > ie.range[0])); )\n              fe.extendedRange[1] === ie.range[0] ? (ie.leadingComments || (ie.leadingComments = []), ie.leadingComments.push(fe), q.splice(H, 1)) : H += 1;\n            if (H === q.length)\n              return i.Break;\n            if (q[H].extendedRange[0] > ie.range[1])\n              return i.Skip;\n          }\n        }), H = 0, M(B, {\n          leave: function(ie) {\n            for (var fe; H < q.length && (fe = q[H], !(ie.range[1] < fe.extendedRange[0])); )\n              ie.range[1] === fe.extendedRange[0] ? (ie.trailingComments || (ie.trailingComments = []), ie.trailingComments.push(fe), q.splice(H, 1)) : H += 1;\n            if (H === q.length)\n              return i.Break;\n            if (q[H].extendedRange[0] > ie.range[1])\n              return i.Skip;\n          }\n        }), B;\n      }\n      return n.Syntax = r, n.traverse = M, n.replace = $, n.attachComments = R, n.VisitorKeys = s, n.VisitorOption = i, n.Controller = y, n.cloneEnvironment = function() {\n        return e({});\n      }, n;\n    })(t);\n  }(Oh)), Oh;\n}\nvar qa = {}, vh = { exports: {} }, Wm;\nfunction zB() {\n  return Wm || (Wm = 1, function() {\n    function t(a) {\n      if (a == null)\n        return !1;\n      switch (a.type) {\n        case "ArrayExpression":\n        case "AssignmentExpression":\n        case "BinaryExpression":\n        case "CallExpression":\n        case "ConditionalExpression":\n        case "FunctionExpression":\n        case "Identifier":\n        case "Literal":\n        case "LogicalExpression":\n        case "MemberExpression":\n        case "NewExpression":\n        case "ObjectExpression":\n        case "SequenceExpression":\n        case "ThisExpression":\n        case "UnaryExpression":\n        case "UpdateExpression":\n          return !0;\n      }\n      return !1;\n    }\n    function e(a) {\n      if (a == null)\n        return !1;\n      switch (a.type) {\n        case "DoWhileStatement":\n        case "ForInStatement":\n        case "ForStatement":\n        case "WhileStatement":\n          return !0;\n      }\n      return !1;\n    }\n    function n(a) {\n      if (a == null)\n        return !1;\n      switch (a.type) {\n        case "BlockStatement":\n        case "BreakStatement":\n        case "ContinueStatement":\n        case "DebuggerStatement":\n        case "DoWhileStatement":\n        case "EmptyStatement":\n        case "ExpressionStatement":\n        case "ForInStatement":\n        case "ForStatement":\n        case "IfStatement":\n        case "LabeledStatement":\n        case "ReturnStatement":\n        case "SwitchStatement":\n        case "ThrowStatement":\n        case "TryStatement":\n        case "VariableDeclaration":\n        case "WhileStatement":\n        case "WithStatement":\n          return !0;\n      }\n      return !1;\n    }\n    function r(a) {\n      return n(a) || a != null && a.type === "FunctionDeclaration";\n    }\n    function i(a) {\n      switch (a.type) {\n        case "IfStatement":\n          return a.alternate != null ? a.alternate : a.consequent;\n        case "LabeledStatement":\n        case "ForStatement":\n        case "ForInStatement":\n        case "WhileStatement":\n        case "WithStatement":\n          return a.body;\n      }\n      return null;\n    }\n    function s(a) {\n      var o;\n      if (a.type !== "IfStatement" || a.alternate == null)\n        return !1;\n      o = a.consequent;\n      do {\n        if (o.type === "IfStatement" && o.alternate == null)\n          return !0;\n        o = i(o);\n      } while (o);\n      return !1;\n    }\n    vh.exports = {\n      isExpression: t,\n      isStatement: n,\n      isIterationStatement: e,\n      isSourceElement: r,\n      isProblematicIfStatement: s,\n      trailingStatement: i\n    };\n  }()), vh.exports;\n}\nvar xh = { exports: {} }, Um;\nfunction T2() {\n  return Um || (Um = 1, function() {\n    var t, e, n, r, i, s;\n    e = {\n      // ECMAScript 5.1/Unicode v9.0.0 NonAsciiIdentifierStart:\n      NonAsciiIdentifierStart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,\n      // ECMAScript 5.1/Unicode v9.0.0 NonAsciiIdentifierPart:\n      NonAsciiIdentifierPart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/\n    }, t = {\n      // ECMAScript 6/Unicode v9.0.0 NonAsciiIdentifierStart:\n      NonAsciiIdentifierStart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]/,\n      // ECMAScript 6/Unicode v9.0.0 NonAsciiIdentifierPart:\n      NonAsciiIdentifierPart: /[\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F\\uDFE0]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4A\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/\n    };\n    function a(S) {\n      return 48 <= S && S <= 57;\n    }\n    function o(S) {\n      return 48 <= S && S <= 57 || // 0..9\n      97 <= S && S <= 102 || // a..f\n      65 <= S && S <= 70;\n    }\n    function l(S) {\n      return S >= 48 && S <= 55;\n    }\n    n = [\n      5760,\n      8192,\n      8193,\n      8194,\n      8195,\n      8196,\n      8197,\n      8198,\n      8199,\n      8200,\n      8201,\n      8202,\n      8239,\n      8287,\n      12288,\n      65279\n    ];\n    function c(S) {\n      return S === 32 || S === 9 || S === 11 || S === 12 || S === 160 || S >= 5760 && n.indexOf(S) >= 0;\n    }\n    function h(S) {\n      return S === 10 || S === 13 || S === 8232 || S === 8233;\n    }\n    function f(S) {\n      if (S <= 65535)\n        return String.fromCharCode(S);\n      var M = String.fromCharCode(Math.floor((S - 65536) / 1024) + 55296), $ = String.fromCharCode((S - 65536) % 1024 + 56320);\n      return M + $;\n    }\n    for (r = new Array(128), s = 0; s < 128; ++s)\n      r[s] = s >= 97 && s <= 122 || // a..z\n      s >= 65 && s <= 90 || // A..Z\n      s === 36 || s === 95;\n    for (i = new Array(128), s = 0; s < 128; ++s)\n      i[s] = s >= 97 && s <= 122 || // a..z\n      s >= 65 && s <= 90 || // A..Z\n      s >= 48 && s <= 57 || // 0..9\n      s === 36 || s === 95;\n    function m(S) {\n      return S < 128 ? r[S] : e.NonAsciiIdentifierStart.test(f(S));\n    }\n    function y(S) {\n      return S < 128 ? i[S] : e.NonAsciiIdentifierPart.test(f(S));\n    }\n    function v(S) {\n      return S < 128 ? r[S] : t.NonAsciiIdentifierStart.test(f(S));\n    }\n    function C(S) {\n      return S < 128 ? i[S] : t.NonAsciiIdentifierPart.test(f(S));\n    }\n    xh.exports = {\n      isDecimalDigit: a,\n      isHexDigit: o,\n      isOctalDigit: l,\n      isWhiteSpace: c,\n      isLineTerminator: h,\n      isIdentifierStartES5: m,\n      isIdentifierPartES5: y,\n      isIdentifierStartES6: v,\n      isIdentifierPartES6: C\n    };\n  }()), xh.exports;\n}\nvar kh = { exports: {} }, qm;\nfunction HB() {\n  return qm || (qm = 1, function() {\n    var t = T2();\n    function e(m) {\n      switch (m) {\n        case "implements":\n        case "interface":\n        case "package":\n        case "private":\n        case "protected":\n        case "public":\n        case "static":\n        case "let":\n          return !0;\n        default:\n          return !1;\n      }\n    }\n    function n(m, y) {\n      return !y && m === "yield" ? !1 : r(m, y);\n    }\n    function r(m, y) {\n      if (y && e(m))\n        return !0;\n      switch (m.length) {\n        case 2:\n          return m === "if" || m === "in" || m === "do";\n        case 3:\n          return m === "var" || m === "for" || m === "new" || m === "try";\n        case 4:\n          return m === "this" || m === "else" || m === "case" || m === "void" || m === "with" || m === "enum";\n        case 5:\n          return m === "while" || m === "break" || m === "catch" || m === "throw" || m === "const" || m === "yield" || m === "class" || m === "super";\n        case 6:\n          return m === "return" || m === "typeof" || m === "delete" || m === "switch" || m === "export" || m === "import";\n        case 7:\n          return m === "default" || m === "finally" || m === "extends";\n        case 8:\n          return m === "function" || m === "continue" || m === "debugger";\n        case 10:\n          return m === "instanceof";\n        default:\n          return !1;\n      }\n    }\n    function i(m, y) {\n      return m === "null" || m === "true" || m === "false" || n(m, y);\n    }\n    function s(m, y) {\n      return m === "null" || m === "true" || m === "false" || r(m, y);\n    }\n    function a(m) {\n      return m === "eval" || m === "arguments";\n    }\n    function o(m) {\n      var y, v, C;\n      if (m.length === 0 || (C = m.charCodeAt(0), !t.isIdentifierStartES5(C)))\n        return !1;\n      for (y = 1, v = m.length; y < v; ++y)\n        if (C = m.charCodeAt(y), !t.isIdentifierPartES5(C))\n          return !1;\n      return !0;\n    }\n    function l(m, y) {\n      return (m - 55296) * 1024 + (y - 56320) + 65536;\n    }\n    function c(m) {\n      var y, v, C, S, M;\n      if (m.length === 0)\n        return !1;\n      for (M = t.isIdentifierStartES6, y = 0, v = m.length; y < v; ++y) {\n        if (C = m.charCodeAt(y), 55296 <= C && C <= 56319) {\n          if (++y, y >= v || (S = m.charCodeAt(y), !(56320 <= S && S <= 57343)))\n            return !1;\n          C = l(C, S);\n        }\n        if (!M(C))\n          return !1;\n        M = t.isIdentifierPartES6;\n      }\n      return !0;\n    }\n    function h(m, y) {\n      return o(m) && !i(m, y);\n    }\n    function f(m, y) {\n      return c(m) && !s(m, y);\n    }\n    kh.exports = {\n      isKeywordES5: n,\n      isKeywordES6: r,\n      isReservedWordES5: i,\n      isReservedWordES6: s,\n      isRestrictedWord: a,\n      isIdentifierNameES5: o,\n      isIdentifierNameES6: c,\n      isIdentifierES5: h,\n      isIdentifierES6: f\n    };\n  }()), kh.exports;\n}\nvar Gm;\nfunction YB() {\n  return Gm || (Gm = 1, function() {\n    qa.ast = zB(), qa.code = T2(), qa.keyword = HB();\n  }()), qa;\n}\nvar Ga = {}, wh = {}, wl = {}, Cl = {}, zm;\nfunction KB() {\n  if (zm) return Cl;\n  zm = 1;\n  var t = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split("");\n  return Cl.encode = function(e) {\n    if (0 <= e && e < t.length)\n      return t[e];\n    throw new TypeError("Must be between 0 and 63: " + e);\n  }, Cl.decode = function(e) {\n    var n = 65, r = 90, i = 97, s = 122, a = 48, o = 57, l = 43, c = 47, h = 26, f = 52;\n    return n <= e && e <= r ? e - n : i <= e && e <= s ? e - i + h : a <= e && e <= o ? e - a + f : e == l ? 62 : e == c ? 63 : -1;\n  }, Cl;\n}\nvar Hm;\nfunction j2() {\n  if (Hm) return wl;\n  Hm = 1;\n  var t = KB(), e = 5, n = 1 << e, r = n - 1, i = n;\n  function s(o) {\n    return o < 0 ? (-o << 1) + 1 : (o << 1) + 0;\n  }\n  function a(o) {\n    var l = (o & 1) === 1, c = o >> 1;\n    return l ? -c : c;\n  }\n  return wl.encode = function(l) {\n    var c = "", h, f = s(l);\n    do\n      h = f & r, f >>>= e, f > 0 && (h |= i), c += t.encode(h);\n    while (f > 0);\n    return c;\n  }, wl.decode = function(l, c, h) {\n    var f = l.length, m = 0, y = 0, v, C;\n    do {\n      if (c >= f)\n        throw new Error("Expected more digits in base 64 VLQ value.");\n      if (C = t.decode(l.charCodeAt(c++)), C === -1)\n        throw new Error("Invalid base64 digit: " + l.charAt(c - 1));\n      v = !!(C & i), C &= r, m = m + (C << y), y += e;\n    } while (v);\n    h.value = a(m), h.rest = c;\n  }, wl;\n}\nvar Ch = {}, Ym;\nfunction Wo() {\n  return Ym || (Ym = 1, function(t) {\n    function e(R, B, Z) {\n      if (B in R)\n        return R[B];\n      if (arguments.length === 3)\n        return Z;\n      throw new Error(\'"\' + B + \'" is a required argument.\');\n    }\n    t.getArg = e;\n    var n = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/, r = /^data:.+\\,.+$/;\n    function i(R) {\n      var B = R.match(n);\n      return B ? {\n        scheme: B[1],\n        auth: B[2],\n        host: B[3],\n        port: B[4],\n        path: B[5]\n      } : null;\n    }\n    t.urlParse = i;\n    function s(R) {\n      var B = "";\n      return R.scheme && (B += R.scheme + ":"), B += "//", R.auth && (B += R.auth + "@"), R.host && (B += R.host), R.port && (B += ":" + R.port), R.path && (B += R.path), B;\n    }\n    t.urlGenerate = s;\n    function a(R) {\n      var B = R, Z = i(R);\n      if (Z) {\n        if (!Z.path)\n          return R;\n        B = Z.path;\n      }\n      for (var N = t.isAbsolute(B), q = B.split(/\\/+/), se, K = 0, ce = q.length - 1; ce >= 0; ce--)\n        se = q[ce], se === "." ? q.splice(ce, 1) : se === ".." ? K++ : K > 0 && (se === "" ? (q.splice(ce + 1, K), K = 0) : (q.splice(ce, 2), K--));\n      return B = q.join("/"), B === "" && (B = N ? "/" : "."), Z ? (Z.path = B, s(Z)) : B;\n    }\n    t.normalize = a;\n    function o(R, B) {\n      R === "" && (R = "."), B === "" && (B = ".");\n      var Z = i(B), N = i(R);\n      if (N && (R = N.path || "/"), Z && !Z.scheme)\n        return N && (Z.scheme = N.scheme), s(Z);\n      if (Z || B.match(r))\n        return B;\n      if (N && !N.host && !N.path)\n        return N.host = B, s(N);\n      var q = B.charAt(0) === "/" ? B : a(R.replace(/\\/+$/, "") + "/" + B);\n      return N ? (N.path = q, s(N)) : q;\n    }\n    t.join = o, t.isAbsolute = function(R) {\n      return R.charAt(0) === "/" || n.test(R);\n    };\n    function l(R, B) {\n      R === "" && (R = "."), R = R.replace(/\\/$/, "");\n      for (var Z = 0; B.indexOf(R + "/") !== 0; ) {\n        var N = R.lastIndexOf("/");\n        if (N < 0 || (R = R.slice(0, N), R.match(/^([^\\/]+:\\/)?\\/*$/)))\n          return B;\n        ++Z;\n      }\n      return Array(Z + 1).join("../") + B.substr(R.length + 1);\n    }\n    t.relative = l;\n    var c = function() {\n      var R = /* @__PURE__ */ Object.create(null);\n      return !("__proto__" in R);\n    }();\n    function h(R) {\n      return R;\n    }\n    function f(R) {\n      return y(R) ? "$" + R : R;\n    }\n    t.toSetString = c ? h : f;\n    function m(R) {\n      return y(R) ? R.slice(1) : R;\n    }\n    t.fromSetString = c ? h : m;\n    function y(R) {\n      if (!R)\n        return !1;\n      var B = R.length;\n      if (B < 9 || R.charCodeAt(B - 1) !== 95 || R.charCodeAt(B - 2) !== 95 || R.charCodeAt(B - 3) !== 111 || R.charCodeAt(B - 4) !== 116 || R.charCodeAt(B - 5) !== 111 || R.charCodeAt(B - 6) !== 114 || R.charCodeAt(B - 7) !== 112 || R.charCodeAt(B - 8) !== 95 || R.charCodeAt(B - 9) !== 95)\n        return !1;\n      for (var Z = B - 10; Z >= 0; Z--)\n        if (R.charCodeAt(Z) !== 36)\n          return !1;\n      return !0;\n    }\n    function v(R, B, Z) {\n      var N = S(R.source, B.source);\n      return N !== 0 || (N = R.originalLine - B.originalLine, N !== 0) || (N = R.originalColumn - B.originalColumn, N !== 0 || Z) || (N = R.generatedColumn - B.generatedColumn, N !== 0) || (N = R.generatedLine - B.generatedLine, N !== 0) ? N : S(R.name, B.name);\n    }\n    t.compareByOriginalPositions = v;\n    function C(R, B, Z) {\n      var N = R.generatedLine - B.generatedLine;\n      return N !== 0 || (N = R.generatedColumn - B.generatedColumn, N !== 0 || Z) || (N = S(R.source, B.source), N !== 0) || (N = R.originalLine - B.originalLine, N !== 0) || (N = R.originalColumn - B.originalColumn, N !== 0) ? N : S(R.name, B.name);\n    }\n    t.compareByGeneratedPositionsDeflated = C;\n    function S(R, B) {\n      return R === B ? 0 : R === null ? 1 : B === null ? -1 : R > B ? 1 : -1;\n    }\n    function M(R, B) {\n      var Z = R.generatedLine - B.generatedLine;\n      return Z !== 0 || (Z = R.generatedColumn - B.generatedColumn, Z !== 0) || (Z = S(R.source, B.source), Z !== 0) || (Z = R.originalLine - B.originalLine, Z !== 0) || (Z = R.originalColumn - B.originalColumn, Z !== 0) ? Z : S(R.name, B.name);\n    }\n    t.compareByGeneratedPositionsInflated = M;\n    function $(R) {\n      return JSON.parse(R.replace(/^\\)]}\'[^\\n]*\\n/, ""));\n    }\n    t.parseSourceMapInput = $;\n    function U(R, B, Z) {\n      if (B = B || "", R && (R[R.length - 1] !== "/" && B[0] !== "/" && (R += "/"), B = R + B), Z) {\n        var N = i(Z);\n        if (!N)\n          throw new Error("sourceMapURL could not be parsed");\n        if (N.path) {\n          var q = N.path.lastIndexOf("/");\n          q >= 0 && (N.path = N.path.substring(0, q + 1));\n        }\n        B = o(s(N), B);\n      }\n      return a(B);\n    }\n    t.computeSourceURL = U;\n  }(Ch)), Ch;\n}\nvar Sh = {}, Km;\nfunction R2() {\n  if (Km) return Sh;\n  Km = 1;\n  var t = Wo(), e = Object.prototype.hasOwnProperty, n = typeof Map < "u";\n  function r() {\n    this._array = [], this._set = n ? /* @__PURE__ */ new Map() : /* @__PURE__ */ Object.create(null);\n  }\n  return r.fromArray = function(s, a) {\n    for (var o = new r(), l = 0, c = s.length; l < c; l++)\n      o.add(s[l], a);\n    return o;\n  }, r.prototype.size = function() {\n    return n ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n  }, r.prototype.add = function(s, a) {\n    var o = n ? s : t.toSetString(s), l = n ? this.has(s) : e.call(this._set, o), c = this._array.length;\n    (!l || a) && this._array.push(s), l || (n ? this._set.set(s, c) : this._set[o] = c);\n  }, r.prototype.has = function(s) {\n    if (n)\n      return this._set.has(s);\n    var a = t.toSetString(s);\n    return e.call(this._set, a);\n  }, r.prototype.indexOf = function(s) {\n    if (n) {\n      var a = this._set.get(s);\n      if (a >= 0)\n        return a;\n    } else {\n      var o = t.toSetString(s);\n      if (e.call(this._set, o))\n        return this._set[o];\n    }\n    throw new Error(\'"\' + s + \'" is not in the set.\');\n  }, r.prototype.at = function(s) {\n    if (s >= 0 && s < this._array.length)\n      return this._array[s];\n    throw new Error("No element indexed by " + s);\n  }, r.prototype.toArray = function() {\n    return this._array.slice();\n  }, Sh.ArraySet = r, Sh;\n}\nvar Ah = {}, Jm;\nfunction JB() {\n  if (Jm) return Ah;\n  Jm = 1;\n  var t = Wo();\n  function e(r, i) {\n    var s = r.generatedLine, a = i.generatedLine, o = r.generatedColumn, l = i.generatedColumn;\n    return a > s || a == s && l >= o || t.compareByGeneratedPositionsInflated(r, i) <= 0;\n  }\n  function n() {\n    this._array = [], this._sorted = !0, this._last = { generatedLine: -1, generatedColumn: 0 };\n  }\n  return n.prototype.unsortedForEach = function(i, s) {\n    this._array.forEach(i, s);\n  }, n.prototype.add = function(i) {\n    e(this._last, i) ? (this._last = i, this._array.push(i)) : (this._sorted = !1, this._array.push(i));\n  }, n.prototype.toArray = function() {\n    return this._sorted || (this._array.sort(t.compareByGeneratedPositionsInflated), this._sorted = !0), this._array;\n  }, Ah.MappingList = n, Ah;\n}\nvar eg;\nfunction _2() {\n  if (eg) return wh;\n  eg = 1;\n  var t = j2(), e = Wo(), n = R2().ArraySet, r = JB().MappingList;\n  function i(s) {\n    s || (s = {}), this._file = e.getArg(s, "file", null), this._sourceRoot = e.getArg(s, "sourceRoot", null), this._skipValidation = e.getArg(s, "skipValidation", !1), this._sources = new n(), this._names = new n(), this._mappings = new r(), this._sourcesContents = null;\n  }\n  return i.prototype._version = 3, i.fromSourceMap = function(a) {\n    var o = a.sourceRoot, l = new i({\n      file: a.file,\n      sourceRoot: o\n    });\n    return a.eachMapping(function(c) {\n      var h = {\n        generated: {\n          line: c.generatedLine,\n          column: c.generatedColumn\n        }\n      };\n      c.source != null && (h.source = c.source, o != null && (h.source = e.relative(o, h.source)), h.original = {\n        line: c.originalLine,\n        column: c.originalColumn\n      }, c.name != null && (h.name = c.name)), l.addMapping(h);\n    }), a.sources.forEach(function(c) {\n      var h = c;\n      o !== null && (h = e.relative(o, c)), l._sources.has(h) || l._sources.add(h);\n      var f = a.sourceContentFor(c);\n      f != null && l.setSourceContent(c, f);\n    }), l;\n  }, i.prototype.addMapping = function(a) {\n    var o = e.getArg(a, "generated"), l = e.getArg(a, "original", null), c = e.getArg(a, "source", null), h = e.getArg(a, "name", null);\n    this._skipValidation || this._validateMapping(o, l, c, h), c != null && (c = String(c), this._sources.has(c) || this._sources.add(c)), h != null && (h = String(h), this._names.has(h) || this._names.add(h)), this._mappings.add({\n      generatedLine: o.line,\n      generatedColumn: o.column,\n      originalLine: l != null && l.line,\n      originalColumn: l != null && l.column,\n      source: c,\n      name: h\n    });\n  }, i.prototype.setSourceContent = function(a, o) {\n    var l = a;\n    this._sourceRoot != null && (l = e.relative(this._sourceRoot, l)), o != null ? (this._sourcesContents || (this._sourcesContents = /* @__PURE__ */ Object.create(null)), this._sourcesContents[e.toSetString(l)] = o) : this._sourcesContents && (delete this._sourcesContents[e.toSetString(l)], Object.keys(this._sourcesContents).length === 0 && (this._sourcesContents = null));\n  }, i.prototype.applySourceMap = function(a, o, l) {\n    var c = o;\n    if (o == null) {\n      if (a.file == null)\n        throw new Error(\n          `SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, or the source map\'s "file" property. Both were omitted.`\n        );\n      c = a.file;\n    }\n    var h = this._sourceRoot;\n    h != null && (c = e.relative(h, c));\n    var f = new n(), m = new n();\n    this._mappings.unsortedForEach(function(y) {\n      if (y.source === c && y.originalLine != null) {\n        var v = a.originalPositionFor({\n          line: y.originalLine,\n          column: y.originalColumn\n        });\n        v.source != null && (y.source = v.source, l != null && (y.source = e.join(l, y.source)), h != null && (y.source = e.relative(h, y.source)), y.originalLine = v.line, y.originalColumn = v.column, v.name != null && (y.name = v.name));\n      }\n      var C = y.source;\n      C != null && !f.has(C) && f.add(C);\n      var S = y.name;\n      S != null && !m.has(S) && m.add(S);\n    }, this), this._sources = f, this._names = m, a.sources.forEach(function(y) {\n      var v = a.sourceContentFor(y);\n      v != null && (l != null && (y = e.join(l, y)), h != null && (y = e.relative(h, y)), this.setSourceContent(y, v));\n    }, this);\n  }, i.prototype._validateMapping = function(a, o, l, c) {\n    if (o && typeof o.line != "number" && typeof o.column != "number")\n      throw new Error(\n        "original.line and original.column are not numbers -- you probably meant to omit the original mapping entirely and only map the generated position. If so, pass null for the original mapping instead of an object with empty or null values."\n      );\n    if (!(a && "line" in a && "column" in a && a.line > 0 && a.column >= 0 && !o && !l && !c)) {\n      if (a && "line" in a && "column" in a && o && "line" in o && "column" in o && a.line > 0 && a.column >= 0 && o.line > 0 && o.column >= 0 && l)\n        return;\n      throw new Error("Invalid mapping: " + JSON.stringify({\n        generated: a,\n        source: l,\n        original: o,\n        name: c\n      }));\n    }\n  }, i.prototype._serializeMappings = function() {\n    for (var a = 0, o = 1, l = 0, c = 0, h = 0, f = 0, m = "", y, v, C, S, M = this._mappings.toArray(), $ = 0, U = M.length; $ < U; $++) {\n      if (v = M[$], y = "", v.generatedLine !== o)\n        for (a = 0; v.generatedLine !== o; )\n          y += ";", o++;\n      else if ($ > 0) {\n        if (!e.compareByGeneratedPositionsInflated(v, M[$ - 1]))\n          continue;\n        y += ",";\n      }\n      y += t.encode(v.generatedColumn - a), a = v.generatedColumn, v.source != null && (S = this._sources.indexOf(v.source), y += t.encode(S - f), f = S, y += t.encode(v.originalLine - 1 - c), c = v.originalLine - 1, y += t.encode(v.originalColumn - l), l = v.originalColumn, v.name != null && (C = this._names.indexOf(v.name), y += t.encode(C - h), h = C)), m += y;\n    }\n    return m;\n  }, i.prototype._generateSourcesContent = function(a, o) {\n    return a.map(function(l) {\n      if (!this._sourcesContents)\n        return null;\n      o != null && (l = e.relative(o, l));\n      var c = e.toSetString(l);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, c) ? this._sourcesContents[c] : null;\n    }, this);\n  }, i.prototype.toJSON = function() {\n    var a = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    return this._file != null && (a.file = this._file), this._sourceRoot != null && (a.sourceRoot = this._sourceRoot), this._sourcesContents && (a.sourcesContent = this._generateSourcesContent(a.sources, a.sourceRoot)), a;\n  }, i.prototype.toString = function() {\n    return JSON.stringify(this.toJSON());\n  }, wh.SourceMapGenerator = i, wh;\n}\nvar za = {}, Dh = {}, tg;\nfunction e9() {\n  return tg || (tg = 1, function(t) {\n    t.GREATEST_LOWER_BOUND = 1, t.LEAST_UPPER_BOUND = 2;\n    function e(n, r, i, s, a, o) {\n      var l = Math.floor((r - n) / 2) + n, c = a(i, s[l], !0);\n      return c === 0 ? l : c > 0 ? r - l > 1 ? e(l, r, i, s, a, o) : o == t.LEAST_UPPER_BOUND ? r < s.length ? r : -1 : l : l - n > 1 ? e(n, l, i, s, a, o) : o == t.LEAST_UPPER_BOUND ? l : n < 0 ? -1 : n;\n    }\n    t.search = function(r, i, s, a) {\n      if (i.length === 0)\n        return -1;\n      var o = e(\n        -1,\n        i.length,\n        r,\n        i,\n        s,\n        a || t.GREATEST_LOWER_BOUND\n      );\n      if (o < 0)\n        return -1;\n      for (; o - 1 >= 0 && s(i[o], i[o - 1], !0) === 0; )\n        --o;\n      return o;\n    };\n  }(Dh)), Dh;\n}\nvar Ph = {}, ng;\nfunction t9() {\n  if (ng) return Ph;\n  ng = 1;\n  function t(r, i, s) {\n    var a = r[i];\n    r[i] = r[s], r[s] = a;\n  }\n  function e(r, i) {\n    return Math.round(r + Math.random() * (i - r));\n  }\n  function n(r, i, s, a) {\n    if (s < a) {\n      var o = e(s, a), l = s - 1;\n      t(r, o, a);\n      for (var c = r[a], h = s; h < a; h++)\n        i(r[h], c) <= 0 && (l += 1, t(r, l, h));\n      t(r, l + 1, h);\n      var f = l + 1;\n      n(r, i, s, f - 1), n(r, i, f + 1, a);\n    }\n  }\n  return Ph.quickSort = function(r, i) {\n    n(r, i, 0, r.length - 1);\n  }, Ph;\n}\nvar rg;\nfunction n9() {\n  if (rg) return za;\n  rg = 1;\n  var t = Wo(), e = e9(), n = R2().ArraySet, r = j2(), i = t9().quickSort;\n  function s(c, h) {\n    var f = c;\n    return typeof c == "string" && (f = t.parseSourceMapInput(c)), f.sections != null ? new l(f, h) : new a(f, h);\n  }\n  s.fromSourceMap = function(c, h) {\n    return a.fromSourceMap(c, h);\n  }, s.prototype._version = 3, s.prototype.__generatedMappings = null, Object.defineProperty(s.prototype, "_generatedMappings", {\n    configurable: !0,\n    enumerable: !0,\n    get: function() {\n      return this.__generatedMappings || this._parseMappings(this._mappings, this.sourceRoot), this.__generatedMappings;\n    }\n  }), s.prototype.__originalMappings = null, Object.defineProperty(s.prototype, "_originalMappings", {\n    configurable: !0,\n    enumerable: !0,\n    get: function() {\n      return this.__originalMappings || this._parseMappings(this._mappings, this.sourceRoot), this.__originalMappings;\n    }\n  }), s.prototype._charIsMappingSeparator = function(h, f) {\n    var m = h.charAt(f);\n    return m === ";" || m === ",";\n  }, s.prototype._parseMappings = function(h, f) {\n    throw new Error("Subclasses must implement _parseMappings");\n  }, s.GENERATED_ORDER = 1, s.ORIGINAL_ORDER = 2, s.GREATEST_LOWER_BOUND = 1, s.LEAST_UPPER_BOUND = 2, s.prototype.eachMapping = function(h, f, m) {\n    var y = f || null, v = m || s.GENERATED_ORDER, C;\n    switch (v) {\n      case s.GENERATED_ORDER:\n        C = this._generatedMappings;\n        break;\n      case s.ORIGINAL_ORDER:\n        C = this._originalMappings;\n        break;\n      default:\n        throw new Error("Unknown order of iteration.");\n    }\n    var S = this.sourceRoot;\n    C.map(function(M) {\n      var $ = M.source === null ? null : this._sources.at(M.source);\n      return $ = t.computeSourceURL(S, $, this._sourceMapURL), {\n        source: $,\n        generatedLine: M.generatedLine,\n        generatedColumn: M.generatedColumn,\n        originalLine: M.originalLine,\n        originalColumn: M.originalColumn,\n        name: M.name === null ? null : this._names.at(M.name)\n      };\n    }, this).forEach(h, y);\n  }, s.prototype.allGeneratedPositionsFor = function(h) {\n    var f = t.getArg(h, "line"), m = {\n      source: t.getArg(h, "source"),\n      originalLine: f,\n      originalColumn: t.getArg(h, "column", 0)\n    };\n    if (m.source = this._findSourceIndex(m.source), m.source < 0)\n      return [];\n    var y = [], v = this._findMapping(\n      m,\n      this._originalMappings,\n      "originalLine",\n      "originalColumn",\n      t.compareByOriginalPositions,\n      e.LEAST_UPPER_BOUND\n    );\n    if (v >= 0) {\n      var C = this._originalMappings[v];\n      if (h.column === void 0)\n        for (var S = C.originalLine; C && C.originalLine === S; )\n          y.push({\n            line: t.getArg(C, "generatedLine", null),\n            column: t.getArg(C, "generatedColumn", null),\n            lastColumn: t.getArg(C, "lastGeneratedColumn", null)\n          }), C = this._originalMappings[++v];\n      else\n        for (var M = C.originalColumn; C && C.originalLine === f && C.originalColumn == M; )\n          y.push({\n            line: t.getArg(C, "generatedLine", null),\n            column: t.getArg(C, "generatedColumn", null),\n            lastColumn: t.getArg(C, "lastGeneratedColumn", null)\n          }), C = this._originalMappings[++v];\n    }\n    return y;\n  }, za.SourceMapConsumer = s;\n  function a(c, h) {\n    var f = c;\n    typeof c == "string" && (f = t.parseSourceMapInput(c));\n    var m = t.getArg(f, "version"), y = t.getArg(f, "sources"), v = t.getArg(f, "names", []), C = t.getArg(f, "sourceRoot", null), S = t.getArg(f, "sourcesContent", null), M = t.getArg(f, "mappings"), $ = t.getArg(f, "file", null);\n    if (m != this._version)\n      throw new Error("Unsupported version: " + m);\n    C && (C = t.normalize(C)), y = y.map(String).map(t.normalize).map(function(U) {\n      return C && t.isAbsolute(C) && t.isAbsolute(U) ? t.relative(C, U) : U;\n    }), this._names = n.fromArray(v.map(String), !0), this._sources = n.fromArray(y, !0), this._absoluteSources = this._sources.toArray().map(function(U) {\n      return t.computeSourceURL(C, U, h);\n    }), this.sourceRoot = C, this.sourcesContent = S, this._mappings = M, this._sourceMapURL = h, this.file = $;\n  }\n  a.prototype = Object.create(s.prototype), a.prototype.consumer = s, a.prototype._findSourceIndex = function(c) {\n    var h = c;\n    if (this.sourceRoot != null && (h = t.relative(this.sourceRoot, h)), this._sources.has(h))\n      return this._sources.indexOf(h);\n    var f;\n    for (f = 0; f < this._absoluteSources.length; ++f)\n      if (this._absoluteSources[f] == c)\n        return f;\n    return -1;\n  }, a.fromSourceMap = function(h, f) {\n    var m = Object.create(a.prototype), y = m._names = n.fromArray(h._names.toArray(), !0), v = m._sources = n.fromArray(h._sources.toArray(), !0);\n    m.sourceRoot = h._sourceRoot, m.sourcesContent = h._generateSourcesContent(\n      m._sources.toArray(),\n      m.sourceRoot\n    ), m.file = h._file, m._sourceMapURL = f, m._absoluteSources = m._sources.toArray().map(function(Z) {\n      return t.computeSourceURL(m.sourceRoot, Z, f);\n    });\n    for (var C = h._mappings.toArray().slice(), S = m.__generatedMappings = [], M = m.__originalMappings = [], $ = 0, U = C.length; $ < U; $++) {\n      var R = C[$], B = new o();\n      B.generatedLine = R.generatedLine, B.generatedColumn = R.generatedColumn, R.source && (B.source = v.indexOf(R.source), B.originalLine = R.originalLine, B.originalColumn = R.originalColumn, R.name && (B.name = y.indexOf(R.name)), M.push(B)), S.push(B);\n    }\n    return i(m.__originalMappings, t.compareByOriginalPositions), m;\n  }, a.prototype._version = 3, Object.defineProperty(a.prototype, "sources", {\n    get: function() {\n      return this._absoluteSources.slice();\n    }\n  });\n  function o() {\n    this.generatedLine = 0, this.generatedColumn = 0, this.source = null, this.originalLine = null, this.originalColumn = null, this.name = null;\n  }\n  a.prototype._parseMappings = function(h, f) {\n    for (var m = 1, y = 0, v = 0, C = 0, S = 0, M = 0, $ = h.length, U = 0, R = {}, B = {}, Z = [], N = [], q, se, K, ce, H; U < $; )\n      if (h.charAt(U) === ";")\n        m++, U++, y = 0;\n      else if (h.charAt(U) === ",")\n        U++;\n      else {\n        for (q = new o(), q.generatedLine = m, ce = U; ce < $ && !this._charIsMappingSeparator(h, ce); ce++)\n          ;\n        if (se = h.slice(U, ce), K = R[se], K)\n          U += se.length;\n        else {\n          for (K = []; U < ce; )\n            r.decode(h, U, B), H = B.value, U = B.rest, K.push(H);\n          if (K.length === 2)\n            throw new Error("Found a source, but no line and column");\n          if (K.length === 3)\n            throw new Error("Found a source and line, but no column");\n          R[se] = K;\n        }\n        q.generatedColumn = y + K[0], y = q.generatedColumn, K.length > 1 && (q.source = S + K[1], S += K[1], q.originalLine = v + K[2], v = q.originalLine, q.originalLine += 1, q.originalColumn = C + K[3], C = q.originalColumn, K.length > 4 && (q.name = M + K[4], M += K[4])), N.push(q), typeof q.originalLine == "number" && Z.push(q);\n      }\n    i(N, t.compareByGeneratedPositionsDeflated), this.__generatedMappings = N, i(Z, t.compareByOriginalPositions), this.__originalMappings = Z;\n  }, a.prototype._findMapping = function(h, f, m, y, v, C) {\n    if (h[m] <= 0)\n      throw new TypeError("Line must be greater than or equal to 1, got " + h[m]);\n    if (h[y] < 0)\n      throw new TypeError("Column must be greater than or equal to 0, got " + h[y]);\n    return e.search(h, f, v, C);\n  }, a.prototype.computeColumnSpans = function() {\n    for (var h = 0; h < this._generatedMappings.length; ++h) {\n      var f = this._generatedMappings[h];\n      if (h + 1 < this._generatedMappings.length) {\n        var m = this._generatedMappings[h + 1];\n        if (f.generatedLine === m.generatedLine) {\n          f.lastGeneratedColumn = m.generatedColumn - 1;\n          continue;\n        }\n      }\n      f.lastGeneratedColumn = 1 / 0;\n    }\n  }, a.prototype.originalPositionFor = function(h) {\n    var f = {\n      generatedLine: t.getArg(h, "line"),\n      generatedColumn: t.getArg(h, "column")\n    }, m = this._findMapping(\n      f,\n      this._generatedMappings,\n      "generatedLine",\n      "generatedColumn",\n      t.compareByGeneratedPositionsDeflated,\n      t.getArg(h, "bias", s.GREATEST_LOWER_BOUND)\n    );\n    if (m >= 0) {\n      var y = this._generatedMappings[m];\n      if (y.generatedLine === f.generatedLine) {\n        var v = t.getArg(y, "source", null);\n        v !== null && (v = this._sources.at(v), v = t.computeSourceURL(this.sourceRoot, v, this._sourceMapURL));\n        var C = t.getArg(y, "name", null);\n        return C !== null && (C = this._names.at(C)), {\n          source: v,\n          line: t.getArg(y, "originalLine", null),\n          column: t.getArg(y, "originalColumn", null),\n          name: C\n        };\n      }\n    }\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  }, a.prototype.hasContentsOfAllSources = function() {\n    return this.sourcesContent ? this.sourcesContent.length >= this._sources.size() && !this.sourcesContent.some(function(h) {\n      return h == null;\n    }) : !1;\n  }, a.prototype.sourceContentFor = function(h, f) {\n    if (!this.sourcesContent)\n      return null;\n    var m = this._findSourceIndex(h);\n    if (m >= 0)\n      return this.sourcesContent[m];\n    var y = h;\n    this.sourceRoot != null && (y = t.relative(this.sourceRoot, y));\n    var v;\n    if (this.sourceRoot != null && (v = t.urlParse(this.sourceRoot))) {\n      var C = y.replace(/^file:\\/\\//, "");\n      if (v.scheme == "file" && this._sources.has(C))\n        return this.sourcesContent[this._sources.indexOf(C)];\n      if ((!v.path || v.path == "/") && this._sources.has("/" + y))\n        return this.sourcesContent[this._sources.indexOf("/" + y)];\n    }\n    if (f)\n      return null;\n    throw new Error(\'"\' + y + \'" is not in the SourceMap.\');\n  }, a.prototype.generatedPositionFor = function(h) {\n    var f = t.getArg(h, "source");\n    if (f = this._findSourceIndex(f), f < 0)\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    var m = {\n      source: f,\n      originalLine: t.getArg(h, "line"),\n      originalColumn: t.getArg(h, "column")\n    }, y = this._findMapping(\n      m,\n      this._originalMappings,\n      "originalLine",\n      "originalColumn",\n      t.compareByOriginalPositions,\n      t.getArg(h, "bias", s.GREATEST_LOWER_BOUND)\n    );\n    if (y >= 0) {\n      var v = this._originalMappings[y];\n      if (v.source === m.source)\n        return {\n          line: t.getArg(v, "generatedLine", null),\n          column: t.getArg(v, "generatedColumn", null),\n          lastColumn: t.getArg(v, "lastGeneratedColumn", null)\n        };\n    }\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  }, za.BasicSourceMapConsumer = a;\n  function l(c, h) {\n    var f = c;\n    typeof c == "string" && (f = t.parseSourceMapInput(c));\n    var m = t.getArg(f, "version"), y = t.getArg(f, "sections");\n    if (m != this._version)\n      throw new Error("Unsupported version: " + m);\n    this._sources = new n(), this._names = new n();\n    var v = {\n      line: -1,\n      column: 0\n    };\n    this._sections = y.map(function(C) {\n      if (C.url)\n        throw new Error("Support for url field in sections not implemented.");\n      var S = t.getArg(C, "offset"), M = t.getArg(S, "line"), $ = t.getArg(S, "column");\n      if (M < v.line || M === v.line && $ < v.column)\n        throw new Error("Section offsets must be ordered and non-overlapping.");\n      return v = S, {\n        generatedOffset: {\n          // The offset fields are 0-based, but we use 1-based indices when\n          // encoding/decoding from VLQ.\n          generatedLine: M + 1,\n          generatedColumn: $ + 1\n        },\n        consumer: new s(t.getArg(C, "map"), h)\n      };\n    });\n  }\n  return l.prototype = Object.create(s.prototype), l.prototype.constructor = s, l.prototype._version = 3, Object.defineProperty(l.prototype, "sources", {\n    get: function() {\n      for (var c = [], h = 0; h < this._sections.length; h++)\n        for (var f = 0; f < this._sections[h].consumer.sources.length; f++)\n          c.push(this._sections[h].consumer.sources[f]);\n      return c;\n    }\n  }), l.prototype.originalPositionFor = function(h) {\n    var f = {\n      generatedLine: t.getArg(h, "line"),\n      generatedColumn: t.getArg(h, "column")\n    }, m = e.search(\n      f,\n      this._sections,\n      function(v, C) {\n        var S = v.generatedLine - C.generatedOffset.generatedLine;\n        return S || v.generatedColumn - C.generatedOffset.generatedColumn;\n      }\n    ), y = this._sections[m];\n    return y ? y.consumer.originalPositionFor({\n      line: f.generatedLine - (y.generatedOffset.generatedLine - 1),\n      column: f.generatedColumn - (y.generatedOffset.generatedLine === f.generatedLine ? y.generatedOffset.generatedColumn - 1 : 0),\n      bias: h.bias\n    }) : {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  }, l.prototype.hasContentsOfAllSources = function() {\n    return this._sections.every(function(h) {\n      return h.consumer.hasContentsOfAllSources();\n    });\n  }, l.prototype.sourceContentFor = function(h, f) {\n    for (var m = 0; m < this._sections.length; m++) {\n      var y = this._sections[m], v = y.consumer.sourceContentFor(h, !0);\n      if (v)\n        return v;\n    }\n    if (f)\n      return null;\n    throw new Error(\'"\' + h + \'" is not in the SourceMap.\');\n  }, l.prototype.generatedPositionFor = function(h) {\n    for (var f = 0; f < this._sections.length; f++) {\n      var m = this._sections[f];\n      if (m.consumer._findSourceIndex(t.getArg(h, "source")) !== -1) {\n        var y = m.consumer.generatedPositionFor(h);\n        if (y) {\n          var v = {\n            line: y.line + (m.generatedOffset.generatedLine - 1),\n            column: y.column + (m.generatedOffset.generatedLine === y.line ? m.generatedOffset.generatedColumn - 1 : 0)\n          };\n          return v;\n        }\n      }\n    }\n    return {\n      line: null,\n      column: null\n    };\n  }, l.prototype._parseMappings = function(h, f) {\n    this.__generatedMappings = [], this.__originalMappings = [];\n    for (var m = 0; m < this._sections.length; m++)\n      for (var y = this._sections[m], v = y.consumer._generatedMappings, C = 0; C < v.length; C++) {\n        var S = v[C], M = y.consumer._sources.at(S.source);\n        M = t.computeSourceURL(y.consumer.sourceRoot, M, this._sourceMapURL), this._sources.add(M), M = this._sources.indexOf(M);\n        var $ = null;\n        S.name && ($ = y.consumer._names.at(S.name), this._names.add($), $ = this._names.indexOf($));\n        var U = {\n          source: M,\n          generatedLine: S.generatedLine + (y.generatedOffset.generatedLine - 1),\n          generatedColumn: S.generatedColumn + (y.generatedOffset.generatedLine === S.generatedLine ? y.generatedOffset.generatedColumn - 1 : 0),\n          originalLine: S.originalLine,\n          originalColumn: S.originalColumn,\n          name: $\n        };\n        this.__generatedMappings.push(U), typeof U.originalLine == "number" && this.__originalMappings.push(U);\n      }\n    i(this.__generatedMappings, t.compareByGeneratedPositionsDeflated), i(this.__originalMappings, t.compareByOriginalPositions);\n  }, za.IndexedSourceMapConsumer = l, za;\n}\nvar Eh = {}, ig;\nfunction r9() {\n  if (ig) return Eh;\n  ig = 1;\n  var t = _2().SourceMapGenerator, e = Wo(), n = /(\\r?\\n)/, r = 10, i = "$$$isSourceNode$$$";\n  function s(a, o, l, c, h) {\n    this.children = [], this.sourceContents = {}, this.line = a ?? null, this.column = o ?? null, this.source = l ?? null, this.name = h ?? null, this[i] = !0, c != null && this.add(c);\n  }\n  return s.fromStringWithSourceMap = function(o, l, c) {\n    var h = new s(), f = o.split(n), m = 0, y = function() {\n      var $ = R(), U = R() || "";\n      return $ + U;\n      function R() {\n        return m < f.length ? f[m++] : void 0;\n      }\n    }, v = 1, C = 0, S = null;\n    return l.eachMapping(function($) {\n      if (S !== null)\n        if (v < $.generatedLine)\n          M(S, y()), v++, C = 0;\n        else {\n          var U = f[m] || "", R = U.substr(0, $.generatedColumn - C);\n          f[m] = U.substr($.generatedColumn - C), C = $.generatedColumn, M(S, R), S = $;\n          return;\n        }\n      for (; v < $.generatedLine; )\n        h.add(y()), v++;\n      if (C < $.generatedColumn) {\n        var U = f[m] || "";\n        h.add(U.substr(0, $.generatedColumn)), f[m] = U.substr($.generatedColumn), C = $.generatedColumn;\n      }\n      S = $;\n    }, this), m < f.length && (S && M(S, y()), h.add(f.splice(m).join(""))), l.sources.forEach(function($) {\n      var U = l.sourceContentFor($);\n      U != null && (c != null && ($ = e.join(c, $)), h.setSourceContent($, U));\n    }), h;\n    function M($, U) {\n      if ($ === null || $.source === void 0)\n        h.add(U);\n      else {\n        var R = c ? e.join(c, $.source) : $.source;\n        h.add(new s(\n          $.originalLine,\n          $.originalColumn,\n          R,\n          U,\n          $.name\n        ));\n      }\n    }\n  }, s.prototype.add = function(o) {\n    if (Array.isArray(o))\n      o.forEach(function(l) {\n        this.add(l);\n      }, this);\n    else if (o[i] || typeof o == "string")\n      o && this.children.push(o);\n    else\n      throw new TypeError(\n        "Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + o\n      );\n    return this;\n  }, s.prototype.prepend = function(o) {\n    if (Array.isArray(o))\n      for (var l = o.length - 1; l >= 0; l--)\n        this.prepend(o[l]);\n    else if (o[i] || typeof o == "string")\n      this.children.unshift(o);\n    else\n      throw new TypeError(\n        "Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + o\n      );\n    return this;\n  }, s.prototype.walk = function(o) {\n    for (var l, c = 0, h = this.children.length; c < h; c++)\n      l = this.children[c], l[i] ? l.walk(o) : l !== "" && o(l, {\n        source: this.source,\n        line: this.line,\n        column: this.column,\n        name: this.name\n      });\n  }, s.prototype.join = function(o) {\n    var l, c, h = this.children.length;\n    if (h > 0) {\n      for (l = [], c = 0; c < h - 1; c++)\n        l.push(this.children[c]), l.push(o);\n      l.push(this.children[c]), this.children = l;\n    }\n    return this;\n  }, s.prototype.replaceRight = function(o, l) {\n    var c = this.children[this.children.length - 1];\n    return c[i] ? c.replaceRight(o, l) : typeof c == "string" ? this.children[this.children.length - 1] = c.replace(o, l) : this.children.push("".replace(o, l)), this;\n  }, s.prototype.setSourceContent = function(o, l) {\n    this.sourceContents[e.toSetString(o)] = l;\n  }, s.prototype.walkSourceContents = function(o) {\n    for (var l = 0, c = this.children.length; l < c; l++)\n      this.children[l][i] && this.children[l].walkSourceContents(o);\n    for (var h = Object.keys(this.sourceContents), l = 0, c = h.length; l < c; l++)\n      o(e.fromSetString(h[l]), this.sourceContents[h[l]]);\n  }, s.prototype.toString = function() {\n    var o = "";\n    return this.walk(function(l) {\n      o += l;\n    }), o;\n  }, s.prototype.toStringWithSourceMap = function(o) {\n    var l = {\n      code: "",\n      line: 1,\n      column: 0\n    }, c = new t(o), h = !1, f = null, m = null, y = null, v = null;\n    return this.walk(function(C, S) {\n      l.code += C, S.source !== null && S.line !== null && S.column !== null ? ((f !== S.source || m !== S.line || y !== S.column || v !== S.name) && c.addMapping({\n        source: S.source,\n        original: {\n          line: S.line,\n          column: S.column\n        },\n        generated: {\n          line: l.line,\n          column: l.column\n        },\n        name: S.name\n      }), f = S.source, m = S.line, y = S.column, v = S.name, h = !0) : h && (c.addMapping({\n        generated: {\n          line: l.line,\n          column: l.column\n        }\n      }), f = null, h = !1);\n      for (var M = 0, $ = C.length; M < $; M++)\n        C.charCodeAt(M) === r ? (l.line++, l.column = 0, M + 1 === $ ? (f = null, h = !1) : h && c.addMapping({\n          source: S.source,\n          original: {\n            line: S.line,\n            column: S.column\n          },\n          generated: {\n            line: l.line,\n            column: l.column\n          },\n          name: S.name\n        })) : l.column++;\n    }), this.walkSourceContents(function(C, S) {\n      c.setSourceContent(C, S);\n    }), { code: l.code, map: c };\n  }, Eh.SourceNode = s, Eh;\n}\nvar sg;\nfunction i9() {\n  return sg || (sg = 1, Ga.SourceMapGenerator = _2().SourceMapGenerator, Ga.SourceMapConsumer = n9().SourceMapConsumer, Ga.SourceNode = r9().SourceNode), Ga;\n}\nconst s9 = "escodegen", a9 = "ECMAScript code generator", o9 = "http://github.com/estools/escodegen", l9 = "escodegen.js", u9 = { esgenerate: "./bin/esgenerate.js", escodegen: "./bin/escodegen.js" }, c9 = ["LICENSE.BSD", "README.md", "bin", "escodegen.js", "package.json"], h9 = "2.1.0", p9 = { node: ">=6.0" }, f9 = [{ name: "Yusuke Suzuki", email: "utatane.tea@gmail.com", web: "http://github.com/Constellation" }], d9 = { type: "git", url: "http://github.com/estools/escodegen.git" }, m9 = { estraverse: "^5.2.0", esutils: "^2.0.2", esprima: "^4.0.1" }, g9 = { "source-map": "~0.6.1" }, b9 = { acorn: "^8.0.4", bluebird: "^3.4.7", "bower-registry-client": "^1.0.0", chai: "^4.2.0", "chai-exclude": "^2.0.2", "commonjs-everywhere": "^0.9.7", gulp: "^4.0.2", "gulp-eslint": "^6.0.0", "gulp-mocha": "^7.0.2", minimist: "^1.2.5", optionator: "^0.9.1", semver: "^7.3.4" }, y9 = "BSD-2-Clause", O9 = { test: "gulp travis", "unit-test": "gulp test", lint: "gulp lint", release: "node tools/release.js", "build-min": "./node_modules/.bin/cjsify -ma path: tools/entry-point.js > escodegen.browser.min.js", build: "./node_modules/.bin/cjsify -a path: tools/entry-point.js > escodegen.browser.js" }, v9 = {\n  name: s9,\n  description: a9,\n  homepage: o9,\n  main: l9,\n  bin: u9,\n  files: c9,\n  version: h9,\n  engines: p9,\n  maintainers: f9,\n  repository: d9,\n  dependencies: m9,\n  optionalDependencies: g9,\n  devDependencies: b9,\n  license: y9,\n  scripts: O9\n};\nvar ag;\nfunction x9() {\n  return ag || (ag = 1, function(t) {\n    (function() {\n      var e, n, r, i, s, a, o, l, c, h, f, m, y, v, C, S, M, $, U, R, B, Z, N, q, se, K;\n      s = GB(), a = YB(), e = s.Syntax;\n      function ce(O) {\n        return ct.Expression.hasOwnProperty(O.type);\n      }\n      function H(O) {\n        return ct.Statement.hasOwnProperty(O.type);\n      }\n      n = {\n        Sequence: 0,\n        Yield: 1,\n        Assignment: 1,\n        Conditional: 2,\n        ArrowFunction: 2,\n        Coalesce: 3,\n        LogicalOR: 4,\n        LogicalAND: 5,\n        BitwiseOR: 6,\n        BitwiseXOR: 7,\n        BitwiseAND: 8,\n        Equality: 9,\n        Relational: 10,\n        BitwiseSHIFT: 11,\n        Additive: 12,\n        Multiplicative: 13,\n        Exponentiation: 14,\n        Await: 15,\n        Unary: 15,\n        Postfix: 16,\n        OptionalChaining: 17,\n        Call: 18,\n        New: 19,\n        TaggedTemplate: 20,\n        Member: 21,\n        Primary: 22\n      }, r = {\n        "??": n.Coalesce,\n        "||": n.LogicalOR,\n        "&&": n.LogicalAND,\n        "|": n.BitwiseOR,\n        "^": n.BitwiseXOR,\n        "&": n.BitwiseAND,\n        "==": n.Equality,\n        "!=": n.Equality,\n        "===": n.Equality,\n        "!==": n.Equality,\n        is: n.Equality,\n        isnt: n.Equality,\n        "<": n.Relational,\n        ">": n.Relational,\n        "<=": n.Relational,\n        ">=": n.Relational,\n        in: n.Relational,\n        instanceof: n.Relational,\n        "<<": n.BitwiseSHIFT,\n        ">>": n.BitwiseSHIFT,\n        ">>>": n.BitwiseSHIFT,\n        "+": n.Additive,\n        "-": n.Additive,\n        "*": n.Multiplicative,\n        "%": n.Multiplicative,\n        "/": n.Multiplicative,\n        "**": n.Exponentiation\n      };\n      var ie = 1, fe = 2, De = 4, Ee = 8, re = 16, Ce = 32, Le = 64, xe = fe | De, je = ie | fe, he = ie | fe | De, Pe = ie, Pt = De, ut = ie | De, We = ie, Mt = ie | Ce, He = 0, xt = ie | re, Bn = ie | Ee;\n      function fn() {\n        return {\n          indent: null,\n          base: null,\n          parse: null,\n          comment: !1,\n          format: {\n            indent: {\n              style: "    ",\n              base: 0,\n              adjustMultilineComment: !1\n            },\n            newline: `\n`,\n            space: " ",\n            json: !1,\n            renumber: !1,\n            hexadecimal: !1,\n            quotes: "single",\n            escapeless: !1,\n            compact: !1,\n            parentheses: !0,\n            semicolons: !0,\n            safeConcatenation: !1,\n            preserveBlankLines: !1\n          },\n          moz: {\n            comprehensionExpressionStartsWithAssignment: !1,\n            starlessGenerator: !1\n          },\n          sourceMap: null,\n          sourceMapRoot: null,\n          sourceMapWithCode: !1,\n          directive: !1,\n          raw: !0,\n          verbatim: null,\n          sourceCode: null\n        };\n      }\n      function yt(O, D) {\n        var A = "";\n        for (D |= 0; D > 0; D >>>= 1, O += O)\n          D & 1 && (A += O);\n        return A;\n      }\n      function kt(O) {\n        return /[\\r\\n]/g.test(O);\n      }\n      function Ot(O) {\n        var D = O.length;\n        return D && a.code.isLineTerminator(O.charCodeAt(D - 1));\n      }\n      function Xt(O, D) {\n        var A;\n        for (A in D)\n          D.hasOwnProperty(A) && (O[A] = D[A]);\n        return O;\n      }\n      function er(O, D) {\n        var A, P;\n        function _(J) {\n          return typeof J == "object" && J instanceof Object && !(J instanceof RegExp);\n        }\n        for (A in D)\n          D.hasOwnProperty(A) && (P = D[A], _(P) ? _(O[A]) ? er(O[A], P) : O[A] = er({}, P) : O[A] = P);\n        return O;\n      }\n      function tr(O) {\n        var D, A, P, _, J;\n        if (O !== O)\n          throw new Error("Numeric literal whose value is NaN");\n        if (O < 0 || O === 0 && 1 / O < 0)\n          throw new Error("Numeric literal whose value is negative");\n        if (O === 1 / 0)\n          return c ? "null" : h ? "1e400" : "1e+400";\n        if (D = "" + O, !h || D.length < 3)\n          return D;\n        for (A = D.indexOf("."), !c && D.charCodeAt(0) === 48 && A === 1 && (A = 0, D = D.slice(1)), P = D, D = D.replace("e+", "e"), _ = 0, (J = P.indexOf("e")) > 0 && (_ = +P.slice(J + 1), P = P.slice(0, J)), A >= 0 && (_ -= P.length - A - 1, P = +(P.slice(0, A) + P.slice(A + 1)) + ""), J = 0; P.charCodeAt(P.length + J - 1) === 48; )\n          --J;\n        return J !== 0 && (_ -= J, P = P.slice(0, J)), _ !== 0 && (P += "e" + _), (P.length < D.length || f && O > 1e12 && Math.floor(O) === O && (P = "0x" + O.toString(16)).length < D.length) && +P === O && (D = P), D;\n      }\n      function dr(O, D) {\n        return (O & -2) === 8232 ? (D ? "u" : "\\\\u") + (O === 8232 ? "2028" : "2029") : O === 10 || O === 13 ? (D ? "" : "\\\\") + (O === 10 ? "n" : "r") : String.fromCharCode(O);\n      }\n      function Mn(O) {\n        var D, A, P, _, J, ae, pe, ge;\n        if (A = O.toString(), O.source) {\n          if (D = A.match(/\\/([^/]*)$/), !D)\n            return A;\n          for (P = D[1], A = "", pe = !1, ge = !1, _ = 0, J = O.source.length; _ < J; ++_)\n            ae = O.source.charCodeAt(_), ge ? (A += dr(ae, ge), ge = !1) : (pe ? ae === 93 && (pe = !1) : ae === 47 ? A += "\\\\" : ae === 91 && (pe = !0), A += dr(ae, ge), ge = ae === 92);\n          return "/" + A + "/" + P;\n        }\n        return A;\n      }\n      function zt(O, D) {\n        var A;\n        return O === 8 ? "\\\\b" : O === 12 ? "\\\\f" : O === 9 ? "\\\\t" : (A = O.toString(16).toUpperCase(), c || O > 255 ? "\\\\u" + "0000".slice(A.length) + A : O === 0 && !a.code.isDecimalDigit(D) ? "\\\\0" : O === 11 ? "\\\\x0B" : "\\\\x" + "00".slice(A.length) + A);\n      }\n      function _r(O) {\n        if (O === 92)\n          return "\\\\\\\\";\n        if (O === 10)\n          return "\\\\n";\n        if (O === 13)\n          return "\\\\r";\n        if (O === 8232)\n          return "\\\\u2028";\n        if (O === 8233)\n          return "\\\\u2029";\n        throw new Error("Incorrectly classified character");\n      }\n      function nr(O) {\n        var D, A, P, _;\n        for (_ = m === "double" ? \'"\' : "\'", D = 0, A = O.length; D < A; ++D)\n          if (P = O.charCodeAt(D), P === 39) {\n            _ = \'"\';\n            break;\n          } else if (P === 34) {\n            _ = "\'";\n            break;\n          } else P === 92 && ++D;\n        return _ + O + _;\n      }\n      function bn(O) {\n        var D = "", A, P, _, J = 0, ae = 0, pe, ge;\n        for (A = 0, P = O.length; A < P; ++A) {\n          if (_ = O.charCodeAt(A), _ === 39)\n            ++J;\n          else if (_ === 34)\n            ++ae;\n          else if (_ === 47 && c)\n            D += "\\\\";\n          else if (a.code.isLineTerminator(_) || _ === 92) {\n            D += _r(_);\n            continue;\n          } else if (!a.code.isIdentifierPartES5(_) && (c && _ < 32 || !c && !y && (_ < 32 || _ > 126))) {\n            D += zt(_, O.charCodeAt(A + 1));\n            continue;\n          }\n          D += String.fromCharCode(_);\n        }\n        if (pe = !(m === "double" || m === "auto" && ae < J), ge = pe ? "\'" : \'"\', !(pe ? J : ae))\n          return ge + D + ge;\n        for (O = D, D = ge, A = 0, P = O.length; A < P; ++A)\n          _ = O.charCodeAt(A), (_ === 39 && pe || _ === 34 && !pe) && (D += "\\\\"), D += String.fromCharCode(_);\n        return D + ge;\n      }\n      function Yr(O) {\n        var D, A, P, _ = "";\n        for (D = 0, A = O.length; D < A; ++D)\n          P = O[D], _ += Array.isArray(P) ? Yr(P) : P;\n        return _;\n      }\n      function qe(O, D) {\n        if (!Z)\n          return Array.isArray(O) ? Yr(O) : O;\n        if (D == null) {\n          if (O instanceof i)\n            return O;\n          D = {};\n        }\n        return D.loc == null ? new i(null, null, Z, O, D.name || null) : new i(D.loc.start.line, D.loc.start.column, Z === !0 ? D.loc.source || null : Z, O, D.name || null);\n      }\n      function Qt() {\n        return C || " ";\n      }\n      function Se(O, D) {\n        var A, P, _, J;\n        return A = qe(O).toString(), A.length === 0 ? [D] : (P = qe(D).toString(), P.length === 0 ? [O] : (_ = A.charCodeAt(A.length - 1), J = P.charCodeAt(0), (_ === 43 || _ === 45) && _ === J || a.code.isIdentifierPartES5(_) && a.code.isIdentifierPartES5(J) || _ === 47 && J === 105 ? [O, Qt(), D] : a.code.isWhiteSpace(_) || a.code.isLineTerminator(_) || a.code.isWhiteSpace(J) || a.code.isLineTerminator(J) ? [O, D] : [O, C, D]));\n      }\n      function wt(O) {\n        return [o, O];\n      }\n      function Xe(O) {\n        var D;\n        D = o, o += l, O(o), o = D;\n      }\n      function Kr(O) {\n        var D;\n        for (D = O.length - 1; D >= 0 && !a.code.isLineTerminator(O.charCodeAt(D)); --D)\n          ;\n        return O.length - 1 - D;\n      }\n      function cs(O, D) {\n        var A, P, _, J, ae, pe, ge, Je;\n        for (A = O.split(/\\r\\n|[\\r\\n]/), pe = Number.MAX_VALUE, P = 1, _ = A.length; P < _; ++P) {\n          for (J = A[P], ae = 0; ae < J.length && a.code.isWhiteSpace(J.charCodeAt(ae)); )\n            ++ae;\n          pe > ae && (pe = ae);\n        }\n        for (typeof D < "u" ? (ge = o, A[1][pe] === "*" && (D += " "), o = D) : (pe & 1 && --pe, ge = o), P = 1, _ = A.length; P < _; ++P)\n          Je = qe(wt(A[P].slice(pe))), A[P] = Z ? Je.join("") : Je;\n        return o = ge, A.join(`\n`);\n      }\n      function Cn(O, D) {\n        if (O.type === "Line") {\n          if (Ot(O.value))\n            return "//" + O.value;\n          var A = "//" + O.value;\n          return q || (A += `\n`), A;\n        }\n        return R.format.indent.adjustMultilineComment && /[\\n\\r]/.test(O.value) ? cs("/*" + O.value + "*/", D) : "/*" + O.value + "*/";\n      }\n      function $n(O, D) {\n        var A, P, _, J, ae, pe, ge, Je, Rt, Ht, mr, $s, hs, Qn;\n        if (O.leadingComments && O.leadingComments.length > 0) {\n          if (J = D, q) {\n            for (_ = O.leadingComments[0], D = [], Je = _.extendedRange, Rt = _.range, mr = N.substring(Je[0], Rt[0]), Qn = (mr.match(/\\n/g) || []).length, Qn > 0 ? (D.push(yt(`\n`, Qn)), D.push(wt(Cn(_)))) : (D.push(mr), D.push(Cn(_))), Ht = Rt, A = 1, P = O.leadingComments.length; A < P; A++)\n              _ = O.leadingComments[A], Rt = _.range, $s = N.substring(Ht[1], Rt[0]), Qn = ($s.match(/\\n/g) || []).length, D.push(yt(`\n`, Qn)), D.push(wt(Cn(_))), Ht = Rt;\n            hs = N.substring(Rt[1], Je[1]), Qn = (hs.match(/\\n/g) || []).length, D.push(yt(`\n`, Qn));\n          } else\n            for (_ = O.leadingComments[0], D = [], $ && O.type === e.Program && O.body.length === 0 && D.push(`\n`), D.push(Cn(_)), Ot(qe(D).toString()) || D.push(`\n`), A = 1, P = O.leadingComments.length; A < P; ++A)\n              _ = O.leadingComments[A], ge = [Cn(_)], Ot(qe(ge).toString()) || ge.push(`\n`), D.push(wt(ge));\n          D.push(wt(J));\n        }\n        if (O.trailingComments)\n          if (q)\n            _ = O.trailingComments[0], Je = _.extendedRange, Rt = _.range, mr = N.substring(Je[0], Rt[0]), Qn = (mr.match(/\\n/g) || []).length, Qn > 0 ? (D.push(yt(`\n`, Qn)), D.push(wt(Cn(_)))) : (D.push(mr), D.push(Cn(_)));\n          else\n            for (ae = !Ot(qe(D).toString()), pe = yt(" ", Kr(qe([o, D, l]).toString())), A = 0, P = O.trailingComments.length; A < P; ++A)\n              _ = O.trailingComments[A], ae ? (A === 0 ? D = [D, l] : D = [D, pe], D.push(Cn(_, pe))) : D = [D, wt(Cn(_))], A !== P - 1 && !Ot(qe(D).toString()) && (D = [D, `\n`]);\n        return D;\n      }\n      function Ye(O, D, A) {\n        var P, _ = 0;\n        for (P = O; P < D; P++)\n          N[P] === `\n` && _++;\n        for (P = 1; P < _; P++)\n          A.push(v);\n      }\n      function Re(O, D, A) {\n        return D < A ? ["(", O, ")"] : O;\n      }\n      function ft(O) {\n        var D, A, P;\n        for (P = O.split(/\\r\\n|\\n/), D = 1, A = P.length; D < A; D++)\n          P[D] = v + o + P[D];\n        return P;\n      }\n      function It(O, D) {\n        var A, P, _;\n        return A = O[R.verbatim], typeof A == "string" ? P = Re(ft(A), n.Sequence, D) : (P = ft(A.content), _ = A.precedence != null ? A.precedence : n.Sequence, P = Re(P, _, D)), qe(P, O);\n      }\n      function ct() {\n      }\n      ct.prototype.maybeBlock = function(O, D) {\n        var A, P, _ = this;\n        return P = !R.comment || !O.leadingComments, O.type === e.BlockStatement && P ? [C, this.generateStatement(O, D)] : O.type === e.EmptyStatement && P ? ";" : (Xe(function() {\n          A = [\n            v,\n            wt(_.generateStatement(O, D))\n          ];\n        }), A);\n      }, ct.prototype.maybeBlockSuffix = function(O, D) {\n        var A = Ot(qe(D).toString());\n        return O.type === e.BlockStatement && (!R.comment || !O.leadingComments) && !A ? [D, C] : A ? [D, o] : [D, v, o];\n      };\n      function Wt(O) {\n        return qe(O.name, O);\n      }\n      function vt(O, D) {\n        return O.async ? "async" + (D ? Qt() : C) : "";\n      }\n      function ze(O) {\n        var D = O.generator && !R.moz.starlessGenerator;\n        return D ? "*" + C : "";\n      }\n      function Ln(O) {\n        var D = O.value, A = "";\n        return D.async && (A += vt(D, !O.computed)), D.generator && (A += ze(D) ? "*" : ""), A;\n      }\n      ct.prototype.generatePattern = function(O, D, A) {\n        return O.type === e.Identifier ? Wt(O) : this.generateExpression(O, D, A);\n      }, ct.prototype.generateFunctionParams = function(O) {\n        var D, A, P, _;\n        if (_ = !1, O.type === e.ArrowFunctionExpression && !O.rest && (!O.defaults || O.defaults.length === 0) && O.params.length === 1 && O.params[0].type === e.Identifier)\n          P = [vt(O, !0), Wt(O.params[0])];\n        else {\n          for (P = O.type === e.ArrowFunctionExpression ? [vt(O, !1)] : [], P.push("("), O.defaults && (_ = !0), D = 0, A = O.params.length; D < A; ++D)\n            _ && O.defaults[D] ? P.push(this.generateAssignment(O.params[D], O.defaults[D], "=", n.Assignment, he)) : P.push(this.generatePattern(O.params[D], n.Assignment, he)), D + 1 < A && P.push("," + C);\n          O.rest && (O.params.length && P.push("," + C), P.push("..."), P.push(Wt(O.rest))), P.push(")");\n        }\n        return P;\n      }, ct.prototype.generateFunctionBody = function(O) {\n        var D, A;\n        return D = this.generateFunctionParams(O), O.type === e.ArrowFunctionExpression && (D.push(C), D.push("=>")), O.expression ? (D.push(C), A = this.generateExpression(O.body, n.Assignment, he), A.toString().charAt(0) === "{" && (A = ["(", A, ")"]), D.push(A)) : D.push(this.maybeBlock(O.body, Bn)), D;\n      }, ct.prototype.generateIterationForStatement = function(O, D, A) {\n        var P = ["for" + (D.await ? Qt() + "await" : "") + C + "("], _ = this;\n        return Xe(function() {\n          D.left.type === e.VariableDeclaration ? Xe(function() {\n            P.push(D.left.kind + Qt()), P.push(_.generateStatement(D.left.declarations[0], He));\n          }) : P.push(_.generateExpression(D.left, n.Call, he)), P = Se(P, O), P = [Se(\n            P,\n            _.generateExpression(D.right, n.Assignment, he)\n          ), ")"];\n        }), P.push(this.maybeBlock(D.body, A)), P;\n      }, ct.prototype.generatePropertyKey = function(O, D) {\n        var A = [];\n        return D && A.push("["), A.push(this.generateExpression(O, n.Assignment, he)), D && A.push("]"), A;\n      }, ct.prototype.generateAssignment = function(O, D, A, P, _) {\n        return n.Assignment < P && (_ |= ie), Re(\n          [\n            this.generateExpression(O, n.Call, _),\n            C + A + C,\n            this.generateExpression(D, n.Assignment, _)\n          ],\n          n.Assignment,\n          P\n        );\n      }, ct.prototype.semicolon = function(O) {\n        return !M && O & Ce ? "" : ";";\n      }, ct.Statement = {\n        BlockStatement: function(O, D) {\n          var A, P, _ = ["{", v], J = this;\n          return Xe(function() {\n            O.body.length === 0 && q && (A = O.range, A[1] - A[0] > 2 && (P = N.substring(A[0] + 1, A[1] - 1), P[0] === `\n` && (_ = ["{"]), _.push(P)));\n            var ae, pe, ge, Je;\n            for (Je = We, D & Ee && (Je |= re), ae = 0, pe = O.body.length; ae < pe; ++ae)\n              q && (ae === 0 && (O.body[0].leadingComments && (A = O.body[0].leadingComments[0].extendedRange, P = N.substring(A[0], A[1]), P[0] === `\n` && (_ = ["{"])), O.body[0].leadingComments || Ye(O.range[0], O.body[0].range[0], _)), ae > 0 && !O.body[ae - 1].trailingComments && !O.body[ae].leadingComments && Ye(O.body[ae - 1].range[1], O.body[ae].range[0], _)), ae === pe - 1 && (Je |= Ce), O.body[ae].leadingComments && q ? ge = J.generateStatement(O.body[ae], Je) : ge = wt(J.generateStatement(O.body[ae], Je)), _.push(ge), Ot(qe(ge).toString()) || q && ae < pe - 1 && O.body[ae + 1].leadingComments || _.push(v), q && ae === pe - 1 && (O.body[ae].trailingComments || Ye(O.body[ae].range[1], O.range[1], _));\n          }), _.push(wt("}")), _;\n        },\n        BreakStatement: function(O, D) {\n          return O.label ? "break " + O.label.name + this.semicolon(D) : "break" + this.semicolon(D);\n        },\n        ContinueStatement: function(O, D) {\n          return O.label ? "continue " + O.label.name + this.semicolon(D) : "continue" + this.semicolon(D);\n        },\n        ClassBody: function(O, D) {\n          var A = ["{", v], P = this;\n          return Xe(function(_) {\n            var J, ae;\n            for (J = 0, ae = O.body.length; J < ae; ++J)\n              A.push(_), A.push(P.generateExpression(O.body[J], n.Sequence, he)), J + 1 < ae && A.push(v);\n          }), Ot(qe(A).toString()) || A.push(v), A.push(o), A.push("}"), A;\n        },\n        ClassDeclaration: function(O, D) {\n          var A, P;\n          return A = ["class"], O.id && (A = Se(A, this.generateExpression(O.id, n.Sequence, he))), O.superClass && (P = Se("extends", this.generateExpression(O.superClass, n.Unary, he)), A = Se(A, P)), A.push(C), A.push(this.generateStatement(O.body, Mt)), A;\n        },\n        DirectiveStatement: function(O, D) {\n          return R.raw && O.raw ? O.raw + this.semicolon(D) : nr(O.directive) + this.semicolon(D);\n        },\n        DoWhileStatement: function(O, D) {\n          var A = Se("do", this.maybeBlock(O.body, We));\n          return A = this.maybeBlockSuffix(O.body, A), Se(A, [\n            "while" + C + "(",\n            this.generateExpression(O.test, n.Sequence, he),\n            ")" + this.semicolon(D)\n          ]);\n        },\n        CatchClause: function(O, D) {\n          var A, P = this;\n          return Xe(function() {\n            var _;\n            O.param ? (A = [\n              "catch" + C + "(",\n              P.generateExpression(O.param, n.Sequence, he),\n              ")"\n            ], O.guard && (_ = P.generateExpression(O.guard, n.Sequence, he), A.splice(2, 0, " if ", _))) : A = ["catch"];\n          }), A.push(this.maybeBlock(O.body, We)), A;\n        },\n        DebuggerStatement: function(O, D) {\n          return "debugger" + this.semicolon(D);\n        },\n        EmptyStatement: function(O, D) {\n          return ";";\n        },\n        ExportDefaultDeclaration: function(O, D) {\n          var A = ["export"], P;\n          return P = D & Ce ? Mt : We, A = Se(A, "default"), H(O.declaration) ? A = Se(A, this.generateStatement(O.declaration, P)) : A = Se(A, this.generateExpression(O.declaration, n.Assignment, he) + this.semicolon(D)), A;\n        },\n        ExportNamedDeclaration: function(O, D) {\n          var A = ["export"], P, _ = this;\n          return P = D & Ce ? Mt : We, O.declaration ? Se(A, this.generateStatement(O.declaration, P)) : (O.specifiers && (O.specifiers.length === 0 ? A = Se(A, "{" + C + "}") : O.specifiers[0].type === e.ExportBatchSpecifier ? A = Se(A, this.generateExpression(O.specifiers[0], n.Sequence, he)) : (A = Se(A, "{"), Xe(function(J) {\n            var ae, pe;\n            for (A.push(v), ae = 0, pe = O.specifiers.length; ae < pe; ++ae)\n              A.push(J), A.push(_.generateExpression(O.specifiers[ae], n.Sequence, he)), ae + 1 < pe && A.push("," + v);\n          }), Ot(qe(A).toString()) || A.push(v), A.push(o + "}")), O.source ? A = Se(A, [\n            "from" + C,\n            // ModuleSpecifier\n            this.generateExpression(O.source, n.Sequence, he),\n            this.semicolon(D)\n          ]) : A.push(this.semicolon(D))), A);\n        },\n        ExportAllDeclaration: function(O, D) {\n          return [\n            "export" + C,\n            "*" + C,\n            "from" + C,\n            // ModuleSpecifier\n            this.generateExpression(O.source, n.Sequence, he),\n            this.semicolon(D)\n          ];\n        },\n        ExpressionStatement: function(O, D) {\n          var A, P;\n          function _(pe) {\n            var ge;\n            return pe.slice(0, 5) !== "class" ? !1 : (ge = pe.charCodeAt(5), ge === 123 || a.code.isWhiteSpace(ge) || a.code.isLineTerminator(ge));\n          }\n          function J(pe) {\n            var ge;\n            return pe.slice(0, 8) !== "function" ? !1 : (ge = pe.charCodeAt(8), ge === 40 || a.code.isWhiteSpace(ge) || ge === 42 || a.code.isLineTerminator(ge));\n          }\n          function ae(pe) {\n            var ge, Je, Rt;\n            if (pe.slice(0, 5) !== "async" || !a.code.isWhiteSpace(pe.charCodeAt(5)))\n              return !1;\n            for (Je = 6, Rt = pe.length; Je < Rt && a.code.isWhiteSpace(pe.charCodeAt(Je)); ++Je)\n              ;\n            return Je === Rt || pe.slice(Je, Je + 8) !== "function" ? !1 : (ge = pe.charCodeAt(Je + 8), ge === 40 || a.code.isWhiteSpace(ge) || ge === 42 || a.code.isLineTerminator(ge));\n          }\n          return A = [this.generateExpression(O.expression, n.Sequence, he)], P = qe(A).toString(), P.charCodeAt(0) === 123 || // ObjectExpression\n          _(P) || J(P) || ae(P) || U && D & re && O.expression.type === e.Literal && typeof O.expression.value == "string" ? A = ["(", A, ")" + this.semicolon(D)] : A.push(this.semicolon(D)), A;\n        },\n        ImportDeclaration: function(O, D) {\n          var A, P, _ = this;\n          return O.specifiers.length === 0 ? [\n            "import",\n            C,\n            // ModuleSpecifier\n            this.generateExpression(O.source, n.Sequence, he),\n            this.semicolon(D)\n          ] : (A = [\n            "import"\n          ], P = 0, O.specifiers[P].type === e.ImportDefaultSpecifier && (A = Se(A, [\n            this.generateExpression(O.specifiers[P], n.Sequence, he)\n          ]), ++P), O.specifiers[P] && (P !== 0 && A.push(","), O.specifiers[P].type === e.ImportNamespaceSpecifier ? A = Se(A, [\n            C,\n            this.generateExpression(O.specifiers[P], n.Sequence, he)\n          ]) : (A.push(C + "{"), O.specifiers.length - P === 1 ? (A.push(C), A.push(this.generateExpression(O.specifiers[P], n.Sequence, he)), A.push(C + "}" + C)) : (Xe(function(J) {\n            var ae, pe;\n            for (A.push(v), ae = P, pe = O.specifiers.length; ae < pe; ++ae)\n              A.push(J), A.push(_.generateExpression(O.specifiers[ae], n.Sequence, he)), ae + 1 < pe && A.push("," + v);\n          }), Ot(qe(A).toString()) || A.push(v), A.push(o + "}" + C)))), A = Se(A, [\n            "from" + C,\n            // ModuleSpecifier\n            this.generateExpression(O.source, n.Sequence, he),\n            this.semicolon(D)\n          ]), A);\n        },\n        VariableDeclarator: function(O, D) {\n          var A = D & ie ? he : xe;\n          return O.init ? [\n            this.generateExpression(O.id, n.Assignment, A),\n            C,\n            "=",\n            C,\n            this.generateExpression(O.init, n.Assignment, A)\n          ] : this.generatePattern(O.id, n.Assignment, A);\n        },\n        VariableDeclaration: function(O, D) {\n          var A, P, _, J, ae, pe = this;\n          A = [O.kind], ae = D & ie ? We : He;\n          function ge() {\n            for (J = O.declarations[0], R.comment && J.leadingComments ? (A.push(`\n`), A.push(wt(pe.generateStatement(J, ae)))) : (A.push(Qt()), A.push(pe.generateStatement(J, ae))), P = 1, _ = O.declarations.length; P < _; ++P)\n              J = O.declarations[P], R.comment && J.leadingComments ? (A.push("," + v), A.push(wt(pe.generateStatement(J, ae)))) : (A.push("," + C), A.push(pe.generateStatement(J, ae)));\n          }\n          return O.declarations.length > 1 ? Xe(ge) : ge(), A.push(this.semicolon(D)), A;\n        },\n        ThrowStatement: function(O, D) {\n          return [Se(\n            "throw",\n            this.generateExpression(O.argument, n.Sequence, he)\n          ), this.semicolon(D)];\n        },\n        TryStatement: function(O, D) {\n          var A, P, _, J;\n          if (A = ["try", this.maybeBlock(O.block, We)], A = this.maybeBlockSuffix(O.block, A), O.handlers)\n            for (P = 0, _ = O.handlers.length; P < _; ++P)\n              A = Se(A, this.generateStatement(O.handlers[P], We)), (O.finalizer || P + 1 !== _) && (A = this.maybeBlockSuffix(O.handlers[P].body, A));\n          else {\n            for (J = O.guardedHandlers || [], P = 0, _ = J.length; P < _; ++P)\n              A = Se(A, this.generateStatement(J[P], We)), (O.finalizer || P + 1 !== _) && (A = this.maybeBlockSuffix(J[P].body, A));\n            if (O.handler)\n              if (Array.isArray(O.handler))\n                for (P = 0, _ = O.handler.length; P < _; ++P)\n                  A = Se(A, this.generateStatement(O.handler[P], We)), (O.finalizer || P + 1 !== _) && (A = this.maybeBlockSuffix(O.handler[P].body, A));\n              else\n                A = Se(A, this.generateStatement(O.handler, We)), O.finalizer && (A = this.maybeBlockSuffix(O.handler.body, A));\n          }\n          return O.finalizer && (A = Se(A, ["finally", this.maybeBlock(O.finalizer, We)])), A;\n        },\n        SwitchStatement: function(O, D) {\n          var A, P, _, J, ae, pe = this;\n          if (Xe(function() {\n            A = [\n              "switch" + C + "(",\n              pe.generateExpression(O.discriminant, n.Sequence, he),\n              ")" + C + "{" + v\n            ];\n          }), O.cases)\n            for (ae = We, _ = 0, J = O.cases.length; _ < J; ++_)\n              _ === J - 1 && (ae |= Ce), P = wt(this.generateStatement(O.cases[_], ae)), A.push(P), Ot(qe(P).toString()) || A.push(v);\n          return A.push(wt("}")), A;\n        },\n        SwitchCase: function(O, D) {\n          var A, P, _, J, ae, pe = this;\n          return Xe(function() {\n            for (O.test ? A = [\n              Se("case", pe.generateExpression(O.test, n.Sequence, he)),\n              ":"\n            ] : A = ["default:"], _ = 0, J = O.consequent.length, J && O.consequent[0].type === e.BlockStatement && (P = pe.maybeBlock(O.consequent[0], We), A.push(P), _ = 1), _ !== J && !Ot(qe(A).toString()) && A.push(v), ae = We; _ < J; ++_)\n              _ === J - 1 && D & Ce && (ae |= Ce), P = wt(pe.generateStatement(O.consequent[_], ae)), A.push(P), _ + 1 !== J && !Ot(qe(P).toString()) && A.push(v);\n          }), A;\n        },\n        IfStatement: function(O, D) {\n          var A, P, _, J = this;\n          return Xe(function() {\n            A = [\n              "if" + C + "(",\n              J.generateExpression(O.test, n.Sequence, he),\n              ")"\n            ];\n          }), _ = D & Ce, P = We, _ && (P |= Ce), O.alternate ? (A.push(this.maybeBlock(O.consequent, We)), A = this.maybeBlockSuffix(O.consequent, A), O.alternate.type === e.IfStatement ? A = Se(A, ["else ", this.generateStatement(O.alternate, P)]) : A = Se(A, Se("else", this.maybeBlock(O.alternate, P)))) : A.push(this.maybeBlock(O.consequent, P)), A;\n        },\n        ForStatement: function(O, D) {\n          var A, P = this;\n          return Xe(function() {\n            A = ["for" + C + "("], O.init ? O.init.type === e.VariableDeclaration ? A.push(P.generateStatement(O.init, He)) : (A.push(P.generateExpression(O.init, n.Sequence, xe)), A.push(";")) : A.push(";"), O.test && (A.push(C), A.push(P.generateExpression(O.test, n.Sequence, he))), A.push(";"), O.update && (A.push(C), A.push(P.generateExpression(O.update, n.Sequence, he))), A.push(")");\n          }), A.push(this.maybeBlock(O.body, D & Ce ? Mt : We)), A;\n        },\n        ForInStatement: function(O, D) {\n          return this.generateIterationForStatement("in", O, D & Ce ? Mt : We);\n        },\n        ForOfStatement: function(O, D) {\n          return this.generateIterationForStatement("of", O, D & Ce ? Mt : We);\n        },\n        LabeledStatement: function(O, D) {\n          return [O.label.name + ":", this.maybeBlock(O.body, D & Ce ? Mt : We)];\n        },\n        Program: function(O, D) {\n          var A, P, _, J, ae;\n          for (J = O.body.length, A = [$ && J > 0 ? `\n` : ""], ae = xt, _ = 0; _ < J; ++_)\n            !$ && _ === J - 1 && (ae |= Ce), q && (_ === 0 && (O.body[0].leadingComments || Ye(O.range[0], O.body[_].range[0], A)), _ > 0 && !O.body[_ - 1].trailingComments && !O.body[_].leadingComments && Ye(O.body[_ - 1].range[1], O.body[_].range[0], A)), P = wt(this.generateStatement(O.body[_], ae)), A.push(P), _ + 1 < J && !Ot(qe(P).toString()) && (q && O.body[_ + 1].leadingComments || A.push(v)), q && _ === J - 1 && (O.body[_].trailingComments || Ye(O.body[_].range[1], O.range[1], A));\n          return A;\n        },\n        FunctionDeclaration: function(O, D) {\n          return [\n            vt(O, !0),\n            "function",\n            ze(O) || Qt(),\n            O.id ? Wt(O.id) : "",\n            this.generateFunctionBody(O)\n          ];\n        },\n        ReturnStatement: function(O, D) {\n          return O.argument ? [Se(\n            "return",\n            this.generateExpression(O.argument, n.Sequence, he)\n          ), this.semicolon(D)] : ["return" + this.semicolon(D)];\n        },\n        WhileStatement: function(O, D) {\n          var A, P = this;\n          return Xe(function() {\n            A = [\n              "while" + C + "(",\n              P.generateExpression(O.test, n.Sequence, he),\n              ")"\n            ];\n          }), A.push(this.maybeBlock(O.body, D & Ce ? Mt : We)), A;\n        },\n        WithStatement: function(O, D) {\n          var A, P = this;\n          return Xe(function() {\n            A = [\n              "with" + C + "(",\n              P.generateExpression(O.object, n.Sequence, he),\n              ")"\n            ];\n          }), A.push(this.maybeBlock(O.body, D & Ce ? Mt : We)), A;\n        }\n      }, Xt(ct.prototype, ct.Statement), ct.Expression = {\n        SequenceExpression: function(O, D, A) {\n          var P, _, J;\n          for (n.Sequence < D && (A |= ie), P = [], _ = 0, J = O.expressions.length; _ < J; ++_)\n            P.push(this.generateExpression(O.expressions[_], n.Assignment, A)), _ + 1 < J && P.push("," + C);\n          return Re(P, n.Sequence, D);\n        },\n        AssignmentExpression: function(O, D, A) {\n          return this.generateAssignment(O.left, O.right, O.operator, D, A);\n        },\n        ArrowFunctionExpression: function(O, D, A) {\n          return Re(this.generateFunctionBody(O), n.ArrowFunction, D);\n        },\n        ConditionalExpression: function(O, D, A) {\n          return n.Conditional < D && (A |= ie), Re(\n            [\n              this.generateExpression(O.test, n.Coalesce, A),\n              C + "?" + C,\n              this.generateExpression(O.consequent, n.Assignment, A),\n              C + ":" + C,\n              this.generateExpression(O.alternate, n.Assignment, A)\n            ],\n            n.Conditional,\n            D\n          );\n        },\n        LogicalExpression: function(O, D, A) {\n          return O.operator === "??" && (A |= Le), this.BinaryExpression(O, D, A);\n        },\n        BinaryExpression: function(O, D, A) {\n          var P, _, J, ae, pe, ge;\n          return ae = r[O.operator], _ = O.operator === "**" ? n.Postfix : ae, J = O.operator === "**" ? ae : ae + 1, ae < D && (A |= ie), pe = this.generateExpression(O.left, _, A), ge = pe.toString(), ge.charCodeAt(ge.length - 1) === 47 && a.code.isIdentifierPartES5(O.operator.charCodeAt(0)) ? P = [pe, Qt(), O.operator] : P = Se(pe, O.operator), pe = this.generateExpression(O.right, J, A), O.operator === "/" && pe.toString().charAt(0) === "/" || O.operator.slice(-1) === "<" && pe.toString().slice(0, 3) === "!--" ? (P.push(Qt()), P.push(pe)) : P = Se(P, pe), O.operator === "in" && !(A & ie) ? ["(", P, ")"] : (O.operator === "||" || O.operator === "&&") && A & Le ? ["(", P, ")"] : Re(P, ae, D);\n        },\n        CallExpression: function(O, D, A) {\n          var P, _, J;\n          for (P = [this.generateExpression(O.callee, n.Call, je)], O.optional && P.push("?."), P.push("("), _ = 0, J = O.arguments.length; _ < J; ++_)\n            P.push(this.generateExpression(O.arguments[_], n.Assignment, he)), _ + 1 < J && P.push("," + C);\n          return P.push(")"), A & fe ? Re(P, n.Call, D) : ["(", P, ")"];\n        },\n        ChainExpression: function(O, D, A) {\n          n.OptionalChaining < D && (A |= fe);\n          var P = this.generateExpression(O.expression, n.OptionalChaining, A);\n          return Re(P, n.OptionalChaining, D);\n        },\n        NewExpression: function(O, D, A) {\n          var P, _, J, ae, pe;\n          if (_ = O.arguments.length, pe = A & De && !S && _ === 0 ? ut : Pe, P = Se(\n            "new",\n            this.generateExpression(O.callee, n.New, pe)\n          ), !(A & De) || S || _ > 0) {\n            for (P.push("("), J = 0, ae = _; J < ae; ++J)\n              P.push(this.generateExpression(O.arguments[J], n.Assignment, he)), J + 1 < ae && P.push("," + C);\n            P.push(")");\n          }\n          return Re(P, n.New, D);\n        },\n        MemberExpression: function(O, D, A) {\n          var P, _;\n          return P = [this.generateExpression(O.object, n.Call, A & fe ? je : Pe)], O.computed ? (O.optional && P.push("?."), P.push("["), P.push(this.generateExpression(O.property, n.Sequence, A & fe ? he : ut)), P.push("]")) : (!O.optional && O.object.type === e.Literal && typeof O.object.value == "number" && (_ = qe(P).toString(), _.indexOf(".") < 0 && !/[eExX]/.test(_) && a.code.isDecimalDigit(_.charCodeAt(_.length - 1)) && !(_.length >= 2 && _.charCodeAt(0) === 48) && P.push(" ")), P.push(O.optional ? "?." : "."), P.push(Wt(O.property))), Re(P, n.Member, D);\n        },\n        MetaProperty: function(O, D, A) {\n          var P;\n          return P = [], P.push(typeof O.meta == "string" ? O.meta : Wt(O.meta)), P.push("."), P.push(typeof O.property == "string" ? O.property : Wt(O.property)), Re(P, n.Member, D);\n        },\n        UnaryExpression: function(O, D, A) {\n          var P, _, J, ae, pe;\n          return _ = this.generateExpression(O.argument, n.Unary, he), C === "" ? P = Se(O.operator, _) : (P = [O.operator], O.operator.length > 2 ? P = Se(P, _) : (ae = qe(P).toString(), pe = ae.charCodeAt(ae.length - 1), J = _.toString().charCodeAt(0), ((pe === 43 || pe === 45) && pe === J || a.code.isIdentifierPartES5(pe) && a.code.isIdentifierPartES5(J)) && P.push(Qt()), P.push(_))), Re(P, n.Unary, D);\n        },\n        YieldExpression: function(O, D, A) {\n          var P;\n          return O.delegate ? P = "yield*" : P = "yield", O.argument && (P = Se(\n            P,\n            this.generateExpression(O.argument, n.Yield, he)\n          )), Re(P, n.Yield, D);\n        },\n        AwaitExpression: function(O, D, A) {\n          var P = Se(\n            O.all ? "await*" : "await",\n            this.generateExpression(O.argument, n.Await, he)\n          );\n          return Re(P, n.Await, D);\n        },\n        UpdateExpression: function(O, D, A) {\n          return O.prefix ? Re(\n            [\n              O.operator,\n              this.generateExpression(O.argument, n.Unary, he)\n            ],\n            n.Unary,\n            D\n          ) : Re(\n            [\n              this.generateExpression(O.argument, n.Postfix, he),\n              O.operator\n            ],\n            n.Postfix,\n            D\n          );\n        },\n        FunctionExpression: function(O, D, A) {\n          var P = [\n            vt(O, !0),\n            "function"\n          ];\n          return O.id ? (P.push(ze(O) || Qt()), P.push(Wt(O.id))) : P.push(ze(O) || C), P.push(this.generateFunctionBody(O)), P;\n        },\n        ArrayPattern: function(O, D, A) {\n          return this.ArrayExpression(O, D, A, !0);\n        },\n        ArrayExpression: function(O, D, A, P) {\n          var _, J, ae = this;\n          return O.elements.length ? (J = P ? !1 : O.elements.length > 1, _ = ["[", J ? v : ""], Xe(function(pe) {\n            var ge, Je;\n            for (ge = 0, Je = O.elements.length; ge < Je; ++ge)\n              O.elements[ge] ? (_.push(J ? pe : ""), _.push(ae.generateExpression(O.elements[ge], n.Assignment, he))) : (J && _.push(pe), ge + 1 === Je && _.push(",")), ge + 1 < Je && _.push("," + (J ? v : C));\n          }), J && !Ot(qe(_).toString()) && _.push(v), _.push(J ? o : ""), _.push("]"), _) : "[]";\n        },\n        RestElement: function(O, D, A) {\n          return "..." + this.generatePattern(O.argument);\n        },\n        ClassExpression: function(O, D, A) {\n          var P, _;\n          return P = ["class"], O.id && (P = Se(P, this.generateExpression(O.id, n.Sequence, he))), O.superClass && (_ = Se("extends", this.generateExpression(O.superClass, n.Unary, he)), P = Se(P, _)), P.push(C), P.push(this.generateStatement(O.body, Mt)), P;\n        },\n        MethodDefinition: function(O, D, A) {\n          var P, _;\n          return O.static ? P = ["static" + C] : P = [], O.kind === "get" || O.kind === "set" ? _ = [\n            Se(O.kind, this.generatePropertyKey(O.key, O.computed)),\n            this.generateFunctionBody(O.value)\n          ] : _ = [\n            Ln(O),\n            this.generatePropertyKey(O.key, O.computed),\n            this.generateFunctionBody(O.value)\n          ], Se(P, _);\n        },\n        Property: function(O, D, A) {\n          return O.kind === "get" || O.kind === "set" ? [\n            O.kind,\n            Qt(),\n            this.generatePropertyKey(O.key, O.computed),\n            this.generateFunctionBody(O.value)\n          ] : O.shorthand ? O.value.type === "AssignmentPattern" ? this.AssignmentPattern(O.value, n.Sequence, he) : this.generatePropertyKey(O.key, O.computed) : O.method ? [\n            Ln(O),\n            this.generatePropertyKey(O.key, O.computed),\n            this.generateFunctionBody(O.value)\n          ] : [\n            this.generatePropertyKey(O.key, O.computed),\n            ":" + C,\n            this.generateExpression(O.value, n.Assignment, he)\n          ];\n        },\n        ObjectExpression: function(O, D, A) {\n          var P, _, J, ae = this;\n          return O.properties.length ? (P = O.properties.length > 1, Xe(function() {\n            J = ae.generateExpression(O.properties[0], n.Sequence, he);\n          }), !P && !kt(qe(J).toString()) ? ["{", C, J, C, "}"] : (Xe(function(pe) {\n            var ge, Je;\n            if (_ = ["{", v, pe, J], P)\n              for (_.push("," + v), ge = 1, Je = O.properties.length; ge < Je; ++ge)\n                _.push(pe), _.push(ae.generateExpression(O.properties[ge], n.Sequence, he)), ge + 1 < Je && _.push("," + v);\n          }), Ot(qe(_).toString()) || _.push(v), _.push(o), _.push("}"), _)) : "{}";\n        },\n        AssignmentPattern: function(O, D, A) {\n          return this.generateAssignment(O.left, O.right, "=", D, A);\n        },\n        ObjectPattern: function(O, D, A) {\n          var P, _, J, ae, pe, ge = this;\n          if (!O.properties.length)\n            return "{}";\n          if (ae = !1, O.properties.length === 1)\n            pe = O.properties[0], pe.type === e.Property && pe.value.type !== e.Identifier && (ae = !0);\n          else\n            for (_ = 0, J = O.properties.length; _ < J; ++_)\n              if (pe = O.properties[_], pe.type === e.Property && !pe.shorthand) {\n                ae = !0;\n                break;\n              }\n          return P = ["{", ae ? v : ""], Xe(function(Je) {\n            var Rt, Ht;\n            for (Rt = 0, Ht = O.properties.length; Rt < Ht; ++Rt)\n              P.push(ae ? Je : ""), P.push(ge.generateExpression(O.properties[Rt], n.Sequence, he)), Rt + 1 < Ht && P.push("," + (ae ? v : C));\n          }), ae && !Ot(qe(P).toString()) && P.push(v), P.push(ae ? o : ""), P.push("}"), P;\n        },\n        ThisExpression: function(O, D, A) {\n          return "this";\n        },\n        Super: function(O, D, A) {\n          return "super";\n        },\n        Identifier: function(O, D, A) {\n          return Wt(O);\n        },\n        ImportDefaultSpecifier: function(O, D, A) {\n          return Wt(O.id || O.local);\n        },\n        ImportNamespaceSpecifier: function(O, D, A) {\n          var P = ["*"], _ = O.id || O.local;\n          return _ && P.push(C + "as" + Qt() + Wt(_)), P;\n        },\n        ImportSpecifier: function(O, D, A) {\n          var P = O.imported, _ = [P.name], J = O.local;\n          return J && J.name !== P.name && _.push(Qt() + "as" + Qt() + Wt(J)), _;\n        },\n        ExportSpecifier: function(O, D, A) {\n          var P = O.local, _ = [P.name], J = O.exported;\n          return J && J.name !== P.name && _.push(Qt() + "as" + Qt() + Wt(J)), _;\n        },\n        Literal: function(O, D, A) {\n          var P;\n          if (O.hasOwnProperty("raw") && B && R.raw)\n            try {\n              if (P = B(O.raw).body[0].expression, P.type === e.Literal && P.value === O.value)\n                return O.raw;\n            } catch {\n            }\n          return O.regex ? "/" + O.regex.pattern + "/" + O.regex.flags : typeof O.value == "bigint" ? O.value.toString() + "n" : O.bigint ? O.bigint + "n" : O.value === null ? "null" : typeof O.value == "string" ? bn(O.value) : typeof O.value == "number" ? tr(O.value) : typeof O.value == "boolean" ? O.value ? "true" : "false" : Mn(O.value);\n        },\n        GeneratorExpression: function(O, D, A) {\n          return this.ComprehensionExpression(O, D, A);\n        },\n        ComprehensionExpression: function(O, D, A) {\n          var P, _, J, ae, pe = this;\n          return P = O.type === e.GeneratorExpression ? ["("] : ["["], R.moz.comprehensionExpressionStartsWithAssignment && (ae = this.generateExpression(O.body, n.Assignment, he), P.push(ae)), O.blocks && Xe(function() {\n            for (_ = 0, J = O.blocks.length; _ < J; ++_)\n              ae = pe.generateExpression(O.blocks[_], n.Sequence, he), _ > 0 || R.moz.comprehensionExpressionStartsWithAssignment ? P = Se(P, ae) : P.push(ae);\n          }), O.filter && (P = Se(P, "if" + C), ae = this.generateExpression(O.filter, n.Sequence, he), P = Se(P, ["(", ae, ")"])), R.moz.comprehensionExpressionStartsWithAssignment || (ae = this.generateExpression(O.body, n.Assignment, he), P = Se(P, ae)), P.push(O.type === e.GeneratorExpression ? ")" : "]"), P;\n        },\n        ComprehensionBlock: function(O, D, A) {\n          var P;\n          return O.left.type === e.VariableDeclaration ? P = [\n            O.left.kind,\n            Qt(),\n            this.generateStatement(O.left.declarations[0], He)\n          ] : P = this.generateExpression(O.left, n.Call, he), P = Se(P, O.of ? "of" : "in"), P = Se(P, this.generateExpression(O.right, n.Sequence, he)), ["for" + C + "(", P, ")"];\n        },\n        SpreadElement: function(O, D, A) {\n          return [\n            "...",\n            this.generateExpression(O.argument, n.Assignment, he)\n          ];\n        },\n        TaggedTemplateExpression: function(O, D, A) {\n          var P = je;\n          A & fe || (P = Pe);\n          var _ = [\n            this.generateExpression(O.tag, n.Call, P),\n            this.generateExpression(O.quasi, n.Primary, Pt)\n          ];\n          return Re(_, n.TaggedTemplate, D);\n        },\n        TemplateElement: function(O, D, A) {\n          return O.value.raw;\n        },\n        TemplateLiteral: function(O, D, A) {\n          var P, _, J;\n          for (P = ["`"], _ = 0, J = O.quasis.length; _ < J; ++_)\n            P.push(this.generateExpression(O.quasis[_], n.Primary, he)), _ + 1 < J && (P.push("${" + C), P.push(this.generateExpression(O.expressions[_], n.Sequence, he)), P.push(C + "}"));\n          return P.push("`"), P;\n        },\n        ModuleSpecifier: function(O, D, A) {\n          return this.Literal(O, D, A);\n        },\n        ImportExpression: function(O, D, A) {\n          return Re([\n            "import(",\n            this.generateExpression(O.source, n.Assignment, he),\n            ")"\n          ], n.Call, D);\n        }\n      }, Xt(ct.prototype, ct.Expression), ct.prototype.generateExpression = function(O, D, A) {\n        var P, _;\n        return _ = O.type || e.Property, R.verbatim && O.hasOwnProperty(R.verbatim) ? It(O, D) : (P = this[_](O, D, A), R.comment && (P = $n(O, P)), qe(P, O));\n      }, ct.prototype.generateStatement = function(O, D) {\n        var A, P;\n        return A = this[O.type](O, D), R.comment && (A = $n(O, A)), P = qe(A).toString(), O.type === e.Program && !$ && v === "" && P.charAt(P.length - 1) === `\n` && (A = Z ? qe(A).replaceRight(/\\s+$/, "") : P.replace(/\\s+$/, "")), qe(A, O);\n      };\n      function Sn(O) {\n        var D;\n        if (D = new ct(), H(O))\n          return D.generateStatement(O, We);\n        if (ce(O))\n          return D.generateExpression(O, n.Sequence, he);\n        throw new Error("Unknown node type: " + O.type);\n      }\n      function yn(O, D) {\n        var A = fn(), P, _;\n        return D != null ? (typeof D.indent == "string" && (A.format.indent.style = D.indent), typeof D.base == "number" && (A.format.indent.base = D.base), D = er(A, D), l = D.format.indent.style, typeof D.base == "string" ? o = D.base : o = yt(l, D.format.indent.base)) : (D = A, l = D.format.indent.style, o = yt(l, D.format.indent.base)), c = D.format.json, h = D.format.renumber, f = c ? !1 : D.format.hexadecimal, m = c ? "double" : D.format.quotes, y = D.format.escapeless, v = D.format.newline, C = D.format.space, D.format.compact && (v = C = l = o = ""), S = D.format.parentheses, M = D.format.semicolons, $ = D.format.safeConcatenation, U = D.directive, B = c ? null : D.parse, Z = D.sourceMap, N = D.sourceCode, q = D.format.preserveBlankLines && N !== null, R = D, Z && (t.browser ? i = UB.sourceMap.SourceNode : i = i9().SourceNode), P = Sn(O), Z ? (_ = P.toStringWithSourceMap({\n          file: D.file,\n          sourceRoot: D.sourceMapRoot\n        }), D.sourceContent && _.map.setSourceContent(\n          D.sourceMap,\n          D.sourceContent\n        ), D.sourceMapWithCode ? _ : _.map.toString()) : (_ = { code: P.toString(), map: null }, D.sourceMapWithCode ? _ : _.code);\n      }\n      se = {\n        indent: {\n          style: "",\n          base: 0\n        },\n        renumber: !0,\n        hexadecimal: !0,\n        quotes: "auto",\n        escapeless: !0,\n        compact: !0,\n        parentheses: !1,\n        semicolons: !1\n      }, K = fn().format, t.version = v9.version, t.generate = yn, t.attachComments = s.attachComments, t.Precedence = er({}, n), t.browser = !1, t.FORMAT_MINIFY = se, t.FORMAT_DEFAULTS = K;\n    })();\n  }(yh)), yh;\n}\nvar k9 = x9();\nconst w9 = /* @__PURE__ */ qB(k9);\nclass C9 {\n  constructor() {\n    this.should_skip = !1, this.should_remove = !1, this.replacement = null, this.context = {\n      skip: () => this.should_skip = !0,\n      remove: () => this.should_remove = !0,\n      replace: (e) => this.replacement = e\n    };\n  }\n  /**\n   * @template {Node} Parent\n   * @param {Parent | null | undefined} parent\n   * @param {keyof Parent | null | undefined} prop\n   * @param {number | null | undefined} index\n   * @param {Node} node\n   */\n  replace(e, n, r, i) {\n    e && n && (r != null ? e[n][r] = i : e[n] = i);\n  }\n  /**\n   * @template {Node} Parent\n   * @param {Parent | null | undefined} parent\n   * @param {keyof Parent | null | undefined} prop\n   * @param {number | null | undefined} index\n   */\n  remove(e, n, r) {\n    e && n && (r != null ? e[n].splice(r, 1) : delete e[n]);\n  }\n}\nclass S9 extends C9 {\n  /**\n   *\n   * @param {SyncHandler} [enter]\n   * @param {SyncHandler} [leave]\n   */\n  constructor(e, n) {\n    super(), this.should_skip = !1, this.should_remove = !1, this.replacement = null, this.context = {\n      skip: () => this.should_skip = !0,\n      remove: () => this.should_remove = !0,\n      replace: (r) => this.replacement = r\n    }, this.enter = e, this.leave = n;\n  }\n  /**\n   * @template {Node} Parent\n   * @param {Node} node\n   * @param {Parent | null} parent\n   * @param {keyof Parent} [prop]\n   * @param {number | null} [index]\n   * @returns {Node | null}\n   */\n  visit(e, n, r, i) {\n    if (e) {\n      if (this.enter) {\n        const a = this.should_skip, o = this.should_remove, l = this.replacement;\n        this.should_skip = !1, this.should_remove = !1, this.replacement = null, this.enter.call(this.context, e, n, r, i), this.replacement && (e = this.replacement, this.replace(n, r, i, e)), this.should_remove && this.remove(n, r, i);\n        const c = this.should_skip, h = this.should_remove;\n        if (this.should_skip = a, this.should_remove = o, this.replacement = l, c) return e;\n        if (h) return null;\n      }\n      let s;\n      for (s in e) {\n        const a = e[s];\n        if (a && typeof a == "object")\n          if (Array.isArray(a)) {\n            const o = (\n              /** @type {Array<unknown>} */\n              a\n            );\n            for (let l = 0; l < o.length; l += 1) {\n              const c = o[l];\n              og(c) && (this.visit(c, e, s, l) || l--);\n            }\n          } else og(a) && this.visit(a, e, s, null);\n      }\n      if (this.leave) {\n        const a = this.replacement, o = this.should_remove;\n        this.replacement = null, this.should_remove = !1, this.leave.call(this.context, e, n, r, i), this.replacement && (e = this.replacement, this.replace(n, r, i, e)), this.should_remove && this.remove(n, r, i);\n        const l = this.should_remove;\n        if (this.replacement = a, this.should_remove = o, l) return null;\n      }\n    }\n    return e;\n  }\n}\nfunction og(t) {\n  return t !== null && typeof t == "object" && "type" in t && typeof t.type == "string";\n}\nfunction A9(t, { enter: e, leave: n }) {\n  return new S9(e, n).visit(t, null);\n}\nlet Z2 = [];\nfunction D9(t) {\n  Z2.push(t);\n}\nfunction P9(t, e = {}) {\n  const { wrapAsync: n = !1, addReturn: r = !0, emitMiniLocations: i = !0, emitWidgets: s = !0 } = e;\n  let a = WB(t, {\n    ecmaVersion: 2022,\n    allowAwaitOutsideFunction: !0,\n    locations: !0\n  }), o = [];\n  const l = (m, y) => {\n    const v = md(`"${m}"`, y.start, t);\n    o = o.concat(v);\n  };\n  let c = [];\n  A9(a, {\n    enter(m, y) {\n      if ($9(m)) {\n        const v = m.quasi.quasis[0].value.raw, C = m.quasi.start + 1;\n        if (i) {\n          const S = L9(v, C);\n          o = o.concat(S);\n        }\n        return this.skip(), this.replace(I9(v, C));\n      }\n      if (F9(m, y)) {\n        const { quasis: v } = m, { raw: C } = v[0].value;\n        return this.skip(), i && l(C, m), this.replace(lg(C, m));\n      }\n      if (E9(m)) {\n        const { value: v } = m;\n        return this.skip(), i && l(v, m), this.replace(lg(v, m));\n      }\n      if (B9(m))\n        return s && c.push({\n          from: m.arguments[0].start,\n          to: m.arguments[0].end,\n          value: m.arguments[0].raw,\n          // don\'t use value!\n          min: m.arguments[1]?.value ?? 0,\n          max: m.arguments[2]?.value ?? 1,\n          step: m.arguments[3]?.value,\n          type: "slider"\n        }), this.replace(Q9(m));\n      if (M9(m)) {\n        const v = m.callee.property.name, C = c.filter((M) => M.type === v).length, S = {\n          to: m.end,\n          index: C,\n          type: v,\n          id: e.id\n        };\n        return s && c.push(S), this.replace(T9(m, S));\n      }\n      if (j9(m, y))\n        return this.replace(R9(m));\n      if (_9(m))\n        return this.replace(Z9(m));\n    },\n    leave(m, y, v, C) {\n    }\n  });\n  const { body: h } = a;\n  if (!h?.[h.length - 1]?.expression)\n    throw new Error("unexpected ast format without body expression");\n  if (r) {\n    const { expression: m } = h[h.length - 1];\n    h[h.length - 1] = {\n      type: "ReturnStatement",\n      argument: m\n    };\n  }\n  let f = w9.generate(a);\n  return n && (f = `(async ()=>{${f}})()`), i ? { output: f, miniLocations: o, widgets: c } : { output: f };\n}\nfunction E9(t, e, n) {\n  return t.type !== "Literal" ? !1 : t.raw[0] === \'"\';\n}\nfunction F9(t, e) {\n  return t.type === "TemplateLiteral" && e.type !== "TaggedTemplateExpression";\n}\nfunction lg(t, e) {\n  const { start: n } = e;\n  return {\n    type: "CallExpression",\n    callee: {\n      type: "Identifier",\n      name: "m"\n    },\n    arguments: [\n      { type: "Literal", value: t },\n      { type: "Literal", value: n }\n    ],\n    optional: !1\n  };\n}\nfunction B9(t) {\n  return t.type === "CallExpression" && t.callee.name === "slider";\n}\nfunction M9(t) {\n  return t.type === "CallExpression" && Z2.includes(t.callee.property?.name);\n}\nfunction Q9(t) {\n  const e = "slider_" + t.arguments[0].start;\n  return t.arguments.unshift({\n    type: "Literal",\n    value: e,\n    raw: e\n  }), t.callee.name = "sliderWithID", t;\n}\nfunction $2(t) {\n  return `${t.id || ""}_widget_${t.type}_${t.index}`;\n}\nfunction T9(t, e) {\n  const n = $2(e);\n  return t.arguments.unshift({\n    type: "Literal",\n    value: n,\n    raw: n\n  }), t;\n}\nfunction j9(t, e) {\n  return t.type === "CallExpression" && t.callee.name === "samples" && e.type !== "AwaitExpression";\n}\nfunction R9(t) {\n  return {\n    type: "AwaitExpression",\n    argument: t\n  };\n}\nfunction _9(t) {\n  return t.type === "LabeledStatement";\n}\nfunction Z9(t) {\n  return {\n    type: "ExpressionStatement",\n    expression: {\n      type: "CallExpression",\n      callee: {\n        type: "MemberExpression",\n        object: t.body.expression,\n        property: {\n          type: "Identifier",\n          name: "p"\n        }\n      },\n      arguments: [\n        {\n          type: "Literal",\n          value: t.label.name,\n          raw: `\'${t.label.name}\'`\n        }\n      ]\n    }\n  };\n}\nfunction $9(t) {\n  return t.type === "TaggedTemplateExpression" && t.tag.name === "tidal";\n}\nfunction L9(t, e) {\n  return t.split("").reduce((n, r, i) => (r !== \'"\' || (!n.length || n[n.length - 1].length > 1 ? n.push([i + 1]) : n[n.length - 1].push(i)), n), []).map(([n, r]) => {\n    const i = t.slice(n, r);\n    return md(`"${i}"`, e + n - 1);\n  }).flat();\n}\nfunction I9(t, e) {\n  return {\n    type: "CallExpression",\n    callee: {\n      type: "Identifier",\n      name: "tidal"\n    },\n    arguments: [\n      { type: "Literal", value: t },\n      { type: "Literal", value: e }\n    ],\n    optional: !1\n  };\n}\nif (typeof DelayNode < "u") {\n  class t extends DelayNode {\n    constructor(n, r, i, s) {\n      super(n), r = Math.abs(r), this.delayTime.value = i;\n      const a = n.createGain();\n      a.gain.value = Math.min(Math.abs(s), 0.995), this.feedback = a.gain;\n      const o = n.createGain();\n      return o.gain.value = r, this.delayGain = o, this.connect(a), this.connect(o), a.connect(this), this.connect = (l) => o.connect(l), this;\n    }\n    start(n) {\n      this.delayGain.gain.setValueAtTime(this.delayGain.gain.value, n + this.delayTime.value);\n    }\n  }\n  AudioContext.prototype.createFeedbackDelay = function(e, n, r) {\n    return new t(this, e, n, r);\n  };\n}\nvar Sd = {};\nSd.generateReverb = function(t, e) {\n  for (var n = t.audioContext || new AudioContext(), r = n.sampleRate, i = t.numChannels || 2, s = t.decayTime * 1.5, a = Math.round(t.decayTime * r), o = Math.round(s * r), l = Math.round((t.fadeInTime || 0) * r), c = Math.pow(1 / 1e3, 1 / a), h = n.createBuffer(i, o, r), f = 0; f < i; f++) {\n    for (var m = h.getChannelData(f), y = 0; y < o; y++)\n      m[y] = X9() * Math.pow(c, y);\n    for (var y = 0; y < l; y++)\n      m[y] *= y / l;\n  }\n  N9(h, t.lpFreqStart || 0, t.lpFreqEnd || 0, t.decayTime, e);\n};\nSd.generateGraph = function(t, e, n, r, i) {\n  var s = document.createElement("canvas");\n  s.width = e, s.height = n;\n  var a = s.getContext("2d");\n  a.fillStyle = "#000", a.fillRect(0, 0, s.width, s.height), a.fillStyle = "#fff";\n  for (var o = e / t.length, l = n / (i - r), c = 0; c < t.length; c++)\n    a.fillRect(c * o, n - (t[c] - r) * l, 1, 1);\n  return s;\n};\nvar N9 = function(t, e, n, r, i) {\n  if (e == 0) {\n    i(t);\n    return;\n  }\n  var s = V9(t), a = new OfflineAudioContext(t.numberOfChannels, s[0].length, t.sampleRate), o = a.createBufferSource();\n  o.buffer = t;\n  var l = a.createBiquadFilter();\n  e = Math.min(e, t.sampleRate / 2), n = Math.min(n, t.sampleRate / 2), l.type = "lowpass", l.Q.value = 1e-4, l.frequency.setValueAtTime(e, 0), l.frequency.linearRampToValueAtTime(n, r), o.connect(l), l.connect(a.destination), o.start(), a.oncomplete = function(c) {\n    i(c.renderedBuffer);\n  }, a.startRendering(), window.filterNode = l;\n}, V9 = function(t) {\n  for (var e = [], n = 0; n < t.numberOfChannels; n++)\n    e[n] = t.getChannelData(n);\n  return e;\n}, X9 = function() {\n  return Math.random() * 2 - 1;\n};\ntypeof AudioContext < "u" && (AudioContext.prototype.adjustLength = function(t, e) {\n  const n = e.sampleRate * t, r = this.createBuffer(e.numberOfChannels, e.length, e.sampleRate);\n  for (let i = 0; i < e.numberOfChannels; i++) {\n    let s = e.getChannelData(i), a = r.getChannelData(i);\n    for (let o = 0; o < n; o++)\n      a[o] = s[o] || 0;\n  }\n  return r;\n}, AudioContext.prototype.createReverb = function(t, e, n, r, i) {\n  const s = this.createConvolver();\n  return s.generate = (a = 2, o = 0.1, l = 15e3, c = 1e3, h) => {\n    s.duration = a, s.fade = o, s.lp = l, s.dim = c, s.ir = h, h ? s.buffer = this.adjustLength(a, h) : Sd.generateReverb(\n      {\n        audioContext: this,\n        numChannels: 2,\n        decayTime: a,\n        fadeInTime: o,\n        lpFreqStart: l,\n        lpFreqEnd: c\n      },\n      (f) => {\n        s.buffer = f;\n      }\n    );\n  }, s.generate(t, e, n, r, i), s;\n});\nvar ug = {\n  a: { freqs: [660, 1120, 2750, 3e3, 3350], gains: [1, 0.5012, 0.0708, 0.0631, 0.0126], qs: [80, 90, 120, 130, 140] },\n  e: { freqs: [440, 1800, 2700, 3e3, 3300], gains: [1, 0.1995, 0.1259, 0.1, 0.1], qs: [70, 80, 100, 120, 120] },\n  i: { freqs: [270, 1850, 2900, 3350, 3590], gains: [1, 0.0631, 0.0631, 0.0158, 0.0158], qs: [40, 90, 100, 120, 120] },\n  o: { freqs: [430, 820, 2700, 3e3, 3300], gains: [1, 0.3162, 0.0501, 0.0794, 0.01995], qs: [40, 80, 100, 120, 120] },\n  u: { freqs: [370, 630, 2750, 3e3, 3400], gains: [1, 0.1, 0.0708, 0.0316, 0.01995], qs: [40, 60, 100, 120, 120] },\n  ae: { freqs: [650, 1515, 2400, 3e3, 3350], gains: [1, 0.5, 0.1008, 0.0631, 0.0126], qs: [80, 90, 120, 130, 140] },\n  aa: { freqs: [560, 900, 2570, 3e3, 3300], gains: [1, 0.5, 0.0708, 0.0631, 0.0126], qs: [80, 90, 120, 130, 140] },\n  oe: { freqs: [500, 1430, 2300, 3e3, 3300], gains: [1, 0.2, 0.0708, 0.0316, 0.01995], qs: [40, 60, 100, 120, 120] },\n  ue: { freqs: [250, 1750, 2150, 3200, 3300], gains: [1, 0.1, 0.0708, 0.0316, 0.01995], qs: [40, 60, 100, 120, 120] },\n  y: { freqs: [400, 1460, 2400, 3e3, 3300], gains: [1, 0.2, 0.0708, 0.0316, 0.02995], qs: [40, 60, 100, 120, 120] },\n  uh: { freqs: [600, 1250, 2100, 3100, 3500], gains: [1, 0.3, 0.0608, 0.0316, 0.01995], qs: [40, 70, 100, 120, 130] },\n  un: { freqs: [500, 1240, 2280, 3e3, 3500], gains: [1, 0.1, 0.1708, 0.0216, 0.02995], qs: [40, 60, 100, 120, 120] },\n  en: { freqs: [600, 1480, 2450, 3200, 3300], gains: [1, 0.15, 0.0708, 0.0316, 0.02995], qs: [40, 60, 100, 120, 120] },\n  an: { freqs: [700, 1050, 2500, 3e3, 3300], gains: [1, 0.1, 0.0708, 0.0316, 0.02995], qs: [40, 60, 100, 120, 120] },\n  on: { freqs: [500, 1080, 2350, 3e3, 3300], gains: [1, 0.1, 0.0708, 0.0316, 0.02995], qs: [40, 60, 100, 120, 120] },\n  get æ() {\n    return this.ae;\n  },\n  get ø() {\n    return this.oe;\n  },\n  get ɑ() {\n    return this.aa;\n  },\n  get å() {\n    return this.aa;\n  },\n  get ö() {\n    return this.oe;\n  },\n  get ü() {\n    return this.ue;\n  },\n  get ı() {\n    return this.y;\n  }\n};\nif (typeof GainNode < "u") {\n  class t extends GainNode {\n    constructor(n, r) {\n      if (super(n), !ug[r])\n        throw new Error("vowel: unknown vowel " + r);\n      const { gains: i, qs: s, freqs: a } = ug[r], o = n.createGain();\n      for (let l = 0; l < 5; l++) {\n        const c = n.createGain();\n        c.gain.value = i[l];\n        const h = n.createBiquadFilter();\n        h.type = "bandpass", h.Q.value = s[l], h.frequency.value = a[l], this.connect(h), h.connect(c), c.connect(o);\n      }\n      return o.gain.value = 8, this.connect = (l) => o.connect(l), this;\n    }\n  }\n  AudioContext.prototype.createVowelFilter = function(e) {\n    return new t(this, e);\n  };\n}\nlet L2 = (t) => console.log(t);\nconst Cr = (...t) => L2(...t), I2 = (t) => {\n  L2 = t;\n}, W9 = (t) => {\n  if (typeof t != "string")\n    return [];\n  const [e, n = "", r] = t.match(/^([a-gA-G])([#bsf]*)([0-9]*)$/)?.slice(1) || [];\n  return e ? [e, n, r ? Number(r) : void 0] : [];\n}, U9 = { c: 0, d: 2, e: 4, f: 5, g: 7, a: 9, b: 11 }, q9 = { "#": 1, b: -1, s: 1, f: -1 }, Dc = (t, e = 3) => {\n  const [n, r, i = e] = W9(t);\n  if (!n)\n    throw new Error(\'not a note: "\' + t + \'"\');\n  const s = U9[n.toLowerCase()], a = r?.split("").reduce((o, l) => o + q9[l], 0) || 0;\n  return (Number(i) + 1) * 12 + s + a;\n}, N2 = (t) => Math.pow(2, (t - 69) / 12) * 440, vo = (t, e, n) => Math.min(Math.max(t, e), n), G9 = (t) => 12 * Math.log(t / 440) / Math.LN2 + 69, z9 = (t, e) => {\n  if (typeof t != "object")\n    throw new Error("valueToMidi: expected object value");\n  let { freq: n, note: r } = t;\n  return typeof n == "number" ? G9(n) : typeof r == "string" ? Dc(r) : typeof r == "number" ? r : e;\n};\nfunction Di(t, e = 0, n) {\n  return isNaN(Number(t)) ? (!n && Cr(`"${t}" is not a number, falling back to ${e}`, "warning"), e) : t;\n}\nconst V2 = (t, e) => (t % e + e) % e, cg = (t, e) => V2(Math.round(Di(t, 0)), e), H9 = "data:text/javascript;base64,";\nfunction ai(t) {\n  const e = lt().createGain();\n  return e.gain.value = t, e;\n}\nconst hg = (t, e, n, r) => r - n === 0 ? 0 : (e - t) / (r - n);\nfunction Wr(t, e, n, r) {\n  const i = new AudioWorkletNode(t, e, r);\n  return Object.entries(n).forEach(([s, a]) => {\n    i.parameters.get(s).value = a;\n  }), i;\n}\nconst li = (t, e, n, r, i, s, a, o, l, c = "exponential") => {\n  e = Di(e), n = Di(n), r = Di(r), i = Di(i);\n  const h = c === "exponential" ? "exponentialRampToValueAtTime" : "linearRampToValueAtTime";\n  c === "exponential" && (s = s === 0 ? 1e-3 : s, a = a === 0 ? 1e-3 : a);\n  const f = a - s, m = a, y = s + r * f, v = l - o, C = (S) => {\n    let M;\n    if (e > S) {\n      let $ = hg(s, m, 0, e);\n      M = S * $ + (s > m ? s : 0);\n    } else\n      M = (S - e) * hg(m, y, 0, n) + m;\n    return c === "exponential" && (M = M || 1e-3), M;\n  };\n  t.setValueAtTime(s, o), e > v ? t[h](C(v), l) : e + n > v ? (t[h](C(e), o + e), t[h](C(v), l)) : (t[h](C(e), o + e), t[h](C(e + n), o + e + n), t.setValueAtTime(y, l)), t[h](s, l + i);\n};\nfunction X2(t, e, n, r, i, s) {\n  const a = {\n    threshold: e ?? -3,\n    ratio: n ?? 10,\n    knee: r ?? 10,\n    attack: i ?? 5e-3,\n    release: s ?? 0.05\n  };\n  return new DynamicsCompressorNode(t, a);\n}\nconst ui = (t, e = "linear", n) => {\n  const [a, o, l, c] = t;\n  if (a == null && o == null && l == null && c == null)\n    return n ?? [1e-3, 1e-3, 1, 0.01];\n  const h = l ?? (a != null && o == null || a == null && o == null ? 1 : 1e-3);\n  return [Math.max(a ?? 0, 1e-3), Math.max(o ?? 0, 1e-3), Math.min(h, 1), Math.max(c ?? 0, 0.01)];\n};\nfunction Kl(t, e, n, r, i, s, a, o, l, c, h, f, m, y) {\n  const v = "exponential", [C, S, M, $] = ui([i, s, a, o], v, [5e-3, 0.14, 0, 0.1]);\n  let U, R;\n  if (m === "ladder" ? (U = Wr(t, "ladder-processor", { frequency: n, q: r, drive: y }), R = U.parameters.get("frequency")) : (U = t.createBiquadFilter(), U.type = e, U.Q.value = r, U.frequency.value = n, R = U.frequency), (i ?? s ?? a ?? o ?? l) !== void 0) {\n    l = Di(l, 1, !0), f = Di(f, 0, !0);\n    const Z = Math.abs(l), N = Z * f;\n    let q = vo(2 ** -N * n, 0, 2e4), se = vo(2 ** (Z - N) * n, 0, 2e4);\n    return l < 0 && ([q, se] = [se, q]), li(R, C, S, M, $, q, se, c, h, v), U;\n  }\n  return U;\n}\nlet pg = (t) => t < 0.5 ? 1 : 1 - (t - 0.5) / 0.5;\nfunction W2(t, e, n = 0) {\n  const r = lt();\n  if (!n)\n    return t;\n  let i = r.createGain(), s = r.createGain();\n  t.connect(i), e.connect(s), i.gain.value = pg(n), s.gain.value = pg(1 - n);\n  let a = r.createGain();\n  return i.connect(a), s.connect(a), a;\n}\nlet Y9 = ["linear", "exponential"];\nfunction xo(t, e, n, r) {\n  if (!(e.pattack ?? e.pdecay ?? e.psustain ?? e.prelease ?? e.penv))\n    return;\n  const s = Di(e.penv, 1, !0), a = Y9[e.pcurve ?? 0];\n  let [o, l, c, h] = ui(\n    [e.pattack, e.pdecay, e.psustain, e.prelease],\n    a,\n    [0.2, 1e-3, 1, 1e-3]\n  ), f = e.panchor ?? c;\n  const m = s * 100, y = 0 - m * f, v = m - m * f;\n  li(t, o, l, c, h, y, v, n, r, a);\n}\nfunction ko(t, e, n) {\n  const { vibmod: r = 0.5, vib: i } = e;\n  let s;\n  if (i > 0) {\n    s = lt().createOscillator(), s.frequency.value = i;\n    const a = lt().createGain();\n    return a.gain.value = r * 100, s.connect(a), a.connect(t), s.start(n), s;\n  }\n}\nfunction Jl(t, e, n, r) {\n  const i = t.createConstantSource();\n  return i.start(n), i.stop(r), i.onended = () => {\n    e();\n  }, i;\n}\nconst K9 = (t, e = 1, n = "sine") => {\n  const r = lt(), i = r.createOscillator();\n  i.type = n, i.frequency.value = t, i.start();\n  const s = new GainNode(r, { gain: e });\n  return i.connect(s), { node: s, stop: (a) => i.stop(a) };\n}, J9 = (t, e, n, r = "sine") => {\n  const s = t.value * e, a = s * n;\n  return K9(s, a, r);\n};\nfunction xu(t, e, n) {\n  const {\n    fmh: r = 1,\n    fmi: i,\n    fmenv: s = "exp",\n    fmattack: a,\n    fmdecay: o,\n    fmsustain: l,\n    fmrelease: c,\n    fmvelocity: h,\n    fmwave: f = "sine",\n    duration: m\n  } = e;\n  let y, v = () => {\n  };\n  if (i) {\n    const S = lt().createGain(), M = J9(t, r, i, f);\n    if (y = M.node, v = M.stop, ![a, o, l, c, h].find(($) => $ !== void 0))\n      y.connect(t);\n    else {\n      const [$, U, R, B] = ui([a, o, l, c]), Z = n + m;\n      li(\n        S.gain,\n        $,\n        U,\n        R,\n        B,\n        0,\n        1,\n        n,\n        Z,\n        s === "exp" ? "exponential" : "linear"\n      ), y.connect(S), S.connect(t);\n    }\n  }\n  return { stop: v };\n}\nlet Nr = [], $i = 0;\nconst Sl = 4;\nlet U2 = (t) => {\n  let e = [], n = {\n    get() {\n      return n.lc || n.listen(() => {\n      })(), n.value;\n    },\n    lc: 0,\n    listen(r) {\n      return n.lc = e.push(r), () => {\n        for (let s = $i + Sl; s < Nr.length; )\n          Nr[s] === r ? Nr.splice(s, Sl) : s += Sl;\n        let i = e.indexOf(r);\n        ~i && (e.splice(i, 1), --n.lc || n.off());\n      };\n    },\n    notify(r, i) {\n      let s = !Nr.length;\n      for (let a of e)\n        Nr.push(\n          a,\n          n.value,\n          r,\n          i\n        );\n      if (s) {\n        for ($i = 0; $i < Nr.length; $i += Sl)\n          Nr[$i](\n            Nr[$i + 1],\n            Nr[$i + 2],\n            Nr[$i + 3]\n          );\n        Nr.length = 0;\n      }\n    },\n    /* It will be called on last listener unsubscribing.\n       We will redefine it in onMount and onStop. */\n    off() {\n    },\n    set(r) {\n      let i = n.value;\n      i !== r && (n.value = r, n.notify(i));\n    },\n    subscribe(r) {\n      let i = n.listen(r);\n      return r(n.value), i;\n    },\n    value: t\n  };\n  return n;\n};\nconst e4 = 5, Al = 6, Dl = 10;\nlet t4 = (t, e, n, r) => (t.events = t.events || {}, t.events[n + Dl] || (t.events[n + Dl] = r((i) => {\n  t.events[n].reduceRight((s, a) => (a(s), s), {\n    shared: {},\n    ...i\n  });\n})), t.events[n] = t.events[n] || [], t.events[n].push(e), () => {\n  let i = t.events[n], s = i.indexOf(e);\n  i.splice(s, 1), i.length || (delete t.events[n], t.events[n + Dl](), delete t.events[n + Dl]);\n}), n4 = 1e3, r4 = (t, e) => t4(t, (r) => {\n  let i = e(r);\n  i && t.events[Al].push(i);\n}, e4, (r) => {\n  let i = t.listen;\n  t.listen = (...a) => (!t.lc && !t.active && (t.active = !0, r()), i(...a));\n  let s = t.off;\n  return t.events[Al] = [], t.off = () => {\n    s(), setTimeout(() => {\n      if (t.active && !t.lc) {\n        t.active = !1;\n        for (let a of t.events[Al]) a();\n        t.events[Al] = [];\n      }\n    }, n4);\n  }, () => {\n    t.listen = i, t.off = s;\n  };\n}), i4 = (t = {}) => {\n  let e = U2(t);\n  return e.setKey = function(n, r) {\n    let i = e.value;\n    typeof r > "u" && n in e.value ? (e.value = { ...e.value }, delete e.value[n], e.notify(i, n)) : e.value[n] !== r && (e.value = {\n      ...e.value,\n      [n]: r\n    }, e.notify(i, n));\n  }, e;\n};\nconst Ad = {}, Fh = {}, s4 = (t) => Ad[t];\nfunction a4(t, e) {\n  var n = 1024;\n  if (t < n) return t + " B";\n  var r = ["KiB", "MiB", "GiB", "TiB", "PiB", "EiB", "ZiB", "YiB"], i = -1;\n  do\n    t /= n, ++i;\n  while (t >= n);\n  return t.toFixed(1) + " " + r[i];\n}\nfunction q2(t, e) {\n  const { s: n, n: r = 0, speed: i = 1 } = t;\n  let s = z9(t, 36), a = s - 36, o, l = 0;\n  if (Array.isArray(e))\n    l = cg(r, e.length), o = e[l];\n  else {\n    const f = (y) => Dc(y) - s, m = Object.keys(e).filter((y) => !y.startsWith("_")).reduce(\n      (y, v, C) => !y || Math.abs(f(v)) < Math.abs(f(y)) ? v : y,\n      null\n    );\n    a = -f(m), l = cg(r, e[m].length), o = e[m][l];\n  }\n  const c = `${n}:${l}`;\n  let h = Math.abs(i) * Math.pow(2, a / 12);\n  return { transpose: a, sampleUrl: o, index: l, midi: s, label: c, playbackRate: h };\n}\nconst G2 = async (t, e, n) => {\n  let { sampleUrl: r, label: i, playbackRate: s } = q2(t, e);\n  n && (r = await n(r));\n  const a = lt(), o = await Dd(r, a, i);\n  return t.unit === "c" && (s = s * o.duration), { buffer: o, playbackRate: s };\n}, z2 = async (t, e, n) => {\n  let { buffer: r, playbackRate: i } = await G2(t, e, n);\n  t.speed < 0 && (r = H2(r));\n  const a = lt().createBufferSource();\n  a.buffer = r, a.playbackRate.value = i;\n  const { s: o, loopBegin: l = 0, loopEnd: c = 1, begin: h = 0, end: f = 1 } = t, m = h * a.buffer.duration;\n  (o.startsWith("wt_") ? 1 : t.loop) && (a.loop = !0, a.loopStart = l * a.buffer.duration - m, a.loopEnd = c * a.buffer.duration - m);\n  const v = a.buffer.duration / a.playbackRate.value, C = (f - h) * v;\n  return { bufferSource: a, offset: m, bufferDuration: v, sliceDuration: C };\n}, Dd = (t, e, n, r = 0) => {\n  const i = n ? `sound "${n}:${r}"` : "sample";\n  if (t = t.replace("#", "%23"), !Fh[t]) {\n    Cr(`[sampler] load ${i}..`, "load-sample", { url: t });\n    const s = Date.now();\n    Fh[t] = fetch(t).then((a) => a.arrayBuffer()).then(async (a) => {\n      const o = Date.now() - s, l = a4(a.byteLength);\n      Cr(`[sampler] load ${i}... done! loaded ${l} in ${o}ms`, "loaded-sample", { url: t });\n      const c = await e.decodeAudioData(a);\n      return Ad[t] = c, c;\n    });\n  }\n  return Fh[t];\n};\nfunction H2(t) {\n  const e = lt(), n = e.createBuffer(t.numberOfChannels, t.length, e.sampleRate);\n  for (let r = 0; r < t.numberOfChannels; r++)\n    n.copyToChannel(t.getChannelData(r).slice().reverse(), r, r);\n  return n;\n}\nconst o4 = (t) => Ad[t];\nfunction Y2(t) {\n  if (t.startsWith("bubo:")) {\n    const [e, n] = t.split(":");\n    t = `github:Bubobubobubobubo/dough-${n}`;\n  }\n  return t;\n}\nfunction K2(t, e = "") {\n  if (!t.startsWith("github:"))\n    throw new Error(\'expected "github:" at the start of pseudoUrl\');\n  let [n, r] = t.split("github:");\n  return r = r.endsWith("/") ? r.slice(0, -1) : r, r.split("/").length === 2 && (r += "/main"), `https://raw.githubusercontent.com/${r}/${e}`;\n}\nconst J2 = (t, e, n = t._base || "") => Object.entries(t).forEach(([r, i]) => {\n  if (typeof i == "string" && (i = [i]), typeof i != "object")\n    throw new Error("wrong sample map format for " + r);\n  n = i._base || n, n = Y2(n), n.startsWith("github:") && (n = K2(n, ""));\n  const s = (a) => n + a;\n  Array.isArray(i) ? i = i.map(s) : i = Object.fromEntries(\n    Object.entries(i).map(([a, o]) => [a, (typeof o == "string" ? [o] : o).map(s)])\n  ), e(r, i);\n});\nlet ew = {};\nfunction l4(t, e) {\n  ew[t] = e;\n}\nfunction u4(t) {\n  const e = Object.entries(ew).find(([n]) => t.startsWith(n));\n  if (e)\n    return e[1];\n}\nconst Ni = async (t, e = t._base || "", n = {}) => {\n  if (typeof t == "string") {\n    const s = u4(t);\n    if (s)\n      return s(t);\n    if (t = Y2(t), t.startsWith("github:") && (t = K2(t, "strudel.json")), t.startsWith("local:") && (t = "http://localhost:5432"), t.startsWith("shabda:")) {\n      let [o, l] = t.split("shabda:");\n      t = `https://shabda.ndre.gr/${l}.json?strudel=1`;\n    }\n    if (t.startsWith("shabda/speech")) {\n      let [o, l] = t.split("shabda/speech");\n      l = l.startsWith("/") ? l.substring(1) : l;\n      let [c, h] = l.split(":"), f = "f", m = "en-GB";\n      c && ([m, f] = c.split("/")), t = `https://shabda.ndre.gr/speech/${h}.json?gender=${f}&language=${m}&strudel=1\'`;\n    }\n    if (typeof fetch != "function")\n      return;\n    const a = t.split("/").slice(0, -1).join("/");\n    return typeof fetch > "u" ? void 0 : fetch(t).then((o) => o.json()).then((o) => Ni(o, e || o._base || a, n)).catch((o) => {\n      throw console.error(o), new Error(`error loading "${t}"`);\n    });\n  }\n  const { prebake: r, tag: i } = n;\n  J2(\n    t,\n    (s, a) => Wi(s, (o, l, c) => tw(o, l, c, a), {\n      type: "sample",\n      samples: a,\n      baseUrl: e,\n      prebake: r,\n      tag: i\n    }),\n    e\n  );\n}, fg = [];\nasync function tw(t, e, n, r, i) {\n  let {\n    s,\n    nudge: a = 0,\n    // TODO: is this in seconds?\n    cut: o,\n    loop: l,\n    clip: c = void 0,\n    // if set, samples will be cut off when the hap ends\n    n: h = 0,\n    speed: f = 1,\n    // sample playback speed\n    duration: m\n  } = e;\n  if (f === 0)\n    return;\n  const y = lt();\n  let [v, C, S, M] = ui([e.attack, e.decay, e.sustain, e.release]);\n  const { bufferSource: $, sliceDuration: U, offset: R } = await z2(e, r, i);\n  if (y.currentTime > t) {\n    Cr(`[sampler] still loading sound "${s}:${h}"`, "highlight");\n    return;\n  }\n  if (!$) {\n    Cr(`[sampler] could not load "${s}:${h}"`, "error");\n    return;\n  }\n  let B = ko($.detune, e, t);\n  const Z = t + a;\n  $.start(Z, R);\n  const N = y.createGain(), q = $.connect(N);\n  c == null && l == null && e.release == null && (m = U);\n  let se = t + m;\n  li(q.gain, v, C, S, M, 0, 1, t, se, "linear"), xo($.detune, e, t, se);\n  const K = y.createGain();\n  q.connect(K), $.onended = function() {\n    $.disconnect(), B?.stop(), q.disconnect(), K.disconnect(), n();\n  };\n  let ce = se + M + 0.01;\n  $.stop(ce);\n  const ie = { node: K, bufferSource: $, stop: (fe) => {\n    $.stop(fe);\n  } };\n  if (o !== void 0) {\n    const fe = fg[o];\n    fe && (fe.node.gain.setValueAtTime(1, Z), fe.node.gain.linearRampToValueAtTime(0, Z + 0.01)), fg[o] = ie;\n  }\n  return ie;\n}\nconst Pd = 128, Dp = "System Standard";\nlet nw = Pd;\nfunction rw(t) {\n  nw = parseInt(t) ?? Pd;\n}\nlet iw = !1;\nfunction sw(t) {\n  iw = t == !0;\n}\nconst ga = i4();\nfunction Wi(t, e, n = {}) {\n  t = t.toLowerCase().replace(/\\s+/g, "_"), ga.setKey(t, { onTrigger: e, data: n });\n}\nlet aw = (t) => t;\nfunction Os(t) {\n  return aw(t);\n}\nfunction c4(t) {\n  aw = t;\n}\nfunction Pp(t) {\n  for (const n in t)\n    t[n.toLowerCase()] = t[n];\n  const e = ga.get();\n  for (const n in e) {\n    const [r, i] = n.split("_");\n    if (!i) continue;\n    const s = t[r];\n    if (s) {\n      if (typeof s == "string")\n        e[`${s}_${i}`.toLowerCase()] = e[n];\n      else if (Array.isArray(s))\n        for (const a of s)\n          e[`${a}_${i}`.toLowerCase()] = e[n];\n    }\n  }\n  ga.set({ ...e });\n}\nasync function h4(t) {\n  const n = await (await fetch(t)).json();\n  Pp(n);\n}\nasync function ow(...t) {\n  switch (t.length) {\n    case 1:\n      return typeof t[0] == "string" ? h4(t[0]) : Pp(t[0]);\n    case 2:\n      return Pp({ [t[0]]: t[1] });\n    default:\n      throw new Error("aliasMap expects 1 or 2 arguments, received " + t.length);\n  }\n}\nfunction eu(t) {\n  return ga.get()[t.toLowerCase()];\n}\nconst lw = async () => {\n  await navigator.mediaDevices.getUserMedia({ audio: !0 });\n  let t = await navigator.mediaDevices.enumerateDevices();\n  t = t.filter((n) => n.kind === "audiooutput" && n.deviceId !== "default");\n  const e = /* @__PURE__ */ new Map();\n  return e.set(Dp, ""), t.forEach((n) => {\n    e.set(n.label, n.deviceId);\n  }), e;\n}, uw = {\n  s: "triangle",\n  gain: 0.8,\n  postgain: 1,\n  density: ".03",\n  ftype: "12db",\n  fanchor: 0,\n  resonance: 1,\n  hresonance: 1,\n  bandq: 1,\n  channels: [1, 2],\n  phaserdepth: 0.75,\n  shapevol: 1,\n  distortvol: 1,\n  delay: 0,\n  byteBeatExpression: "0",\n  delayfeedback: 0.5,\n  delaytime: 0.25,\n  orbit: 1,\n  i: 1,\n  velocity: 1,\n  fft: 8\n};\nlet Ed = new Map(Object.entries(uw));\nfunction Fd(t, e) {\n  Ed.set(t, e);\n}\nfunction Jt(t) {\n  return Ed.get(t);\n}\nfunction p4(t) {\n  Object.keys(t).forEach((e) => {\n    Fd(e, t[e]);\n  });\n}\nfunction cw() {\n  Ed = new Map(Object.entries(uw));\n}\nfunction f4(t) {\n  cw(), t === "1.0" && Fd("fanchor", 0.5);\n}\nconst d4 = () => ga.set({});\nlet ku;\nconst hw = () => (ku = new AudioContext(), ku), lt = () => ku || hw();\nfunction m4() {\n  return lt().currentTime;\n}\nlet Bh;\nfunction g4() {\n  return Bh || (Bh = lt().audioWorklet.addModule(H9)), Bh;\n}\nasync function pw(t = {}) {\n  const {\n    disableWorklets: e = !1,\n    maxPolyphony: n,\n    audioDeviceName: r = Dp,\n    multiChannelOrbits: i = !1\n  } = t;\n  if (rw(n), sw(i), typeof window > "u")\n    return;\n  const s = lt();\n  if (r != null && r != Dp)\n    try {\n      const o = (await lw()).get(r), l = (o ?? "").length > 0;\n      s.sinkId !== o && l && await s.setSinkId(o), Cr(\n        `[superdough] Audio Device set to ${r}, it might take a few seconds before audio plays on all output channels`\n      );\n    } catch {\n      Cr("[superdough] failed to set audio interface", "warning");\n    }\n  if (await s.resume(), e) {\n    Cr("[superdough]: AudioWorklets disabled with disableWorklets");\n    return;\n  }\n  try {\n    await g4(), Cr("[superdough] AudioWorklets loaded");\n  } catch (a) {\n    console.warn("could not load AudioWorklet effects", a);\n  }\n  Cr("[superdough] ready");\n}\nlet Mh;\nasync function b4(t) {\n  return Mh || (Mh = new Promise((e) => {\n    document.addEventListener("click", async function n() {\n      document.removeEventListener("click", n), await pw(t), e();\n    });\n  })), Mh;\n}\nlet Ii = {}, wu, na;\nfunction fw() {\n  const t = lt(), e = t.destination.maxChannelCount;\n  t.destination.channelCount = e, wu = new ChannelMergerNode(t, { numberOfInputs: t.destination.channelCount }), na = new GainNode(t), wu.connect(na), na.connect(t.destination);\n}\nconst Pc = (t, e = [0, 1]) => {\n  const n = lt();\n  wu == null && fw();\n  const r = new StereoPannerNode(n);\n  t.connect(r);\n  const i = new ChannelSplitterNode(n, {\n    numberOfOutputs: r.channelCount\n  });\n  r.connect(i), e.forEach((s, a) => {\n    i.connect(wu, a % r.channelCount, s % n.destination.channelCount);\n  });\n}, y4 = () => {\n  na != null && (na.gain.linearRampToValueAtTime(0, lt().currentTime + 0.01), na = null);\n};\nfunction O4(t, e, n, r, i) {\n  if (n = vo(n, 0, 0.98), !Ii[t]) {\n    const a = lt().createFeedbackDelay(1, e, n);\n    a.start?.(r), Pc(a, i), Ii[t] = a;\n  }\n  return Ii[t].delayTime.value !== e && Ii[t].delayTime.setValueAtTime(e, r), Ii[t].feedback.value !== n && Ii[t].feedback.setValueAtTime(n, r), Ii[t];\n}\nfunction Bd(t, e, n, r = {}) {\n  return Wr(t, "lfo-processor", {\n    frequency: 1,\n    depth: 1,\n    skew: 0,\n    phaseoffset: 0,\n    time: e,\n    end: n,\n    shape: 1,\n    dcoffset: -0.5,\n    ...r\n  });\n}\nfunction v4(t, e, n = 1, r = 0.5, i = 1e3, s = 2e3) {\n  const a = lt(), o = Bd(a, t, e, { frequency: n, depth: s * 2 }), l = 2;\n  let c = 0;\n  const h = [];\n  for (let f = 0; f < l; f++) {\n    const m = a.createBiquadFilter();\n    m.type = "notch", m.gain.value = 1, m.frequency.value = i + c, m.Q.value = 2 - Math.min(Math.max(r * 2, 0), 1.9), o.connect(m.detune), c += 282, f > 0 && h[f - 1].connect(m), h.push(m);\n  }\n  return h[h.length - 1];\n}\nfunction x4(t) {\n  t = t ?? 0;\n  const e = ["12db", "ladder", "24db"];\n  return typeof t == "number" ? e[Math.floor(V2(t, e.length))] : t;\n}\nlet ii = {}, Pl = (t, e) => t !== void 0 && t !== e;\nfunction k4(t, e, n, r, i, s, a) {\n  if (!ii[t]) {\n    const l = lt().createReverb(e, n, r, i, s);\n    Pc(l, a), ii[t] = l;\n  }\n  return (Pl(e, ii[t].duration) || Pl(n, ii[t].fade) || Pl(r, ii[t].lp) || Pl(i, ii[t].dim) || ii[t].ir !== s) && ii[t].generate(e, n, r, i, s), ii[t];\n}\nlet Tn = {}, As = {};\nfunction dw(t, e = 1024, n = 0.5) {\n  if (!Tn[t]) {\n    const r = lt().createAnalyser();\n    r.fftSize = e, r.smoothingTimeConstant = n, Tn[t] = r, As[t] = new Float32Array(Tn[t].frequencyBinCount);\n  }\n  return Tn[t].fftSize !== e && (Tn[t].fftSize = e, As[t] = new Float32Array(Tn[t].frequencyBinCount)), Tn[t];\n}\nfunction Ec(t = "time", e = 1) {\n  const n = {\n    time: () => Tn[e]?.getFloatTimeDomainData(As[e]),\n    frequency: () => Tn[e]?.getFloatFrequencyData(As[e])\n  }[t];\n  if (!n)\n    throw new Error(`getAnalyzerData: ${t} not supported. use one of ${Object.keys(n).join(", ")}`);\n  return n(), As[e];\n}\nfunction Qh(t, e, n) {\n  const r = ai(n);\n  return t.connect(r), r.connect(e), r;\n}\nfunction w4() {\n  Ii = {}, ii = {}, Tn = {}, As = {};\n}\nlet Ha = /* @__PURE__ */ new Map();\nfunction dg(t) {\n  return (Array.isArray(t) ? t : [t]).map((e) => e - 1);\n}\nconst Fc = async (t, e, n, r) => {\n  const i = lt();\n  e = typeof e == "string" && e.startsWith("=") ? Number(e.slice(1)) : i.currentTime + e;\n  let { stretch: s } = t;\n  if (s != null && (e = e - 0.04), typeof t != "object")\n    throw new Error(\n      `expected hap.value to be an object, but got "${t}". Hint: append .note() or .s() to the end`,\n      "error"\n    );\n  if (t.duration = n, e < i.currentTime) {\n    console.warn(\n      `[superdough]: cannot schedule sounds in the past (target: ${e.toFixed(2)}, now: ${i.currentTime.toFixed(2)})`\n    );\n    return;\n  }\n  let {\n    s: a = Jt("s"),\n    bank: o,\n    source: l,\n    gain: c = Jt("gain"),\n    postgain: h = Jt("postgain"),\n    density: f = Jt("density"),\n    // filters\n    fanchor: m = Jt("fanchor"),\n    drive: y = 0.69,\n    // low pass\n    cutoff: v,\n    lpenv: C,\n    lpattack: S,\n    lpdecay: M,\n    lpsustain: $,\n    lprelease: U,\n    resonance: R = Jt("resonance"),\n    // high pass\n    hpenv: B,\n    hcutoff: Z,\n    hpattack: N,\n    hpdecay: q,\n    hpsustain: se,\n    hprelease: K,\n    hresonance: ce = Jt("hresonance"),\n    // band pass\n    bpenv: H,\n    bandf: ie,\n    bpattack: fe,\n    bpdecay: De,\n    bpsustain: Ee,\n    bprelease: re,\n    bandq: Ce = Jt("bandq"),\n    //phaser\n    phaserrate: Le,\n    phaserdepth: xe = Jt("phaserdepth"),\n    phasersweep: je,\n    phasercenter: he,\n    //\n    coarse: Pe,\n    crush: Pt,\n    shape: ut,\n    shapevol: We = Jt("shapevol"),\n    distort: Mt,\n    distortvol: He = Jt("distortvol"),\n    pan: xt,\n    vowel: Bn,\n    delay: fn = Jt("delay"),\n    delayfeedback: yt = Jt("delayfeedback"),\n    delaytime: kt = Jt("delaytime"),\n    orbit: Ot = Jt("orbit"),\n    room: Xt,\n    roomfade: er,\n    roomlp: tr,\n    roomdim: dr,\n    roomsize: Mn,\n    ir: zt,\n    i: _r = Jt("i"),\n    velocity: nr = Jt("velocity"),\n    analyze: bn,\n    // analyser wet\n    fft: Yr = Jt("fft"),\n    // fftSize 0 - 10\n    compressor: qe,\n    compressorRatio: Qt,\n    compressorKnee: Se,\n    compressorAttack: wt,\n    compressorRelease: Xe\n  } = t;\n  const Kr = dg(\n    iw && Ot > 0 ? [Ot * 2 - 1, Ot * 2] : Jt("channels")\n  ), cs = t.channels != null ? dg(t.channels) : Kr;\n  c = Os(Di(c, 1)), h = Os(h), We = Os(We), He = Os(He), fn = Os(fn), nr = Os(nr), c *= nr;\n  const Cn = Math.round(Math.random() * 1e6);\n  for (let ze = 0; ze <= Ha.size - nw; ze++) {\n    const Ln = Ha.entries().next(), Sn = Ln.value[1], yn = Ln.value[0], O = e + 0.25;\n    Sn?.node?.gain?.linearRampToValueAtTime(0, O), Sn?.stop?.(O), Ha.delete(yn);\n  }\n  let $n = [];\n  o && a && (a = `${o}_${a}`, t.s = a);\n  let Ye;\n  if (l)\n    Ye = l(e, t, n, r);\n  else if (eu(a)) {\n    const { onTrigger: ze } = eu(a), Sn = await ze(e, t, () => {\n      $n.forEach((yn) => yn?.disconnect()), Ha.delete(Cn);\n    });\n    Sn && (Ye = Sn.node, Ha.set(Cn, Sn));\n  } else\n    throw new Error(`sound ${a} not found! Is it loaded?`);\n  if (!Ye)\n    return;\n  if (i.currentTime > e) {\n    Cr("[webaudio] skip hap: still loading", i.currentTime - e);\n    return;\n  }\n  const Re = [];\n  Re.push(Ye), s !== void 0 && Re.push(Wr(i, "phase-vocoder-processor", { pitchFactor: s })), Re.push(ai(c));\n  const ft = x4(t.ftype);\n  if (v !== void 0) {\n    let ze = () => Kl(\n      i,\n      "lowpass",\n      v,\n      R,\n      S,\n      M,\n      $,\n      U,\n      C,\n      e,\n      e + n,\n      m,\n      ft,\n      y\n    );\n    Re.push(ze()), ft === "24db" && Re.push(ze());\n  }\n  if (Z !== void 0) {\n    let ze = () => Kl(\n      i,\n      "highpass",\n      Z,\n      ce,\n      N,\n      q,\n      se,\n      K,\n      B,\n      e,\n      e + n,\n      m\n    );\n    Re.push(ze()), ft === "24db" && Re.push(ze());\n  }\n  if (ie !== void 0) {\n    let ze = () => Kl(\n      i,\n      "bandpass",\n      ie,\n      Ce,\n      fe,\n      De,\n      Ee,\n      re,\n      H,\n      e,\n      e + n,\n      m\n    );\n    Re.push(ze()), ft === "24db" && Re.push(ze());\n  }\n  if (Bn !== void 0) {\n    const ze = i.createVowelFilter(Bn);\n    Re.push(ze);\n  }\n  if (Pe !== void 0 && Re.push(Wr(i, "coarse-processor", { coarse: Pe })), Pt !== void 0 && Re.push(Wr(i, "crush-processor", { crush: Pt })), ut !== void 0 && Re.push(Wr(i, "shape-processor", { shape: ut, postgain: We })), Mt !== void 0 && Re.push(Wr(i, "distort-processor", { distort: Mt, postgain: He })), qe !== void 0 && Re.push(\n    X2(i, qe, Qt, Se, wt, Xe)\n  ), xt !== void 0) {\n    const ze = i.createStereoPanner();\n    ze.pan.value = 2 * xt - 1, Re.push(ze);\n  }\n  if (Le !== void 0 && xe > 0) {\n    const ze = v4(e, e + n, Le, xe, he, je);\n    Re.push(ze);\n  }\n  const It = new GainNode(i, { gain: h });\n  Re.push(It), Pc(It, cs);\n  let ct;\n  if (fn > 0 && kt > 0 && yt > 0) {\n    const ze = O4(Ot, kt, yt, e, Kr);\n    ct = Qh(It, ze, fn), $n.push(ct);\n  }\n  let Wt;\n  if (Xt > 0) {\n    let ze;\n    if (zt !== void 0) {\n      let Sn, yn = eu(zt);\n      Array.isArray(yn) ? Sn = yn.data.samples[_r % yn.data.samples.length] : typeof yn == "object" && (Sn = Object.values(yn.data.samples).flat()[_r % Object.values(yn.data.samples).length]), ze = await Dd(Sn, i, zt, 0);\n    }\n    const Ln = k4(Ot, Mn, er, tr, dr, ze, Kr);\n    Wt = Qh(It, Ln, Xt), $n.push(Wt);\n  }\n  let vt;\n  if (bn) {\n    const ze = dw(bn, 2 ** (Yr + 5));\n    vt = Qh(It, ze, 1), $n.push(vt);\n  }\n  Re.slice(1).reduce((ze, Ln) => ze.connect(Ln), Re[0]), $n = $n.concat(Re);\n}, C4 = (t, e, n, r) => {\n  Fc(e, t - n, e.duration / r, r);\n};\nlet Th = {};\nfunction S4(t, e) {\n  const n = lt();\n  if (Th[t])\n    return Th[t];\n  const r = 2 * n.sampleRate, i = n.createBuffer(1, r, n.sampleRate), s = i.getChannelData(0);\n  let a = 0, o, l, c, h, f, m, y;\n  o = l = c = h = f = m = y = 0;\n  for (let v = 0; v < r; v++)\n    if (t === "white")\n      s[v] = Math.random() * 2 - 1;\n    else if (t === "brown") {\n      let C = Math.random() * 2 - 1;\n      s[v] = (a + 0.02 * C) / 1.02, a = s[v];\n    } else if (t === "pink") {\n      let C = Math.random() * 2 - 1;\n      o = 0.99886 * o + C * 0.0555179, l = 0.99332 * l + C * 0.0750759, c = 0.969 * c + C * 0.153852, h = 0.8665 * h + C * 0.3104856, f = 0.55 * f + C * 0.5329522, m = -0.7616 * m - C * 0.016898, s[v] = o + l + c + h + f + m + y + C * 0.5362, s[v] *= 0.11, y = C * 0.115926;\n    } else if (t === "crackle") {\n      const C = e * 0.01;\n      Math.random() < C ? s[v] = Math.random() * 2 - 1 : s[v] = 0;\n    }\n  return t !== "crackle" && (Th[t] = i), i;\n}\nfunction mw(t = "white", e, n = 0.02) {\n  const i = lt().createBufferSource();\n  return i.buffer = S4(t, n), i.loop = !0, i.start(e), {\n    node: i,\n    stop: (s) => i.stop(s)\n  };\n}\nfunction A4(t, e, n) {\n  const r = mw("pink", n);\n  return {\n    node: W2(t, r.node, e),\n    stop: (s) => r?.stop(s)\n  };\n}\nconst tu = (t) => {\n  let { note: e, freq: n } = t;\n  return e = e || 36, typeof e == "string" && (e = Dc(e)), !n && typeof e == "number" && (n = N2(e)), Number(n);\n};\nfunction El(t) {\n  t != null && (t.disconnect(), t.parameters.get("end")?.setValueAtTime(0, 0));\n}\nconst D4 = ["triangle", "square", "sawtooth", "sine"], P4 = ["pink", "white", "brown", "crackle"];\nfunction gw() {\n  [...D4].forEach((t) => {\n    Wi(\n      t,\n      (e, n, r) => {\n        const [i, s, a, o] = ui(\n          [n.attack, n.decay, n.sustain, n.release],\n          "linear",\n          [1e-3, 0.05, 0.6, 0.01]\n        );\n        let l = yw(t, e, n), { node: c, stop: h, triggerRelease: f } = l;\n        const m = ai(0.3), { duration: y } = n;\n        c.onended = () => {\n          c.disconnect(), m.disconnect(), r();\n        };\n        const v = ai(1);\n        let C = c.connect(m).connect(v);\n        const S = e + y;\n        li(C.gain, i, s, a, o, 0, 1, e, S, "linear");\n        const M = S + o + 0.01;\n        return f?.(M), h(M), {\n          node: C,\n          stop: ($) => {\n            h($);\n          }\n        };\n      },\n      { type: "synth", prebake: !0 }\n    );\n  }), Wi(\n    "supersaw",\n    (t, e, n) => {\n      const r = lt();\n      let { duration: i, n: s, unison: a = 5, spread: o = 0.6, detune: l } = e;\n      l = l ?? s ?? 0.18;\n      const c = tu(e), [h, f, m, y] = ui(\n        [e.attack, e.decay, e.sustain, e.release],\n        "linear",\n        [1e-3, 0.05, 0.6, 0.01]\n      ), v = t + i, C = v + y + 0.01, S = vo(a, 1, 100);\n      let M = S > 1 ? vo(o, 0, 1) : 0, $ = Wr(\n        r,\n        "supersaw-oscillator",\n        {\n          frequency: c,\n          begin: t,\n          end: C,\n          freqspread: l,\n          voices: S,\n          panspread: M\n        },\n        {\n          outputChannelCount: [2]\n        }\n      );\n      const U = 1 / Math.sqrt(S);\n      xo($.parameters.get("detune"), e, t, v);\n      const R = ko($.parameters.get("detune"), e, t), B = xu($.parameters.get("frequency"), e, t);\n      let Z = ai(1);\n      Z = $.connect(Z), li(Z.gain, h, f, m, y, 0, 0.3 * U, t, v, "linear");\n      let N = Jl(\n        r,\n        () => {\n          El($), Z.disconnect(), n(), B?.stop(), R?.stop();\n        },\n        t,\n        C\n      );\n      return {\n        node: Z,\n        stop: (q) => {\n          N.stop(q);\n        }\n      };\n    },\n    { prebake: !0, type: "synth" }\n  ), Wi(\n    "bytebeat",\n    (t, e, n) => {\n      const r = [\n        "(t%255 >= t/255%255)*255",\n        "(t*(t*8%60 <= 300)|(-t)*(t*4%512 < 256))+t/400",\n        "t",\n        "t*(t >> 10^t)",\n        "t&128",\n        "t&t>>8",\n        "((t%255+t%128+t%64+t%32+t%16+t%127.8+t%64.8+t%32.8+t%16.8)/3)",\n        "((t%64+t%63.8+t%64.15+t%64.35+t%63.5)/1.25)",\n        "(t&(t>>7)-t)",\n        "(sin(t*PI/128)*127+127)",\n        "((t^t/2+t+64*(sin((t*PI/64)+(t*PI/32768))+64))%128*2)",\n        "((t^t/2+t+64*(cos >> 0))%127.85*2)",\n        "((t^t/2+t+64)%128*2)",\n        "(((t * .25)^(t * .25)/100+(t * .25))%128)*2",\n        "((t^t/2+t+64)%7 * 24)"\n      ], { n: i = 0 } = e, s = tu(e), { byteBeatExpression: a = r[i % r.length], byteBeatStartTime: o } = e, l = lt();\n      let { duration: c } = e;\n      const [h, f, m, y] = ui(\n        [e.attack, e.decay, e.sustain, e.release],\n        "linear",\n        [1e-3, 0.05, 0.6, 0.01]\n      ), v = t + c, C = v + y + 0.01;\n      let S = Wr(\n        l,\n        "byte-beat-processor",\n        {\n          frequency: s,\n          begin: t,\n          end: C\n        },\n        {\n          outputChannelCount: [2]\n        }\n      );\n      S.port.postMessage({ codeText: a, byteBeatStartTime: o, frequency: s });\n      let M = ai(1);\n      M = S.connect(M), li(M.gain, h, f, m, y, 0, 1, t, v, "linear");\n      let $ = Jl(\n        l,\n        () => {\n          El(S), M.disconnect(), n();\n        },\n        t,\n        C\n      );\n      return {\n        node: M,\n        stop: (U) => {\n          $.stop(U);\n        }\n      };\n    },\n    { prebake: !0, type: "synth" }\n  ), Wi(\n    "pulse",\n    (t, e, n) => {\n      const r = lt();\n      let { pwrate: i, pwsweep: s } = e;\n      s == null && (i != null ? s = 0.3 : s = 0), i == null && s != null && (i = 1);\n      let { duration: a, pw: o = 0.5 } = e;\n      const l = tu(e), [c, h, f, m] = ui(\n        [e.attack, e.decay, e.sustain, e.release],\n        "linear",\n        [1e-3, 0.05, 0.6, 0.01]\n      ), y = t + a, v = y + m + 0.01;\n      let C = Wr(\n        r,\n        "pulse-oscillator",\n        {\n          frequency: l,\n          begin: t,\n          end: v,\n          pulsewidth: o\n        },\n        {\n          outputChannelCount: [2]\n        }\n      );\n      xo(C.parameters.get("detune"), e, t, y);\n      const S = ko(C.parameters.get("detune"), e, t), M = xu(C.parameters.get("frequency"), e, t);\n      let $ = ai(1);\n      $ = C.connect($), li($.gain, c, h, f, m, 0, 1, t, y, "linear");\n      let U;\n      s != 0 && (U = Bd(r, t, v, { frequency: i, depth: s }), U.connect(C.parameters.get("pulsewidth")));\n      let R = Jl(\n        r,\n        () => {\n          El(C), El(U), $.disconnect(), n(), M?.stop(), S?.stop();\n        },\n        t,\n        v\n      );\n      return {\n        node: $,\n        stop: (B) => {\n          R.stop(B);\n        }\n      };\n    },\n    { prebake: !0, type: "synth" }\n  ), [...P4].forEach((t) => {\n    Wi(\n      t,\n      (e, n, r) => {\n        const [i, s, a, o] = ui(\n          [n.attack, n.decay, n.sustain, n.release],\n          "linear",\n          [1e-3, 0.05, 0.6, 0.01]\n        );\n        let l, { density: c } = n;\n        l = mw(t, e, c);\n        let { node: h, stop: f, triggerRelease: m } = l;\n        const y = ai(0.3), { duration: v } = n;\n        h.onended = () => {\n          h.disconnect(), y.disconnect(), r();\n        };\n        const C = ai(1);\n        let S = h.connect(y).connect(C);\n        const M = e + v;\n        li(S.gain, i, s, a, o, 0, 1, e, M, "linear");\n        const $ = M + o + 0.01;\n        return m?.($), f($), {\n          node: S,\n          stop: (U) => {\n            f(U);\n          }\n        };\n      },\n      { type: "synth", prebake: !0 }\n    );\n  });\n}\nfunction bw(t, e) {\n  const n = new Float32Array(t + 1), r = new Float32Array(t + 1), i = lt(), s = i.createOscillator(), a = {\n    sawtooth: (c) => [0, -1 / c],\n    square: (c) => [0, c % 2 === 0 ? 0 : 1 / c],\n    triangle: (c) => [c % 2 === 0 ? 0 : 1 / (c * c), 0]\n  };\n  if (!a[e])\n    throw new Error(`unknown wave type ${e}`);\n  n[0] = 0, r[0] = 0;\n  let o = 1;\n  for (; o <= t; ) {\n    const [c, h] = a[e](o);\n    n[o] = c, r[o] = h, o++;\n  }\n  const l = i.createPeriodicWave(n, r);\n  return s.setPeriodicWave(l), s;\n}\nfunction yw(t, e, n) {\n  let { n: r, duration: i, noise: s = 0 } = n, a;\n  !r || t === "sine" ? (a = lt().createOscillator(), a.type = t || "triangle") : a = bw(r, t), a.frequency.value = tu(n), a.start(e);\n  let o = ko(a.detune, n, e);\n  xo(a.detune, n, e, e + i);\n  const l = xu(a.frequency, n, e);\n  let c;\n  return s && (c = A4(a, s, e)), {\n    node: c?.node || a,\n    stop: (h) => {\n      l.stop(h), o?.stop(h), c?.stop(h), a.stop(h);\n    },\n    triggerRelease: (h) => {\n    }\n  };\n}\nfunction E4(t = 1, e = 0.05, n = 220, r = 0, i = 0, s = 0.1, a = 0, o = 1, l = 0, c = 0, h = 0, f = 0, m = 0, y = 0, v = 0, C = 0, S = 0, M = 1, $ = 0, U = 0) {\n  let R = Math.PI * 2, B = lt().sampleRate, Z = (Le) => Le > 0 ? 1 : -1, N = l *= 500 * R / B / B, q = n *= (1 + e * 2 * Math.random() - e) * R / B, se = [], K = 0, ce = 0, H = 0, ie = 1, fe = 0, De = 0, Ee = 0, re, Ce;\n  for (r = r * B + 9, $ *= B, i *= B, s *= B, S *= B, c *= 500 * R / B ** 3, v *= R / B, h *= R / B, f *= B, m = m * B | 0, Ce = r + $ + i + s + S | 0; H < Ce; se[H++] = Ee)\n    ++De % (C * 100 | 0) || (Ee = a ? a > 1 ? a > 2 ? a > 3 ? Math.sin((K % R) ** 3) : Math.max(Math.min(Math.tan(K), 1), -1) : 1 - (2 * K / R % 2 + 2) % 2 : 1 - 4 * Math.abs(Math.round(K / R) - K / R) : Math.sin(K), Ee = (m ? 1 - U + U * Math.sin(R * H / m) : 1) * Z(Ee) * Math.abs(Ee) ** o * // curve 0=square, 2=pointy\n    t * 1 * // envelope\n    (H < r ? H / r : H < r + $ ? 1 - (H - r) / $ * (1 - M) : H < r + $ + i ? M : H < Ce - S ? (Ce - H - S) / s * // release falloff\n    M : 0), Ee = S ? Ee / 2 + (S > H ? 0 : (H < Ce - S ? 1 : (Ce - H) / S) * // release delay\n    se[H - S | 0] / 2) : Ee), re = (n += l += c) * // frequency\n    Math.cos(v * ce++), K += re - re * y * (1 - (Math.sin(H) + 1) * 1e9 % 2), ie && ++ie > f && (n += h, q += h, ie = 0), m && !(++fe % m) && (n = q, l = N, ie ||= 1);\n  return se;\n}\nconst Ow = (t, e) => {\n  let {\n    s: n,\n    note: r = 36,\n    freq: i,\n    //\n    zrand: s = 0,\n    attack: a = 0,\n    decay: o = 0,\n    sustain: l = 0.8,\n    release: c = 0.1,\n    curve: h = 1,\n    slide: f = 0,\n    deltaSlide: m = 0,\n    pitchJump: y = 0,\n    pitchJumpTime: v = 0,\n    lfo: C = 0,\n    znoise: S = 0,\n    zmod: M = 0,\n    zcrush: $ = 0,\n    zdelay: U = 0,\n    tremolo: R = 0,\n    duration: B = 0.2,\n    zzfx: Z\n  } = t;\n  const N = Math.max(B - a - o, 0);\n  typeof r == "string" && (r = Dc(r)), !i && typeof r == "number" && (i = N2(r)), n = n.replace("z_", "");\n  const q = ["sine", "triangle", "sawtooth", "tan", "noise"].indexOf(n) || 0;\n  h = n === "square" ? 0 : h;\n  const K = (\n    /* ZZFX. */\n    E4(...Z || [\n      0.25,\n      // volume\n      s,\n      i,\n      a,\n      N,\n      c,\n      q,\n      h,\n      f,\n      m,\n      y,\n      v,\n      C,\n      S,\n      M,\n      $,\n      U,\n      l,\n      // sustain volume!\n      o,\n      R\n    ])\n  ), ce = lt(), H = ce.createBuffer(1, K.length, ce.sampleRate);\n  H.getChannelData(0).set(K);\n  const ie = lt().createBufferSource();\n  return ie.buffer = H, ie.start(e), {\n    node: ie\n  };\n};\nfunction vw() {\n  ["zzfx", "z_sine", "z_sawtooth", "z_triangle", "z_square", "z_tan", "z_noise"].forEach((t) => {\n    Wi(\n      t,\n      (e, n, r) => {\n        const { node: i } = Ow({ s: t, ...n }, e);\n        return i.onended = () => {\n          i.disconnect(), r();\n        }, {\n          node: i,\n          stop: () => {\n          }\n        };\n      },\n      { type: "synth", prebake: !0 }\n    );\n  });\n}\nlet ra;\nasync function xw(t, e) {\n  const n = `dsp-worklet-${Date.now()}`, r = `${e}\nlet __q = []; // trigger queue\nclass MyProcessor extends AudioWorkletProcessor {\n  constructor() {\n    super();\n    this.t = 0;\n    this.stopped = false;\n    this.port.onmessage = (e) => {\n      if(e.data===\'stop\') {\n        this.stopped = true;\n      } else if(e.data?.dough) {\n        __q.push(e.data)\n      } else {\n        msg?.(e.data)\n      }\n    };\n  }\n  process(inputs, outputs, parameters) {\n    const output = outputs[0];\n    if(__q.length) {\n      for(let i=0;i<__q.length;++i) {\n        const deadline = __q[i].time-currentTime;\n        if(deadline<=0) {\n          trigger(__q[i].dough)\n          __q.splice(i,1)\n        }\n      }\n    }\n    for (let i = 0; i < output[0].length; i++) {\n      const out = dsp(this.t / sampleRate);\n      output.forEach((channel) => {\n        channel[i] = out;\n      });\n      this.t++;\n    }\n  return !this.stopped;\n  }\n}\nregisterProcessor(\'${n}\', MyProcessor);\n`, s = `data:text/javascript;base64,${btoa(r)}`;\n  await t.audioWorklet.addModule(s);\n  const a = new AudioWorkletNode(t, n);\n  return { node: a, stop: () => a.port.postMessage("stop") };\n}\nconst kw = () => {\n  ra && (ra?.stop(), ra?.node?.disconnect());\n};\ntypeof window < "u" && window.addEventListener("message", (t) => {\n  t.data === "strudel-stop" ? kw() : t.data?.dough && ra?.node.port.postMessage(t.data);\n});\nconst F4 = async (t) => {\n  const e = lt();\n  kw(), ra = await xw(e, t), ra.node.connect(e.destination);\n};\nfunction ww(t, e, n, r, i) {\n  window.postMessage({ time: i, dough: e.value, currentTime: n, duration: e.duration, cps: r });\n}\nconst { Pattern: Cw, logger: B4, repl: M4 } = Xk;\nI2(B4);\nconst Sw = (t) => (t.ensureObjectValue(), t.value), Aw = (t, e, n, r) => Fc(Sw(e), t - n, e.duration / r, r), Md = (t, e, n, r, i) => Fc(Sw(t), i ? `=${i}` : e, n);\nCw.prototype.webaudio = function() {\n  return this.onTrigger(Aw);\n};\nfunction Q4(t = {}) {\n  return t = {\n    getTime: () => lt().currentTime,\n    defaultOutput: Md,\n    ...t\n  }, M4(t);\n}\nCw.prototype.dough = function() {\n  return this.onTrigger(ww, 1);\n};\nfunction Dw(t, {\n  align: e = !0,\n  color: n = "white",\n  thickness: r = 3,\n  scale: i = 0.25,\n  pos: s = 0.75,\n  trigger: a = 0,\n  ctx: o = ji(),\n  id: l = 1\n} = {}) {\n  o.lineWidth = r, o.strokeStyle = n;\n  let c = o.canvas;\n  if (!t) {\n    o.beginPath();\n    let C = s * c.height;\n    o.moveTo(0, C), o.lineTo(c.width, C), o.stroke();\n    return;\n  }\n  const h = Ec("time", l);\n  o.beginPath();\n  const f = t.frequencyBinCount;\n  let m = e ? Array.from(h).findIndex((C, S, M) => S && M[S - 1] > -a && C <= -a) : 0;\n  m = Math.max(m, 0);\n  const y = c.width * 1 / f;\n  let v = 0;\n  for (let C = m; C < f; C++) {\n    const S = h[C] + 1, M = (s - i * (S - 1)) * c.height;\n    C === 0 ? o.moveTo(v, M) : o.lineTo(v, M), v += y;\n  }\n  o.stroke();\n}\nfunction Pw(t, { color: e = "white", scale: n = 0.25, pos: r = 0.75, lean: i = 0.5, min: s = -150, max: a = 0, ctx: o = ji(), id: l = 1 } = {}) {\n  if (!t) {\n    o.beginPath();\n    let v = r * h.height;\n    o.moveTo(0, v), o.lineTo(h.width, v), o.stroke();\n    return;\n  }\n  const c = Ec("frequency", l), h = o.canvas;\n  o.fillStyle = e;\n  const f = t.frequencyBinCount, m = h.width * 1 / f;\n  let y = 0;\n  for (let v = 0; v < f; v++) {\n    const S = bc((c[v] - s) / (a - s), 0, 1) * n, M = S * h.height, $ = (r - S * i) * h.height;\n    o.fillRect(y, $, Math.max(m, 1), M), y += m;\n  }\n}\nfunction Ew(t = 0, e = "0,0,0", n = ji()) {\n  t ? (n.fillStyle = `rgba(${e},${1 - t})`, n.fillRect(0, 0, n.canvas.width, n.canvas.height)) : n.clearRect(0, 0, n.canvas.width, n.canvas.height);\n}\nde.prototype.fscope = function(t = {}) {\n  let e = t.id ?? 1;\n  return this.analyze(e).draw(\n    () => {\n      Ew(t.smear, "0,0,0", t.ctx), Tn[e] && Pw(Tn[e], t);\n    },\n    { id: e }\n  );\n};\nde.prototype.tscope = function(t = {}) {\n  let e = t.id ?? 1;\n  return this.analyze(e).draw(\n    (n) => {\n      t.color = n[0]?.value?.color || Pi().foreground, t.color, Ew(t.smear, "0,0,0", t.ctx), Dw(Tn[e], t);\n    },\n    { id: e }\n  );\n};\nde.prototype.scope = de.prototype.tscope;\nlet mg = {};\nde.prototype.spectrum = function(t = {}) {\n  let e = t.id ?? 1;\n  return this.analyze(e).draw(\n    (n) => {\n      t.color = n[0]?.value?.color || mg[e] || Pi().foreground, mg[e] = t.color, T4(Tn[e], t);\n    },\n    { id: e }\n  );\n};\nde.prototype.scope = de.prototype.tscope;\nconst jh = /* @__PURE__ */ new Map();\nfunction T4(t, { thickness: e = 3, speed: n = 1, min: r = -80, max: i = 0, ctx: s = ji(), id: a = 1, color: o } = {}) {\n  if (s.lineWidth = e, s.strokeStyle = o, !t)\n    return;\n  const l = n, c = Ec("frequency", a), h = s.canvas;\n  s.fillStyle = o;\n  const f = t.frequencyBinCount;\n  let m = jh.get(a) || s.getImageData(0, 0, h.width, h.height);\n  jh.set(a, m), s.clearRect(0, 0, s.canvas.width, s.canvas.height), s.putImageData(m, -l, 0);\n  let y = h.width - n;\n  for (let v = 0; v < f; v++) {\n    const C = bc((c[v] - r) / (i - r), 0, 1);\n    s.globalAlpha = C;\n    const S = Math.log(v + 1) / Math.log(f) * h.height;\n    s.fillRect(y, h.height - S, l, 2);\n  }\n  jh.set(a, s.getImageData(0, 0, h.width, h.height));\n}\nconst j4 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  DEFAULT_MAX_POLYPHONY: Pd,\n  aliasBank: ow,\n  get analysers() {\n    return Tn;\n  },\n  get analysersData() {\n    return As;\n  },\n  applyFM: xu,\n  applyGainCurve: Os,\n  connectToDestination: Pc,\n  createFilter: Kl,\n  dough: F4,\n  doughTrigger: ww,\n  drawFrequencyScope: Pw,\n  drawTimeScope: Dw,\n  drywet: W2,\n  dspWorklet: xw,\n  gainNode: ai,\n  getADSRValues: ui,\n  getAnalyserById: dw,\n  getAnalyzerData: Ec,\n  getAudioContext: lt,\n  getAudioContextCurrentTime: m4,\n  getAudioDevices: lw,\n  getCachedBuffer: s4,\n  getCompressor: X2,\n  getDefaultValue: Jt,\n  getLfo: Bd,\n  getLoadedBuffer: o4,\n  getOscillator: yw,\n  getParamADSR: li,\n  getPitchEnvelope: xo,\n  getSampleBuffer: G2,\n  getSampleBufferSource: z2,\n  getSampleInfo: q2,\n  getSound: eu,\n  getVibratoOscillator: ko,\n  getWorklet: Wr,\n  getZZFX: Ow,\n  initAudio: pw,\n  initAudioOnFirstClick: b4,\n  initializeAudioOutput: fw,\n  loadBuffer: Dd,\n  logger: Cr,\n  onTriggerSample: tw,\n  panic: y4,\n  processSampleMap: J2,\n  registerSamplesPrefix: l4,\n  registerSound: Wi,\n  registerSynthSounds: gw,\n  registerZZFXSounds: vw,\n  resetDefaultValues: cw,\n  resetGlobalEffects: w4,\n  resetLoadedSounds: d4,\n  reverseBuffer: H2,\n  samples: Ni,\n  setDefaultAudioContext: hw,\n  setDefaultValue: Fd,\n  setDefaultValues: p4,\n  setGainCurve: c4,\n  setLogger: I2,\n  setMaxPolyphony: rw,\n  setMultiChannelOrbits: sw,\n  setVersionDefaults: f4,\n  soundMap: ga,\n  superdough: Fc,\n  superdoughTrigger: C4,\n  waveformN: bw,\n  webAudioTimeout: Jl,\n  webaudioOutput: Md,\n  webaudioOutputTrigger: Aw,\n  webaudioRepl: Q4\n}, Symbol.toStringTag, { value: "Module" }));\nlet Ep = [], Fw = [];\n(() => {\n  let t = "lc,34,7n,7,7b,19,,,,2,,2,,,20,b,1c,l,g,,2t,7,2,6,2,2,,4,z,,u,r,2j,b,1m,9,9,,o,4,,9,,3,,5,17,3,3b,f,,w,1j,,,,4,8,4,,3,7,a,2,t,,1m,,,,2,4,8,,9,,a,2,q,,2,2,1l,,4,2,4,2,2,3,3,,u,2,3,,b,2,1l,,4,5,,2,4,,k,2,m,6,,,1m,,,2,,4,8,,7,3,a,2,u,,1n,,,,c,,9,,14,,3,,1l,3,5,3,,4,7,2,b,2,t,,1m,,2,,2,,3,,5,2,7,2,b,2,s,2,1l,2,,,2,4,8,,9,,a,2,t,,20,,4,,2,3,,,8,,29,,2,7,c,8,2q,,2,9,b,6,22,2,r,,,,,,1j,e,,5,,2,5,b,,10,9,,2u,4,,6,,2,2,2,p,2,4,3,g,4,d,,2,2,6,,f,,jj,3,qa,3,t,3,t,2,u,2,1s,2,,7,8,,2,b,9,,19,3,3b,2,y,,3a,3,4,2,9,,6,3,63,2,2,,1m,,,7,,,,,2,8,6,a,2,,1c,h,1r,4,1c,7,,,5,,14,9,c,2,w,4,2,2,,3,1k,,,2,3,,,3,1m,8,2,2,48,3,,d,,7,4,,6,,3,2,5i,1m,,5,ek,,5f,x,2da,3,3x,,2o,w,fe,6,2x,2,n9w,4,,a,w,2,28,2,7k,,3,,4,,p,2,5,,47,2,q,i,d,,12,8,p,b,1a,3,1c,,2,4,2,2,13,,1v,6,2,2,2,2,c,,8,,1b,,1f,,,3,2,2,5,2,,,16,2,8,,6m,,2,,4,,fn4,,kh,g,g,g,a6,2,gt,,6a,,45,5,1ae,3,,2,5,4,14,3,4,,4l,2,fx,4,ar,2,49,b,4w,,1i,f,1k,3,1d,4,2,2,1x,3,10,5,,8,1q,,c,2,1g,9,a,4,2,,2n,3,2,,,2,6,,4g,,3,8,l,2,1l,2,,,,,m,,e,7,3,5,5f,8,2,3,,,n,,29,,2,6,,,2,,,2,,2,6j,,2,4,6,2,,2,r,2,2d,8,2,,,2,2y,,,,2,6,,,2t,3,2,4,,5,77,9,,2,6t,,a,2,,,4,,40,4,2,2,4,,w,a,14,6,2,4,8,,9,6,2,3,1a,d,,2,ba,7,,6,,,2a,m,2,7,,2,,2,3e,6,3,,,2,,7,,,20,2,3,,,,9n,2,f0b,5,1n,7,t4,,1r,4,29,,f5k,2,43q,,,3,4,5,8,8,2,7,u,4,44,3,1iz,1j,4,1e,8,,e,,m,5,,f,11s,7,,h,2,7,,2,,5,79,7,c5,4,15s,7,31,7,240,5,gx7k,2o,3k,6o".split(",").map((e) => e ? parseInt(e, 36) : 1);\n  for (let e = 0, n = 0; e < t.length; e++)\n    (e % 2 ? Fw : Ep).push(n = n + t[e]);\n})();\nfunction R4(t) {\n  if (t < 768) return !1;\n  for (let e = 0, n = Ep.length; ; ) {\n    let r = e + n >> 1;\n    if (t < Ep[r]) n = r;\n    else if (t >= Fw[r]) e = r + 1;\n    else return !0;\n    if (e == n) return !1;\n  }\n}\nfunction gg(t) {\n  return t >= 127462 && t <= 127487;\n}\nconst bg = 8205;\nfunction _4(t, e, n = !0, r = !0) {\n  return (n ? Bw : Z4)(t, e, r);\n}\nfunction Bw(t, e, n) {\n  if (e == t.length) return e;\n  e && Mw(t.charCodeAt(e)) && Qw(t.charCodeAt(e - 1)) && e--;\n  let r = Rh(t, e);\n  for (e += yg(r); e < t.length; ) {\n    let i = Rh(t, e);\n    if (r == bg || i == bg || n && R4(i))\n      e += yg(i), r = i;\n    else if (gg(i)) {\n      let s = 0, a = e - 2;\n      for (; a >= 0 && gg(Rh(t, a)); )\n        s++, a -= 2;\n      if (s % 2 == 0) break;\n      e += 2;\n    } else\n      break;\n  }\n  return e;\n}\nfunction Z4(t, e, n) {\n  for (; e > 0; ) {\n    let r = Bw(t, e - 2, n);\n    if (r < e) return r;\n    e--;\n  }\n  return 0;\n}\nfunction Rh(t, e) {\n  let n = t.charCodeAt(e);\n  if (!Qw(n) || e + 1 == t.length) return n;\n  let r = t.charCodeAt(e + 1);\n  return Mw(r) ? (n - 55296 << 10) + (r - 56320) + 65536 : n;\n}\nfunction Mw(t) {\n  return t >= 56320 && t < 57344;\n}\nfunction Qw(t) {\n  return t >= 55296 && t < 56320;\n}\nfunction yg(t) {\n  return t < 65536 ? 1 : 2;\n}\nclass ht {\n  /**\n  Get the line description around the given position.\n  */\n  lineAt(e) {\n    if (e < 0 || e > this.length)\n      throw new RangeError(`Invalid position ${e} in document of length ${this.length}`);\n    return this.lineInner(e, !1, 1, 0);\n  }\n  /**\n  Get the description for the given (1-based) line number.\n  */\n  line(e) {\n    if (e < 1 || e > this.lines)\n      throw new RangeError(`Invalid line number ${e} in ${this.lines}-line document`);\n    return this.lineInner(e, !0, 1, 0);\n  }\n  /**\n  Replace a range of the text with the given content.\n  */\n  replace(e, n, r) {\n    [e, n] = ba(this, e, n);\n    let i = [];\n    return this.decompose(\n      0,\n      e,\n      i,\n      2\n      /* Open.To */\n    ), r.length && r.decompose(\n      0,\n      r.length,\n      i,\n      3\n      /* Open.To */\n    ), this.decompose(\n      n,\n      this.length,\n      i,\n      1\n      /* Open.From */\n    ), ci.from(i, this.length - (n - e) + r.length);\n  }\n  /**\n  Append another document to this one.\n  */\n  append(e) {\n    return this.replace(this.length, this.length, e);\n  }\n  /**\n  Retrieve the text between the given points.\n  */\n  slice(e, n = this.length) {\n    [e, n] = ba(this, e, n);\n    let r = [];\n    return this.decompose(e, n, r, 0), ci.from(r, n - e);\n  }\n  /**\n  Test whether this text is equal to another instance.\n  */\n  eq(e) {\n    if (e == this)\n      return !0;\n    if (e.length != this.length || e.lines != this.lines)\n      return !1;\n    let n = this.scanIdentical(e, 1), r = this.length - this.scanIdentical(e, -1), i = new ho(this), s = new ho(e);\n    for (let a = n, o = n; ; ) {\n      if (i.next(a), s.next(a), a = 0, i.lineBreak != s.lineBreak || i.done != s.done || i.value != s.value)\n        return !1;\n      if (o += i.value.length, i.done || o >= r)\n        return !0;\n    }\n  }\n  /**\n  Iterate over the text. When `dir` is `-1`, iteration happens\n  from end to start. This will return lines and the breaks between\n  them as separate strings.\n  */\n  iter(e = 1) {\n    return new ho(this, e);\n  }\n  /**\n  Iterate over a range of the text. When `from` > `to`, the\n  iterator will run in reverse.\n  */\n  iterRange(e, n = this.length) {\n    return new Tw(this, e, n);\n  }\n  /**\n  Return a cursor that iterates over the given range of lines,\n  _without_ returning the line breaks between, and yielding empty\n  strings for empty lines.\n  \n  When `from` and `to` are given, they should be 1-based line numbers.\n  */\n  iterLines(e, n) {\n    let r;\n    if (e == null)\n      r = this.iter();\n    else {\n      n == null && (n = this.lines + 1);\n      let i = this.line(e).from;\n      r = this.iterRange(i, Math.max(i, n == this.lines + 1 ? this.length : n <= 1 ? 0 : this.line(n - 1).to));\n    }\n    return new jw(r);\n  }\n  /**\n  Return the document as a string, using newline characters to\n  separate lines.\n  */\n  toString() {\n    return this.sliceString(0);\n  }\n  /**\n  Convert the document to an array of lines (which can be\n  deserialized again via [`Text.of`](https://codemirror.net/6/docs/ref/#state.Text^of)).\n  */\n  toJSON() {\n    let e = [];\n    return this.flatten(e), e;\n  }\n  /**\n  @internal\n  */\n  constructor() {\n  }\n  /**\n  Create a `Text` instance for the given array of lines.\n  */\n  static of(e) {\n    if (e.length == 0)\n      throw new RangeError("A document must have at least one line");\n    return e.length == 1 && !e[0] ? ht.empty : e.length <= 32 ? new qt(e) : ci.from(qt.split(e, []));\n  }\n}\nclass qt extends ht {\n  constructor(e, n = $4(e)) {\n    super(), this.text = e, this.length = n;\n  }\n  get lines() {\n    return this.text.length;\n  }\n  get children() {\n    return null;\n  }\n  lineInner(e, n, r, i) {\n    for (let s = 0; ; s++) {\n      let a = this.text[s], o = i + a.length;\n      if ((n ? r : o) >= e)\n        return new L4(i, o, r, a);\n      i = o + 1, r++;\n    }\n  }\n  decompose(e, n, r, i) {\n    let s = e <= 0 && n >= this.length ? this : new qt(Og(this.text, e, n), Math.min(n, this.length) - Math.max(0, e));\n    if (i & 1) {\n      let a = r.pop(), o = nu(s.text, a.text.slice(), 0, s.length);\n      if (o.length <= 32)\n        r.push(new qt(o, a.length + s.length));\n      else {\n        let l = o.length >> 1;\n        r.push(new qt(o.slice(0, l)), new qt(o.slice(l)));\n      }\n    } else\n      r.push(s);\n  }\n  replace(e, n, r) {\n    if (!(r instanceof qt))\n      return super.replace(e, n, r);\n    [e, n] = ba(this, e, n);\n    let i = nu(this.text, nu(r.text, Og(this.text, 0, e)), n), s = this.length + r.length - (n - e);\n    return i.length <= 32 ? new qt(i, s) : ci.from(qt.split(i, []), s);\n  }\n  sliceString(e, n = this.length, r = `\n`) {\n    [e, n] = ba(this, e, n);\n    let i = "";\n    for (let s = 0, a = 0; s <= n && a < this.text.length; a++) {\n      let o = this.text[a], l = s + o.length;\n      s > e && a && (i += r), e < l && n > s && (i += o.slice(Math.max(0, e - s), n - s)), s = l + 1;\n    }\n    return i;\n  }\n  flatten(e) {\n    for (let n of this.text)\n      e.push(n);\n  }\n  scanIdentical() {\n    return 0;\n  }\n  static split(e, n) {\n    let r = [], i = -1;\n    for (let s of e)\n      r.push(s), i += s.length + 1, r.length == 32 && (n.push(new qt(r, i)), r = [], i = -1);\n    return i > -1 && n.push(new qt(r, i)), n;\n  }\n}\nclass ci extends ht {\n  constructor(e, n) {\n    super(), this.children = e, this.length = n, this.lines = 0;\n    for (let r of e)\n      this.lines += r.lines;\n  }\n  lineInner(e, n, r, i) {\n    for (let s = 0; ; s++) {\n      let a = this.children[s], o = i + a.length, l = r + a.lines - 1;\n      if ((n ? l : o) >= e)\n        return a.lineInner(e, n, r, i);\n      i = o + 1, r = l + 1;\n    }\n  }\n  decompose(e, n, r, i) {\n    for (let s = 0, a = 0; a <= n && s < this.children.length; s++) {\n      let o = this.children[s], l = a + o.length;\n      if (e <= l && n >= a) {\n        let c = i & ((a <= e ? 1 : 0) | (l >= n ? 2 : 0));\n        a >= e && l <= n && !c ? r.push(o) : o.decompose(e - a, n - a, r, c);\n      }\n      a = l + 1;\n    }\n  }\n  replace(e, n, r) {\n    if ([e, n] = ba(this, e, n), r.lines < this.lines)\n      for (let i = 0, s = 0; i < this.children.length; i++) {\n        let a = this.children[i], o = s + a.length;\n        if (e >= s && n <= o) {\n          let l = a.replace(e - s, n - s, r), c = this.lines - a.lines + l.lines;\n          if (l.lines < c >> 4 && l.lines > c >> 6) {\n            let h = this.children.slice();\n            return h[i] = l, new ci(h, this.length - (n - e) + r.length);\n          }\n          return super.replace(s, o, l);\n        }\n        s = o + 1;\n      }\n    return super.replace(e, n, r);\n  }\n  sliceString(e, n = this.length, r = `\n`) {\n    [e, n] = ba(this, e, n);\n    let i = "";\n    for (let s = 0, a = 0; s < this.children.length && a <= n; s++) {\n      let o = this.children[s], l = a + o.length;\n      a > e && s && (i += r), e < l && n > a && (i += o.sliceString(e - a, n - a, r)), a = l + 1;\n    }\n    return i;\n  }\n  flatten(e) {\n    for (let n of this.children)\n      n.flatten(e);\n  }\n  scanIdentical(e, n) {\n    if (!(e instanceof ci))\n      return 0;\n    let r = 0, [i, s, a, o] = n > 0 ? [0, 0, this.children.length, e.children.length] : [this.children.length - 1, e.children.length - 1, -1, -1];\n    for (; ; i += n, s += n) {\n      if (i == a || s == o)\n        return r;\n      let l = this.children[i], c = e.children[s];\n      if (l != c)\n        return r + l.scanIdentical(c, n);\n      r += l.length + 1;\n    }\n  }\n  static from(e, n = e.reduce((r, i) => r + i.length + 1, -1)) {\n    let r = 0;\n    for (let y of e)\n      r += y.lines;\n    if (r < 32) {\n      let y = [];\n      for (let v of e)\n        v.flatten(y);\n      return new qt(y, n);\n    }\n    let i = Math.max(\n      32,\n      r >> 5\n      /* Tree.BranchShift */\n    ), s = i << 1, a = i >> 1, o = [], l = 0, c = -1, h = [];\n    function f(y) {\n      let v;\n      if (y.lines > s && y instanceof ci)\n        for (let C of y.children)\n          f(C);\n      else y.lines > a && (l > a || !l) ? (m(), o.push(y)) : y instanceof qt && l && (v = h[h.length - 1]) instanceof qt && y.lines + v.lines <= 32 ? (l += y.lines, c += y.length + 1, h[h.length - 1] = new qt(v.text.concat(y.text), v.length + 1 + y.length)) : (l + y.lines > i && m(), l += y.lines, c += y.length + 1, h.push(y));\n    }\n    function m() {\n      l != 0 && (o.push(h.length == 1 ? h[0] : ci.from(h, c)), c = -1, l = h.length = 0);\n    }\n    for (let y of e)\n      f(y);\n    return m(), o.length == 1 ? o[0] : new ci(o, n);\n  }\n}\nht.empty = /* @__PURE__ */ new qt([""], 0);\nfunction $4(t) {\n  let e = -1;\n  for (let n of t)\n    e += n.length + 1;\n  return e;\n}\nfunction nu(t, e, n = 0, r = 1e9) {\n  for (let i = 0, s = 0, a = !0; s < t.length && i <= r; s++) {\n    let o = t[s], l = i + o.length;\n    l >= n && (l > r && (o = o.slice(0, r - i)), i < n && (o = o.slice(n - i)), a ? (e[e.length - 1] += o, a = !1) : e.push(o)), i = l + 1;\n  }\n  return e;\n}\nfunction Og(t, e, n) {\n  return nu(t, [""], e, n);\n}\nclass ho {\n  constructor(e, n = 1) {\n    this.dir = n, this.done = !1, this.lineBreak = !1, this.value = "", this.nodes = [e], this.offsets = [n > 0 ? 1 : (e instanceof qt ? e.text.length : e.children.length) << 1];\n  }\n  nextInner(e, n) {\n    for (this.done = this.lineBreak = !1; ; ) {\n      let r = this.nodes.length - 1, i = this.nodes[r], s = this.offsets[r], a = s >> 1, o = i instanceof qt ? i.text.length : i.children.length;\n      if (a == (n > 0 ? o : 0)) {\n        if (r == 0)\n          return this.done = !0, this.value = "", this;\n        n > 0 && this.offsets[r - 1]++, this.nodes.pop(), this.offsets.pop();\n      } else if ((s & 1) == (n > 0 ? 0 : 1)) {\n        if (this.offsets[r] += n, e == 0)\n          return this.lineBreak = !0, this.value = `\n`, this;\n        e--;\n      } else if (i instanceof qt) {\n        let l = i.text[a + (n < 0 ? -1 : 0)];\n        if (this.offsets[r] += n, l.length > Math.max(0, e))\n          return this.value = e == 0 ? l : n > 0 ? l.slice(e) : l.slice(0, l.length - e), this;\n        e -= l.length;\n      } else {\n        let l = i.children[a + (n < 0 ? -1 : 0)];\n        e > l.length ? (e -= l.length, this.offsets[r] += n) : (n < 0 && this.offsets[r]--, this.nodes.push(l), this.offsets.push(n > 0 ? 1 : (l instanceof qt ? l.text.length : l.children.length) << 1));\n      }\n    }\n  }\n  next(e = 0) {\n    return e < 0 && (this.nextInner(-e, -this.dir), e = this.value.length), this.nextInner(e, this.dir);\n  }\n}\nclass Tw {\n  constructor(e, n, r) {\n    this.value = "", this.done = !1, this.cursor = new ho(e, n > r ? -1 : 1), this.pos = n > r ? e.length : 0, this.from = Math.min(n, r), this.to = Math.max(n, r);\n  }\n  nextInner(e, n) {\n    if (n < 0 ? this.pos <= this.from : this.pos >= this.to)\n      return this.value = "", this.done = !0, this;\n    e += Math.max(0, n < 0 ? this.pos - this.to : this.from - this.pos);\n    let r = n < 0 ? this.pos - this.from : this.to - this.pos;\n    e > r && (e = r), r -= e;\n    let { value: i } = this.cursor.next(e);\n    return this.pos += (i.length + e) * n, this.value = i.length <= r ? i : n < 0 ? i.slice(i.length - r) : i.slice(0, r), this.done = !this.value, this;\n  }\n  next(e = 0) {\n    return e < 0 ? e = Math.max(e, this.from - this.pos) : e > 0 && (e = Math.min(e, this.to - this.pos)), this.nextInner(e, this.cursor.dir);\n  }\n  get lineBreak() {\n    return this.cursor.lineBreak && this.value != "";\n  }\n}\nclass jw {\n  constructor(e) {\n    this.inner = e, this.afterBreak = !0, this.value = "", this.done = !1;\n  }\n  next(e = 0) {\n    let { done: n, lineBreak: r, value: i } = this.inner.next(e);\n    return n && this.afterBreak ? (this.value = "", this.afterBreak = !1) : n ? (this.done = !0, this.value = "") : r ? this.afterBreak ? this.value = "" : (this.afterBreak = !0, this.next()) : (this.value = i, this.afterBreak = !1), this;\n  }\n  get lineBreak() {\n    return !1;\n  }\n}\ntypeof Symbol < "u" && (ht.prototype[Symbol.iterator] = function() {\n  return this.iter();\n}, ho.prototype[Symbol.iterator] = Tw.prototype[Symbol.iterator] = jw.prototype[Symbol.iterator] = function() {\n  return this;\n});\nclass L4 {\n  /**\n  @internal\n  */\n  constructor(e, n, r, i) {\n    this.from = e, this.to = n, this.number = r, this.text = i;\n  }\n  /**\n  The length of the line (not including any line break after it).\n  */\n  get length() {\n    return this.to - this.from;\n  }\n}\nfunction ba(t, e, n) {\n  return e = Math.max(0, Math.min(t.length, e)), [e, Math.max(e, Math.min(t.length, n))];\n}\nfunction kn(t, e, n = !0, r = !0) {\n  return _4(t, e, n, r);\n}\nfunction I4(t) {\n  return t >= 56320 && t < 57344;\n}\nfunction N4(t) {\n  return t >= 55296 && t < 56320;\n}\nfunction hr(t, e) {\n  let n = t.charCodeAt(e);\n  if (!N4(n) || e + 1 == t.length)\n    return n;\n  let r = t.charCodeAt(e + 1);\n  return I4(r) ? (n - 55296 << 10) + (r - 56320) + 65536 : n;\n}\nfunction Qd(t) {\n  return t <= 65535 ? String.fromCharCode(t) : (t -= 65536, String.fromCharCode((t >> 10) + 55296, (t & 1023) + 56320));\n}\nfunction hi(t) {\n  return t < 65536 ? 1 : 2;\n}\nconst Fp = /\\r\\n?|\\n/;\nvar nn = /* @__PURE__ */ function(t) {\n  return t[t.Simple = 0] = "Simple", t[t.TrackDel = 1] = "TrackDel", t[t.TrackBefore = 2] = "TrackBefore", t[t.TrackAfter = 3] = "TrackAfter", t;\n}(nn || (nn = {}));\nclass mi {\n  // Sections are encoded as pairs of integers. The first is the\n  // length in the current document, and the second is -1 for\n  // unaffected sections, and the length of the replacement content\n  // otherwise. So an insertion would be (0, n>0), a deletion (n>0,\n  // 0), and a replacement two positive numbers.\n  /**\n  @internal\n  */\n  constructor(e) {\n    this.sections = e;\n  }\n  /**\n  The length of the document before the change.\n  */\n  get length() {\n    let e = 0;\n    for (let n = 0; n < this.sections.length; n += 2)\n      e += this.sections[n];\n    return e;\n  }\n  /**\n  The length of the document after the change.\n  */\n  get newLength() {\n    let e = 0;\n    for (let n = 0; n < this.sections.length; n += 2) {\n      let r = this.sections[n + 1];\n      e += r < 0 ? this.sections[n] : r;\n    }\n    return e;\n  }\n  /**\n  False when there are actual changes in this set.\n  */\n  get empty() {\n    return this.sections.length == 0 || this.sections.length == 2 && this.sections[1] < 0;\n  }\n  /**\n  Iterate over the unchanged parts left by these changes. `posA`\n  provides the position of the range in the old document, `posB`\n  the new position in the changed document.\n  */\n  iterGaps(e) {\n    for (let n = 0, r = 0, i = 0; n < this.sections.length; ) {\n      let s = this.sections[n++], a = this.sections[n++];\n      a < 0 ? (e(r, i, s), i += s) : i += a, r += s;\n    }\n  }\n  /**\n  Iterate over the ranges changed by these changes. (See\n  [`ChangeSet.iterChanges`](https://codemirror.net/6/docs/ref/#state.ChangeSet.iterChanges) for a\n  variant that also provides you with the inserted text.)\n  `fromA`/`toA` provides the extent of the change in the starting\n  document, `fromB`/`toB` the extent of the replacement in the\n  changed document.\n  \n  When `individual` is true, adjacent changes (which are kept\n  separate for [position mapping](https://codemirror.net/6/docs/ref/#state.ChangeDesc.mapPos)) are\n  reported separately.\n  */\n  iterChangedRanges(e, n = !1) {\n    Bp(this, e, n);\n  }\n  /**\n  Get a description of the inverted form of these changes.\n  */\n  get invertedDesc() {\n    let e = [];\n    for (let n = 0; n < this.sections.length; ) {\n      let r = this.sections[n++], i = this.sections[n++];\n      i < 0 ? e.push(r, i) : e.push(i, r);\n    }\n    return new mi(e);\n  }\n  /**\n  Compute the combined effect of applying another set of changes\n  after this one. The length of the document after this set should\n  match the length before `other`.\n  */\n  composeDesc(e) {\n    return this.empty ? e : e.empty ? this : Rw(this, e);\n  }\n  /**\n  Map this description, which should start with the same document\n  as `other`, over another set of changes, so that it can be\n  applied after it. When `before` is true, map as if the changes\n  in `this` happened before the ones in `other`.\n  */\n  mapDesc(e, n = !1) {\n    return e.empty ? this : Mp(this, e, n);\n  }\n  mapPos(e, n = -1, r = nn.Simple) {\n    let i = 0, s = 0;\n    for (let a = 0; a < this.sections.length; ) {\n      let o = this.sections[a++], l = this.sections[a++], c = i + o;\n      if (l < 0) {\n        if (c > e)\n          return s + (e - i);\n        s += o;\n      } else {\n        if (r != nn.Simple && c >= e && (r == nn.TrackDel && i < e && c > e || r == nn.TrackBefore && i < e || r == nn.TrackAfter && c > e))\n          return null;\n        if (c > e || c == e && n < 0 && !o)\n          return e == i || n < 0 ? s : s + l;\n        s += l;\n      }\n      i = c;\n    }\n    if (e > i)\n      throw new RangeError(`Position ${e} is out of range for changeset of length ${i}`);\n    return s;\n  }\n  /**\n  Check whether these changes touch a given range. When one of the\n  changes entirely covers the range, the string `"cover"` is\n  returned.\n  */\n  touchesRange(e, n = e) {\n    for (let r = 0, i = 0; r < this.sections.length && i <= n; ) {\n      let s = this.sections[r++], a = this.sections[r++], o = i + s;\n      if (a >= 0 && i <= n && o >= e)\n        return i < e && o > n ? "cover" : !0;\n      i = o;\n    }\n    return !1;\n  }\n  /**\n  @internal\n  */\n  toString() {\n    let e = "";\n    for (let n = 0; n < this.sections.length; ) {\n      let r = this.sections[n++], i = this.sections[n++];\n      e += (e ? " " : "") + r + (i >= 0 ? ":" + i : "");\n    }\n    return e;\n  }\n  /**\n  Serialize this change desc to a JSON-representable value.\n  */\n  toJSON() {\n    return this.sections;\n  }\n  /**\n  Create a change desc from its JSON representation (as produced\n  by [`toJSON`](https://codemirror.net/6/docs/ref/#state.ChangeDesc.toJSON).\n  */\n  static fromJSON(e) {\n    if (!Array.isArray(e) || e.length % 2 || e.some((n) => typeof n != "number"))\n      throw new RangeError("Invalid JSON representation of ChangeDesc");\n    return new mi(e);\n  }\n  /**\n  @internal\n  */\n  static create(e) {\n    return new mi(e);\n  }\n}\nclass ln extends mi {\n  constructor(e, n) {\n    super(e), this.inserted = n;\n  }\n  /**\n  Apply the changes to a document, returning the modified\n  document.\n  */\n  apply(e) {\n    if (this.length != e.length)\n      throw new RangeError("Applying change set to a document with the wrong length");\n    return Bp(this, (n, r, i, s, a) => e = e.replace(i, i + (r - n), a), !1), e;\n  }\n  mapDesc(e, n = !1) {\n    return Mp(this, e, n, !0);\n  }\n  /**\n  Given the document as it existed _before_ the changes, return a\n  change set that represents the inverse of this set, which could\n  be used to go from the document created by the changes back to\n  the document as it existed before the changes.\n  */\n  invert(e) {\n    let n = this.sections.slice(), r = [];\n    for (let i = 0, s = 0; i < n.length; i += 2) {\n      let a = n[i], o = n[i + 1];\n      if (o >= 0) {\n        n[i] = o, n[i + 1] = a;\n        let l = i >> 1;\n        for (; r.length < l; )\n          r.push(ht.empty);\n        r.push(a ? e.slice(s, s + a) : ht.empty);\n      }\n      s += a;\n    }\n    return new ln(n, r);\n  }\n  /**\n  Combine two subsequent change sets into a single set. `other`\n  must start in the document produced by `this`. If `this` goes\n  `docA` → `docB` and `other` represents `docB` → `docC`, the\n  returned value will represent the change `docA` → `docC`.\n  */\n  compose(e) {\n    return this.empty ? e : e.empty ? this : Rw(this, e, !0);\n  }\n  /**\n  Given another change set starting in the same document, maps this\n  change set over the other, producing a new change set that can be\n  applied to the document produced by applying `other`. When\n  `before` is `true`, order changes as if `this` comes before\n  `other`, otherwise (the default) treat `other` as coming first.\n  \n  Given two changes `A` and `B`, `A.compose(B.map(A))` and\n  `B.compose(A.map(B, true))` will produce the same document. This\n  provides a basic form of [operational\n  transformation](https://en.wikipedia.org/wiki/Operational_transformation),\n  and can be used for collaborative editing.\n  */\n  map(e, n = !1) {\n    return e.empty ? this : Mp(this, e, n, !0);\n  }\n  /**\n  Iterate over the changed ranges in the document, calling `f` for\n  each, with the range in the original document (`fromA`-`toA`)\n  and the range that replaces it in the new document\n  (`fromB`-`toB`).\n  \n  When `individual` is true, adjacent changes are reported\n  separately.\n  */\n  iterChanges(e, n = !1) {\n    Bp(this, e, n);\n  }\n  /**\n  Get a [change description](https://codemirror.net/6/docs/ref/#state.ChangeDesc) for this change\n  set.\n  */\n  get desc() {\n    return mi.create(this.sections);\n  }\n  /**\n  @internal\n  */\n  filter(e) {\n    let n = [], r = [], i = [], s = new wo(this);\n    e: for (let a = 0, o = 0; ; ) {\n      let l = a == e.length ? 1e9 : e[a++];\n      for (; o < l || o == l && s.len == 0; ) {\n        if (s.done)\n          break e;\n        let h = Math.min(s.len, l - o);\n        Dn(i, h, -1);\n        let f = s.ins == -1 ? -1 : s.off == 0 ? s.ins : 0;\n        Dn(n, h, f), f > 0 && Gi(r, n, s.text), s.forward(h), o += h;\n      }\n      let c = e[a++];\n      for (; o < c; ) {\n        if (s.done)\n          break e;\n        let h = Math.min(s.len, c - o);\n        Dn(n, h, -1), Dn(i, h, s.ins == -1 ? -1 : s.off == 0 ? s.ins : 0), s.forward(h), o += h;\n      }\n    }\n    return {\n      changes: new ln(n, r),\n      filtered: mi.create(i)\n    };\n  }\n  /**\n  Serialize this change set to a JSON-representable value.\n  */\n  toJSON() {\n    let e = [];\n    for (let n = 0; n < this.sections.length; n += 2) {\n      let r = this.sections[n], i = this.sections[n + 1];\n      i < 0 ? e.push(r) : i == 0 ? e.push([r]) : e.push([r].concat(this.inserted[n >> 1].toJSON()));\n    }\n    return e;\n  }\n  /**\n  Create a change set for the given changes, for a document of the\n  given length, using `lineSep` as line separator.\n  */\n  static of(e, n, r) {\n    let i = [], s = [], a = 0, o = null;\n    function l(h = !1) {\n      if (!h && !i.length)\n        return;\n      a < n && Dn(i, n - a, -1);\n      let f = new ln(i, s);\n      o = o ? o.compose(f.map(o)) : f, i = [], s = [], a = 0;\n    }\n    function c(h) {\n      if (Array.isArray(h))\n        for (let f of h)\n          c(f);\n      else if (h instanceof ln) {\n        if (h.length != n)\n          throw new RangeError(`Mismatched change set length (got ${h.length}, expected ${n})`);\n        l(), o = o ? o.compose(h.map(o)) : h;\n      } else {\n        let { from: f, to: m = f, insert: y } = h;\n        if (f > m || f < 0 || m > n)\n          throw new RangeError(`Invalid change range ${f} to ${m} (in doc of length ${n})`);\n        let v = y ? typeof y == "string" ? ht.of(y.split(r || Fp)) : y : ht.empty, C = v.length;\n        if (f == m && C == 0)\n          return;\n        f < a && l(), f > a && Dn(i, f - a, -1), Dn(i, m - f, C), Gi(s, i, v), a = m;\n      }\n    }\n    return c(e), l(!o), o;\n  }\n  /**\n  Create an empty changeset of the given length.\n  */\n  static empty(e) {\n    return new ln(e ? [e, -1] : [], []);\n  }\n  /**\n  Create a changeset from its JSON representation (as produced by\n  [`toJSON`](https://codemirror.net/6/docs/ref/#state.ChangeSet.toJSON).\n  */\n  static fromJSON(e) {\n    if (!Array.isArray(e))\n      throw new RangeError("Invalid JSON representation of ChangeSet");\n    let n = [], r = [];\n    for (let i = 0; i < e.length; i++) {\n      let s = e[i];\n      if (typeof s == "number")\n        n.push(s, -1);\n      else {\n        if (!Array.isArray(s) || typeof s[0] != "number" || s.some((a, o) => o && typeof a != "string"))\n          throw new RangeError("Invalid JSON representation of ChangeSet");\n        if (s.length == 1)\n          n.push(s[0], 0);\n        else {\n          for (; r.length < i; )\n            r.push(ht.empty);\n          r[i] = ht.of(s.slice(1)), n.push(s[0], r[i].length);\n        }\n      }\n    }\n    return new ln(n, r);\n  }\n  /**\n  @internal\n  */\n  static createSet(e, n) {\n    return new ln(e, n);\n  }\n}\nfunction Dn(t, e, n, r = !1) {\n  if (e == 0 && n <= 0)\n    return;\n  let i = t.length - 2;\n  i >= 0 && n <= 0 && n == t[i + 1] ? t[i] += e : i >= 0 && e == 0 && t[i] == 0 ? t[i + 1] += n : r ? (t[i] += e, t[i + 1] += n) : t.push(e, n);\n}\nfunction Gi(t, e, n) {\n  if (n.length == 0)\n    return;\n  let r = e.length - 2 >> 1;\n  if (r < t.length)\n    t[t.length - 1] = t[t.length - 1].append(n);\n  else {\n    for (; t.length < r; )\n      t.push(ht.empty);\n    t.push(n);\n  }\n}\nfunction Bp(t, e, n) {\n  let r = t.inserted;\n  for (let i = 0, s = 0, a = 0; a < t.sections.length; ) {\n    let o = t.sections[a++], l = t.sections[a++];\n    if (l < 0)\n      i += o, s += o;\n    else {\n      let c = i, h = s, f = ht.empty;\n      for (; c += o, h += l, l && r && (f = f.append(r[a - 2 >> 1])), !(n || a == t.sections.length || t.sections[a + 1] < 0); )\n        o = t.sections[a++], l = t.sections[a++];\n      e(i, c, s, h, f), i = c, s = h;\n    }\n  }\n}\nfunction Mp(t, e, n, r = !1) {\n  let i = [], s = r ? [] : null, a = new wo(t), o = new wo(e);\n  for (let l = -1; ; ) {\n    if (a.done && o.len || o.done && a.len)\n      throw new Error("Mismatched change set lengths");\n    if (a.ins == -1 && o.ins == -1) {\n      let c = Math.min(a.len, o.len);\n      Dn(i, c, -1), a.forward(c), o.forward(c);\n    } else if (o.ins >= 0 && (a.ins < 0 || l == a.i || a.off == 0 && (o.len < a.len || o.len == a.len && !n))) {\n      let c = o.len;\n      for (Dn(i, o.ins, -1); c; ) {\n        let h = Math.min(a.len, c);\n        a.ins >= 0 && l < a.i && a.len <= h && (Dn(i, 0, a.ins), s && Gi(s, i, a.text), l = a.i), a.forward(h), c -= h;\n      }\n      o.next();\n    } else if (a.ins >= 0) {\n      let c = 0, h = a.len;\n      for (; h; )\n        if (o.ins == -1) {\n          let f = Math.min(h, o.len);\n          c += f, h -= f, o.forward(f);\n        } else if (o.ins == 0 && o.len < h)\n          h -= o.len, o.next();\n        else\n          break;\n      Dn(i, c, l < a.i ? a.ins : 0), s && l < a.i && Gi(s, i, a.text), l = a.i, a.forward(a.len - h);\n    } else {\n      if (a.done && o.done)\n        return s ? ln.createSet(i, s) : mi.create(i);\n      throw new Error("Mismatched change set lengths");\n    }\n  }\n}\nfunction Rw(t, e, n = !1) {\n  let r = [], i = n ? [] : null, s = new wo(t), a = new wo(e);\n  for (let o = !1; ; ) {\n    if (s.done && a.done)\n      return i ? ln.createSet(r, i) : mi.create(r);\n    if (s.ins == 0)\n      Dn(r, s.len, 0, o), s.next();\n    else if (a.len == 0 && !a.done)\n      Dn(r, 0, a.ins, o), i && Gi(i, r, a.text), a.next();\n    else {\n      if (s.done || a.done)\n        throw new Error("Mismatched change set lengths");\n      {\n        let l = Math.min(s.len2, a.len), c = r.length;\n        if (s.ins == -1) {\n          let h = a.ins == -1 ? -1 : a.off ? 0 : a.ins;\n          Dn(r, l, h, o), i && h && Gi(i, r, a.text);\n        } else a.ins == -1 ? (Dn(r, s.off ? 0 : s.len, l, o), i && Gi(i, r, s.textBit(l))) : (Dn(r, s.off ? 0 : s.len, a.off ? 0 : a.ins, o), i && !a.off && Gi(i, r, a.text));\n        o = (s.ins > l || a.ins >= 0 && a.len > l) && (o || r.length > c), s.forward2(l), a.forward(l);\n      }\n    }\n  }\n}\nclass wo {\n  constructor(e) {\n    this.set = e, this.i = 0, this.next();\n  }\n  next() {\n    let { sections: e } = this.set;\n    this.i < e.length ? (this.len = e[this.i++], this.ins = e[this.i++]) : (this.len = 0, this.ins = -2), this.off = 0;\n  }\n  get done() {\n    return this.ins == -2;\n  }\n  get len2() {\n    return this.ins < 0 ? this.len : this.ins;\n  }\n  get text() {\n    let { inserted: e } = this.set, n = this.i - 2 >> 1;\n    return n >= e.length ? ht.empty : e[n];\n  }\n  textBit(e) {\n    let { inserted: n } = this.set, r = this.i - 2 >> 1;\n    return r >= n.length && !e ? ht.empty : n[r].slice(this.off, e == null ? void 0 : this.off + e);\n  }\n  forward(e) {\n    e == this.len ? this.next() : (this.len -= e, this.off += e);\n  }\n  forward2(e) {\n    this.ins == -1 ? this.forward(e) : e == this.ins ? this.next() : (this.ins -= e, this.off += e);\n  }\n}\nclass ws {\n  constructor(e, n, r) {\n    this.from = e, this.to = n, this.flags = r;\n  }\n  /**\n  The anchor of the range—the side that doesn\'t move when you\n  extend it.\n  */\n  get anchor() {\n    return this.flags & 32 ? this.to : this.from;\n  }\n  /**\n  The head of the range, which is moved when the range is\n  [extended](https://codemirror.net/6/docs/ref/#state.SelectionRange.extend).\n  */\n  get head() {\n    return this.flags & 32 ? this.from : this.to;\n  }\n  /**\n  True when `anchor` and `head` are at the same position.\n  */\n  get empty() {\n    return this.from == this.to;\n  }\n  /**\n  If this is a cursor that is explicitly associated with the\n  character on one of its sides, this returns the side. -1 means\n  the character before its position, 1 the character after, and 0\n  means no association.\n  */\n  get assoc() {\n    return this.flags & 8 ? -1 : this.flags & 16 ? 1 : 0;\n  }\n  /**\n  The bidirectional text level associated with this cursor, if\n  any.\n  */\n  get bidiLevel() {\n    let e = this.flags & 7;\n    return e == 7 ? null : e;\n  }\n  /**\n  The goal column (stored vertical offset) associated with a\n  cursor. This is used to preserve the vertical position when\n  [moving](https://codemirror.net/6/docs/ref/#view.EditorView.moveVertically) across\n  lines of different length.\n  */\n  get goalColumn() {\n    let e = this.flags >> 6;\n    return e == 16777215 ? void 0 : e;\n  }\n  /**\n  Map this range through a change, producing a valid range in the\n  updated document.\n  */\n  map(e, n = -1) {\n    let r, i;\n    return this.empty ? r = i = e.mapPos(this.from, n) : (r = e.mapPos(this.from, 1), i = e.mapPos(this.to, -1)), r == this.from && i == this.to ? this : new ws(r, i, this.flags);\n  }\n  /**\n  Extend this range to cover at least `from` to `to`.\n  */\n  extend(e, n = e) {\n    if (e <= this.anchor && n >= this.anchor)\n      return ne.range(e, n);\n    let r = Math.abs(e - this.anchor) > Math.abs(n - this.anchor) ? e : n;\n    return ne.range(this.anchor, r);\n  }\n  /**\n  Compare this range to another range.\n  */\n  eq(e, n = !1) {\n    return this.anchor == e.anchor && this.head == e.head && (!n || !this.empty || this.assoc == e.assoc);\n  }\n  /**\n  Return a JSON-serializable object representing the range.\n  */\n  toJSON() {\n    return { anchor: this.anchor, head: this.head };\n  }\n  /**\n  Convert a JSON representation of a range to a `SelectionRange`\n  instance.\n  */\n  static fromJSON(e) {\n    if (!e || typeof e.anchor != "number" || typeof e.head != "number")\n      throw new RangeError("Invalid JSON representation for SelectionRange");\n    return ne.range(e.anchor, e.head);\n  }\n  /**\n  @internal\n  */\n  static create(e, n, r) {\n    return new ws(e, n, r);\n  }\n}\nclass ne {\n  constructor(e, n) {\n    this.ranges = e, this.mainIndex = n;\n  }\n  /**\n  Map a selection through a change. Used to adjust the selection\n  position for changes.\n  */\n  map(e, n = -1) {\n    return e.empty ? this : ne.create(this.ranges.map((r) => r.map(e, n)), this.mainIndex);\n  }\n  /**\n  Compare this selection to another selection. By default, ranges\n  are compared only by position. When `includeAssoc` is true,\n  cursor ranges must also have the same\n  [`assoc`](https://codemirror.net/6/docs/ref/#state.SelectionRange.assoc) value.\n  */\n  eq(e, n = !1) {\n    if (this.ranges.length != e.ranges.length || this.mainIndex != e.mainIndex)\n      return !1;\n    for (let r = 0; r < this.ranges.length; r++)\n      if (!this.ranges[r].eq(e.ranges[r], n))\n        return !1;\n    return !0;\n  }\n  /**\n  Get the primary selection range. Usually, you should make sure\n  your code applies to _all_ ranges, by using methods like\n  [`changeByRange`](https://codemirror.net/6/docs/ref/#state.EditorState.changeByRange).\n  */\n  get main() {\n    return this.ranges[this.mainIndex];\n  }\n  /**\n  Make sure the selection only has one range. Returns a selection\n  holding only the main range from this selection.\n  */\n  asSingle() {\n    return this.ranges.length == 1 ? this : new ne([this.main], 0);\n  }\n  /**\n  Extend this selection with an extra range.\n  */\n  addRange(e, n = !0) {\n    return ne.create([e].concat(this.ranges), n ? 0 : this.mainIndex + 1);\n  }\n  /**\n  Replace a given range with another range, and then normalize the\n  selection to merge and sort ranges if necessary.\n  */\n  replaceRange(e, n = this.mainIndex) {\n    let r = this.ranges.slice();\n    return r[n] = e, ne.create(r, this.mainIndex);\n  }\n  /**\n  Convert this selection to an object that can be serialized to\n  JSON.\n  */\n  toJSON() {\n    return { ranges: this.ranges.map((e) => e.toJSON()), main: this.mainIndex };\n  }\n  /**\n  Create a selection from a JSON representation.\n  */\n  static fromJSON(e) {\n    if (!e || !Array.isArray(e.ranges) || typeof e.main != "number" || e.main >= e.ranges.length)\n      throw new RangeError("Invalid JSON representation for EditorSelection");\n    return new ne(e.ranges.map((n) => ws.fromJSON(n)), e.main);\n  }\n  /**\n  Create a selection holding a single range.\n  */\n  static single(e, n = e) {\n    return new ne([ne.range(e, n)], 0);\n  }\n  /**\n  Sort and merge the given set of ranges, creating a valid\n  selection.\n  */\n  static create(e, n = 0) {\n    if (e.length == 0)\n      throw new RangeError("A selection needs at least one range");\n    for (let r = 0, i = 0; i < e.length; i++) {\n      let s = e[i];\n      if (s.empty ? s.from <= r : s.from < r)\n        return ne.normalized(e.slice(), n);\n      r = s.to;\n    }\n    return new ne(e, n);\n  }\n  /**\n  Create a cursor selection range at the given position. You can\n  safely ignore the optional arguments in most situations.\n  */\n  static cursor(e, n = 0, r, i) {\n    return ws.create(e, e, (n == 0 ? 0 : n < 0 ? 8 : 16) | (r == null ? 7 : Math.min(6, r)) | (i ?? 16777215) << 6);\n  }\n  /**\n  Create a selection range.\n  */\n  static range(e, n, r, i) {\n    let s = (r ?? 16777215) << 6 | (i == null ? 7 : Math.min(6, i));\n    return n < e ? ws.create(n, e, 48 | s) : ws.create(e, n, (n > e ? 8 : 0) | s);\n  }\n  /**\n  @internal\n  */\n  static normalized(e, n = 0) {\n    let r = e[n];\n    e.sort((i, s) => i.from - s.from), n = e.indexOf(r);\n    for (let i = 1; i < e.length; i++) {\n      let s = e[i], a = e[i - 1];\n      if (s.empty ? s.from <= a.to : s.from < a.to) {\n        let o = a.from, l = Math.max(s.to, a.to);\n        i <= n && n--, e.splice(--i, 2, s.anchor > s.head ? ne.range(l, o) : ne.range(o, l));\n      }\n    }\n    return new ne(e, n);\n  }\n}\nfunction _w(t, e) {\n  for (let n of t.ranges)\n    if (n.to > e)\n      throw new RangeError("Selection points outside of document");\n}\nlet Td = 0;\nclass Ae {\n  constructor(e, n, r, i, s) {\n    this.combine = e, this.compareInput = n, this.compare = r, this.isStatic = i, this.id = Td++, this.default = e([]), this.extensions = typeof s == "function" ? s(this) : s;\n  }\n  /**\n  Returns a facet reader for this facet, which can be used to\n  [read](https://codemirror.net/6/docs/ref/#state.EditorState.facet) it but not to define values for it.\n  */\n  get reader() {\n    return this;\n  }\n  /**\n  Define a new facet.\n  */\n  static define(e = {}) {\n    return new Ae(e.combine || ((n) => n), e.compareInput || ((n, r) => n === r), e.compare || (e.combine ? (n, r) => n === r : jd), !!e.static, e.enables);\n  }\n  /**\n  Returns an extension that adds the given value to this facet.\n  */\n  of(e) {\n    return new ru([], this, 0, e);\n  }\n  /**\n  Create an extension that computes a value for the facet from a\n  state. You must take care to declare the parts of the state that\n  this value depends on, since your function is only called again\n  for a new state when one of those parts changed.\n  \n  In cases where your value depends only on a single field, you\'ll\n  want to use the [`from`](https://codemirror.net/6/docs/ref/#state.Facet.from) method instead.\n  */\n  compute(e, n) {\n    if (this.isStatic)\n      throw new Error("Can\'t compute a static facet");\n    return new ru(e, this, 1, n);\n  }\n  /**\n  Create an extension that computes zero or more values for this\n  facet from a state.\n  */\n  computeN(e, n) {\n    if (this.isStatic)\n      throw new Error("Can\'t compute a static facet");\n    return new ru(e, this, 2, n);\n  }\n  from(e, n) {\n    return n || (n = (r) => r), this.compute([e], (r) => n(r.field(e)));\n  }\n}\nfunction jd(t, e) {\n  return t == e || t.length == e.length && t.every((n, r) => n === e[r]);\n}\nclass ru {\n  constructor(e, n, r, i) {\n    this.dependencies = e, this.facet = n, this.type = r, this.value = i, this.id = Td++;\n  }\n  dynamicSlot(e) {\n    var n;\n    let r = this.value, i = this.facet.compareInput, s = this.id, a = e[s] >> 1, o = this.type == 2, l = !1, c = !1, h = [];\n    for (let f of this.dependencies)\n      f == "doc" ? l = !0 : f == "selection" ? c = !0 : ((n = e[f.id]) !== null && n !== void 0 ? n : 1) & 1 || h.push(e[f.id]);\n    return {\n      create(f) {\n        return f.values[a] = r(f), 1;\n      },\n      update(f, m) {\n        if (l && m.docChanged || c && (m.docChanged || m.selection) || Qp(f, h)) {\n          let y = r(f);\n          if (o ? !vg(y, f.values[a], i) : !i(y, f.values[a]))\n            return f.values[a] = y, 1;\n        }\n        return 0;\n      },\n      reconfigure: (f, m) => {\n        let y, v = m.config.address[s];\n        if (v != null) {\n          let C = Su(m, v);\n          if (this.dependencies.every((S) => S instanceof Ae ? m.facet(S) === f.facet(S) : S instanceof Vt ? m.field(S, !1) == f.field(S, !1) : !0) || (o ? vg(y = r(f), C, i) : i(y = r(f), C)))\n            return f.values[a] = C, 0;\n        } else\n          y = r(f);\n        return f.values[a] = y, 1;\n      }\n    };\n  }\n}\nfunction vg(t, e, n) {\n  if (t.length != e.length)\n    return !1;\n  for (let r = 0; r < t.length; r++)\n    if (!n(t[r], e[r]))\n      return !1;\n  return !0;\n}\nfunction Qp(t, e) {\n  let n = !1;\n  for (let r of e)\n    po(t, r) & 1 && (n = !0);\n  return n;\n}\nfunction V4(t, e, n) {\n  let r = n.map((l) => t[l.id]), i = n.map((l) => l.type), s = r.filter((l) => !(l & 1)), a = t[e.id] >> 1;\n  function o(l) {\n    let c = [];\n    for (let h = 0; h < r.length; h++) {\n      let f = Su(l, r[h]);\n      if (i[h] == 2)\n        for (let m of f)\n          c.push(m);\n      else\n        c.push(f);\n    }\n    return e.combine(c);\n  }\n  return {\n    create(l) {\n      for (let c of r)\n        po(l, c);\n      return l.values[a] = o(l), 1;\n    },\n    update(l, c) {\n      if (!Qp(l, s))\n        return 0;\n      let h = o(l);\n      return e.compare(h, l.values[a]) ? 0 : (l.values[a] = h, 1);\n    },\n    reconfigure(l, c) {\n      let h = Qp(l, r), f = c.config.facets[e.id], m = c.facet(e);\n      if (f && !h && jd(n, f))\n        return l.values[a] = m, 0;\n      let y = o(l);\n      return e.compare(y, m) ? (l.values[a] = m, 0) : (l.values[a] = y, 1);\n    }\n  };\n}\nconst xg = /* @__PURE__ */ Ae.define({ static: !0 });\nclass Vt {\n  constructor(e, n, r, i, s) {\n    this.id = e, this.createF = n, this.updateF = r, this.compareF = i, this.spec = s, this.provides = void 0;\n  }\n  /**\n  Define a state field.\n  */\n  static define(e) {\n    let n = new Vt(Td++, e.create, e.update, e.compare || ((r, i) => r === i), e);\n    return e.provide && (n.provides = e.provide(n)), n;\n  }\n  create(e) {\n    let n = e.facet(xg).find((r) => r.field == this);\n    return (n?.create || this.createF)(e);\n  }\n  /**\n  @internal\n  */\n  slot(e) {\n    let n = e[this.id] >> 1;\n    return {\n      create: (r) => (r.values[n] = this.create(r), 1),\n      update: (r, i) => {\n        let s = r.values[n], a = this.updateF(s, i);\n        return this.compareF(s, a) ? 0 : (r.values[n] = a, 1);\n      },\n      reconfigure: (r, i) => i.config.address[this.id] != null ? (r.values[n] = i.field(this), 0) : (r.values[n] = this.create(r), 1)\n    };\n  }\n  /**\n  Returns an extension that enables this field and overrides the\n  way it is initialized. Can be useful when you need to provide a\n  non-default starting value for the field.\n  */\n  init(e) {\n    return [this, xg.of({ field: this, create: e })];\n  }\n  /**\n  State field instances can be used as\n  [`Extension`](https://codemirror.net/6/docs/ref/#state.Extension) values to enable the field in a\n  given state.\n  */\n  get extension() {\n    return this;\n  }\n}\nconst xs = { lowest: 4, low: 3, default: 2, high: 1, highest: 0 };\nfunction Ya(t) {\n  return (e) => new Zw(e, t);\n}\nconst jr = {\n  /**\n  The highest precedence level, for extensions that should end up\n  near the start of the precedence ordering.\n  */\n  highest: /* @__PURE__ */ Ya(xs.highest),\n  /**\n  A higher-than-default precedence, for extensions that should\n  come before those with default precedence.\n  */\n  high: /* @__PURE__ */ Ya(xs.high),\n  /**\n  The default precedence, which is also used for extensions\n  without an explicit precedence.\n  */\n  default: /* @__PURE__ */ Ya(xs.default),\n  /**\n  A lower-than-default precedence.\n  */\n  low: /* @__PURE__ */ Ya(xs.low),\n  /**\n  The lowest precedence level. Meant for things that should end up\n  near the end of the extension order.\n  */\n  lowest: /* @__PURE__ */ Ya(xs.lowest)\n};\nclass Zw {\n  constructor(e, n) {\n    this.inner = e, this.prec = n;\n  }\n}\nclass Uo {\n  /**\n  Create an instance of this compartment to add to your [state\n  configuration](https://codemirror.net/6/docs/ref/#state.EditorStateConfig.extensions).\n  */\n  of(e) {\n    return new Tp(this, e);\n  }\n  /**\n  Create an [effect](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) that\n  reconfigures this compartment.\n  */\n  reconfigure(e) {\n    return Uo.reconfigure.of({ compartment: this, extension: e });\n  }\n  /**\n  Get the current content of the compartment in the state, or\n  `undefined` if it isn\'t present.\n  */\n  get(e) {\n    return e.config.compartments.get(this);\n  }\n}\nclass Tp {\n  constructor(e, n) {\n    this.compartment = e, this.inner = n;\n  }\n}\nclass Cu {\n  constructor(e, n, r, i, s, a) {\n    for (this.base = e, this.compartments = n, this.dynamicSlots = r, this.address = i, this.staticValues = s, this.facets = a, this.statusTemplate = []; this.statusTemplate.length < r.length; )\n      this.statusTemplate.push(\n        0\n        /* SlotStatus.Unresolved */\n      );\n  }\n  staticFacet(e) {\n    let n = this.address[e.id];\n    return n == null ? e.default : this.staticValues[n >> 1];\n  }\n  static resolve(e, n, r) {\n    let i = [], s = /* @__PURE__ */ Object.create(null), a = /* @__PURE__ */ new Map();\n    for (let m of X4(e, n, a))\n      m instanceof Vt ? i.push(m) : (s[m.facet.id] || (s[m.facet.id] = [])).push(m);\n    let o = /* @__PURE__ */ Object.create(null), l = [], c = [];\n    for (let m of i)\n      o[m.id] = c.length << 1, c.push((y) => m.slot(y));\n    let h = r?.config.facets;\n    for (let m in s) {\n      let y = s[m], v = y[0].facet, C = h && h[m] || [];\n      if (y.every(\n        (S) => S.type == 0\n        /* Provider.Static */\n      ))\n        if (o[v.id] = l.length << 1 | 1, jd(C, y))\n          l.push(r.facet(v));\n        else {\n          let S = v.combine(y.map((M) => M.value));\n          l.push(r && v.compare(S, r.facet(v)) ? r.facet(v) : S);\n        }\n      else {\n        for (let S of y)\n          S.type == 0 ? (o[S.id] = l.length << 1 | 1, l.push(S.value)) : (o[S.id] = c.length << 1, c.push((M) => S.dynamicSlot(M)));\n        o[v.id] = c.length << 1, c.push((S) => V4(S, v, y));\n      }\n    }\n    let f = c.map((m) => m(o));\n    return new Cu(e, a, f, o, l, s);\n  }\n}\nfunction X4(t, e, n) {\n  let r = [[], [], [], [], []], i = /* @__PURE__ */ new Map();\n  function s(a, o) {\n    let l = i.get(a);\n    if (l != null) {\n      if (l <= o)\n        return;\n      let c = r[l].indexOf(a);\n      c > -1 && r[l].splice(c, 1), a instanceof Tp && n.delete(a.compartment);\n    }\n    if (i.set(a, o), Array.isArray(a))\n      for (let c of a)\n        s(c, o);\n    else if (a instanceof Tp) {\n      if (n.has(a.compartment))\n        throw new RangeError("Duplicate use of compartment in extensions");\n      let c = e.get(a.compartment) || a.inner;\n      n.set(a.compartment, c), s(c, o);\n    } else if (a instanceof Zw)\n      s(a.inner, a.prec);\n    else if (a instanceof Vt)\n      r[o].push(a), a.provides && s(a.provides, o);\n    else if (a instanceof ru)\n      r[o].push(a), a.facet.extensions && s(a.facet.extensions, xs.default);\n    else {\n      let c = a.extension;\n      if (!c)\n        throw new Error(`Unrecognized extension value in extension set (${a}). This sometimes happens because multiple instances of @codemirror/state are loaded, breaking instanceof checks.`);\n      s(c, o);\n    }\n  }\n  return s(t, xs.default), r.reduce((a, o) => a.concat(o));\n}\nfunction po(t, e) {\n  if (e & 1)\n    return 2;\n  let n = e >> 1, r = t.status[n];\n  if (r == 4)\n    throw new Error("Cyclic dependency between fields and/or facets");\n  if (r & 2)\n    return r;\n  t.status[n] = 4;\n  let i = t.computeSlot(t, t.config.dynamicSlots[n]);\n  return t.status[n] = 2 | i;\n}\nfunction Su(t, e) {\n  return e & 1 ? t.config.staticValues[e >> 1] : t.values[e >> 1];\n}\nconst $w = /* @__PURE__ */ Ae.define(), jp = /* @__PURE__ */ Ae.define({\n  combine: (t) => t.some((e) => e),\n  static: !0\n}), Lw = /* @__PURE__ */ Ae.define({\n  combine: (t) => t.length ? t[0] : void 0,\n  static: !0\n}), Iw = /* @__PURE__ */ Ae.define(), Nw = /* @__PURE__ */ Ae.define(), Vw = /* @__PURE__ */ Ae.define(), Xw = /* @__PURE__ */ Ae.define({\n  combine: (t) => t.length ? t[0] : !1\n});\nclass _i {\n  /**\n  @internal\n  */\n  constructor(e, n) {\n    this.type = e, this.value = n;\n  }\n  /**\n  Define a new type of annotation.\n  */\n  static define() {\n    return new W4();\n  }\n}\nclass W4 {\n  /**\n  Create an instance of this annotation.\n  */\n  of(e) {\n    return new _i(this, e);\n  }\n}\nclass U4 {\n  /**\n  @internal\n  */\n  constructor(e) {\n    this.map = e;\n  }\n  /**\n  Create a [state effect](https://codemirror.net/6/docs/ref/#state.StateEffect) instance of this\n  type.\n  */\n  of(e) {\n    return new Ie(this, e);\n  }\n}\nclass Ie {\n  /**\n  @internal\n  */\n  constructor(e, n) {\n    this.type = e, this.value = n;\n  }\n  /**\n  Map this effect through a position mapping. Will return\n  `undefined` when that ends up deleting the effect.\n  */\n  map(e) {\n    let n = this.type.map(this.value, e);\n    return n === void 0 ? void 0 : n == this.value ? this : new Ie(this.type, n);\n  }\n  /**\n  Tells you whether this effect object is of a given\n  [type](https://codemirror.net/6/docs/ref/#state.StateEffectType).\n  */\n  is(e) {\n    return this.type == e;\n  }\n  /**\n  Define a new effect type. The type parameter indicates the type\n  of values that his effect holds. It should be a type that\n  doesn\'t include `undefined`, since that is used in\n  [mapping](https://codemirror.net/6/docs/ref/#state.StateEffect.map) to indicate that an effect is\n  removed.\n  */\n  static define(e = {}) {\n    return new U4(e.map || ((n) => n));\n  }\n  /**\n  Map an array of effects through a change set.\n  */\n  static mapEffects(e, n) {\n    if (!e.length)\n      return e;\n    let r = [];\n    for (let i of e) {\n      let s = i.map(n);\n      s && r.push(s);\n    }\n    return r;\n  }\n}\nIe.reconfigure = /* @__PURE__ */ Ie.define();\nIe.appendConfig = /* @__PURE__ */ Ie.define();\nclass rn {\n  constructor(e, n, r, i, s, a) {\n    this.startState = e, this.changes = n, this.selection = r, this.effects = i, this.annotations = s, this.scrollIntoView = a, this._doc = null, this._state = null, r && _w(r, n.newLength), s.some((o) => o.type == rn.time) || (this.annotations = s.concat(rn.time.of(Date.now())));\n  }\n  /**\n  @internal\n  */\n  static create(e, n, r, i, s, a) {\n    return new rn(e, n, r, i, s, a);\n  }\n  /**\n  The new document produced by the transaction. Contrary to\n  [`.state`](https://codemirror.net/6/docs/ref/#state.Transaction.state)`.doc`, accessing this won\'t\n  force the entire new state to be computed right away, so it is\n  recommended that [transaction\n  filters](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter) use this getter\n  when they need to look at the new document.\n  */\n  get newDoc() {\n    return this._doc || (this._doc = this.changes.apply(this.startState.doc));\n  }\n  /**\n  The new selection produced by the transaction. If\n  [`this.selection`](https://codemirror.net/6/docs/ref/#state.Transaction.selection) is undefined,\n  this will [map](https://codemirror.net/6/docs/ref/#state.EditorSelection.map) the start state\'s\n  current selection through the changes made by the transaction.\n  */\n  get newSelection() {\n    return this.selection || this.startState.selection.map(this.changes);\n  }\n  /**\n  The new state created by the transaction. Computed on demand\n  (but retained for subsequent access), so it is recommended not to\n  access it in [transaction\n  filters](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter) when possible.\n  */\n  get state() {\n    return this._state || this.startState.applyTransaction(this), this._state;\n  }\n  /**\n  Get the value of the given annotation type, if any.\n  */\n  annotation(e) {\n    for (let n of this.annotations)\n      if (n.type == e)\n        return n.value;\n  }\n  /**\n  Indicates whether the transaction changed the document.\n  */\n  get docChanged() {\n    return !this.changes.empty;\n  }\n  /**\n  Indicates whether this transaction reconfigures the state\n  (through a [configuration compartment](https://codemirror.net/6/docs/ref/#state.Compartment) or\n  with a top-level configuration\n  [effect](https://codemirror.net/6/docs/ref/#state.StateEffect^reconfigure).\n  */\n  get reconfigured() {\n    return this.startState.config != this.state.config;\n  }\n  /**\n  Returns true if the transaction has a [user\n  event](https://codemirror.net/6/docs/ref/#state.Transaction^userEvent) annotation that is equal to\n  or more specific than `event`. For example, if the transaction\n  has `"select.pointer"` as user event, `"select"` and\n  `"select.pointer"` will match it.\n  */\n  isUserEvent(e) {\n    let n = this.annotation(rn.userEvent);\n    return !!(n && (n == e || n.length > e.length && n.slice(0, e.length) == e && n[e.length] == "."));\n  }\n}\nrn.time = /* @__PURE__ */ _i.define();\nrn.userEvent = /* @__PURE__ */ _i.define();\nrn.addToHistory = /* @__PURE__ */ _i.define();\nrn.remote = /* @__PURE__ */ _i.define();\nfunction q4(t, e) {\n  let n = [];\n  for (let r = 0, i = 0; ; ) {\n    let s, a;\n    if (r < t.length && (i == e.length || e[i] >= t[r]))\n      s = t[r++], a = t[r++];\n    else if (i < e.length)\n      s = e[i++], a = e[i++];\n    else\n      return n;\n    !n.length || n[n.length - 1] < s ? n.push(s, a) : n[n.length - 1] < a && (n[n.length - 1] = a);\n  }\n}\nfunction Ww(t, e, n) {\n  var r;\n  let i, s, a;\n  return n ? (i = e.changes, s = ln.empty(e.changes.length), a = t.changes.compose(e.changes)) : (i = e.changes.map(t.changes), s = t.changes.mapDesc(e.changes, !0), a = t.changes.compose(i)), {\n    changes: a,\n    selection: e.selection ? e.selection.map(s) : (r = t.selection) === null || r === void 0 ? void 0 : r.map(i),\n    effects: Ie.mapEffects(t.effects, i).concat(Ie.mapEffects(e.effects, s)),\n    annotations: t.annotations.length ? t.annotations.concat(e.annotations) : e.annotations,\n    scrollIntoView: t.scrollIntoView || e.scrollIntoView\n  };\n}\nfunction Rp(t, e, n) {\n  let r = e.selection, i = ia(e.annotations);\n  return e.userEvent && (i = i.concat(rn.userEvent.of(e.userEvent))), {\n    changes: e.changes instanceof ln ? e.changes : ln.of(e.changes || [], n, t.facet(Lw)),\n    selection: r && (r instanceof ne ? r : ne.single(r.anchor, r.head)),\n    effects: ia(e.effects),\n    annotations: i,\n    scrollIntoView: !!e.scrollIntoView\n  };\n}\nfunction Uw(t, e, n) {\n  let r = Rp(t, e.length ? e[0] : {}, t.doc.length);\n  e.length && e[0].filter === !1 && (n = !1);\n  for (let s = 1; s < e.length; s++) {\n    e[s].filter === !1 && (n = !1);\n    let a = !!e[s].sequential;\n    r = Ww(r, Rp(t, e[s], a ? r.changes.newLength : t.doc.length), a);\n  }\n  let i = rn.create(t, r.changes, r.selection, r.effects, r.annotations, r.scrollIntoView);\n  return z4(n ? G4(i) : i);\n}\nfunction G4(t) {\n  let e = t.startState, n = !0;\n  for (let i of e.facet(Iw)) {\n    let s = i(t);\n    if (s === !1) {\n      n = !1;\n      break;\n    }\n    Array.isArray(s) && (n = n === !0 ? s : q4(n, s));\n  }\n  if (n !== !0) {\n    let i, s;\n    if (n === !1)\n      s = t.changes.invertedDesc, i = ln.empty(e.doc.length);\n    else {\n      let a = t.changes.filter(n);\n      i = a.changes, s = a.filtered.mapDesc(a.changes).invertedDesc;\n    }\n    t = rn.create(e, i, t.selection && t.selection.map(s), Ie.mapEffects(t.effects, s), t.annotations, t.scrollIntoView);\n  }\n  let r = e.facet(Nw);\n  for (let i = r.length - 1; i >= 0; i--) {\n    let s = r[i](t);\n    s instanceof rn ? t = s : Array.isArray(s) && s.length == 1 && s[0] instanceof rn ? t = s[0] : t = Uw(e, ia(s), !1);\n  }\n  return t;\n}\nfunction z4(t) {\n  let e = t.startState, n = e.facet(Vw), r = t;\n  for (let i = n.length - 1; i >= 0; i--) {\n    let s = n[i](t);\n    s && Object.keys(s).length && (r = Ww(r, Rp(e, s, t.changes.newLength), !0));\n  }\n  return r == t ? t : rn.create(e, t.changes, t.selection, r.effects, r.annotations, r.scrollIntoView);\n}\nconst H4 = [];\nfunction ia(t) {\n  return t == null ? H4 : Array.isArray(t) ? t : [t];\n}\nvar sn = /* @__PURE__ */ function(t) {\n  return t[t.Word = 0] = "Word", t[t.Space = 1] = "Space", t[t.Other = 2] = "Other", t;\n}(sn || (sn = {}));\nconst Y4 = /[\\u00df\\u0587\\u0590-\\u05f4\\u0600-\\u06ff\\u3040-\\u309f\\u30a0-\\u30ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\uac00-\\ud7af]/;\nlet _p;\ntry {\n  _p = /* @__PURE__ */ new RegExp("[\\\\p{Alphabetic}\\\\p{Number}_]", "u");\n} catch {\n}\nfunction K4(t) {\n  if (_p)\n    return _p.test(t);\n  for (let e = 0; e < t.length; e++) {\n    let n = t[e];\n    if (/\\w/.test(n) || n > "" && (n.toUpperCase() != n.toLowerCase() || Y4.test(n)))\n      return !0;\n  }\n  return !1;\n}\nfunction J4(t) {\n  return (e) => {\n    if (!/\\S/.test(e))\n      return sn.Space;\n    if (K4(e))\n      return sn.Word;\n    for (let n = 0; n < t.length; n++)\n      if (e.indexOf(t[n]) > -1)\n        return sn.Word;\n    return sn.Other;\n  };\n}\nclass dt {\n  constructor(e, n, r, i, s, a) {\n    this.config = e, this.doc = n, this.selection = r, this.values = i, this.status = e.statusTemplate.slice(), this.computeSlot = s, a && (a._state = this);\n    for (let o = 0; o < this.config.dynamicSlots.length; o++)\n      po(this, o << 1);\n    this.computeSlot = null;\n  }\n  field(e, n = !0) {\n    let r = this.config.address[e.id];\n    if (r == null) {\n      if (n)\n        throw new RangeError("Field is not present in this state");\n      return;\n    }\n    return po(this, r), Su(this, r);\n  }\n  /**\n  Create a [transaction](https://codemirror.net/6/docs/ref/#state.Transaction) that updates this\n  state. Any number of [transaction specs](https://codemirror.net/6/docs/ref/#state.TransactionSpec)\n  can be passed. Unless\n  [`sequential`](https://codemirror.net/6/docs/ref/#state.TransactionSpec.sequential) is set, the\n  [changes](https://codemirror.net/6/docs/ref/#state.TransactionSpec.changes) (if any) of each spec\n  are assumed to start in the _current_ document (not the document\n  produced by previous specs), and its\n  [selection](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection) and\n  [effects](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) are assumed to refer\n  to the document created by its _own_ changes. The resulting\n  transaction contains the combined effect of all the different\n  specs. For [selection](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection), later\n  specs take precedence over earlier ones.\n  */\n  update(...e) {\n    return Uw(this, e, !0);\n  }\n  /**\n  @internal\n  */\n  applyTransaction(e) {\n    let n = this.config, { base: r, compartments: i } = n;\n    for (let o of e.effects)\n      o.is(Uo.reconfigure) ? (n && (i = /* @__PURE__ */ new Map(), n.compartments.forEach((l, c) => i.set(c, l)), n = null), i.set(o.value.compartment, o.value.extension)) : o.is(Ie.reconfigure) ? (n = null, r = o.value) : o.is(Ie.appendConfig) && (n = null, r = ia(r).concat(o.value));\n    let s;\n    n ? s = e.startState.values.slice() : (n = Cu.resolve(r, i, this), s = new dt(n, this.doc, this.selection, n.dynamicSlots.map(() => null), (l, c) => c.reconfigure(l, this), null).values);\n    let a = e.startState.facet(jp) ? e.newSelection : e.newSelection.asSingle();\n    new dt(n, e.newDoc, a, s, (o, l) => l.update(o, e), e);\n  }\n  /**\n  Create a [transaction spec](https://codemirror.net/6/docs/ref/#state.TransactionSpec) that\n  replaces every selection range with the given content.\n  */\n  replaceSelection(e) {\n    return typeof e == "string" && (e = this.toText(e)), this.changeByRange((n) => ({\n      changes: { from: n.from, to: n.to, insert: e },\n      range: ne.cursor(n.from + e.length)\n    }));\n  }\n  /**\n  Create a set of changes and a new selection by running the given\n  function for each range in the active selection. The function\n  can return an optional set of changes (in the coordinate space\n  of the start document), plus an updated range (in the coordinate\n  space of the document produced by the call\'s own changes). This\n  method will merge all the changes and ranges into a single\n  changeset and selection, and return it as a [transaction\n  spec](https://codemirror.net/6/docs/ref/#state.TransactionSpec), which can be passed to\n  [`update`](https://codemirror.net/6/docs/ref/#state.EditorState.update).\n  */\n  changeByRange(e) {\n    let n = this.selection, r = e(n.ranges[0]), i = this.changes(r.changes), s = [r.range], a = ia(r.effects);\n    for (let o = 1; o < n.ranges.length; o++) {\n      let l = e(n.ranges[o]), c = this.changes(l.changes), h = c.map(i);\n      for (let m = 0; m < o; m++)\n        s[m] = s[m].map(h);\n      let f = i.mapDesc(c, !0);\n      s.push(l.range.map(f)), i = i.compose(h), a = Ie.mapEffects(a, h).concat(Ie.mapEffects(ia(l.effects), f));\n    }\n    return {\n      changes: i,\n      selection: ne.create(s, n.mainIndex),\n      effects: a\n    };\n  }\n  /**\n  Create a [change set](https://codemirror.net/6/docs/ref/#state.ChangeSet) from the given change\n  description, taking the state\'s document length and line\n  separator into account.\n  */\n  changes(e = []) {\n    return e instanceof ln ? e : ln.of(e, this.doc.length, this.facet(dt.lineSeparator));\n  }\n  /**\n  Using the state\'s [line\n  separator](https://codemirror.net/6/docs/ref/#state.EditorState^lineSeparator), create a\n  [`Text`](https://codemirror.net/6/docs/ref/#state.Text) instance from the given string.\n  */\n  toText(e) {\n    return ht.of(e.split(this.facet(dt.lineSeparator) || Fp));\n  }\n  /**\n  Return the given range of the document as a string.\n  */\n  sliceDoc(e = 0, n = this.doc.length) {\n    return this.doc.sliceString(e, n, this.lineBreak);\n  }\n  /**\n  Get the value of a state [facet](https://codemirror.net/6/docs/ref/#state.Facet).\n  */\n  facet(e) {\n    let n = this.config.address[e.id];\n    return n == null ? e.default : (po(this, n), Su(this, n));\n  }\n  /**\n  Convert this state to a JSON-serializable object. When custom\n  fields should be serialized, you can pass them in as an object\n  mapping property names (in the resulting object, which should\n  not use `doc` or `selection`) to fields.\n  */\n  toJSON(e) {\n    let n = {\n      doc: this.sliceDoc(),\n      selection: this.selection.toJSON()\n    };\n    if (e)\n      for (let r in e) {\n        let i = e[r];\n        i instanceof Vt && this.config.address[i.id] != null && (n[r] = i.spec.toJSON(this.field(e[r]), this));\n      }\n    return n;\n  }\n  /**\n  Deserialize a state from its JSON representation. When custom\n  fields should be deserialized, pass the same object you passed\n  to [`toJSON`](https://codemirror.net/6/docs/ref/#state.EditorState.toJSON) when serializing as\n  third argument.\n  */\n  static fromJSON(e, n = {}, r) {\n    if (!e || typeof e.doc != "string")\n      throw new RangeError("Invalid JSON representation for EditorState");\n    let i = [];\n    if (r) {\n      for (let s in r)\n        if (Object.prototype.hasOwnProperty.call(e, s)) {\n          let a = r[s], o = e[s];\n          i.push(a.init((l) => a.spec.fromJSON(o, l)));\n        }\n    }\n    return dt.create({\n      doc: e.doc,\n      selection: ne.fromJSON(e.selection),\n      extensions: n.extensions ? i.concat([n.extensions]) : i\n    });\n  }\n  /**\n  Create a new state. You\'ll usually only need this when\n  initializing an editor—updated states are created by applying\n  transactions.\n  */\n  static create(e = {}) {\n    let n = Cu.resolve(e.extensions || [], /* @__PURE__ */ new Map()), r = e.doc instanceof ht ? e.doc : ht.of((e.doc || "").split(n.staticFacet(dt.lineSeparator) || Fp)), i = e.selection ? e.selection instanceof ne ? e.selection : ne.single(e.selection.anchor, e.selection.head) : ne.single(0);\n    return _w(i, r.length), n.staticFacet(jp) || (i = i.asSingle()), new dt(n, r, i, n.dynamicSlots.map(() => null), (s, a) => a.create(s), null);\n  }\n  /**\n  The size (in columns) of a tab in the document, determined by\n  the [`tabSize`](https://codemirror.net/6/docs/ref/#state.EditorState^tabSize) facet.\n  */\n  get tabSize() {\n    return this.facet(dt.tabSize);\n  }\n  /**\n  Get the proper [line-break](https://codemirror.net/6/docs/ref/#state.EditorState^lineSeparator)\n  string for this state.\n  */\n  get lineBreak() {\n    return this.facet(dt.lineSeparator) || `\n`;\n  }\n  /**\n  Returns true when the editor is\n  [configured](https://codemirror.net/6/docs/ref/#state.EditorState^readOnly) to be read-only.\n  */\n  get readOnly() {\n    return this.facet(Xw);\n  }\n  /**\n  Look up a translation for the given phrase (via the\n  [`phrases`](https://codemirror.net/6/docs/ref/#state.EditorState^phrases) facet), or return the\n  original string if no translation is found.\n  \n  If additional arguments are passed, they will be inserted in\n  place of markers like `$1` (for the first value) and `$2`, etc.\n  A single `$` is equivalent to `$1`, and `$$` will produce a\n  literal dollar sign.\n  */\n  phrase(e, ...n) {\n    for (let r of this.facet(dt.phrases))\n      if (Object.prototype.hasOwnProperty.call(r, e)) {\n        e = r[e];\n        break;\n      }\n    return n.length && (e = e.replace(/\\$(\\$|\\d*)/g, (r, i) => {\n      if (i == "$")\n        return "$";\n      let s = +(i || 1);\n      return !s || s > n.length ? r : n[s - 1];\n    })), e;\n  }\n  /**\n  Find the values for a given language data field, provided by the\n  the [`languageData`](https://codemirror.net/6/docs/ref/#state.EditorState^languageData) facet.\n  \n  Examples of language data fields are...\n  \n  - [`"commentTokens"`](https://codemirror.net/6/docs/ref/#commands.CommentTokens) for specifying\n    comment syntax.\n  - [`"autocomplete"`](https://codemirror.net/6/docs/ref/#autocomplete.autocompletion^config.override)\n    for providing language-specific completion sources.\n  - [`"wordChars"`](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer) for adding\n    characters that should be considered part of words in this\n    language.\n  - [`"closeBrackets"`](https://codemirror.net/6/docs/ref/#autocomplete.CloseBracketConfig) controls\n    bracket closing behavior.\n  */\n  languageDataAt(e, n, r = -1) {\n    let i = [];\n    for (let s of this.facet($w))\n      for (let a of s(this, n, r))\n        Object.prototype.hasOwnProperty.call(a, e) && i.push(a[e]);\n    return i;\n  }\n  /**\n  Return a function that can categorize strings (expected to\n  represent a single [grapheme cluster](https://codemirror.net/6/docs/ref/#state.findClusterBreak))\n  into one of:\n  \n   - Word (contains an alphanumeric character or a character\n     explicitly listed in the local language\'s `"wordChars"`\n     language data, which should be a string)\n   - Space (contains only whitespace)\n   - Other (anything else)\n  */\n  charCategorizer(e) {\n    return J4(this.languageDataAt("wordChars", e).join(""));\n  }\n  /**\n  Find the word at the given position, meaning the range\n  containing all [word](https://codemirror.net/6/docs/ref/#state.CharCategory.Word) characters\n  around it. If no word characters are adjacent to the position,\n  this returns null.\n  */\n  wordAt(e) {\n    let { text: n, from: r, length: i } = this.doc.lineAt(e), s = this.charCategorizer(e), a = e - r, o = e - r;\n    for (; a > 0; ) {\n      let l = kn(n, a, !1);\n      if (s(n.slice(l, a)) != sn.Word)\n        break;\n      a = l;\n    }\n    for (; o < i; ) {\n      let l = kn(n, o);\n      if (s(n.slice(o, l)) != sn.Word)\n        break;\n      o = l;\n    }\n    return a == o ? null : ne.range(a + r, o + r);\n  }\n}\ndt.allowMultipleSelections = jp;\ndt.tabSize = /* @__PURE__ */ Ae.define({\n  combine: (t) => t.length ? t[0] : 4\n});\ndt.lineSeparator = Lw;\ndt.readOnly = Xw;\ndt.phrases = /* @__PURE__ */ Ae.define({\n  compare(t, e) {\n    let n = Object.keys(t), r = Object.keys(e);\n    return n.length == r.length && n.every((i) => t[i] == e[i]);\n  }\n});\ndt.languageData = $w;\ndt.changeFilter = Iw;\ndt.transactionFilter = Nw;\ndt.transactionExtender = Vw;\nUo.reconfigure = /* @__PURE__ */ Ie.define();\nfunction ls(t, e, n = {}) {\n  let r = {};\n  for (let i of t)\n    for (let s of Object.keys(i)) {\n      let a = i[s], o = r[s];\n      if (o === void 0)\n        r[s] = a;\n      else if (!(o === a || a === void 0)) if (Object.hasOwnProperty.call(n, s))\n        r[s] = n[s](o, a);\n      else\n        throw new Error("Config merge conflict for field " + s);\n    }\n  for (let i in e)\n    r[i] === void 0 && (r[i] = e[i]);\n  return r;\n}\nclass Ms {\n  /**\n  Compare this value with another value. Used when comparing\n  rangesets. The default implementation compares by identity.\n  Unless you are only creating a fixed number of unique instances\n  of your value type, it is a good idea to implement this\n  properly.\n  */\n  eq(e) {\n    return this == e;\n  }\n  /**\n  Create a [range](https://codemirror.net/6/docs/ref/#state.Range) with this value.\n  */\n  range(e, n = e) {\n    return Zp.create(e, n, this);\n  }\n}\nMs.prototype.startSide = Ms.prototype.endSide = 0;\nMs.prototype.point = !1;\nMs.prototype.mapMode = nn.TrackDel;\nlet Zp = class qw {\n  constructor(e, n, r) {\n    this.from = e, this.to = n, this.value = r;\n  }\n  /**\n  @internal\n  */\n  static create(e, n, r) {\n    return new qw(e, n, r);\n  }\n};\nfunction $p(t, e) {\n  return t.from - e.from || t.value.startSide - e.value.startSide;\n}\nclass Rd {\n  constructor(e, n, r, i) {\n    this.from = e, this.to = n, this.value = r, this.maxPoint = i;\n  }\n  get length() {\n    return this.to[this.to.length - 1];\n  }\n  // Find the index of the given position and side. Use the ranges\'\n  // `from` pos when `end == false`, `to` when `end == true`.\n  findIndex(e, n, r, i = 0) {\n    let s = r ? this.to : this.from;\n    for (let a = i, o = s.length; ; ) {\n      if (a == o)\n        return a;\n      let l = a + o >> 1, c = s[l] - e || (r ? this.value[l].endSide : this.value[l].startSide) - n;\n      if (l == a)\n        return c >= 0 ? a : o;\n      c >= 0 ? o = l : a = l + 1;\n    }\n  }\n  between(e, n, r, i) {\n    for (let s = this.findIndex(n, -1e9, !0), a = this.findIndex(r, 1e9, !1, s); s < a; s++)\n      if (i(this.from[s] + e, this.to[s] + e, this.value[s]) === !1)\n        return !1;\n  }\n  map(e, n) {\n    let r = [], i = [], s = [], a = -1, o = -1;\n    for (let l = 0; l < this.value.length; l++) {\n      let c = this.value[l], h = this.from[l] + e, f = this.to[l] + e, m, y;\n      if (h == f) {\n        let v = n.mapPos(h, c.startSide, c.mapMode);\n        if (v == null || (m = y = v, c.startSide != c.endSide && (y = n.mapPos(h, c.endSide), y < m)))\n          continue;\n      } else if (m = n.mapPos(h, c.startSide), y = n.mapPos(f, c.endSide), m > y || m == y && c.startSide > 0 && c.endSide <= 0)\n        continue;\n      (y - m || c.endSide - c.startSide) < 0 || (a < 0 && (a = m), c.point && (o = Math.max(o, y - m)), r.push(c), i.push(m - a), s.push(y - a));\n    }\n    return { mapped: r.length ? new Rd(i, s, r, o) : null, pos: a };\n  }\n}\nclass mt {\n  constructor(e, n, r, i) {\n    this.chunkPos = e, this.chunk = n, this.nextLayer = r, this.maxPoint = i;\n  }\n  /**\n  @internal\n  */\n  static create(e, n, r, i) {\n    return new mt(e, n, r, i);\n  }\n  /**\n  @internal\n  */\n  get length() {\n    let e = this.chunk.length - 1;\n    return e < 0 ? 0 : Math.max(this.chunkEnd(e), this.nextLayer.length);\n  }\n  /**\n  The number of ranges in the set.\n  */\n  get size() {\n    if (this.isEmpty)\n      return 0;\n    let e = this.nextLayer.size;\n    for (let n of this.chunk)\n      e += n.value.length;\n    return e;\n  }\n  /**\n  @internal\n  */\n  chunkEnd(e) {\n    return this.chunkPos[e] + this.chunk[e].length;\n  }\n  /**\n  Update the range set, optionally adding new ranges or filtering\n  out existing ones.\n  \n  (Note: The type parameter is just there as a kludge to work\n  around TypeScript variance issues that prevented `RangeSet<X>`\n  from being a subtype of `RangeSet<Y>` when `X` is a subtype of\n  `Y`.)\n  */\n  update(e) {\n    let { add: n = [], sort: r = !1, filterFrom: i = 0, filterTo: s = this.length } = e, a = e.filter;\n    if (n.length == 0 && !a)\n      return this;\n    if (r && (n = n.slice().sort($p)), this.isEmpty)\n      return n.length ? mt.of(n) : this;\n    let o = new Gw(this, null, -1).goto(0), l = 0, c = [], h = new Qi();\n    for (; o.value || l < n.length; )\n      if (l < n.length && (o.from - n[l].from || o.startSide - n[l].value.startSide) >= 0) {\n        let f = n[l++];\n        h.addInner(f.from, f.to, f.value) || c.push(f);\n      } else o.rangeIndex == 1 && o.chunkIndex < this.chunk.length && (l == n.length || this.chunkEnd(o.chunkIndex) < n[l].from) && (!a || i > this.chunkEnd(o.chunkIndex) || s < this.chunkPos[o.chunkIndex]) && h.addChunk(this.chunkPos[o.chunkIndex], this.chunk[o.chunkIndex]) ? o.nextChunk() : ((!a || i > o.to || s < o.from || a(o.from, o.to, o.value)) && (h.addInner(o.from, o.to, o.value) || c.push(Zp.create(o.from, o.to, o.value))), o.next());\n    return h.finishInner(this.nextLayer.isEmpty && !c.length ? mt.empty : this.nextLayer.update({ add: c, filter: a, filterFrom: i, filterTo: s }));\n  }\n  /**\n  Map this range set through a set of changes, return the new set.\n  */\n  map(e) {\n    if (e.empty || this.isEmpty)\n      return this;\n    let n = [], r = [], i = -1;\n    for (let a = 0; a < this.chunk.length; a++) {\n      let o = this.chunkPos[a], l = this.chunk[a], c = e.touchesRange(o, o + l.length);\n      if (c === !1)\n        i = Math.max(i, l.maxPoint), n.push(l), r.push(e.mapPos(o));\n      else if (c === !0) {\n        let { mapped: h, pos: f } = l.map(o, e);\n        h && (i = Math.max(i, h.maxPoint), n.push(h), r.push(f));\n      }\n    }\n    let s = this.nextLayer.map(e);\n    return n.length == 0 ? s : new mt(r, n, s || mt.empty, i);\n  }\n  /**\n  Iterate over the ranges that touch the region `from` to `to`,\n  calling `f` for each. There is no guarantee that the ranges will\n  be reported in any specific order. When the callback returns\n  `false`, iteration stops.\n  */\n  between(e, n, r) {\n    if (!this.isEmpty) {\n      for (let i = 0; i < this.chunk.length; i++) {\n        let s = this.chunkPos[i], a = this.chunk[i];\n        if (n >= s && e <= s + a.length && a.between(s, e - s, n - s, r) === !1)\n          return;\n      }\n      this.nextLayer.between(e, n, r);\n    }\n  }\n  /**\n  Iterate over the ranges in this set, in order, including all\n  ranges that end at or after `from`.\n  */\n  iter(e = 0) {\n    return Co.from([this]).goto(e);\n  }\n  /**\n  @internal\n  */\n  get isEmpty() {\n    return this.nextLayer == this;\n  }\n  /**\n  Iterate over the ranges in a collection of sets, in order,\n  starting from `from`.\n  */\n  static iter(e, n = 0) {\n    return Co.from(e).goto(n);\n  }\n  /**\n  Iterate over two groups of sets, calling methods on `comparator`\n  to notify it of possible differences.\n  */\n  static compare(e, n, r, i, s = -1) {\n    let a = e.filter((f) => f.maxPoint > 0 || !f.isEmpty && f.maxPoint >= s), o = n.filter((f) => f.maxPoint > 0 || !f.isEmpty && f.maxPoint >= s), l = kg(a, o, r), c = new Ka(a, l, s), h = new Ka(o, l, s);\n    r.iterGaps((f, m, y) => wg(c, f, h, m, y, i)), r.empty && r.length == 0 && wg(c, 0, h, 0, 0, i);\n  }\n  /**\n  Compare the contents of two groups of range sets, returning true\n  if they are equivalent in the given range.\n  */\n  static eq(e, n, r = 0, i) {\n    i == null && (i = 999999999);\n    let s = e.filter((h) => !h.isEmpty && n.indexOf(h) < 0), a = n.filter((h) => !h.isEmpty && e.indexOf(h) < 0);\n    if (s.length != a.length)\n      return !1;\n    if (!s.length)\n      return !0;\n    let o = kg(s, a), l = new Ka(s, o, 0).goto(r), c = new Ka(a, o, 0).goto(r);\n    for (; ; ) {\n      if (l.to != c.to || !Lp(l.active, c.active) || l.point && (!c.point || !l.point.eq(c.point)))\n        return !1;\n      if (l.to > i)\n        return !0;\n      l.next(), c.next();\n    }\n  }\n  /**\n  Iterate over a group of range sets at the same time, notifying\n  the iterator about the ranges covering every given piece of\n  content. Returns the open count (see\n  [`SpanIterator.span`](https://codemirror.net/6/docs/ref/#state.SpanIterator.span)) at the end\n  of the iteration.\n  */\n  static spans(e, n, r, i, s = -1) {\n    let a = new Ka(e, null, s).goto(n), o = n, l = a.openStart;\n    for (; ; ) {\n      let c = Math.min(a.to, r);\n      if (a.point) {\n        let h = a.activeForPoint(a.to), f = a.pointFrom < n ? h.length + 1 : a.point.startSide < 0 ? h.length : Math.min(h.length, l);\n        i.point(o, c, a.point, h, f, a.pointRank), l = Math.min(a.openEnd(c), h.length);\n      } else c > o && (i.span(o, c, a.active, l), l = a.openEnd(c));\n      if (a.to > r)\n        return l + (a.point && a.to > r ? 1 : 0);\n      o = a.to, a.next();\n    }\n  }\n  /**\n  Create a range set for the given range or array of ranges. By\n  default, this expects the ranges to be _sorted_ (by start\n  position and, if two start at the same position,\n  `value.startSide`). You can pass `true` as second argument to\n  cause the method to sort them.\n  */\n  static of(e, n = !1) {\n    let r = new Qi();\n    for (let i of e instanceof Zp ? [e] : n ? e8(e) : e)\n      r.add(i.from, i.to, i.value);\n    return r.finish();\n  }\n  /**\n  Join an array of range sets into a single set.\n  */\n  static join(e) {\n    if (!e.length)\n      return mt.empty;\n    let n = e[e.length - 1];\n    for (let r = e.length - 2; r >= 0; r--)\n      for (let i = e[r]; i != mt.empty; i = i.nextLayer)\n        n = new mt(i.chunkPos, i.chunk, n, Math.max(i.maxPoint, n.maxPoint));\n    return n;\n  }\n}\nmt.empty = /* @__PURE__ */ new mt([], [], null, -1);\nfunction e8(t) {\n  if (t.length > 1)\n    for (let e = t[0], n = 1; n < t.length; n++) {\n      let r = t[n];\n      if ($p(e, r) > 0)\n        return t.slice().sort($p);\n      e = r;\n    }\n  return t;\n}\nmt.empty.nextLayer = mt.empty;\nclass Qi {\n  finishChunk(e) {\n    this.chunks.push(new Rd(this.from, this.to, this.value, this.maxPoint)), this.chunkPos.push(this.chunkStart), this.chunkStart = -1, this.setMaxPoint = Math.max(this.setMaxPoint, this.maxPoint), this.maxPoint = -1, e && (this.from = [], this.to = [], this.value = []);\n  }\n  /**\n  Create an empty builder.\n  */\n  constructor() {\n    this.chunks = [], this.chunkPos = [], this.chunkStart = -1, this.last = null, this.lastFrom = -1e9, this.lastTo = -1e9, this.from = [], this.to = [], this.value = [], this.maxPoint = -1, this.setMaxPoint = -1, this.nextLayer = null;\n  }\n  /**\n  Add a range. Ranges should be added in sorted (by `from` and\n  `value.startSide`) order.\n  */\n  add(e, n, r) {\n    this.addInner(e, n, r) || (this.nextLayer || (this.nextLayer = new Qi())).add(e, n, r);\n  }\n  /**\n  @internal\n  */\n  addInner(e, n, r) {\n    let i = e - this.lastTo || r.startSide - this.last.endSide;\n    if (i <= 0 && (e - this.lastFrom || r.startSide - this.last.startSide) < 0)\n      throw new Error("Ranges must be added sorted by `from` position and `startSide`");\n    return i < 0 ? !1 : (this.from.length == 250 && this.finishChunk(!0), this.chunkStart < 0 && (this.chunkStart = e), this.from.push(e - this.chunkStart), this.to.push(n - this.chunkStart), this.last = r, this.lastFrom = e, this.lastTo = n, this.value.push(r), r.point && (this.maxPoint = Math.max(this.maxPoint, n - e)), !0);\n  }\n  /**\n  @internal\n  */\n  addChunk(e, n) {\n    if ((e - this.lastTo || n.value[0].startSide - this.last.endSide) < 0)\n      return !1;\n    this.from.length && this.finishChunk(!0), this.setMaxPoint = Math.max(this.setMaxPoint, n.maxPoint), this.chunks.push(n), this.chunkPos.push(e);\n    let r = n.value.length - 1;\n    return this.last = n.value[r], this.lastFrom = n.from[r] + e, this.lastTo = n.to[r] + e, !0;\n  }\n  /**\n  Finish the range set. Returns the new set. The builder can\'t be\n  used anymore after this has been called.\n  */\n  finish() {\n    return this.finishInner(mt.empty);\n  }\n  /**\n  @internal\n  */\n  finishInner(e) {\n    if (this.from.length && this.finishChunk(!1), this.chunks.length == 0)\n      return e;\n    let n = mt.create(this.chunkPos, this.chunks, this.nextLayer ? this.nextLayer.finishInner(e) : e, this.setMaxPoint);\n    return this.from = null, n;\n  }\n}\nfunction kg(t, e, n) {\n  let r = /* @__PURE__ */ new Map();\n  for (let s of t)\n    for (let a = 0; a < s.chunk.length; a++)\n      s.chunk[a].maxPoint <= 0 && r.set(s.chunk[a], s.chunkPos[a]);\n  let i = /* @__PURE__ */ new Set();\n  for (let s of e)\n    for (let a = 0; a < s.chunk.length; a++) {\n      let o = r.get(s.chunk[a]);\n      o != null && (n ? n.mapPos(o) : o) == s.chunkPos[a] && !n?.touchesRange(o, o + s.chunk[a].length) && i.add(s.chunk[a]);\n    }\n  return i;\n}\nclass Gw {\n  constructor(e, n, r, i = 0) {\n    this.layer = e, this.skip = n, this.minPoint = r, this.rank = i;\n  }\n  get startSide() {\n    return this.value ? this.value.startSide : 0;\n  }\n  get endSide() {\n    return this.value ? this.value.endSide : 0;\n  }\n  goto(e, n = -1e9) {\n    return this.chunkIndex = this.rangeIndex = 0, this.gotoInner(e, n, !1), this;\n  }\n  gotoInner(e, n, r) {\n    for (; this.chunkIndex < this.layer.chunk.length; ) {\n      let i = this.layer.chunk[this.chunkIndex];\n      if (!(this.skip && this.skip.has(i) || this.layer.chunkEnd(this.chunkIndex) < e || i.maxPoint < this.minPoint))\n        break;\n      this.chunkIndex++, r = !1;\n    }\n    if (this.chunkIndex < this.layer.chunk.length) {\n      let i = this.layer.chunk[this.chunkIndex].findIndex(e - this.layer.chunkPos[this.chunkIndex], n, !0);\n      (!r || this.rangeIndex < i) && this.setRangeIndex(i);\n    }\n    this.next();\n  }\n  forward(e, n) {\n    (this.to - e || this.endSide - n) < 0 && this.gotoInner(e, n, !0);\n  }\n  next() {\n    for (; ; )\n      if (this.chunkIndex == this.layer.chunk.length) {\n        this.from = this.to = 1e9, this.value = null;\n        break;\n      } else {\n        let e = this.layer.chunkPos[this.chunkIndex], n = this.layer.chunk[this.chunkIndex], r = e + n.from[this.rangeIndex];\n        if (this.from = r, this.to = e + n.to[this.rangeIndex], this.value = n.value[this.rangeIndex], this.setRangeIndex(this.rangeIndex + 1), this.minPoint < 0 || this.value.point && this.to - this.from >= this.minPoint)\n          break;\n      }\n  }\n  setRangeIndex(e) {\n    if (e == this.layer.chunk[this.chunkIndex].value.length) {\n      if (this.chunkIndex++, this.skip)\n        for (; this.chunkIndex < this.layer.chunk.length && this.skip.has(this.layer.chunk[this.chunkIndex]); )\n          this.chunkIndex++;\n      this.rangeIndex = 0;\n    } else\n      this.rangeIndex = e;\n  }\n  nextChunk() {\n    this.chunkIndex++, this.rangeIndex = 0, this.next();\n  }\n  compare(e) {\n    return this.from - e.from || this.startSide - e.startSide || this.rank - e.rank || this.to - e.to || this.endSide - e.endSide;\n  }\n}\nclass Co {\n  constructor(e) {\n    this.heap = e;\n  }\n  static from(e, n = null, r = -1) {\n    let i = [];\n    for (let s = 0; s < e.length; s++)\n      for (let a = e[s]; !a.isEmpty; a = a.nextLayer)\n        a.maxPoint >= r && i.push(new Gw(a, n, r, s));\n    return i.length == 1 ? i[0] : new Co(i);\n  }\n  get startSide() {\n    return this.value ? this.value.startSide : 0;\n  }\n  goto(e, n = -1e9) {\n    for (let r of this.heap)\n      r.goto(e, n);\n    for (let r = this.heap.length >> 1; r >= 0; r--)\n      _h(this.heap, r);\n    return this.next(), this;\n  }\n  forward(e, n) {\n    for (let r of this.heap)\n      r.forward(e, n);\n    for (let r = this.heap.length >> 1; r >= 0; r--)\n      _h(this.heap, r);\n    (this.to - e || this.value.endSide - n) < 0 && this.next();\n  }\n  next() {\n    if (this.heap.length == 0)\n      this.from = this.to = 1e9, this.value = null, this.rank = -1;\n    else {\n      let e = this.heap[0];\n      this.from = e.from, this.to = e.to, this.value = e.value, this.rank = e.rank, e.value && e.next(), _h(this.heap, 0);\n    }\n  }\n}\nfunction _h(t, e) {\n  for (let n = t[e]; ; ) {\n    let r = (e << 1) + 1;\n    if (r >= t.length)\n      break;\n    let i = t[r];\n    if (r + 1 < t.length && i.compare(t[r + 1]) >= 0 && (i = t[r + 1], r++), n.compare(i) < 0)\n      break;\n    t[r] = n, t[e] = i, e = r;\n  }\n}\nclass Ka {\n  constructor(e, n, r) {\n    this.minPoint = r, this.active = [], this.activeTo = [], this.activeRank = [], this.minActive = -1, this.point = null, this.pointFrom = 0, this.pointRank = 0, this.to = -1e9, this.endSide = 0, this.openStart = -1, this.cursor = Co.from(e, n, r);\n  }\n  goto(e, n = -1e9) {\n    return this.cursor.goto(e, n), this.active.length = this.activeTo.length = this.activeRank.length = 0, this.minActive = -1, this.to = e, this.endSide = n, this.openStart = -1, this.next(), this;\n  }\n  forward(e, n) {\n    for (; this.minActive > -1 && (this.activeTo[this.minActive] - e || this.active[this.minActive].endSide - n) < 0; )\n      this.removeActive(this.minActive);\n    this.cursor.forward(e, n);\n  }\n  removeActive(e) {\n    Fl(this.active, e), Fl(this.activeTo, e), Fl(this.activeRank, e), this.minActive = Cg(this.active, this.activeTo);\n  }\n  addActive(e) {\n    let n = 0, { value: r, to: i, rank: s } = this.cursor;\n    for (; n < this.activeRank.length && (s - this.activeRank[n] || i - this.activeTo[n]) > 0; )\n      n++;\n    Bl(this.active, n, r), Bl(this.activeTo, n, i), Bl(this.activeRank, n, s), e && Bl(e, n, this.cursor.from), this.minActive = Cg(this.active, this.activeTo);\n  }\n  // After calling this, if `this.point` != null, the next range is a\n  // point. Otherwise, it\'s a regular range, covered by `this.active`.\n  next() {\n    let e = this.to, n = this.point;\n    this.point = null;\n    let r = this.openStart < 0 ? [] : null;\n    for (; ; ) {\n      let i = this.minActive;\n      if (i > -1 && (this.activeTo[i] - this.cursor.from || this.active[i].endSide - this.cursor.startSide) < 0) {\n        if (this.activeTo[i] > e) {\n          this.to = this.activeTo[i], this.endSide = this.active[i].endSide;\n          break;\n        }\n        this.removeActive(i), r && Fl(r, i);\n      } else if (this.cursor.value)\n        if (this.cursor.from > e) {\n          this.to = this.cursor.from, this.endSide = this.cursor.startSide;\n          break;\n        } else {\n          let s = this.cursor.value;\n          if (!s.point)\n            this.addActive(r), this.cursor.next();\n          else if (n && this.cursor.to == this.to && this.cursor.from < this.cursor.to)\n            this.cursor.next();\n          else {\n            this.point = s, this.pointFrom = this.cursor.from, this.pointRank = this.cursor.rank, this.to = this.cursor.to, this.endSide = s.endSide, this.cursor.next(), this.forward(this.to, this.endSide);\n            break;\n          }\n        }\n      else {\n        this.to = this.endSide = 1e9;\n        break;\n      }\n    }\n    if (r) {\n      this.openStart = 0;\n      for (let i = r.length - 1; i >= 0 && r[i] < e; i--)\n        this.openStart++;\n    }\n  }\n  activeForPoint(e) {\n    if (!this.active.length)\n      return this.active;\n    let n = [];\n    for (let r = this.active.length - 1; r >= 0 && !(this.activeRank[r] < this.pointRank); r--)\n      (this.activeTo[r] > e || this.activeTo[r] == e && this.active[r].endSide >= this.point.endSide) && n.push(this.active[r]);\n    return n.reverse();\n  }\n  openEnd(e) {\n    let n = 0;\n    for (let r = this.activeTo.length - 1; r >= 0 && this.activeTo[r] > e; r--)\n      n++;\n    return n;\n  }\n}\nfunction wg(t, e, n, r, i, s) {\n  t.goto(e), n.goto(r);\n  let a = r + i, o = r, l = r - e;\n  for (; ; ) {\n    let c = t.to + l - n.to, h = c || t.endSide - n.endSide, f = h < 0 ? t.to + l : n.to, m = Math.min(f, a);\n    if (t.point || n.point ? t.point && n.point && (t.point == n.point || t.point.eq(n.point)) && Lp(t.activeForPoint(t.to), n.activeForPoint(n.to)) || s.comparePoint(o, m, t.point, n.point) : m > o && !Lp(t.active, n.active) && s.compareRange(o, m, t.active, n.active), f > a)\n      break;\n    (c || t.openEnd != n.openEnd) && s.boundChange && s.boundChange(f), o = f, h <= 0 && t.next(), h >= 0 && n.next();\n  }\n}\nfunction Lp(t, e) {\n  if (t.length != e.length)\n    return !1;\n  for (let n = 0; n < t.length; n++)\n    if (t[n] != e[n] && !t[n].eq(e[n]))\n      return !1;\n  return !0;\n}\nfunction Fl(t, e) {\n  for (let n = e, r = t.length - 1; n < r; n++)\n    t[n] = t[n + 1];\n  t.pop();\n}\nfunction Bl(t, e, n) {\n  for (let r = t.length - 1; r >= e; r--)\n    t[r + 1] = t[r];\n  t[e] = n;\n}\nfunction Cg(t, e) {\n  let n = -1, r = 1e9;\n  for (let i = 0; i < e.length; i++)\n    (e[i] - r || t[i].endSide - t[n].endSide) < 0 && (n = i, r = e[i]);\n  return n;\n}\nfunction Bc(t, e, n = t.length) {\n  let r = 0;\n  for (let i = 0; i < n && i < t.length; )\n    t.charCodeAt(i) == 9 ? (r += e - r % e, i++) : (r++, i = kn(t, i));\n  return r;\n}\nfunction t8(t, e, n, r) {\n  for (let i = 0, s = 0; ; ) {\n    if (s >= e)\n      return i;\n    if (i == t.length)\n      break;\n    s += t.charCodeAt(i) == 9 ? n - s % n : 1, i = kn(t, i);\n  }\n  return r === !0 ? -1 : t.length;\n}\nconst Ip = "ͼ", Sg = typeof Symbol > "u" ? "__" + Ip : Symbol.for(Ip), Np = typeof Symbol > "u" ? "__styleSet" + Math.floor(Math.random() * 1e8) : Symbol("styleSet"), Ag = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : {};\nclass Ji {\n  // :: (Object<Style>, ?{finish: ?(string) → string})\n  // Create a style module from the given spec.\n  //\n  // When `finish` is given, it is called on regular (non-`@`)\n  // selectors (after `&` expansion) to compute the final selector.\n  constructor(e, n) {\n    this.rules = [];\n    let { finish: r } = n || {};\n    function i(a) {\n      return /^@/.test(a) ? [a] : a.split(/,\\s*/);\n    }\n    function s(a, o, l, c) {\n      let h = [], f = /^@(\\w+)\\b/.exec(a[0]), m = f && f[1] == "keyframes";\n      if (f && o == null) return l.push(a[0] + ";");\n      for (let y in o) {\n        let v = o[y];\n        if (/&/.test(y))\n          s(\n            y.split(/,\\s*/).map((C) => a.map((S) => C.replace(/&/, S))).reduce((C, S) => C.concat(S)),\n            v,\n            l\n          );\n        else if (v && typeof v == "object") {\n          if (!f) throw new RangeError("The value of a property (" + y + ") should be a primitive value.");\n          s(i(y), v, h, m);\n        } else v != null && h.push(y.replace(/_.*/, "").replace(/[A-Z]/g, (C) => "-" + C.toLowerCase()) + ": " + v + ";");\n      }\n      (h.length || m) && l.push((r && !f && !c ? a.map(r) : a).join(", ") + " {" + h.join(" ") + "}");\n    }\n    for (let a in e) s(i(a), e[a], this.rules);\n  }\n  // :: () → string\n  // Returns a string containing the module\'s CSS rules.\n  getRules() {\n    return this.rules.join(`\n`);\n  }\n  // :: () → string\n  // Generate a new unique CSS class name.\n  static newName() {\n    let e = Ag[Sg] || 1;\n    return Ag[Sg] = e + 1, Ip + e.toString(36);\n  }\n  // :: (union<Document, ShadowRoot>, union<[StyleModule], StyleModule>, ?{nonce: ?string})\n  //\n  // Mount the given set of modules in the given DOM root, which ensures\n  // that the CSS rules defined by the module are available in that\n  // context.\n  //\n  // Rules are only added to the document once per root.\n  //\n  // Rule order will follow the order of the modules, so that rules from\n  // modules later in the array take precedence of those from earlier\n  // modules. If you call this function multiple times for the same root\n  // in a way that changes the order of already mounted modules, the old\n  // order will be changed.\n  //\n  // If a Content Security Policy nonce is provided, it is added to\n  // the `<style>` tag generated by the library.\n  static mount(e, n, r) {\n    let i = e[Np], s = r && r.nonce;\n    i ? s && i.setNonce(s) : i = new n8(e, s), i.mount(Array.isArray(n) ? n : [n], e);\n  }\n}\nlet Dg = /* @__PURE__ */ new Map();\nclass n8 {\n  constructor(e, n) {\n    let r = e.ownerDocument || e, i = r.defaultView;\n    if (!e.head && e.adoptedStyleSheets && i.CSSStyleSheet) {\n      let s = Dg.get(r);\n      if (s) return e[Np] = s;\n      this.sheet = new i.CSSStyleSheet(), Dg.set(r, this);\n    } else\n      this.styleTag = r.createElement("style"), n && this.styleTag.setAttribute("nonce", n);\n    this.modules = [], e[Np] = this;\n  }\n  mount(e, n) {\n    let r = this.sheet, i = 0, s = 0;\n    for (let a = 0; a < e.length; a++) {\n      let o = e[a], l = this.modules.indexOf(o);\n      if (l < s && l > -1 && (this.modules.splice(l, 1), s--, l = -1), l == -1) {\n        if (this.modules.splice(s++, 0, o), r) for (let c = 0; c < o.rules.length; c++)\n          r.insertRule(o.rules[c], i++);\n      } else {\n        for (; s < l; ) i += this.modules[s++].rules.length;\n        i += o.rules.length, s++;\n      }\n    }\n    if (r)\n      n.adoptedStyleSheets.indexOf(this.sheet) < 0 && (n.adoptedStyleSheets = [this.sheet, ...n.adoptedStyleSheets]);\n    else {\n      let a = "";\n      for (let l = 0; l < this.modules.length; l++)\n        a += this.modules[l].getRules() + `\n`;\n      this.styleTag.textContent = a;\n      let o = n.head || n;\n      this.styleTag.parentNode != o && o.insertBefore(this.styleTag, o.firstChild);\n    }\n  }\n  setNonce(e) {\n    this.styleTag && this.styleTag.getAttribute("nonce") != e && this.styleTag.setAttribute("nonce", e);\n  }\n}\nvar es = {\n  8: "Backspace",\n  9: "Tab",\n  10: "Enter",\n  12: "NumLock",\n  13: "Enter",\n  16: "Shift",\n  17: "Control",\n  18: "Alt",\n  20: "CapsLock",\n  27: "Escape",\n  32: " ",\n  33: "PageUp",\n  34: "PageDown",\n  35: "End",\n  36: "Home",\n  37: "ArrowLeft",\n  38: "ArrowUp",\n  39: "ArrowRight",\n  40: "ArrowDown",\n  44: "PrintScreen",\n  45: "Insert",\n  46: "Delete",\n  59: ";",\n  61: "=",\n  91: "Meta",\n  92: "Meta",\n  106: "*",\n  107: "+",\n  108: ",",\n  109: "-",\n  110: ".",\n  111: "/",\n  144: "NumLock",\n  145: "ScrollLock",\n  160: "Shift",\n  161: "Shift",\n  162: "Control",\n  163: "Control",\n  164: "Alt",\n  165: "Alt",\n  173: "-",\n  186: ";",\n  187: "=",\n  188: ",",\n  189: "-",\n  190: ".",\n  191: "/",\n  192: "`",\n  219: "[",\n  220: "\\\\",\n  221: "]",\n  222: "\'"\n}, So = {\n  48: ")",\n  49: "!",\n  50: "@",\n  51: "#",\n  52: "$",\n  53: "%",\n  54: "^",\n  55: "&",\n  56: "*",\n  57: "(",\n  59: ":",\n  61: "+",\n  173: "_",\n  186: ":",\n  187: "+",\n  188: "<",\n  189: "_",\n  190: ">",\n  191: "?",\n  192: "~",\n  219: "{",\n  220: "|",\n  221: "}",\n  222: \'"\'\n}, r8 = typeof navigator < "u" && /Mac/.test(navigator.platform), i8 = typeof navigator < "u" && /MSIE \\d|Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent);\nfor (var xn = 0; xn < 10; xn++) es[48 + xn] = es[96 + xn] = String(xn);\nfor (var xn = 1; xn <= 24; xn++) es[xn + 111] = "F" + xn;\nfor (var xn = 65; xn <= 90; xn++)\n  es[xn] = String.fromCharCode(xn + 32), So[xn] = String.fromCharCode(xn);\nfor (var Zh in es) So.hasOwnProperty(Zh) || (So[Zh] = es[Zh]);\nfunction s8(t) {\n  var e = r8 && t.metaKey && t.shiftKey && !t.ctrlKey && !t.altKey || i8 && t.shiftKey && t.key && t.key.length == 1 || t.key == "Unidentified", n = !e && t.key || (t.shiftKey ? So : es)[t.keyCode] || t.key || "Unidentified";\n  return n == "Esc" && (n = "Escape"), n == "Del" && (n = "Delete"), n == "Left" && (n = "ArrowLeft"), n == "Up" && (n = "ArrowUp"), n == "Right" && (n = "ArrowRight"), n == "Down" && (n = "ArrowDown"), n;\n}\nfunction Ao(t) {\n  let e;\n  return t.nodeType == 11 ? e = t.getSelection ? t : t.ownerDocument : e = t, e.getSelection();\n}\nfunction Vp(t, e) {\n  return e ? t == e || t.contains(e.nodeType != 1 ? e.parentNode : e) : !1;\n}\nfunction iu(t, e) {\n  if (!e.anchorNode)\n    return !1;\n  try {\n    return Vp(t, e.anchorNode);\n  } catch {\n    return !1;\n  }\n}\nfunction Do(t) {\n  return t.nodeType == 3 ? Ts(t, 0, t.nodeValue.length).getClientRects() : t.nodeType == 1 ? t.getClientRects() : [];\n}\nfunction fo(t, e, n, r) {\n  return n ? Pg(t, e, n, r, -1) || Pg(t, e, n, r, 1) : !1;\n}\nfunction Qs(t) {\n  for (var e = 0; ; e++)\n    if (t = t.previousSibling, !t)\n      return e;\n}\nfunction Au(t) {\n  return t.nodeType == 1 && /^(DIV|P|LI|UL|OL|BLOCKQUOTE|DD|DT|H\\d|SECTION|PRE)$/.test(t.nodeName);\n}\nfunction Pg(t, e, n, r, i) {\n  for (; ; ) {\n    if (t == n && e == r)\n      return !0;\n    if (e == (i < 0 ? 0 : gi(t))) {\n      if (t.nodeName == "DIV")\n        return !1;\n      let s = t.parentNode;\n      if (!s || s.nodeType != 1)\n        return !1;\n      e = Qs(t) + (i < 0 ? 0 : 1), t = s;\n    } else if (t.nodeType == 1) {\n      if (t = t.childNodes[e + (i < 0 ? -1 : 0)], t.nodeType == 1 && t.contentEditable == "false")\n        return !1;\n      e = i < 0 ? gi(t) : 0;\n    } else\n      return !1;\n  }\n}\nfunction gi(t) {\n  return t.nodeType == 3 ? t.nodeValue.length : t.childNodes.length;\n}\nfunction Mc(t, e) {\n  let n = e ? t.left : t.right;\n  return { left: n, right: n, top: t.top, bottom: t.bottom };\n}\nfunction a8(t) {\n  let e = t.visualViewport;\n  return e ? {\n    left: 0,\n    right: e.width,\n    top: 0,\n    bottom: e.height\n  } : {\n    left: 0,\n    right: t.innerWidth,\n    top: 0,\n    bottom: t.innerHeight\n  };\n}\nfunction zw(t, e) {\n  let n = e.width / t.offsetWidth, r = e.height / t.offsetHeight;\n  return (n > 0.995 && n < 1.005 || !isFinite(n) || Math.abs(e.width - t.offsetWidth) < 1) && (n = 1), (r > 0.995 && r < 1.005 || !isFinite(r) || Math.abs(e.height - t.offsetHeight) < 1) && (r = 1), { scaleX: n, scaleY: r };\n}\nfunction o8(t, e, n, r, i, s, a, o) {\n  let l = t.ownerDocument, c = l.defaultView || window;\n  for (let h = t, f = !1; h && !f; )\n    if (h.nodeType == 1) {\n      let m, y = h == l.body, v = 1, C = 1;\n      if (y)\n        m = a8(c);\n      else {\n        if (/^(fixed|sticky)$/.test(getComputedStyle(h).position) && (f = !0), h.scrollHeight <= h.clientHeight && h.scrollWidth <= h.clientWidth) {\n          h = h.assignedSlot || h.parentNode;\n          continue;\n        }\n        let $ = h.getBoundingClientRect();\n        ({ scaleX: v, scaleY: C } = zw(h, $)), m = {\n          left: $.left,\n          right: $.left + h.clientWidth * v,\n          top: $.top,\n          bottom: $.top + h.clientHeight * C\n        };\n      }\n      let S = 0, M = 0;\n      if (i == "nearest")\n        e.top < m.top ? (M = -(m.top - e.top + a), n > 0 && e.bottom > m.bottom + M && (M = e.bottom - m.bottom + M + a)) : e.bottom > m.bottom && (M = e.bottom - m.bottom + a, n < 0 && e.top - M < m.top && (M = -(m.top + M - e.top + a)));\n      else {\n        let $ = e.bottom - e.top, U = m.bottom - m.top;\n        M = (i == "center" && $ <= U ? e.top + $ / 2 - U / 2 : i == "start" || i == "center" && n < 0 ? e.top - a : e.bottom - U + a) - m.top;\n      }\n      if (r == "nearest" ? e.left < m.left ? (S = -(m.left - e.left + s), n > 0 && e.right > m.right + S && (S = e.right - m.right + S + s)) : e.right > m.right && (S = e.right - m.right + s, n < 0 && e.left < m.left + S && (S = -(m.left + S - e.left + s))) : S = (r == "center" ? e.left + (e.right - e.left) / 2 - (m.right - m.left) / 2 : r == "start" == o ? e.left - s : e.right - (m.right - m.left) + s) - m.left, S || M)\n        if (y)\n          c.scrollBy(S, M);\n        else {\n          let $ = 0, U = 0;\n          if (M) {\n            let R = h.scrollTop;\n            h.scrollTop += M / C, U = (h.scrollTop - R) * C;\n          }\n          if (S) {\n            let R = h.scrollLeft;\n            h.scrollLeft += S / v, $ = (h.scrollLeft - R) * v;\n          }\n          e = {\n            left: e.left - $,\n            top: e.top - U,\n            right: e.right - $,\n            bottom: e.bottom - U\n          }, $ && Math.abs($ - S) < 1 && (r = "nearest"), U && Math.abs(U - M) < 1 && (i = "nearest");\n        }\n      if (y)\n        break;\n      h = h.assignedSlot || h.parentNode;\n    } else if (h.nodeType == 11)\n      h = h.host;\n    else\n      break;\n}\nfunction l8(t) {\n  let e = t.ownerDocument, n, r;\n  for (let i = t.parentNode; i && !(i == e.body || n && r); )\n    if (i.nodeType == 1)\n      !r && i.scrollHeight > i.clientHeight && (r = i), !n && i.scrollWidth > i.clientWidth && (n = i), i = i.assignedSlot || i.parentNode;\n    else if (i.nodeType == 11)\n      i = i.host;\n    else\n      break;\n  return { x: n, y: r };\n}\nclass u8 {\n  constructor() {\n    this.anchorNode = null, this.anchorOffset = 0, this.focusNode = null, this.focusOffset = 0;\n  }\n  eq(e) {\n    return this.anchorNode == e.anchorNode && this.anchorOffset == e.anchorOffset && this.focusNode == e.focusNode && this.focusOffset == e.focusOffset;\n  }\n  setRange(e) {\n    let { anchorNode: n, focusNode: r } = e;\n    this.set(n, Math.min(e.anchorOffset, n ? gi(n) : 0), r, Math.min(e.focusOffset, r ? gi(r) : 0));\n  }\n  set(e, n, r, i) {\n    this.anchorNode = e, this.anchorOffset = n, this.focusNode = r, this.focusOffset = i;\n  }\n}\nlet Us = null;\nfunction Hw(t) {\n  if (t.setActive)\n    return t.setActive();\n  if (Us)\n    return t.focus(Us);\n  let e = [];\n  for (let n = t; n && (e.push(n, n.scrollTop, n.scrollLeft), n != n.ownerDocument); n = n.parentNode)\n    ;\n  if (t.focus(Us == null ? {\n    get preventScroll() {\n      return Us = { preventScroll: !0 }, !0;\n    }\n  } : void 0), !Us) {\n    Us = !1;\n    for (let n = 0; n < e.length; ) {\n      let r = e[n++], i = e[n++], s = e[n++];\n      r.scrollTop != i && (r.scrollTop = i), r.scrollLeft != s && (r.scrollLeft = s);\n    }\n  }\n}\nlet Eg;\nfunction Ts(t, e, n = e) {\n  let r = Eg || (Eg = document.createRange());\n  return r.setEnd(t, n), r.setStart(t, e), r;\n}\nfunction sa(t, e, n, r) {\n  let i = { key: e, code: e, keyCode: n, which: n, cancelable: !0 };\n  r && ({ altKey: i.altKey, ctrlKey: i.ctrlKey, shiftKey: i.shiftKey, metaKey: i.metaKey } = r);\n  let s = new KeyboardEvent("keydown", i);\n  s.synthetic = !0, t.dispatchEvent(s);\n  let a = new KeyboardEvent("keyup", i);\n  return a.synthetic = !0, t.dispatchEvent(a), s.defaultPrevented || a.defaultPrevented;\n}\nfunction c8(t) {\n  for (; t; ) {\n    if (t && (t.nodeType == 9 || t.nodeType == 11 && t.host))\n      return t;\n    t = t.assignedSlot || t.parentNode;\n  }\n  return null;\n}\nfunction Yw(t) {\n  for (; t.attributes.length; )\n    t.removeAttributeNode(t.attributes[0]);\n}\nfunction h8(t, e) {\n  let n = e.focusNode, r = e.focusOffset;\n  if (!n || e.anchorNode != n || e.anchorOffset != r)\n    return !1;\n  for (r = Math.min(r, gi(n)); ; )\n    if (r) {\n      if (n.nodeType != 1)\n        return !1;\n      let i = n.childNodes[r - 1];\n      i.contentEditable == "false" ? r-- : (n = i, r = gi(n));\n    } else {\n      if (n == t)\n        return !0;\n      r = Qs(n), n = n.parentNode;\n    }\n}\nfunction Kw(t) {\n  return t.scrollTop > Math.max(1, t.scrollHeight - t.clientHeight - 4);\n}\nfunction Jw(t, e) {\n  for (let n = t, r = e; ; ) {\n    if (n.nodeType == 3 && r > 0)\n      return { node: n, offset: r };\n    if (n.nodeType == 1 && r > 0) {\n      if (n.contentEditable == "false")\n        return null;\n      n = n.childNodes[r - 1], r = gi(n);\n    } else if (n.parentNode && !Au(n))\n      r = Qs(n), n = n.parentNode;\n    else\n      return null;\n  }\n}\nfunction eC(t, e) {\n  for (let n = t, r = e; ; ) {\n    if (n.nodeType == 3 && r < n.nodeValue.length)\n      return { node: n, offset: r };\n    if (n.nodeType == 1 && r < n.childNodes.length) {\n      if (n.contentEditable == "false")\n        return null;\n      n = n.childNodes[r], r = 0;\n    } else if (n.parentNode && !Au(n))\n      r = Qs(n) + 1, n = n.parentNode;\n    else\n      return null;\n  }\n}\nclass Pn {\n  constructor(e, n, r = !0) {\n    this.node = e, this.offset = n, this.precise = r;\n  }\n  static before(e, n) {\n    return new Pn(e.parentNode, Qs(e), n);\n  }\n  static after(e, n) {\n    return new Pn(e.parentNode, Qs(e) + 1, n);\n  }\n}\nconst _d = [];\nclass At {\n  constructor() {\n    this.parent = null, this.dom = null, this.flags = 2;\n  }\n  get overrideDOMText() {\n    return null;\n  }\n  get posAtStart() {\n    return this.parent ? this.parent.posBefore(this) : 0;\n  }\n  get posAtEnd() {\n    return this.posAtStart + this.length;\n  }\n  posBefore(e) {\n    let n = this.posAtStart;\n    for (let r of this.children) {\n      if (r == e)\n        return n;\n      n += r.length + r.breakAfter;\n    }\n    throw new RangeError("Invalid child in posBefore");\n  }\n  posAfter(e) {\n    return this.posBefore(e) + e.length;\n  }\n  sync(e, n) {\n    if (this.flags & 2) {\n      let r = this.dom, i = null, s;\n      for (let a of this.children) {\n        if (a.flags & 7) {\n          if (!a.dom && (s = i ? i.nextSibling : r.firstChild)) {\n            let o = At.get(s);\n            (!o || !o.parent && o.canReuseDOM(a)) && a.reuseDOM(s);\n          }\n          a.sync(e, n), a.flags &= -8;\n        }\n        if (s = i ? i.nextSibling : r.firstChild, n && !n.written && n.node == r && s != a.dom && (n.written = !0), a.dom.parentNode == r)\n          for (; s && s != a.dom; )\n            s = Fg(s);\n        else\n          r.insertBefore(a.dom, s);\n        i = a.dom;\n      }\n      for (s = i ? i.nextSibling : r.firstChild, s && n && n.node == r && (n.written = !0); s; )\n        s = Fg(s);\n    } else if (this.flags & 1)\n      for (let r of this.children)\n        r.flags & 7 && (r.sync(e, n), r.flags &= -8);\n  }\n  reuseDOM(e) {\n  }\n  localPosFromDOM(e, n) {\n    let r;\n    if (e == this.dom)\n      r = this.dom.childNodes[n];\n    else {\n      let i = gi(e) == 0 ? 0 : n == 0 ? -1 : 1;\n      for (; ; ) {\n        let s = e.parentNode;\n        if (s == this.dom)\n          break;\n        i == 0 && s.firstChild != s.lastChild && (e == s.firstChild ? i = -1 : i = 1), e = s;\n      }\n      i < 0 ? r = e : r = e.nextSibling;\n    }\n    if (r == this.dom.firstChild)\n      return 0;\n    for (; r && !At.get(r); )\n      r = r.nextSibling;\n    if (!r)\n      return this.length;\n    for (let i = 0, s = 0; ; i++) {\n      let a = this.children[i];\n      if (a.dom == r)\n        return s;\n      s += a.length + a.breakAfter;\n    }\n  }\n  domBoundsAround(e, n, r = 0) {\n    let i = -1, s = -1, a = -1, o = -1;\n    for (let l = 0, c = r, h = r; l < this.children.length; l++) {\n      let f = this.children[l], m = c + f.length;\n      if (c < e && m > n)\n        return f.domBoundsAround(e, n, c);\n      if (m >= e && i == -1 && (i = l, s = c), c > n && f.dom.parentNode == this.dom) {\n        a = l, o = h;\n        break;\n      }\n      h = m, c = m + f.breakAfter;\n    }\n    return {\n      from: s,\n      to: o < 0 ? r + this.length : o,\n      startDOM: (i ? this.children[i - 1].dom.nextSibling : null) || this.dom.firstChild,\n      endDOM: a < this.children.length && a >= 0 ? this.children[a].dom : null\n    };\n  }\n  markDirty(e = !1) {\n    this.flags |= 2, this.markParentsDirty(e);\n  }\n  markParentsDirty(e) {\n    for (let n = this.parent; n; n = n.parent) {\n      if (e && (n.flags |= 2), n.flags & 1)\n        return;\n      n.flags |= 1, e = !1;\n    }\n  }\n  setParent(e) {\n    this.parent != e && (this.parent = e, this.flags & 7 && this.markParentsDirty(!0));\n  }\n  setDOM(e) {\n    this.dom != e && (this.dom && (this.dom.cmView = null), this.dom = e, e.cmView = this);\n  }\n  get rootView() {\n    for (let e = this; ; ) {\n      let n = e.parent;\n      if (!n)\n        return e;\n      e = n;\n    }\n  }\n  replaceChildren(e, n, r = _d) {\n    this.markDirty();\n    for (let i = e; i < n; i++) {\n      let s = this.children[i];\n      s.parent == this && r.indexOf(s) < 0 && s.destroy();\n    }\n    r.length < 250 ? this.children.splice(e, n - e, ...r) : this.children = [].concat(this.children.slice(0, e), r, this.children.slice(n));\n    for (let i = 0; i < r.length; i++)\n      r[i].setParent(this);\n  }\n  ignoreMutation(e) {\n    return !1;\n  }\n  ignoreEvent(e) {\n    return !1;\n  }\n  childCursor(e = this.length) {\n    return new tC(this.children, e, this.children.length);\n  }\n  childPos(e, n = 1) {\n    return this.childCursor().findPos(e, n);\n  }\n  toString() {\n    let e = this.constructor.name.replace("View", "");\n    return e + (this.children.length ? "(" + this.children.join() + ")" : this.length ? "[" + (e == "Text" ? this.text : this.length) + "]" : "") + (this.breakAfter ? "#" : "");\n  }\n  static get(e) {\n    return e.cmView;\n  }\n  get isEditable() {\n    return !0;\n  }\n  get isWidget() {\n    return !1;\n  }\n  get isHidden() {\n    return !1;\n  }\n  merge(e, n, r, i, s, a) {\n    return !1;\n  }\n  become(e) {\n    return !1;\n  }\n  canReuseDOM(e) {\n    return e.constructor == this.constructor && !((this.flags | e.flags) & 8);\n  }\n  // When this is a zero-length view with a side, this should return a\n  // number <= 0 to indicate it is before its position, or a\n  // number > 0 when after its position.\n  getSide() {\n    return 0;\n  }\n  destroy() {\n    for (let e of this.children)\n      e.parent == this && e.destroy();\n    this.parent = null;\n  }\n}\nAt.prototype.breakAfter = 0;\nfunction Fg(t) {\n  let e = t.nextSibling;\n  return t.parentNode.removeChild(t), e;\n}\nclass tC {\n  constructor(e, n, r) {\n    this.children = e, this.pos = n, this.i = r, this.off = 0;\n  }\n  findPos(e, n = 1) {\n    for (; ; ) {\n      if (e > this.pos || e == this.pos && (n > 0 || this.i == 0 || this.children[this.i - 1].breakAfter))\n        return this.off = e - this.pos, this;\n      let r = this.children[--this.i];\n      this.pos -= r.length + r.breakAfter;\n    }\n  }\n}\nfunction nC(t, e, n, r, i, s, a, o, l) {\n  let { children: c } = t, h = c.length ? c[e] : null, f = s.length ? s[s.length - 1] : null, m = f ? f.breakAfter : a;\n  if (!(e == r && h && !a && !m && s.length < 2 && h.merge(n, i, s.length ? f : null, n == 0, o, l))) {\n    if (r < c.length) {\n      let y = c[r];\n      y && (i < y.length || y.breakAfter && f?.breakAfter) ? (e == r && (y = y.split(i), i = 0), !m && f && y.merge(0, i, f, !0, 0, l) ? s[s.length - 1] = y : ((i || y.children.length && !y.children[0].length) && y.merge(0, i, null, !1, 0, l), s.push(y))) : y?.breakAfter && (f ? f.breakAfter = 1 : a = 1), r++;\n    }\n    for (h && (h.breakAfter = a, n > 0 && (!a && s.length && h.merge(n, h.length, s[0], !1, o, 0) ? h.breakAfter = s.shift().breakAfter : (n < h.length || h.children.length && h.children[h.children.length - 1].length == 0) && h.merge(n, h.length, null, !1, o, 0), e++)); e < r && s.length; )\n      if (c[r - 1].become(s[s.length - 1]))\n        r--, s.pop(), l = s.length ? 0 : o;\n      else if (c[e].become(s[0]))\n        e++, s.shift(), o = s.length ? 0 : l;\n      else\n        break;\n    !s.length && e && r < c.length && !c[e - 1].breakAfter && c[r].merge(0, 0, c[e - 1], !1, o, l) && e--, (e < r || s.length) && t.replaceChildren(e, r, s);\n  }\n}\nfunction rC(t, e, n, r, i, s) {\n  let a = t.childCursor(), { i: o, off: l } = a.findPos(n, 1), { i: c, off: h } = a.findPos(e, -1), f = e - n;\n  for (let m of r)\n    f += m.length;\n  t.length += f, nC(t, c, h, o, l, r, 0, i, s);\n}\nlet Un = typeof navigator < "u" ? navigator : { userAgent: "", vendor: "", platform: "" }, Xp = typeof document < "u" ? document : { documentElement: { style: {} } };\nconst Wp = /* @__PURE__ */ /Edge\\/(\\d+)/.exec(Un.userAgent), iC = /* @__PURE__ */ /MSIE \\d/.test(Un.userAgent), Up = /* @__PURE__ */ /Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(Un.userAgent), Qc = !!(iC || Up || Wp), Bg = !Qc && /* @__PURE__ */ /gecko\\/(\\d+)/i.test(Un.userAgent), $h = !Qc && /* @__PURE__ */ /Chrome\\/(\\d+)/.exec(Un.userAgent), Mg = "webkitFontSmoothing" in Xp.documentElement.style, sC = !Qc && /* @__PURE__ */ /Apple Computer/.test(Un.vendor), Qg = sC && (/* @__PURE__ */ /Mobile\\/\\w+/.test(Un.userAgent) || Un.maxTouchPoints > 2);\nvar ke = {\n  mac: Qg || /* @__PURE__ */ /Mac/.test(Un.platform),\n  windows: /* @__PURE__ */ /Win/.test(Un.platform),\n  linux: /* @__PURE__ */ /Linux|X11/.test(Un.platform),\n  ie: Qc,\n  ie_version: iC ? Xp.documentMode || 6 : Up ? +Up[1] : Wp ? +Wp[1] : 0,\n  gecko: Bg,\n  gecko_version: Bg ? +(/* @__PURE__ */ /Firefox\\/(\\d+)/.exec(Un.userAgent) || [0, 0])[1] : 0,\n  chrome: !!$h,\n  chrome_version: $h ? +$h[1] : 0,\n  ios: Qg,\n  android: /* @__PURE__ */ /Android\\b/.test(Un.userAgent),\n  webkit: Mg,\n  safari: sC,\n  webkit_version: Mg ? +(/* @__PURE__ */ /\\bAppleWebKit\\/(\\d+)/.exec(Un.userAgent) || [0, 0])[1] : 0,\n  tabSize: Xp.documentElement.style.tabSize != null ? "tab-size" : "-moz-tab-size"\n};\nconst p8 = 256;\nclass Gr extends At {\n  constructor(e) {\n    super(), this.text = e;\n  }\n  get length() {\n    return this.text.length;\n  }\n  createDOM(e) {\n    this.setDOM(e || document.createTextNode(this.text));\n  }\n  sync(e, n) {\n    this.dom || this.createDOM(), this.dom.nodeValue != this.text && (n && n.node == this.dom && (n.written = !0), this.dom.nodeValue = this.text);\n  }\n  reuseDOM(e) {\n    e.nodeType == 3 && this.createDOM(e);\n  }\n  merge(e, n, r) {\n    return this.flags & 8 || r && (!(r instanceof Gr) || this.length - (n - e) + r.length > p8 || r.flags & 8) ? !1 : (this.text = this.text.slice(0, e) + (r ? r.text : "") + this.text.slice(n), this.markDirty(), !0);\n  }\n  split(e) {\n    let n = new Gr(this.text.slice(e));\n    return this.text = this.text.slice(0, e), this.markDirty(), n.flags |= this.flags & 8, n;\n  }\n  localPosFromDOM(e, n) {\n    return e == this.dom ? n : n ? this.text.length : 0;\n  }\n  domAtPos(e) {\n    return new Pn(this.dom, e);\n  }\n  domBoundsAround(e, n, r) {\n    return { from: r, to: r + this.length, startDOM: this.dom, endDOM: this.dom.nextSibling };\n  }\n  coordsAt(e, n) {\n    return f8(this.dom, e, n);\n  }\n}\nclass Ti extends At {\n  constructor(e, n = [], r = 0) {\n    super(), this.mark = e, this.children = n, this.length = r;\n    for (let i of n)\n      i.setParent(this);\n  }\n  setAttrs(e) {\n    if (Yw(e), this.mark.class && (e.className = this.mark.class), this.mark.attrs)\n      for (let n in this.mark.attrs)\n        e.setAttribute(n, this.mark.attrs[n]);\n    return e;\n  }\n  canReuseDOM(e) {\n    return super.canReuseDOM(e) && !((this.flags | e.flags) & 8);\n  }\n  reuseDOM(e) {\n    e.nodeName == this.mark.tagName.toUpperCase() && (this.setDOM(e), this.flags |= 6);\n  }\n  sync(e, n) {\n    this.dom ? this.flags & 4 && this.setAttrs(this.dom) : this.setDOM(this.setAttrs(document.createElement(this.mark.tagName))), super.sync(e, n);\n  }\n  merge(e, n, r, i, s, a) {\n    return r && (!(r instanceof Ti && r.mark.eq(this.mark)) || e && s <= 0 || n < this.length && a <= 0) ? !1 : (rC(this, e, n, r ? r.children.slice() : [], s - 1, a - 1), this.markDirty(), !0);\n  }\n  split(e) {\n    let n = [], r = 0, i = -1, s = 0;\n    for (let o of this.children) {\n      let l = r + o.length;\n      l > e && n.push(r < e ? o.split(e - r) : o), i < 0 && r >= e && (i = s), r = l, s++;\n    }\n    let a = this.length - e;\n    return this.length = e, i > -1 && (this.children.length = i, this.markDirty()), new Ti(this.mark, n, a);\n  }\n  domAtPos(e) {\n    return aC(this, e);\n  }\n  coordsAt(e, n) {\n    return lC(this, e, n);\n  }\n}\nfunction f8(t, e, n) {\n  let r = t.nodeValue.length;\n  e > r && (e = r);\n  let i = e, s = e, a = 0;\n  e == 0 && n < 0 || e == r && n >= 0 ? ke.chrome || ke.gecko || (e ? (i--, a = 1) : s < r && (s++, a = -1)) : n < 0 ? i-- : s < r && s++;\n  let o = Ts(t, i, s).getClientRects();\n  if (!o.length)\n    return null;\n  let l = o[(a ? a < 0 : n >= 0) ? 0 : o.length - 1];\n  return ke.safari && !a && l.width == 0 && (l = Array.prototype.find.call(o, (c) => c.width) || l), a ? Mc(l, a < 0) : l || null;\n}\nclass zi extends At {\n  static create(e, n, r) {\n    return new zi(e, n, r);\n  }\n  constructor(e, n, r) {\n    super(), this.widget = e, this.length = n, this.side = r, this.prevWidget = null;\n  }\n  split(e) {\n    let n = zi.create(this.widget, this.length - e, this.side);\n    return this.length -= e, n;\n  }\n  sync(e) {\n    (!this.dom || !this.widget.updateDOM(this.dom, e)) && (this.dom && this.prevWidget && this.prevWidget.destroy(this.dom), this.prevWidget = null, this.setDOM(this.widget.toDOM(e)), this.widget.editable || (this.dom.contentEditable = "false"));\n  }\n  getSide() {\n    return this.side;\n  }\n  merge(e, n, r, i, s, a) {\n    return r && (!(r instanceof zi) || !this.widget.compare(r.widget) || e > 0 && s <= 0 || n < this.length && a <= 0) ? !1 : (this.length = e + (r ? r.length : 0) + (this.length - n), !0);\n  }\n  become(e) {\n    return e instanceof zi && e.side == this.side && this.widget.constructor == e.widget.constructor ? (this.widget.compare(e.widget) || this.markDirty(!0), this.dom && !this.prevWidget && (this.prevWidget = this.widget), this.widget = e.widget, this.length = e.length, !0) : !1;\n  }\n  ignoreMutation() {\n    return !0;\n  }\n  ignoreEvent(e) {\n    return this.widget.ignoreEvent(e);\n  }\n  get overrideDOMText() {\n    if (this.length == 0)\n      return ht.empty;\n    let e = this;\n    for (; e.parent; )\n      e = e.parent;\n    let { view: n } = e, r = n && n.state.doc, i = this.posAtStart;\n    return r ? r.slice(i, i + this.length) : ht.empty;\n  }\n  domAtPos(e) {\n    return (this.length ? e == 0 : this.side > 0) ? Pn.before(this.dom) : Pn.after(this.dom, e == this.length);\n  }\n  domBoundsAround() {\n    return null;\n  }\n  coordsAt(e, n) {\n    let r = this.widget.coordsAt(this.dom, e, n);\n    if (r)\n      return r;\n    let i = this.dom.getClientRects(), s = null;\n    if (!i.length)\n      return null;\n    let a = this.side ? this.side < 0 : e > 0;\n    for (let o = a ? i.length - 1 : 0; s = i[o], !(e > 0 ? o == 0 : o == i.length - 1 || s.top < s.bottom); o += a ? -1 : 1)\n      ;\n    return Mc(s, !a);\n  }\n  get isEditable() {\n    return !1;\n  }\n  get isWidget() {\n    return !0;\n  }\n  get isHidden() {\n    return this.widget.isHidden;\n  }\n  destroy() {\n    super.destroy(), this.dom && this.widget.destroy(this.dom);\n  }\n}\nclass ya extends At {\n  constructor(e) {\n    super(), this.side = e;\n  }\n  get length() {\n    return 0;\n  }\n  merge() {\n    return !1;\n  }\n  become(e) {\n    return e instanceof ya && e.side == this.side;\n  }\n  split() {\n    return new ya(this.side);\n  }\n  sync() {\n    if (!this.dom) {\n      let e = document.createElement("img");\n      e.className = "cm-widgetBuffer", e.setAttribute("aria-hidden", "true"), this.setDOM(e);\n    }\n  }\n  getSide() {\n    return this.side;\n  }\n  domAtPos(e) {\n    return this.side > 0 ? Pn.before(this.dom) : Pn.after(this.dom);\n  }\n  localPosFromDOM() {\n    return 0;\n  }\n  domBoundsAround() {\n    return null;\n  }\n  coordsAt(e) {\n    return this.dom.getBoundingClientRect();\n  }\n  get overrideDOMText() {\n    return ht.empty;\n  }\n  get isHidden() {\n    return !0;\n  }\n}\nGr.prototype.children = zi.prototype.children = ya.prototype.children = _d;\nfunction aC(t, e) {\n  let n = t.dom, { children: r } = t, i = 0;\n  for (let s = 0; i < r.length; i++) {\n    let a = r[i], o = s + a.length;\n    if (!(o == s && a.getSide() <= 0)) {\n      if (e > s && e < o && a.dom.parentNode == n)\n        return a.domAtPos(e - s);\n      if (e <= s)\n        break;\n      s = o;\n    }\n  }\n  for (let s = i; s > 0; s--) {\n    let a = r[s - 1];\n    if (a.dom.parentNode == n)\n      return a.domAtPos(a.length);\n  }\n  for (let s = i; s < r.length; s++) {\n    let a = r[s];\n    if (a.dom.parentNode == n)\n      return a.domAtPos(0);\n  }\n  return new Pn(n, 0);\n}\nfunction oC(t, e, n) {\n  let r, { children: i } = t;\n  n > 0 && e instanceof Ti && i.length && (r = i[i.length - 1]) instanceof Ti && r.mark.eq(e.mark) ? oC(r, e.children[0], n - 1) : (i.push(e), e.setParent(t)), t.length += e.length;\n}\nfunction lC(t, e, n) {\n  let r = null, i = -1, s = null, a = -1;\n  function o(c, h) {\n    for (let f = 0, m = 0; f < c.children.length && m <= h; f++) {\n      let y = c.children[f], v = m + y.length;\n      v >= h && (y.children.length ? o(y, h - m) : (!s || s.isHidden && n > 0) && (v > h || m == v && y.getSide() > 0) ? (s = y, a = h - m) : (m < h || m == v && y.getSide() < 0 && !y.isHidden) && (r = y, i = h - m)), m = v;\n    }\n  }\n  o(t, e);\n  let l = (n < 0 ? r : s) || r || s;\n  return l ? l.coordsAt(Math.max(0, l == r ? i : a), n) : d8(t);\n}\nfunction d8(t) {\n  let e = t.dom.lastChild;\n  if (!e)\n    return t.dom.getBoundingClientRect();\n  let n = Do(e);\n  return n[n.length - 1] || null;\n}\nfunction qp(t, e) {\n  for (let n in t)\n    n == "class" && e.class ? e.class += " " + t.class : n == "style" && e.style ? e.style += ";" + t.style : e[n] = t[n];\n  return e;\n}\nconst Tg = /* @__PURE__ */ Object.create(null);\nfunction Du(t, e, n) {\n  if (t == e)\n    return !0;\n  t || (t = Tg), e || (e = Tg);\n  let r = Object.keys(t), i = Object.keys(e);\n  if (r.length - (n && r.indexOf(n) > -1 ? 1 : 0) != i.length - (n && i.indexOf(n) > -1 ? 1 : 0))\n    return !1;\n  for (let s of r)\n    if (s != n && (i.indexOf(s) == -1 || t[s] !== e[s]))\n      return !1;\n  return !0;\n}\nfunction Gp(t, e, n) {\n  let r = !1;\n  if (e)\n    for (let i in e)\n      n && i in n || (r = !0, i == "style" ? t.style.cssText = "" : t.removeAttribute(i));\n  if (n)\n    for (let i in n)\n      e && e[i] == n[i] || (r = !0, i == "style" ? t.style.cssText = n[i] : t.setAttribute(i, n[i]));\n  return r;\n}\nfunction m8(t) {\n  let e = /* @__PURE__ */ Object.create(null);\n  for (let n = 0; n < t.attributes.length; n++) {\n    let r = t.attributes[n];\n    e[r.name] = r.value;\n  }\n  return e;\n}\nclass Zi {\n  /**\n  Compare this instance to another instance of the same type.\n  (TypeScript can\'t express this, but only instances of the same\n  specific class will be passed to this method.) This is used to\n  avoid redrawing widgets when they are replaced by a new\n  decoration of the same type. The default implementation just\n  returns `false`, which will cause new instances of the widget to\n  always be redrawn.\n  */\n  eq(e) {\n    return !1;\n  }\n  /**\n  Update a DOM element created by a widget of the same type (but\n  different, non-`eq` content) to reflect this widget. May return\n  true to indicate that it could update, false to indicate it\n  couldn\'t (in which case the widget will be redrawn). The default\n  implementation just returns false.\n  */\n  updateDOM(e, n) {\n    return !1;\n  }\n  /**\n  @internal\n  */\n  compare(e) {\n    return this == e || this.constructor == e.constructor && this.eq(e);\n  }\n  /**\n  The estimated height this widget will have, to be used when\n  estimating the height of content that hasn\'t been drawn. May\n  return -1 to indicate you don\'t know. The default implementation\n  returns -1.\n  */\n  get estimatedHeight() {\n    return -1;\n  }\n  /**\n  For inline widgets that are displayed inline (as opposed to\n  `inline-block`) and introduce line breaks (through `<br>` tags\n  or textual newlines), this must indicate the amount of line\n  breaks they introduce. Defaults to 0.\n  */\n  get lineBreaks() {\n    return 0;\n  }\n  /**\n  Can be used to configure which kinds of events inside the widget\n  should be ignored by the editor. The default is to ignore all\n  events.\n  */\n  ignoreEvent(e) {\n    return !0;\n  }\n  /**\n  Override the way screen coordinates for positions at/in the\n  widget are found. `pos` will be the offset into the widget, and\n  `side` the side of the position that is being queried—less than\n  zero for before, greater than zero for after, and zero for\n  directly at that position.\n  */\n  coordsAt(e, n, r) {\n    return null;\n  }\n  /**\n  @internal\n  */\n  get isHidden() {\n    return !1;\n  }\n  /**\n  @internal\n  */\n  get editable() {\n    return !1;\n  }\n  /**\n  This is called when the an instance of the widget is removed\n  from the editor view.\n  */\n  destroy(e) {\n  }\n}\nvar Rn = /* @__PURE__ */ function(t) {\n  return t[t.Text = 0] = "Text", t[t.WidgetBefore = 1] = "WidgetBefore", t[t.WidgetAfter = 2] = "WidgetAfter", t[t.WidgetRange = 3] = "WidgetRange", t;\n}(Rn || (Rn = {}));\nclass Te extends Ms {\n  constructor(e, n, r, i) {\n    super(), this.startSide = e, this.endSide = n, this.widget = r, this.spec = i;\n  }\n  /**\n  @internal\n  */\n  get heightRelevant() {\n    return !1;\n  }\n  /**\n  Create a mark decoration, which influences the styling of the\n  content in its range. Nested mark decorations will cause nested\n  DOM elements to be created. Nesting order is determined by\n  precedence of the [facet](https://codemirror.net/6/docs/ref/#view.EditorView^decorations), with\n  the higher-precedence decorations creating the inner DOM nodes.\n  Such elements are split on line boundaries and on the boundaries\n  of lower-precedence decorations.\n  */\n  static mark(e) {\n    return new qo(e);\n  }\n  /**\n  Create a widget decoration, which displays a DOM element at the\n  given position.\n  */\n  static widget(e) {\n    let n = Math.max(-1e4, Math.min(1e4, e.side || 0)), r = !!e.block;\n    return n += r && !e.inlineOrder ? n > 0 ? 3e8 : -4e8 : n > 0 ? 1e8 : -1e8, new ts(e, n, n, r, e.widget || null, !1);\n  }\n  /**\n  Create a replace decoration which replaces the given range with\n  a widget, or simply hides it.\n  */\n  static replace(e) {\n    let n = !!e.block, r, i;\n    if (e.isBlockGap)\n      r = -5e8, i = 4e8;\n    else {\n      let { start: s, end: a } = uC(e, n);\n      r = (s ? n ? -3e8 : -1 : 5e8) - 1, i = (a ? n ? 2e8 : 1 : -6e8) + 1;\n    }\n    return new ts(e, r, i, n, e.widget || null, !0);\n  }\n  /**\n  Create a line decoration, which can add DOM attributes to the\n  line starting at the given position.\n  */\n  static line(e) {\n    return new Go(e);\n  }\n  /**\n  Build a [`DecorationSet`](https://codemirror.net/6/docs/ref/#view.DecorationSet) from the given\n  decorated range or ranges. If the ranges aren\'t already sorted,\n  pass `true` for `sort` to make the library sort them for you.\n  */\n  static set(e, n = !1) {\n    return mt.of(e, n);\n  }\n  /**\n  @internal\n  */\n  hasHeight() {\n    return this.widget ? this.widget.estimatedHeight > -1 : !1;\n  }\n}\nTe.none = mt.empty;\nclass qo extends Te {\n  constructor(e) {\n    let { start: n, end: r } = uC(e);\n    super(n ? -1 : 5e8, r ? 1 : -6e8, null, e), this.tagName = e.tagName || "span", this.class = e.class || "", this.attrs = e.attributes || null;\n  }\n  eq(e) {\n    var n, r;\n    return this == e || e instanceof qo && this.tagName == e.tagName && (this.class || ((n = this.attrs) === null || n === void 0 ? void 0 : n.class)) == (e.class || ((r = e.attrs) === null || r === void 0 ? void 0 : r.class)) && Du(this.attrs, e.attrs, "class");\n  }\n  range(e, n = e) {\n    if (e >= n)\n      throw new RangeError("Mark decorations may not be empty");\n    return super.range(e, n);\n  }\n}\nqo.prototype.point = !1;\nclass Go extends Te {\n  constructor(e) {\n    super(-2e8, -2e8, null, e);\n  }\n  eq(e) {\n    return e instanceof Go && this.spec.class == e.spec.class && Du(this.spec.attributes, e.spec.attributes);\n  }\n  range(e, n = e) {\n    if (n != e)\n      throw new RangeError("Line decoration ranges must be zero-length");\n    return super.range(e, n);\n  }\n}\nGo.prototype.mapMode = nn.TrackBefore;\nGo.prototype.point = !0;\nclass ts extends Te {\n  constructor(e, n, r, i, s, a) {\n    super(n, r, s, e), this.block = i, this.isReplace = a, this.mapMode = i ? n <= 0 ? nn.TrackBefore : nn.TrackAfter : nn.TrackDel;\n  }\n  // Only relevant when this.block == true\n  get type() {\n    return this.startSide != this.endSide ? Rn.WidgetRange : this.startSide <= 0 ? Rn.WidgetBefore : Rn.WidgetAfter;\n  }\n  get heightRelevant() {\n    return this.block || !!this.widget && (this.widget.estimatedHeight >= 5 || this.widget.lineBreaks > 0);\n  }\n  eq(e) {\n    return e instanceof ts && g8(this.widget, e.widget) && this.block == e.block && this.startSide == e.startSide && this.endSide == e.endSide;\n  }\n  range(e, n = e) {\n    if (this.isReplace && (e > n || e == n && this.startSide > 0 && this.endSide <= 0))\n      throw new RangeError("Invalid range for replacement decoration");\n    if (!this.isReplace && n != e)\n      throw new RangeError("Widget decorations can only have zero-length ranges");\n    return super.range(e, n);\n  }\n}\nts.prototype.point = !0;\nfunction uC(t, e = !1) {\n  let { inclusiveStart: n, inclusiveEnd: r } = t;\n  return n == null && (n = t.inclusive), r == null && (r = t.inclusive), { start: n ?? e, end: r ?? e };\n}\nfunction g8(t, e) {\n  return t == e || !!(t && e && t.compare(e));\n}\nfunction su(t, e, n, r = 0) {\n  let i = n.length - 1;\n  i >= 0 && n[i] + r >= t ? n[i] = Math.max(n[i], e) : n.push(t, e);\n}\nclass en extends At {\n  constructor() {\n    super(...arguments), this.children = [], this.length = 0, this.prevAttrs = void 0, this.attrs = null, this.breakAfter = 0;\n  }\n  // Consumes source\n  merge(e, n, r, i, s, a) {\n    if (r) {\n      if (!(r instanceof en))\n        return !1;\n      this.dom || r.transferDOM(this);\n    }\n    return i && this.setDeco(r ? r.attrs : null), rC(this, e, n, r ? r.children.slice() : [], s, a), !0;\n  }\n  split(e) {\n    let n = new en();\n    if (n.breakAfter = this.breakAfter, this.length == 0)\n      return n;\n    let { i: r, off: i } = this.childPos(e);\n    i && (n.append(this.children[r].split(i), 0), this.children[r].merge(i, this.children[r].length, null, !1, 0, 0), r++);\n    for (let s = r; s < this.children.length; s++)\n      n.append(this.children[s], 0);\n    for (; r > 0 && this.children[r - 1].length == 0; )\n      this.children[--r].destroy();\n    return this.children.length = r, this.markDirty(), this.length = e, n;\n  }\n  transferDOM(e) {\n    this.dom && (this.markDirty(), e.setDOM(this.dom), e.prevAttrs = this.prevAttrs === void 0 ? this.attrs : this.prevAttrs, this.prevAttrs = void 0, this.dom = null);\n  }\n  setDeco(e) {\n    Du(this.attrs, e) || (this.dom && (this.prevAttrs = this.attrs, this.markDirty()), this.attrs = e);\n  }\n  append(e, n) {\n    oC(this, e, n);\n  }\n  // Only called when building a line view in ContentBuilder\n  addLineDeco(e) {\n    let n = e.spec.attributes, r = e.spec.class;\n    n && (this.attrs = qp(n, this.attrs || {})), r && (this.attrs = qp({ class: r }, this.attrs || {}));\n  }\n  domAtPos(e) {\n    return aC(this, e);\n  }\n  reuseDOM(e) {\n    e.nodeName == "DIV" && (this.setDOM(e), this.flags |= 6);\n  }\n  sync(e, n) {\n    var r;\n    this.dom ? this.flags & 4 && (Yw(this.dom), this.dom.className = "cm-line", this.prevAttrs = this.attrs ? null : void 0) : (this.setDOM(document.createElement("div")), this.dom.className = "cm-line", this.prevAttrs = this.attrs ? null : void 0), this.prevAttrs !== void 0 && (Gp(this.dom, this.prevAttrs, this.attrs), this.dom.classList.add("cm-line"), this.prevAttrs = void 0), super.sync(e, n);\n    let i = this.dom.lastChild;\n    for (; i && At.get(i) instanceof Ti; )\n      i = i.lastChild;\n    if (!i || !this.length || i.nodeName != "BR" && ((r = At.get(i)) === null || r === void 0 ? void 0 : r.isEditable) == !1 && (!ke.ios || !this.children.some((s) => s instanceof Gr))) {\n      let s = document.createElement("BR");\n      s.cmIgnore = !0, this.dom.appendChild(s);\n    }\n  }\n  measureTextSize() {\n    if (this.children.length == 0 || this.length > 20)\n      return null;\n    let e = 0, n;\n    for (let r of this.children) {\n      if (!(r instanceof Gr) || /[^ -~]/.test(r.text))\n        return null;\n      let i = Do(r.dom);\n      if (i.length != 1)\n        return null;\n      e += i[0].width, n = i[0].height;\n    }\n    return e ? {\n      lineHeight: this.dom.getBoundingClientRect().height,\n      charWidth: e / this.length,\n      textHeight: n\n    } : null;\n  }\n  coordsAt(e, n) {\n    let r = lC(this, e, n);\n    if (!this.children.length && r && this.parent) {\n      let { heightOracle: i } = this.parent.view.viewState, s = r.bottom - r.top;\n      if (Math.abs(s - i.lineHeight) < 2 && i.textHeight < s) {\n        let a = (s - i.textHeight) / 2;\n        return { top: r.top + a, bottom: r.bottom - a, left: r.left, right: r.left };\n      }\n    }\n    return r;\n  }\n  become(e) {\n    return e instanceof en && this.children.length == 0 && e.children.length == 0 && Du(this.attrs, e.attrs) && this.breakAfter == e.breakAfter;\n  }\n  covers() {\n    return !0;\n  }\n  static find(e, n) {\n    for (let r = 0, i = 0; r < e.children.length; r++) {\n      let s = e.children[r], a = i + s.length;\n      if (a >= n) {\n        if (s instanceof en)\n          return s;\n        if (a > n)\n          break;\n      }\n      i = a + s.breakAfter;\n    }\n    return null;\n  }\n}\nclass Ei extends At {\n  constructor(e, n, r) {\n    super(), this.widget = e, this.length = n, this.deco = r, this.breakAfter = 0, this.prevWidget = null;\n  }\n  merge(e, n, r, i, s, a) {\n    return r && (!(r instanceof Ei) || !this.widget.compare(r.widget) || e > 0 && s <= 0 || n < this.length && a <= 0) ? !1 : (this.length = e + (r ? r.length : 0) + (this.length - n), !0);\n  }\n  domAtPos(e) {\n    return e == 0 ? Pn.before(this.dom) : Pn.after(this.dom, e == this.length);\n  }\n  split(e) {\n    let n = this.length - e;\n    this.length = e;\n    let r = new Ei(this.widget, n, this.deco);\n    return r.breakAfter = this.breakAfter, r;\n  }\n  get children() {\n    return _d;\n  }\n  sync(e) {\n    (!this.dom || !this.widget.updateDOM(this.dom, e)) && (this.dom && this.prevWidget && this.prevWidget.destroy(this.dom), this.prevWidget = null, this.setDOM(this.widget.toDOM(e)), this.widget.editable || (this.dom.contentEditable = "false"));\n  }\n  get overrideDOMText() {\n    return this.parent ? this.parent.view.state.doc.slice(this.posAtStart, this.posAtEnd) : ht.empty;\n  }\n  domBoundsAround() {\n    return null;\n  }\n  become(e) {\n    return e instanceof Ei && e.widget.constructor == this.widget.constructor ? (e.widget.compare(this.widget) || this.markDirty(!0), this.dom && !this.prevWidget && (this.prevWidget = this.widget), this.widget = e.widget, this.length = e.length, this.deco = e.deco, this.breakAfter = e.breakAfter, !0) : !1;\n  }\n  ignoreMutation() {\n    return !0;\n  }\n  ignoreEvent(e) {\n    return this.widget.ignoreEvent(e);\n  }\n  get isEditable() {\n    return !1;\n  }\n  get isWidget() {\n    return !0;\n  }\n  coordsAt(e, n) {\n    let r = this.widget.coordsAt(this.dom, e, n);\n    return r || (this.widget instanceof zp ? null : Mc(this.dom.getBoundingClientRect(), this.length ? e == 0 : n <= 0));\n  }\n  destroy() {\n    super.destroy(), this.dom && this.widget.destroy(this.dom);\n  }\n  covers(e) {\n    let { startSide: n, endSide: r } = this.deco;\n    return n == r ? !1 : e < 0 ? n < 0 : r > 0;\n  }\n}\nclass zp extends Zi {\n  constructor(e) {\n    super(), this.height = e;\n  }\n  toDOM() {\n    let e = document.createElement("div");\n    return e.className = "cm-gap", this.updateDOM(e), e;\n  }\n  eq(e) {\n    return e.height == this.height;\n  }\n  updateDOM(e) {\n    return e.style.height = this.height + "px", !0;\n  }\n  get editable() {\n    return !0;\n  }\n  get estimatedHeight() {\n    return this.height;\n  }\n  ignoreEvent() {\n    return !1;\n  }\n}\nclass mo {\n  constructor(e, n, r, i) {\n    this.doc = e, this.pos = n, this.end = r, this.disallowBlockEffectsFor = i, this.content = [], this.curLine = null, this.breakAtStart = 0, this.pendingBuffer = 0, this.bufferMarks = [], this.atCursorPos = !0, this.openStart = -1, this.openEnd = -1, this.text = "", this.textOff = 0, this.cursor = e.iter(), this.skip = n;\n  }\n  posCovered() {\n    if (this.content.length == 0)\n      return !this.breakAtStart && this.doc.lineAt(this.pos).from != this.pos;\n    let e = this.content[this.content.length - 1];\n    return !(e.breakAfter || e instanceof Ei && e.deco.endSide < 0);\n  }\n  getLine() {\n    return this.curLine || (this.content.push(this.curLine = new en()), this.atCursorPos = !0), this.curLine;\n  }\n  flushBuffer(e = this.bufferMarks) {\n    this.pendingBuffer && (this.curLine.append(Ml(new ya(-1), e), e.length), this.pendingBuffer = 0);\n  }\n  addBlockWidget(e) {\n    this.flushBuffer(), this.curLine = null, this.content.push(e);\n  }\n  finish(e) {\n    this.pendingBuffer && e <= this.bufferMarks.length ? this.flushBuffer() : this.pendingBuffer = 0, !this.posCovered() && !(e && this.content.length && this.content[this.content.length - 1] instanceof Ei) && this.getLine();\n  }\n  buildText(e, n, r) {\n    for (; e > 0; ) {\n      if (this.textOff == this.text.length) {\n        let { value: s, lineBreak: a, done: o } = this.cursor.next(this.skip);\n        if (this.skip = 0, o)\n          throw new Error("Ran out of text content when drawing inline views");\n        if (a) {\n          this.posCovered() || this.getLine(), this.content.length ? this.content[this.content.length - 1].breakAfter = 1 : this.breakAtStart = 1, this.flushBuffer(), this.curLine = null, this.atCursorPos = !0, e--;\n          continue;\n        } else\n          this.text = s, this.textOff = 0;\n      }\n      let i = Math.min(\n        this.text.length - this.textOff,\n        e,\n        512\n        /* T.Chunk */\n      );\n      this.flushBuffer(n.slice(n.length - r)), this.getLine().append(Ml(new Gr(this.text.slice(this.textOff, this.textOff + i)), n), r), this.atCursorPos = !0, this.textOff += i, e -= i, r = 0;\n    }\n  }\n  span(e, n, r, i) {\n    this.buildText(n - e, r, i), this.pos = n, this.openStart < 0 && (this.openStart = i);\n  }\n  point(e, n, r, i, s, a) {\n    if (this.disallowBlockEffectsFor[a] && r instanceof ts) {\n      if (r.block)\n        throw new RangeError("Block decorations may not be specified via plugins");\n      if (n > this.doc.lineAt(this.pos).to)\n        throw new RangeError("Decorations that replace line breaks may not be specified via plugins");\n    }\n    let o = n - e;\n    if (r instanceof ts)\n      if (r.block)\n        r.startSide > 0 && !this.posCovered() && this.getLine(), this.addBlockWidget(new Ei(r.widget || Oa.block, o, r));\n      else {\n        let l = zi.create(r.widget || Oa.inline, o, o ? 0 : r.startSide), c = this.atCursorPos && !l.isEditable && s <= i.length && (e < n || r.startSide > 0), h = !l.isEditable && (e < n || s > i.length || r.startSide <= 0), f = this.getLine();\n        this.pendingBuffer == 2 && !c && !l.isEditable && (this.pendingBuffer = 0), this.flushBuffer(i), c && (f.append(Ml(new ya(1), i), s), s = i.length + Math.max(0, s - i.length)), f.append(Ml(l, i), s), this.atCursorPos = h, this.pendingBuffer = h ? e < n || s > i.length ? 1 : 2 : 0, this.pendingBuffer && (this.bufferMarks = i.slice());\n      }\n    else this.doc.lineAt(this.pos).from == this.pos && this.getLine().addLineDeco(r);\n    o && (this.textOff + o <= this.text.length ? this.textOff += o : (this.skip += o - (this.text.length - this.textOff), this.text = "", this.textOff = 0), this.pos = n), this.openStart < 0 && (this.openStart = s);\n  }\n  static build(e, n, r, i, s) {\n    let a = new mo(e, n, r, s);\n    return a.openEnd = mt.spans(i, n, r, a), a.openStart < 0 && (a.openStart = a.openEnd), a.finish(a.openEnd), a;\n  }\n}\nfunction Ml(t, e) {\n  for (let n of e)\n    t = new Ti(n, [t], t.length);\n  return t;\n}\nclass Oa extends Zi {\n  constructor(e) {\n    super(), this.tag = e;\n  }\n  eq(e) {\n    return e.tag == this.tag;\n  }\n  toDOM() {\n    return document.createElement(this.tag);\n  }\n  updateDOM(e) {\n    return e.nodeName.toLowerCase() == this.tag;\n  }\n  get isHidden() {\n    return !0;\n  }\n}\nOa.inline = /* @__PURE__ */ new Oa("span");\nOa.block = /* @__PURE__ */ new Oa("div");\nvar Dt = /* @__PURE__ */ function(t) {\n  return t[t.LTR = 0] = "LTR", t[t.RTL = 1] = "RTL", t;\n}(Dt || (Dt = {}));\nconst js = Dt.LTR, Zd = Dt.RTL;\nfunction cC(t) {\n  let e = [];\n  for (let n = 0; n < t.length; n++)\n    e.push(1 << +t[n]);\n  return e;\n}\nconst b8 = /* @__PURE__ */ cC("88888888888888888888888888888888888666888888787833333333337888888000000000000000000000000008888880000000000000000000000000088888888888888888888888888888888888887866668888088888663380888308888800000000000000000000000800000000000000000000000000000008"), y8 = /* @__PURE__ */ cC("4444448826627288999999999992222222222222222222222222222222222222222222222229999999999999999999994444444444644222822222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222999999949999999229989999223333333333"), Hp = /* @__PURE__ */ Object.create(null), ti = [];\nfor (let t of ["()", "[]", "{}"]) {\n  let e = /* @__PURE__ */ t.charCodeAt(0), n = /* @__PURE__ */ t.charCodeAt(1);\n  Hp[e] = n, Hp[n] = -e;\n}\nfunction hC(t) {\n  return t <= 247 ? b8[t] : 1424 <= t && t <= 1524 ? 2 : 1536 <= t && t <= 1785 ? y8[t - 1536] : 1774 <= t && t <= 2220 ? 4 : 8192 <= t && t <= 8204 ? 256 : 64336 <= t && t <= 65023 ? 4 : 1;\n}\nconst O8 = /[\\u0590-\\u05f4\\u0600-\\u06ff\\u0700-\\u08ac\\ufb50-\\ufdff]/;\nclass Hi {\n  /**\n  The direction of this span.\n  */\n  get dir() {\n    return this.level % 2 ? Zd : js;\n  }\n  /**\n  @internal\n  */\n  constructor(e, n, r) {\n    this.from = e, this.to = n, this.level = r;\n  }\n  /**\n  @internal\n  */\n  side(e, n) {\n    return this.dir == n == e ? this.to : this.from;\n  }\n  /**\n  @internal\n  */\n  forward(e, n) {\n    return e == (this.dir == n);\n  }\n  /**\n  @internal\n  */\n  static find(e, n, r, i) {\n    let s = -1;\n    for (let a = 0; a < e.length; a++) {\n      let o = e[a];\n      if (o.from <= n && o.to >= n) {\n        if (o.level == r)\n          return a;\n        (s < 0 || (i != 0 ? i < 0 ? o.from < n : o.to > n : e[s].level > o.level)) && (s = a);\n      }\n    }\n    if (s < 0)\n      throw new RangeError("Index out of range");\n    return s;\n  }\n}\nfunction pC(t, e) {\n  if (t.length != e.length)\n    return !1;\n  for (let n = 0; n < t.length; n++) {\n    let r = t[n], i = e[n];\n    if (r.from != i.from || r.to != i.to || r.direction != i.direction || !pC(r.inner, i.inner))\n      return !1;\n  }\n  return !0;\n}\nconst Ct = [];\nfunction v8(t, e, n, r, i) {\n  for (let s = 0; s <= r.length; s++) {\n    let a = s ? r[s - 1].to : e, o = s < r.length ? r[s].from : n, l = s ? 256 : i;\n    for (let c = a, h = l, f = l; c < o; c++) {\n      let m = hC(t.charCodeAt(c));\n      m == 512 ? m = h : m == 8 && f == 4 && (m = 16), Ct[c] = m == 4 ? 2 : m, m & 7 && (f = m), h = m;\n    }\n    for (let c = a, h = l, f = l; c < o; c++) {\n      let m = Ct[c];\n      if (m == 128)\n        c < o - 1 && h == Ct[c + 1] && h & 24 ? m = Ct[c] = h : Ct[c] = 256;\n      else if (m == 64) {\n        let y = c + 1;\n        for (; y < o && Ct[y] == 64; )\n          y++;\n        let v = c && h == 8 || y < n && Ct[y] == 8 ? f == 1 ? 1 : 8 : 256;\n        for (let C = c; C < y; C++)\n          Ct[C] = v;\n        c = y - 1;\n      } else m == 8 && f == 1 && (Ct[c] = 1);\n      h = m, m & 7 && (f = m);\n    }\n  }\n}\nfunction x8(t, e, n, r, i) {\n  let s = i == 1 ? 2 : 1;\n  for (let a = 0, o = 0, l = 0; a <= r.length; a++) {\n    let c = a ? r[a - 1].to : e, h = a < r.length ? r[a].from : n;\n    for (let f = c, m, y, v; f < h; f++)\n      if (y = Hp[m = t.charCodeAt(f)])\n        if (y < 0) {\n          for (let C = o - 3; C >= 0; C -= 3)\n            if (ti[C + 1] == -y) {\n              let S = ti[C + 2], M = S & 2 ? i : S & 4 ? S & 1 ? s : i : 0;\n              M && (Ct[f] = Ct[ti[C]] = M), o = C;\n              break;\n            }\n        } else {\n          if (ti.length == 189)\n            break;\n          ti[o++] = f, ti[o++] = m, ti[o++] = l;\n        }\n      else if ((v = Ct[f]) == 2 || v == 1) {\n        let C = v == i;\n        l = C ? 0 : 1;\n        for (let S = o - 3; S >= 0; S -= 3) {\n          let M = ti[S + 2];\n          if (M & 2)\n            break;\n          if (C)\n            ti[S + 2] |= 2;\n          else {\n            if (M & 4)\n              break;\n            ti[S + 2] |= 4;\n          }\n        }\n      }\n  }\n}\nfunction k8(t, e, n, r) {\n  for (let i = 0, s = r; i <= n.length; i++) {\n    let a = i ? n[i - 1].to : t, o = i < n.length ? n[i].from : e;\n    for (let l = a; l < o; ) {\n      let c = Ct[l];\n      if (c == 256) {\n        let h = l + 1;\n        for (; ; )\n          if (h == o) {\n            if (i == n.length)\n              break;\n            h = n[i++].to, o = i < n.length ? n[i].from : e;\n          } else if (Ct[h] == 256)\n            h++;\n          else\n            break;\n        let f = s == 1, m = (h < e ? Ct[h] : r) == 1, y = f == m ? f ? 1 : 2 : r;\n        for (let v = h, C = i, S = C ? n[C - 1].to : t; v > l; )\n          v == S && (v = n[--C].from, S = C ? n[C - 1].to : t), Ct[--v] = y;\n        l = h;\n      } else\n        s = c, l++;\n    }\n  }\n}\nfunction Yp(t, e, n, r, i, s, a) {\n  let o = r % 2 ? 2 : 1;\n  if (r % 2 == i % 2)\n    for (let l = e, c = 0; l < n; ) {\n      let h = !0, f = !1;\n      if (c == s.length || l < s[c].from) {\n        let C = Ct[l];\n        C != o && (h = !1, f = C == 16);\n      }\n      let m = !h && o == 1 ? [] : null, y = h ? r : r + 1, v = l;\n      e: for (; ; )\n        if (c < s.length && v == s[c].from) {\n          if (f)\n            break e;\n          let C = s[c];\n          if (!h)\n            for (let S = C.to, M = c + 1; ; ) {\n              if (S == n)\n                break e;\n              if (M < s.length && s[M].from == S)\n                S = s[M++].to;\n              else {\n                if (Ct[S] == o)\n                  break e;\n                break;\n              }\n            }\n          if (c++, m)\n            m.push(C);\n          else {\n            C.from > l && a.push(new Hi(l, C.from, y));\n            let S = C.direction == js != !(y % 2);\n            Kp(t, S ? r + 1 : r, i, C.inner, C.from, C.to, a), l = C.to;\n          }\n          v = C.to;\n        } else {\n          if (v == n || (h ? Ct[v] != o : Ct[v] == o))\n            break;\n          v++;\n        }\n      m ? Yp(t, l, v, r + 1, i, m, a) : l < v && a.push(new Hi(l, v, y)), l = v;\n    }\n  else\n    for (let l = n, c = s.length; l > e; ) {\n      let h = !0, f = !1;\n      if (!c || l > s[c - 1].to) {\n        let C = Ct[l - 1];\n        C != o && (h = !1, f = C == 16);\n      }\n      let m = !h && o == 1 ? [] : null, y = h ? r : r + 1, v = l;\n      e: for (; ; )\n        if (c && v == s[c - 1].to) {\n          if (f)\n            break e;\n          let C = s[--c];\n          if (!h)\n            for (let S = C.from, M = c; ; ) {\n              if (S == e)\n                break e;\n              if (M && s[M - 1].to == S)\n                S = s[--M].from;\n              else {\n                if (Ct[S - 1] == o)\n                  break e;\n                break;\n              }\n            }\n          if (m)\n            m.push(C);\n          else {\n            C.to < l && a.push(new Hi(C.to, l, y));\n            let S = C.direction == js != !(y % 2);\n            Kp(t, S ? r + 1 : r, i, C.inner, C.from, C.to, a), l = C.from;\n          }\n          v = C.from;\n        } else {\n          if (v == e || (h ? Ct[v - 1] != o : Ct[v - 1] == o))\n            break;\n          v--;\n        }\n      m ? Yp(t, v, l, r + 1, i, m, a) : v < l && a.push(new Hi(v, l, y)), l = v;\n    }\n}\nfunction Kp(t, e, n, r, i, s, a) {\n  let o = e % 2 ? 2 : 1;\n  v8(t, i, s, r, o), x8(t, i, s, r, o), k8(i, s, r, o), Yp(t, i, s, e, n, r, a);\n}\nfunction w8(t, e, n) {\n  if (!t)\n    return [new Hi(0, 0, e == Zd ? 1 : 0)];\n  if (e == js && !n.length && !O8.test(t))\n    return fC(t.length);\n  if (n.length)\n    for (; t.length > Ct.length; )\n      Ct[Ct.length] = 256;\n  let r = [], i = e == js ? 0 : 1;\n  return Kp(t, i, i, n, 0, t.length, r), r;\n}\nfunction fC(t) {\n  return [new Hi(0, t, 0)];\n}\nlet dC = "";\nfunction C8(t, e, n, r, i) {\n  var s;\n  let a = r.head - t.from, o = Hi.find(e, a, (s = r.bidiLevel) !== null && s !== void 0 ? s : -1, r.assoc), l = e[o], c = l.side(i, n);\n  if (a == c) {\n    let m = o += i ? 1 : -1;\n    if (m < 0 || m >= e.length)\n      return null;\n    l = e[o = m], a = l.side(!i, n), c = l.side(i, n);\n  }\n  let h = kn(t.text, a, l.forward(i, n));\n  (h < l.from || h > l.to) && (h = c), dC = t.text.slice(Math.min(a, h), Math.max(a, h));\n  let f = o == (i ? e.length - 1 : 0) ? null : e[o + (i ? 1 : -1)];\n  return f && h == c && f.level + (i ? 0 : 1) < l.level ? ne.cursor(f.side(!i, n) + t.from, f.forward(i, n) ? 1 : -1, f.level) : ne.cursor(h + t.from, l.forward(i, n) ? -1 : 1, l.level);\n}\nfunction S8(t, e, n) {\n  for (let r = e; r < n; r++) {\n    let i = hC(t.charCodeAt(r));\n    if (i == 1)\n      return js;\n    if (i == 2 || i == 4)\n      return Zd;\n  }\n  return js;\n}\nconst mC = /* @__PURE__ */ Ae.define(), gC = /* @__PURE__ */ Ae.define(), bC = /* @__PURE__ */ Ae.define(), yC = /* @__PURE__ */ Ae.define(), Jp = /* @__PURE__ */ Ae.define(), OC = /* @__PURE__ */ Ae.define(), vC = /* @__PURE__ */ Ae.define(), $d = /* @__PURE__ */ Ae.define(), Ld = /* @__PURE__ */ Ae.define(), xC = /* @__PURE__ */ Ae.define({\n  combine: (t) => t.some((e) => e)\n}), kC = /* @__PURE__ */ Ae.define({\n  combine: (t) => t.some((e) => e)\n}), wC = /* @__PURE__ */ Ae.define();\nclass aa {\n  constructor(e, n = "nearest", r = "nearest", i = 5, s = 5, a = !1) {\n    this.range = e, this.y = n, this.x = r, this.yMargin = i, this.xMargin = s, this.isSnapshot = a;\n  }\n  map(e) {\n    return e.empty ? this : new aa(this.range.map(e), this.y, this.x, this.yMargin, this.xMargin, this.isSnapshot);\n  }\n  clip(e) {\n    return this.range.to <= e.doc.length ? this : new aa(ne.cursor(e.doc.length), this.y, this.x, this.yMargin, this.xMargin, this.isSnapshot);\n  }\n}\nconst Ql = /* @__PURE__ */ Ie.define({ map: (t, e) => t.map(e) }), CC = /* @__PURE__ */ Ie.define();\nfunction qn(t, e, n) {\n  let r = t.facet(yC);\n  r.length ? r[0](e) : window.onerror ? window.onerror(String(e), n, void 0, void 0, e) : n ? console.error(n + ":", e) : console.error(e);\n}\nconst Si = /* @__PURE__ */ Ae.define({ combine: (t) => t.length ? t[0] : !0 });\nlet A8 = 0;\nconst io = /* @__PURE__ */ Ae.define();\nclass pn {\n  constructor(e, n, r, i, s) {\n    this.id = e, this.create = n, this.domEventHandlers = r, this.domEventObservers = i, this.extension = s(this);\n  }\n  /**\n  Define a plugin from a constructor function that creates the\n  plugin\'s value, given an editor view.\n  */\n  static define(e, n) {\n    const { eventHandlers: r, eventObservers: i, provide: s, decorations: a } = n || {};\n    return new pn(A8++, e, r, i, (o) => {\n      let l = [io.of(o)];\n      return a && l.push(Po.of((c) => {\n        let h = c.plugin(o);\n        return h ? a(h) : Te.none;\n      })), s && l.push(s(o)), l;\n    });\n  }\n  /**\n  Create a plugin for a class whose constructor takes a single\n  editor view as argument.\n  */\n  static fromClass(e, n) {\n    return pn.define((r) => new e(r), n);\n  }\n}\nclass Lh {\n  constructor(e) {\n    this.spec = e, this.mustUpdate = null, this.value = null;\n  }\n  update(e) {\n    if (this.value) {\n      if (this.mustUpdate) {\n        let n = this.mustUpdate;\n        if (this.mustUpdate = null, this.value.update)\n          try {\n            this.value.update(n);\n          } catch (r) {\n            if (qn(n.state, r, "CodeMirror plugin crashed"), this.value.destroy)\n              try {\n                this.value.destroy();\n              } catch {\n              }\n            this.deactivate();\n          }\n      }\n    } else if (this.spec)\n      try {\n        this.value = this.spec.create(e);\n      } catch (n) {\n        qn(e.state, n, "CodeMirror plugin crashed"), this.deactivate();\n      }\n    return this;\n  }\n  destroy(e) {\n    var n;\n    if (!((n = this.value) === null || n === void 0) && n.destroy)\n      try {\n        this.value.destroy();\n      } catch (r) {\n        qn(e.state, r, "CodeMirror plugin crashed");\n      }\n  }\n  deactivate() {\n    this.spec = this.value = null;\n  }\n}\nconst SC = /* @__PURE__ */ Ae.define(), Id = /* @__PURE__ */ Ae.define(), Po = /* @__PURE__ */ Ae.define(), AC = /* @__PURE__ */ Ae.define(), Nd = /* @__PURE__ */ Ae.define(), DC = /* @__PURE__ */ Ae.define();\nfunction jg(t, e) {\n  let n = t.state.facet(DC);\n  if (!n.length)\n    return n;\n  let r = n.map((s) => s instanceof Function ? s(t) : s), i = [];\n  return mt.spans(r, e.from, e.to, {\n    point() {\n    },\n    span(s, a, o, l) {\n      let c = s - e.from, h = a - e.from, f = i;\n      for (let m = o.length - 1; m >= 0; m--, l--) {\n        let y = o[m].spec.bidiIsolate, v;\n        if (y == null && (y = S8(e.text, c, h)), l > 0 && f.length && (v = f[f.length - 1]).to == c && v.direction == y)\n          v.to = h, f = v.inner;\n        else {\n          let C = { from: c, to: h, direction: y, inner: [] };\n          f.push(C), f = C.inner;\n        }\n      }\n    }\n  }), i;\n}\nconst PC = /* @__PURE__ */ Ae.define();\nfunction Vd(t) {\n  let e = 0, n = 0, r = 0, i = 0;\n  for (let s of t.state.facet(PC)) {\n    let a = s(t);\n    a && (a.left != null && (e = Math.max(e, a.left)), a.right != null && (n = Math.max(n, a.right)), a.top != null && (r = Math.max(r, a.top)), a.bottom != null && (i = Math.max(i, a.bottom)));\n  }\n  return { left: e, right: n, top: r, bottom: i };\n}\nconst so = /* @__PURE__ */ Ae.define();\nclass Er {\n  constructor(e, n, r, i) {\n    this.fromA = e, this.toA = n, this.fromB = r, this.toB = i;\n  }\n  join(e) {\n    return new Er(Math.min(this.fromA, e.fromA), Math.max(this.toA, e.toA), Math.min(this.fromB, e.fromB), Math.max(this.toB, e.toB));\n  }\n  addToSet(e) {\n    let n = e.length, r = this;\n    for (; n > 0; n--) {\n      let i = e[n - 1];\n      if (!(i.fromA > r.toA)) {\n        if (i.toA < r.fromA)\n          break;\n        r = r.join(i), e.splice(n - 1, 1);\n      }\n    }\n    return e.splice(n, 0, r), e;\n  }\n  static extendWithRanges(e, n) {\n    if (n.length == 0)\n      return e;\n    let r = [];\n    for (let i = 0, s = 0, a = 0, o = 0; ; i++) {\n      let l = i == e.length ? null : e[i], c = a - o, h = l ? l.fromB : 1e9;\n      for (; s < n.length && n[s] < h; ) {\n        let f = n[s], m = n[s + 1], y = Math.max(o, f), v = Math.min(h, m);\n        if (y <= v && new Er(y + c, v + c, y, v).addToSet(r), m > h)\n          break;\n        s += 2;\n      }\n      if (!l)\n        return r;\n      new Er(l.fromA, l.toA, l.fromB, l.toB).addToSet(r), a = l.toA, o = l.toB;\n    }\n  }\n}\nclass Pu {\n  constructor(e, n, r) {\n    this.view = e, this.state = n, this.transactions = r, this.flags = 0, this.startState = e.state, this.changes = ln.empty(this.startState.doc.length);\n    for (let s of r)\n      this.changes = this.changes.compose(s.changes);\n    let i = [];\n    this.changes.iterChangedRanges((s, a, o, l) => i.push(new Er(s, a, o, l))), this.changedRanges = i;\n  }\n  /**\n  @internal\n  */\n  static create(e, n, r) {\n    return new Pu(e, n, r);\n  }\n  /**\n  Tells you whether the [viewport](https://codemirror.net/6/docs/ref/#view.EditorView.viewport) or\n  [visible ranges](https://codemirror.net/6/docs/ref/#view.EditorView.visibleRanges) changed in this\n  update.\n  */\n  get viewportChanged() {\n    return (this.flags & 4) > 0;\n  }\n  /**\n  Returns true when\n  [`viewportChanged`](https://codemirror.net/6/docs/ref/#view.ViewUpdate.viewportChanged) is true\n  and the viewport change is not just the result of mapping it in\n  response to document changes.\n  */\n  get viewportMoved() {\n    return (this.flags & 8) > 0;\n  }\n  /**\n  Indicates whether the height of a block element in the editor\n  changed in this update.\n  */\n  get heightChanged() {\n    return (this.flags & 2) > 0;\n  }\n  /**\n  Returns true when the document was modified or the size of the\n  editor, or elements within the editor, changed.\n  */\n  get geometryChanged() {\n    return this.docChanged || (this.flags & 18) > 0;\n  }\n  /**\n  True when this update indicates a focus change.\n  */\n  get focusChanged() {\n    return (this.flags & 1) > 0;\n  }\n  /**\n  Whether the document changed in this update.\n  */\n  get docChanged() {\n    return !this.changes.empty;\n  }\n  /**\n  Whether the selection was explicitly set in this update.\n  */\n  get selectionSet() {\n    return this.transactions.some((e) => e.selection);\n  }\n  /**\n  @internal\n  */\n  get empty() {\n    return this.flags == 0 && this.transactions.length == 0;\n  }\n}\nclass Rg extends At {\n  get length() {\n    return this.view.state.doc.length;\n  }\n  constructor(e) {\n    super(), this.view = e, this.decorations = [], this.dynamicDecorationMap = [!1], this.domChanged = null, this.hasComposition = null, this.markedForComposition = /* @__PURE__ */ new Set(), this.editContextFormatting = Te.none, this.lastCompositionAfterCursor = !1, this.minWidth = 0, this.minWidthFrom = 0, this.minWidthTo = 0, this.impreciseAnchor = null, this.impreciseHead = null, this.forceSelection = !1, this.lastUpdate = Date.now(), this.setDOM(e.contentDOM), this.children = [new en()], this.children[0].setParent(this), this.updateDeco(), this.updateInner([new Er(0, 0, 0, e.state.doc.length)], 0, null);\n  }\n  // Update the document view to a given state.\n  update(e) {\n    var n;\n    let r = e.changedRanges;\n    this.minWidth > 0 && r.length && (r.every(({ fromA: c, toA: h }) => h < this.minWidthFrom || c > this.minWidthTo) ? (this.minWidthFrom = e.changes.mapPos(this.minWidthFrom, 1), this.minWidthTo = e.changes.mapPos(this.minWidthTo, 1)) : this.minWidth = this.minWidthFrom = this.minWidthTo = 0), this.updateEditContextFormatting(e);\n    let i = -1;\n    this.view.inputState.composing >= 0 && !this.view.observer.editContext && (!((n = this.domChanged) === null || n === void 0) && n.newSel ? i = this.domChanged.newSel.head : !Q8(e.changes, this.hasComposition) && !e.selectionSet && (i = e.state.selection.main.head));\n    let s = i > -1 ? P8(this.view, e.changes, i) : null;\n    if (this.domChanged = null, this.hasComposition) {\n      this.markedForComposition.clear();\n      let { from: c, to: h } = this.hasComposition;\n      r = new Er(c, h, e.changes.mapPos(c, -1), e.changes.mapPos(h, 1)).addToSet(r.slice());\n    }\n    this.hasComposition = s ? { from: s.range.fromB, to: s.range.toB } : null, (ke.ie || ke.chrome) && !s && e && e.state.doc.lines != e.startState.doc.lines && (this.forceSelection = !0);\n    let a = this.decorations, o = this.updateDeco(), l = B8(a, o, e.changes);\n    return r = Er.extendWithRanges(r, l), !(this.flags & 7) && r.length == 0 ? !1 : (this.updateInner(r, e.startState.doc.length, s), e.transactions.length && (this.lastUpdate = Date.now()), !0);\n  }\n  // Used by update and the constructor do perform the actual DOM\n  // update\n  updateInner(e, n, r) {\n    this.view.viewState.mustMeasureContent = !0, this.updateChildren(e, n, r);\n    let { observer: i } = this.view;\n    i.ignore(() => {\n      this.dom.style.height = this.view.viewState.contentHeight / this.view.scaleY + "px", this.dom.style.flexBasis = this.minWidth ? this.minWidth + "px" : "";\n      let a = ke.chrome || ke.ios ? { node: i.selectionRange.focusNode, written: !1 } : void 0;\n      this.sync(this.view, a), this.flags &= -8, a && (a.written || i.selectionRange.focusNode != a.node) && (this.forceSelection = !0), this.dom.style.height = "";\n    }), this.markedForComposition.forEach(\n      (a) => a.flags &= -9\n      /* ViewFlag.Composition */\n    );\n    let s = [];\n    if (this.view.viewport.from || this.view.viewport.to < this.view.state.doc.length)\n      for (let a of this.children)\n        a instanceof Ei && a.widget instanceof zp && s.push(a.dom);\n    i.updateGaps(s);\n  }\n  updateChildren(e, n, r) {\n    let i = r ? r.range.addToSet(e.slice()) : e, s = this.childCursor(n);\n    for (let a = i.length - 1; ; a--) {\n      let o = a >= 0 ? i[a] : null;\n      if (!o)\n        break;\n      let { fromA: l, toA: c, fromB: h, toB: f } = o, m, y, v, C;\n      if (r && r.range.fromB < f && r.range.toB > h) {\n        let R = mo.build(this.view.state.doc, h, r.range.fromB, this.decorations, this.dynamicDecorationMap), B = mo.build(this.view.state.doc, r.range.toB, f, this.decorations, this.dynamicDecorationMap);\n        y = R.breakAtStart, v = R.openStart, C = B.openEnd;\n        let Z = this.compositionView(r);\n        B.breakAtStart ? Z.breakAfter = 1 : B.content.length && Z.merge(Z.length, Z.length, B.content[0], !1, B.openStart, 0) && (Z.breakAfter = B.content[0].breakAfter, B.content.shift()), R.content.length && Z.merge(0, 0, R.content[R.content.length - 1], !0, 0, R.openEnd) && R.content.pop(), m = R.content.concat(Z).concat(B.content);\n      } else\n        ({ content: m, breakAtStart: y, openStart: v, openEnd: C } = mo.build(this.view.state.doc, h, f, this.decorations, this.dynamicDecorationMap));\n      let { i: S, off: M } = s.findPos(c, 1), { i: $, off: U } = s.findPos(l, -1);\n      nC(this, $, U, S, M, m, y, v, C);\n    }\n    r && this.fixCompositionDOM(r);\n  }\n  updateEditContextFormatting(e) {\n    this.editContextFormatting = this.editContextFormatting.map(e.changes);\n    for (let n of e.transactions)\n      for (let r of n.effects)\n        r.is(CC) && (this.editContextFormatting = r.value);\n  }\n  compositionView(e) {\n    let n = new Gr(e.text.nodeValue);\n    n.flags |= 8;\n    for (let { deco: i } of e.marks)\n      n = new Ti(i, [n], n.length);\n    let r = new en();\n    return r.append(n, 0), r;\n  }\n  fixCompositionDOM(e) {\n    let n = (s, a) => {\n      a.flags |= 8 | (a.children.some(\n        (l) => l.flags & 7\n        /* ViewFlag.Dirty */\n      ) ? 1 : 0), this.markedForComposition.add(a);\n      let o = At.get(s);\n      o && o != a && (o.dom = null), a.setDOM(s);\n    }, r = this.childPos(e.range.fromB, 1), i = this.children[r.i];\n    n(e.line, i);\n    for (let s = e.marks.length - 1; s >= -1; s--)\n      r = i.childPos(r.off, 1), i = i.children[r.i], n(s >= 0 ? e.marks[s].node : e.text, i);\n  }\n  // Sync the DOM selection to this.state.selection\n  updateSelection(e = !1, n = !1) {\n    (e || !this.view.observer.selectionRange.focusNode) && this.view.observer.readSelectionRange();\n    let r = this.view.root.activeElement, i = r == this.dom, s = !i && !(this.view.state.facet(Si) || this.dom.tabIndex > -1) && iu(this.dom, this.view.observer.selectionRange) && !(r && this.dom.contains(r));\n    if (!(i || n || s))\n      return;\n    let a = this.forceSelection;\n    this.forceSelection = !1;\n    let o = this.view.state.selection.main, l = this.moveToLine(this.domAtPos(o.anchor)), c = o.empty ? l : this.moveToLine(this.domAtPos(o.head));\n    if (ke.gecko && o.empty && !this.hasComposition && D8(l)) {\n      let f = document.createTextNode("");\n      this.view.observer.ignore(() => l.node.insertBefore(f, l.node.childNodes[l.offset] || null)), l = c = new Pn(f, 0), a = !0;\n    }\n    let h = this.view.observer.selectionRange;\n    (a || !h.focusNode || (!fo(l.node, l.offset, h.anchorNode, h.anchorOffset) || !fo(c.node, c.offset, h.focusNode, h.focusOffset)) && !this.suppressWidgetCursorChange(h, o)) && (this.view.observer.ignore(() => {\n      ke.android && ke.chrome && this.dom.contains(h.focusNode) && M8(h.focusNode, this.dom) && (this.dom.blur(), this.dom.focus({ preventScroll: !0 }));\n      let f = Ao(this.view.root);\n      if (f) if (o.empty) {\n        if (ke.gecko) {\n          let m = E8(l.node, l.offset);\n          if (m && m != 3) {\n            let y = (m == 1 ? Jw : eC)(l.node, l.offset);\n            y && (l = new Pn(y.node, y.offset));\n          }\n        }\n        f.collapse(l.node, l.offset), o.bidiLevel != null && f.caretBidiLevel !== void 0 && (f.caretBidiLevel = o.bidiLevel);\n      } else if (f.extend) {\n        f.collapse(l.node, l.offset);\n        try {\n          f.extend(c.node, c.offset);\n        } catch {\n        }\n      } else {\n        let m = document.createRange();\n        o.anchor > o.head && ([l, c] = [c, l]), m.setEnd(c.node, c.offset), m.setStart(l.node, l.offset), f.removeAllRanges(), f.addRange(m);\n      }\n      s && this.view.root.activeElement == this.dom && (this.dom.blur(), r && r.focus());\n    }), this.view.observer.setSelectionRange(l, c)), this.impreciseAnchor = l.precise ? null : new Pn(h.anchorNode, h.anchorOffset), this.impreciseHead = c.precise ? null : new Pn(h.focusNode, h.focusOffset);\n  }\n  // If a zero-length widget is inserted next to the cursor during\n  // composition, avoid moving it across it and disrupting the\n  // composition.\n  suppressWidgetCursorChange(e, n) {\n    return this.hasComposition && n.empty && fo(e.focusNode, e.focusOffset, e.anchorNode, e.anchorOffset) && this.posFromDOM(e.focusNode, e.focusOffset) == n.head;\n  }\n  enforceCursorAssoc() {\n    if (this.hasComposition)\n      return;\n    let { view: e } = this, n = e.state.selection.main, r = Ao(e.root), { anchorNode: i, anchorOffset: s } = e.observer.selectionRange;\n    if (!r || !n.empty || !n.assoc || !r.modify)\n      return;\n    let a = en.find(this, n.head);\n    if (!a)\n      return;\n    let o = a.posAtStart;\n    if (n.head == o || n.head == o + a.length)\n      return;\n    let l = this.coordsAt(n.head, -1), c = this.coordsAt(n.head, 1);\n    if (!l || !c || l.bottom > c.top)\n      return;\n    let h = this.domAtPos(n.head + n.assoc);\n    r.collapse(h.node, h.offset), r.modify("move", n.assoc < 0 ? "forward" : "backward", "lineboundary"), e.observer.readSelectionRange();\n    let f = e.observer.selectionRange;\n    e.docView.posFromDOM(f.anchorNode, f.anchorOffset) != n.from && r.collapse(i, s);\n  }\n  // If a position is in/near a block widget, move it to a nearby text\n  // line, since we don\'t want the cursor inside a block widget.\n  moveToLine(e) {\n    let n = this.dom, r;\n    if (e.node != n)\n      return e;\n    for (let i = e.offset; !r && i < n.childNodes.length; i++) {\n      let s = At.get(n.childNodes[i]);\n      s instanceof en && (r = s.domAtPos(0));\n    }\n    for (let i = e.offset - 1; !r && i >= 0; i--) {\n      let s = At.get(n.childNodes[i]);\n      s instanceof en && (r = s.domAtPos(s.length));\n    }\n    return r ? new Pn(r.node, r.offset, !0) : e;\n  }\n  nearest(e) {\n    for (let n = e; n; ) {\n      let r = At.get(n);\n      if (r && r.rootView == this)\n        return r;\n      n = n.parentNode;\n    }\n    return null;\n  }\n  posFromDOM(e, n) {\n    let r = this.nearest(e);\n    if (!r)\n      throw new RangeError("Trying to find position for a DOM position outside of the document");\n    return r.localPosFromDOM(e, n) + r.posAtStart;\n  }\n  domAtPos(e) {\n    let { i: n, off: r } = this.childCursor().findPos(e, -1);\n    for (; n < this.children.length - 1; ) {\n      let i = this.children[n];\n      if (r < i.length || i instanceof en)\n        break;\n      n++, r = 0;\n    }\n    return this.children[n].domAtPos(r);\n  }\n  coordsAt(e, n) {\n    let r = null, i = 0;\n    for (let s = this.length, a = this.children.length - 1; a >= 0; a--) {\n      let o = this.children[a], l = s - o.breakAfter, c = l - o.length;\n      if (l < e)\n        break;\n      if (c <= e && (c < e || o.covers(-1)) && (l > e || o.covers(1)) && (!r || o instanceof en && !(r instanceof en && n >= 0)))\n        r = o, i = c;\n      else if (r && c == e && l == e && o instanceof Ei && Math.abs(n) < 2) {\n        if (o.deco.startSide < 0)\n          break;\n        a && (r = null);\n      }\n      s = c;\n    }\n    return r ? r.coordsAt(e - i, n) : null;\n  }\n  coordsForChar(e) {\n    let { i: n, off: r } = this.childPos(e, 1), i = this.children[n];\n    if (!(i instanceof en))\n      return null;\n    for (; i.children.length; ) {\n      let { i: o, off: l } = i.childPos(r, 1);\n      for (; ; o++) {\n        if (o == i.children.length)\n          return null;\n        if ((i = i.children[o]).length)\n          break;\n      }\n      r = l;\n    }\n    if (!(i instanceof Gr))\n      return null;\n    let s = kn(i.text, r);\n    if (s == r)\n      return null;\n    let a = Ts(i.dom, r, s).getClientRects();\n    for (let o = 0; o < a.length; o++) {\n      let l = a[o];\n      if (o == a.length - 1 || l.top < l.bottom && l.left < l.right)\n        return l;\n    }\n    return null;\n  }\n  measureVisibleLineHeights(e) {\n    let n = [], { from: r, to: i } = e, s = this.view.contentDOM.clientWidth, a = s > Math.max(this.view.scrollDOM.clientWidth, this.minWidth) + 1, o = -1, l = this.view.textDirection == Dt.LTR;\n    for (let c = 0, h = 0; h < this.children.length; h++) {\n      let f = this.children[h], m = c + f.length;\n      if (m > i)\n        break;\n      if (c >= r) {\n        let y = f.dom.getBoundingClientRect();\n        if (n.push(y.height), a) {\n          let v = f.dom.lastChild, C = v ? Do(v) : [];\n          if (C.length) {\n            let S = C[C.length - 1], M = l ? S.right - y.left : y.right - S.left;\n            M > o && (o = M, this.minWidth = s, this.minWidthFrom = c, this.minWidthTo = m);\n          }\n        }\n      }\n      c = m + f.breakAfter;\n    }\n    return n;\n  }\n  textDirectionAt(e) {\n    let { i: n } = this.childPos(e, 1);\n    return getComputedStyle(this.children[n].dom).direction == "rtl" ? Dt.RTL : Dt.LTR;\n  }\n  measureTextSize() {\n    for (let s of this.children)\n      if (s instanceof en) {\n        let a = s.measureTextSize();\n        if (a)\n          return a;\n      }\n    let e = document.createElement("div"), n, r, i;\n    return e.className = "cm-line", e.style.width = "99999px", e.style.position = "absolute", e.textContent = "abc def ghi jkl mno pqr stu", this.view.observer.ignore(() => {\n      this.dom.appendChild(e);\n      let s = Do(e.firstChild)[0];\n      n = e.getBoundingClientRect().height, r = s ? s.width / 27 : 7, i = s ? s.height : n, e.remove();\n    }), { lineHeight: n, charWidth: r, textHeight: i };\n  }\n  childCursor(e = this.length) {\n    let n = this.children.length;\n    return n && (e -= this.children[--n].length), new tC(this.children, e, n);\n  }\n  computeBlockGapDeco() {\n    let e = [], n = this.view.viewState;\n    for (let r = 0, i = 0; ; i++) {\n      let s = i == n.viewports.length ? null : n.viewports[i], a = s ? s.from - 1 : this.length;\n      if (a > r) {\n        let o = (n.lineBlockAt(a).bottom - n.lineBlockAt(r).top) / this.view.scaleY;\n        e.push(Te.replace({\n          widget: new zp(o),\n          block: !0,\n          inclusive: !0,\n          isBlockGap: !0\n        }).range(r, a));\n      }\n      if (!s)\n        break;\n      r = s.to + 1;\n    }\n    return Te.set(e);\n  }\n  updateDeco() {\n    let e = 1, n = this.view.state.facet(Po).map((s) => (this.dynamicDecorationMap[e++] = typeof s == "function") ? s(this.view) : s), r = !1, i = this.view.state.facet(AC).map((s, a) => {\n      let o = typeof s == "function";\n      return o && (r = !0), o ? s(this.view) : s;\n    });\n    for (i.length && (this.dynamicDecorationMap[e++] = r, n.push(mt.join(i))), this.decorations = [\n      this.editContextFormatting,\n      ...n,\n      this.computeBlockGapDeco(),\n      this.view.viewState.lineGapDeco\n    ]; e < this.decorations.length; )\n      this.dynamicDecorationMap[e++] = !1;\n    return this.decorations;\n  }\n  scrollIntoView(e) {\n    if (e.isSnapshot) {\n      let c = this.view.viewState.lineBlockAt(e.range.head);\n      this.view.scrollDOM.scrollTop = c.top - e.yMargin, this.view.scrollDOM.scrollLeft = e.xMargin;\n      return;\n    }\n    for (let c of this.view.state.facet(wC))\n      try {\n        if (c(this.view, e.range, e))\n          return !0;\n      } catch (h) {\n        qn(this.view.state, h, "scroll handler");\n      }\n    let { range: n } = e, r = this.coordsAt(n.head, n.empty ? n.assoc : n.head > n.anchor ? -1 : 1), i;\n    if (!r)\n      return;\n    !n.empty && (i = this.coordsAt(n.anchor, n.anchor > n.head ? -1 : 1)) && (r = {\n      left: Math.min(r.left, i.left),\n      top: Math.min(r.top, i.top),\n      right: Math.max(r.right, i.right),\n      bottom: Math.max(r.bottom, i.bottom)\n    });\n    let s = Vd(this.view), a = {\n      left: r.left - s.left,\n      top: r.top - s.top,\n      right: r.right + s.right,\n      bottom: r.bottom + s.bottom\n    }, { offsetWidth: o, offsetHeight: l } = this.view.scrollDOM;\n    o8(this.view.scrollDOM, a, n.head < n.anchor ? -1 : 1, e.x, e.y, Math.max(Math.min(e.xMargin, o), -o), Math.max(Math.min(e.yMargin, l), -l), this.view.textDirection == Dt.LTR);\n  }\n}\nfunction D8(t) {\n  return t.node.nodeType == 1 && t.node.firstChild && (t.offset == 0 || t.node.childNodes[t.offset - 1].contentEditable == "false") && (t.offset == t.node.childNodes.length || t.node.childNodes[t.offset].contentEditable == "false");\n}\nfunction EC(t, e) {\n  let n = t.observer.selectionRange;\n  if (!n.focusNode)\n    return null;\n  let r = Jw(n.focusNode, n.focusOffset), i = eC(n.focusNode, n.focusOffset), s = r || i;\n  if (i && r && i.node != r.node) {\n    let o = At.get(i.node);\n    if (!o || o instanceof Gr && o.text != i.node.nodeValue)\n      s = i;\n    else if (t.docView.lastCompositionAfterCursor) {\n      let l = At.get(r.node);\n      !l || l instanceof Gr && l.text != r.node.nodeValue || (s = i);\n    }\n  }\n  if (t.docView.lastCompositionAfterCursor = s != r, !s)\n    return null;\n  let a = e - s.offset;\n  return { from: a, to: a + s.node.nodeValue.length, node: s.node };\n}\nfunction P8(t, e, n) {\n  let r = EC(t, n);\n  if (!r)\n    return null;\n  let { node: i, from: s, to: a } = r, o = i.nodeValue;\n  if (/[\\n\\r]/.test(o) || t.state.doc.sliceString(r.from, r.to) != o)\n    return null;\n  let l = e.invertedDesc, c = new Er(l.mapPos(s), l.mapPos(a), s, a), h = [];\n  for (let f = i.parentNode; ; f = f.parentNode) {\n    let m = At.get(f);\n    if (m instanceof Ti)\n      h.push({ node: f, deco: m.mark });\n    else {\n      if (m instanceof en || f.nodeName == "DIV" && f.parentNode == t.contentDOM)\n        return { range: c, text: i, marks: h, line: f };\n      if (f != t.contentDOM)\n        h.push({ node: f, deco: new qo({\n          inclusive: !0,\n          attributes: m8(f),\n          tagName: f.tagName.toLowerCase()\n        }) });\n      else\n        return null;\n    }\n  }\n}\nfunction E8(t, e) {\n  return t.nodeType != 1 ? 0 : (e && t.childNodes[e - 1].contentEditable == "false" ? 1 : 0) | (e < t.childNodes.length && t.childNodes[e].contentEditable == "false" ? 2 : 0);\n}\nlet F8 = class {\n  constructor() {\n    this.changes = [];\n  }\n  compareRange(e, n) {\n    su(e, n, this.changes);\n  }\n  comparePoint(e, n) {\n    su(e, n, this.changes);\n  }\n  boundChange(e) {\n    su(e, e, this.changes);\n  }\n};\nfunction B8(t, e, n) {\n  let r = new F8();\n  return mt.compare(t, e, n, r), r.changes;\n}\nfunction M8(t, e) {\n  for (let n = t; n && n != e; n = n.assignedSlot || n.parentNode)\n    if (n.nodeType == 1 && n.contentEditable == "false")\n      return !0;\n  return !1;\n}\nfunction Q8(t, e) {\n  let n = !1;\n  return e && t.iterChangedRanges((r, i) => {\n    r < e.to && i > e.from && (n = !0);\n  }), n;\n}\nfunction T8(t, e, n = 1) {\n  let r = t.charCategorizer(e), i = t.doc.lineAt(e), s = e - i.from;\n  if (i.length == 0)\n    return ne.cursor(e);\n  s == 0 ? n = 1 : s == i.length && (n = -1);\n  let a = s, o = s;\n  n < 0 ? a = kn(i.text, s, !1) : o = kn(i.text, s);\n  let l = r(i.text.slice(a, o));\n  for (; a > 0; ) {\n    let c = kn(i.text, a, !1);\n    if (r(i.text.slice(c, a)) != l)\n      break;\n    a = c;\n  }\n  for (; o < i.length; ) {\n    let c = kn(i.text, o);\n    if (r(i.text.slice(o, c)) != l)\n      break;\n    o = c;\n  }\n  return ne.range(a + i.from, o + i.from);\n}\nfunction j8(t, e) {\n  return e.left > t ? e.left - t : Math.max(0, t - e.right);\n}\nfunction R8(t, e) {\n  return e.top > t ? e.top - t : Math.max(0, t - e.bottom);\n}\nfunction Ih(t, e) {\n  return t.top < e.bottom - 1 && t.bottom > e.top + 1;\n}\nfunction _g(t, e) {\n  return e < t.top ? { top: e, left: t.left, right: t.right, bottom: t.bottom } : t;\n}\nfunction Zg(t, e) {\n  return e > t.bottom ? { top: t.top, left: t.left, right: t.right, bottom: e } : t;\n}\nfunction ef(t, e, n) {\n  let r, i, s, a, o = !1, l, c, h, f;\n  for (let v = t.firstChild; v; v = v.nextSibling) {\n    let C = Do(v);\n    for (let S = 0; S < C.length; S++) {\n      let M = C[S];\n      i && Ih(i, M) && (M = _g(Zg(M, i.bottom), i.top));\n      let $ = j8(e, M), U = R8(n, M);\n      if ($ == 0 && U == 0)\n        return v.nodeType == 3 ? $g(v, e, n) : ef(v, e, n);\n      if (!r || a > U || a == U && s > $) {\n        r = v, i = M, s = $, a = U;\n        let R = U ? n < M.top ? -1 : 1 : $ ? e < M.left ? -1 : 1 : 0;\n        o = !R || (R > 0 ? S < C.length - 1 : S > 0);\n      }\n      $ == 0 ? n > M.bottom && (!h || h.bottom < M.bottom) ? (l = v, h = M) : n < M.top && (!f || f.top > M.top) && (c = v, f = M) : h && Ih(h, M) ? h = Zg(h, M.bottom) : f && Ih(f, M) && (f = _g(f, M.top));\n    }\n  }\n  if (h && h.bottom >= n ? (r = l, i = h) : f && f.top <= n && (r = c, i = f), !r)\n    return { node: t, offset: 0 };\n  let m = Math.max(i.left, Math.min(i.right, e));\n  if (r.nodeType == 3)\n    return $g(r, m, n);\n  if (o && r.contentEditable != "false")\n    return ef(r, m, n);\n  let y = Array.prototype.indexOf.call(t.childNodes, r) + (e >= (i.left + i.right) / 2 ? 1 : 0);\n  return { node: t, offset: y };\n}\nfunction $g(t, e, n) {\n  let r = t.nodeValue.length, i = -1, s = 1e9, a = 0;\n  for (let o = 0; o < r; o++) {\n    let l = Ts(t, o, o + 1).getClientRects();\n    for (let c = 0; c < l.length; c++) {\n      let h = l[c];\n      if (h.top == h.bottom)\n        continue;\n      a || (a = e - h.left);\n      let f = (h.top > n ? h.top - n : n - h.bottom) - 1;\n      if (h.left - 1 <= e && h.right + 1 >= e && f < s) {\n        let m = e >= (h.left + h.right) / 2, y = m;\n        if ((ke.chrome || ke.gecko) && Ts(t, o).getBoundingClientRect().left == h.right && (y = !m), f <= 0)\n          return { node: t, offset: o + (y ? 1 : 0) };\n        i = o + (y ? 1 : 0), s = f;\n      }\n    }\n  }\n  return { node: t, offset: i > -1 ? i : a > 0 ? t.nodeValue.length : 0 };\n}\nfunction FC(t, e, n, r = -1) {\n  var i, s;\n  let a = t.contentDOM.getBoundingClientRect(), o = a.top + t.viewState.paddingTop, l, { docHeight: c } = t.viewState, { x: h, y: f } = e, m = f - o;\n  if (m < 0)\n    return 0;\n  if (m > c)\n    return t.state.doc.length;\n  for (let R = t.viewState.heightOracle.textHeight / 2, B = !1; l = t.elementAtHeight(m), l.type != Rn.Text; )\n    for (; m = r > 0 ? l.bottom + R : l.top - R, !(m >= 0 && m <= c); ) {\n      if (B)\n        return n ? null : 0;\n      B = !0, r = -r;\n    }\n  f = o + m;\n  let y = l.from;\n  if (y < t.viewport.from)\n    return t.viewport.from == 0 ? 0 : n ? null : Lg(t, a, l, h, f);\n  if (y > t.viewport.to)\n    return t.viewport.to == t.state.doc.length ? t.state.doc.length : n ? null : Lg(t, a, l, h, f);\n  let v = t.dom.ownerDocument, C = t.root.elementFromPoint ? t.root : v, S = C.elementFromPoint(h, f);\n  S && !t.contentDOM.contains(S) && (S = null), S || (h = Math.max(a.left + 1, Math.min(a.right - 1, h)), S = C.elementFromPoint(h, f), S && !t.contentDOM.contains(S) && (S = null));\n  let M, $ = -1;\n  if (S && ((i = t.docView.nearest(S)) === null || i === void 0 ? void 0 : i.isEditable) != !1) {\n    if (v.caretPositionFromPoint) {\n      let R = v.caretPositionFromPoint(h, f);\n      R && ({ offsetNode: M, offset: $ } = R);\n    } else if (v.caretRangeFromPoint) {\n      let R = v.caretRangeFromPoint(h, f);\n      R && ({ startContainer: M, startOffset: $ } = R, (!t.contentDOM.contains(M) || ke.safari && _8(M, $, h) || ke.chrome && Z8(M, $, h)) && (M = void 0));\n    }\n    M && ($ = Math.min(gi(M), $));\n  }\n  if (!M || !t.docView.dom.contains(M)) {\n    let R = en.find(t.docView, y);\n    if (!R)\n      return m > l.top + l.height / 2 ? l.to : l.from;\n    ({ node: M, offset: $ } = ef(R.dom, h, f));\n  }\n  let U = t.docView.nearest(M);\n  if (!U)\n    return null;\n  if (U.isWidget && ((s = U.dom) === null || s === void 0 ? void 0 : s.nodeType) == 1) {\n    let R = U.dom.getBoundingClientRect();\n    return e.y < R.top || e.y <= R.bottom && e.x <= (R.left + R.right) / 2 ? U.posAtStart : U.posAtEnd;\n  } else\n    return U.localPosFromDOM(M, $) + U.posAtStart;\n}\nfunction Lg(t, e, n, r, i) {\n  let s = Math.round((r - e.left) * t.defaultCharacterWidth);\n  if (t.lineWrapping && n.height > t.defaultLineHeight * 1.5) {\n    let o = t.viewState.heightOracle.textHeight, l = Math.floor((i - n.top - (t.defaultLineHeight - o) * 0.5) / o);\n    s += l * t.viewState.heightOracle.lineLength;\n  }\n  let a = t.state.sliceDoc(n.from, n.to);\n  return n.from + t8(a, s, t.state.tabSize);\n}\nfunction _8(t, e, n) {\n  let r;\n  if (t.nodeType != 3 || e != (r = t.nodeValue.length))\n    return !1;\n  for (let i = t.nextSibling; i; i = i.nextSibling)\n    if (i.nodeType != 1 || i.nodeName != "BR")\n      return !1;\n  return Ts(t, r - 1, r).getBoundingClientRect().left > n;\n}\nfunction Z8(t, e, n) {\n  if (e != 0)\n    return !1;\n  for (let i = t; ; ) {\n    let s = i.parentNode;\n    if (!s || s.nodeType != 1 || s.firstChild != i)\n      return !1;\n    if (s.classList.contains("cm-line"))\n      break;\n    i = s;\n  }\n  let r = t.nodeType == 1 ? t.getBoundingClientRect() : Ts(t, 0, Math.max(t.nodeValue.length, 1)).getBoundingClientRect();\n  return n - r.left > 5;\n}\nfunction tf(t, e) {\n  let n = t.lineBlockAt(e);\n  if (Array.isArray(n.type)) {\n    for (let r of n.type)\n      if (r.to > e || r.to == e && (r.to == n.to || r.type == Rn.Text))\n        return r;\n  }\n  return n;\n}\nfunction $8(t, e, n, r) {\n  let i = tf(t, e.head), s = !r || i.type != Rn.Text || !(t.lineWrapping || i.widgetLineBreaks) ? null : t.coordsAtPos(e.assoc < 0 && e.head > i.from ? e.head - 1 : e.head);\n  if (s) {\n    let a = t.dom.getBoundingClientRect(), o = t.textDirectionAt(i.from), l = t.posAtCoords({\n      x: n == (o == Dt.LTR) ? a.right - 1 : a.left + 1,\n      y: (s.top + s.bottom) / 2\n    });\n    if (l != null)\n      return ne.cursor(l, n ? -1 : 1);\n  }\n  return ne.cursor(n ? i.to : i.from, n ? -1 : 1);\n}\nfunction Ig(t, e, n, r) {\n  let i = t.state.doc.lineAt(e.head), s = t.bidiSpans(i), a = t.textDirectionAt(i.from);\n  for (let o = e, l = null; ; ) {\n    let c = C8(i, s, a, o, n), h = dC;\n    if (!c) {\n      if (i.number == (n ? t.state.doc.lines : 1))\n        return o;\n      h = `\n`, i = t.state.doc.line(i.number + (n ? 1 : -1)), s = t.bidiSpans(i), c = t.visualLineSide(i, !n);\n    }\n    if (l) {\n      if (!l(h))\n        return o;\n    } else {\n      if (!r)\n        return c;\n      l = r(h);\n    }\n    o = c;\n  }\n}\nfunction L8(t, e, n) {\n  let r = t.state.charCategorizer(e), i = r(n);\n  return (s) => {\n    let a = r(s);\n    return i == sn.Space && (i = a), i == a;\n  };\n}\nfunction I8(t, e, n, r) {\n  let i = e.head, s = n ? 1 : -1;\n  if (i == (n ? t.state.doc.length : 0))\n    return ne.cursor(i, e.assoc);\n  let a = e.goalColumn, o, l = t.contentDOM.getBoundingClientRect(), c = t.coordsAtPos(i, e.assoc || -1), h = t.documentTop;\n  if (c)\n    a == null && (a = c.left - l.left), o = s < 0 ? c.top : c.bottom;\n  else {\n    let y = t.viewState.lineBlockAt(i);\n    a == null && (a = Math.min(l.right - l.left, t.defaultCharacterWidth * (i - y.from))), o = (s < 0 ? y.top : y.bottom) + h;\n  }\n  let f = l.left + a, m = r ?? t.viewState.heightOracle.textHeight >> 1;\n  for (let y = 0; ; y += 10) {\n    let v = o + (m + y) * s, C = FC(t, { x: f, y: v }, !1, s);\n    if (v < l.top || v > l.bottom || (s < 0 ? C < i : C > i)) {\n      let S = t.docView.coordsForChar(C), M = !S || v < S.top ? -1 : 1;\n      return ne.cursor(C, M, void 0, a);\n    }\n  }\n}\nfunction au(t, e, n) {\n  for (; ; ) {\n    let r = 0;\n    for (let i of t)\n      i.between(e - 1, e + 1, (s, a, o) => {\n        if (e > s && e < a) {\n          let l = r || n || (e - s < a - e ? -1 : 1);\n          e = l < 0 ? s : a, r = l;\n        }\n      });\n    if (!r)\n      return e;\n  }\n}\nfunction Nh(t, e, n) {\n  let r = au(t.state.facet(Nd).map((i) => i(t)), n.from, e.head > n.from ? -1 : 1);\n  return r == n.from ? n : ne.cursor(r, r < n.from ? 1 : -1);\n}\nconst ao = "￿";\nclass N8 {\n  constructor(e, n) {\n    this.points = e, this.text = "", this.lineSeparator = n.facet(dt.lineSeparator);\n  }\n  append(e) {\n    this.text += e;\n  }\n  lineBreak() {\n    this.text += ao;\n  }\n  readRange(e, n) {\n    if (!e)\n      return this;\n    let r = e.parentNode;\n    for (let i = e; ; ) {\n      this.findPointBefore(r, i);\n      let s = this.text.length;\n      this.readNode(i);\n      let a = i.nextSibling;\n      if (a == n)\n        break;\n      let o = At.get(i), l = At.get(a);\n      (o && l ? o.breakAfter : (o ? o.breakAfter : Au(i)) || Au(a) && (i.nodeName != "BR" || i.cmIgnore) && this.text.length > s) && this.lineBreak(), i = a;\n    }\n    return this.findPointBefore(r, n), this;\n  }\n  readTextNode(e) {\n    let n = e.nodeValue;\n    for (let r of this.points)\n      r.node == e && (r.pos = this.text.length + Math.min(r.offset, n.length));\n    for (let r = 0, i = this.lineSeparator ? null : /\\r\\n?|\\n/g; ; ) {\n      let s = -1, a = 1, o;\n      if (this.lineSeparator ? (s = n.indexOf(this.lineSeparator, r), a = this.lineSeparator.length) : (o = i.exec(n)) && (s = o.index, a = o[0].length), this.append(n.slice(r, s < 0 ? n.length : s)), s < 0)\n        break;\n      if (this.lineBreak(), a > 1)\n        for (let l of this.points)\n          l.node == e && l.pos > this.text.length && (l.pos -= a - 1);\n      r = s + a;\n    }\n  }\n  readNode(e) {\n    if (e.cmIgnore)\n      return;\n    let n = At.get(e), r = n && n.overrideDOMText;\n    if (r != null) {\n      this.findPointInside(e, r.length);\n      for (let i = r.iter(); !i.next().done; )\n        i.lineBreak ? this.lineBreak() : this.append(i.value);\n    } else e.nodeType == 3 ? this.readTextNode(e) : e.nodeName == "BR" ? e.nextSibling && this.lineBreak() : e.nodeType == 1 && this.readRange(e.firstChild, null);\n  }\n  findPointBefore(e, n) {\n    for (let r of this.points)\n      r.node == e && e.childNodes[r.offset] == n && (r.pos = this.text.length);\n  }\n  findPointInside(e, n) {\n    for (let r of this.points)\n      (e.nodeType == 3 ? r.node == e : e.contains(r.node)) && (r.pos = this.text.length + (V8(e, r.node, r.offset) ? n : 0));\n  }\n}\nfunction V8(t, e, n) {\n  for (; ; ) {\n    if (!e || n < gi(e))\n      return !1;\n    if (e == t)\n      return !0;\n    n = Qs(e) + 1, e = e.parentNode;\n  }\n}\nclass Ng {\n  constructor(e, n) {\n    this.node = e, this.offset = n, this.pos = -1;\n  }\n}\nclass X8 {\n  constructor(e, n, r, i) {\n    this.typeOver = i, this.bounds = null, this.text = "", this.domChanged = n > -1;\n    let { impreciseHead: s, impreciseAnchor: a } = e.docView;\n    if (e.state.readOnly && n > -1)\n      this.newSel = null;\n    else if (n > -1 && (this.bounds = e.docView.domBoundsAround(n, r, 0))) {\n      let o = s || a ? [] : q8(e), l = new N8(o, e.state);\n      l.readRange(this.bounds.startDOM, this.bounds.endDOM), this.text = l.text, this.newSel = G8(o, this.bounds.from);\n    } else {\n      let o = e.observer.selectionRange, l = s && s.node == o.focusNode && s.offset == o.focusOffset || !Vp(e.contentDOM, o.focusNode) ? e.state.selection.main.head : e.docView.posFromDOM(o.focusNode, o.focusOffset), c = a && a.node == o.anchorNode && a.offset == o.anchorOffset || !Vp(e.contentDOM, o.anchorNode) ? e.state.selection.main.anchor : e.docView.posFromDOM(o.anchorNode, o.anchorOffset), h = e.viewport;\n      if ((ke.ios || ke.chrome) && e.state.selection.main.empty && l != c && (h.from > 0 || h.to < e.state.doc.length)) {\n        let f = Math.min(l, c), m = Math.max(l, c), y = h.from - f, v = h.to - m;\n        (y == 0 || y == 1 || f == 0) && (v == 0 || v == -1 || m == e.state.doc.length) && (l = 0, c = e.state.doc.length);\n      }\n      this.newSel = ne.single(c, l);\n    }\n  }\n}\nfunction BC(t, e) {\n  let n, { newSel: r } = e, i = t.state.selection.main, s = t.inputState.lastKeyTime > Date.now() - 100 ? t.inputState.lastKeyCode : -1;\n  if (e.bounds) {\n    let { from: a, to: o } = e.bounds, l = i.from, c = null;\n    (s === 8 || ke.android && e.text.length < o - a) && (l = i.to, c = "end");\n    let h = U8(t.state.doc.sliceString(a, o, ao), e.text, l - a, c);\n    h && (ke.chrome && s == 13 && h.toB == h.from + 2 && e.text.slice(h.from, h.toB) == ao + ao && h.toB--, n = {\n      from: a + h.from,\n      to: a + h.toA,\n      insert: ht.of(e.text.slice(h.from, h.toB).split(ao))\n    });\n  } else r && (!t.hasFocus && t.state.facet(Si) || r.main.eq(i)) && (r = null);\n  if (!n && !r)\n    return !1;\n  if (!n && e.typeOver && !i.empty && r && r.main.empty ? n = { from: i.from, to: i.to, insert: t.state.doc.slice(i.from, i.to) } : (ke.mac || ke.android) && n && n.from == n.to && n.from == i.head - 1 && /^\\. ?$/.test(n.insert.toString()) && t.contentDOM.getAttribute("autocorrect") == "off" ? (r && n.insert.length == 2 && (r = ne.single(r.main.anchor - 1, r.main.head - 1)), n = { from: n.from, to: n.to, insert: ht.of([n.insert.toString().replace(".", " ")]) }) : n && n.from >= i.from && n.to <= i.to && (n.from != i.from || n.to != i.to) && i.to - i.from - (n.to - n.from) <= 4 ? n = {\n    from: i.from,\n    to: i.to,\n    insert: t.state.doc.slice(i.from, n.from).append(n.insert).append(t.state.doc.slice(n.to, i.to))\n  } : ke.chrome && n && n.from == n.to && n.from == i.head && n.insert.toString() == `\n ` && t.lineWrapping && (r && (r = ne.single(r.main.anchor - 1, r.main.head - 1)), n = { from: i.from, to: i.to, insert: ht.of([" "]) }), n)\n    return Xd(t, n, r, s);\n  if (r && !r.main.eq(i)) {\n    let a = !1, o = "select";\n    return t.inputState.lastSelectionTime > Date.now() - 50 && (t.inputState.lastSelectionOrigin == "select" && (a = !0), o = t.inputState.lastSelectionOrigin), t.dispatch({ selection: r, scrollIntoView: a, userEvent: o }), !0;\n  } else\n    return !1;\n}\nfunction Xd(t, e, n, r = -1) {\n  if (ke.ios && t.inputState.flushIOSKey(e))\n    return !0;\n  let i = t.state.selection.main;\n  if (ke.android && (e.to == i.to && // GBoard will sometimes remove a space it just inserted\n  // after a completion when you press enter\n  (e.from == i.from || e.from == i.from - 1 && t.state.sliceDoc(e.from, i.from) == " ") && e.insert.length == 1 && e.insert.lines == 2 && sa(t.contentDOM, "Enter", 13) || (e.from == i.from - 1 && e.to == i.to && e.insert.length == 0 || r == 8 && e.insert.length < e.to - e.from && e.to > i.head) && sa(t.contentDOM, "Backspace", 8) || e.from == i.from && e.to == i.to + 1 && e.insert.length == 0 && sa(t.contentDOM, "Delete", 46)))\n    return !0;\n  let s = e.insert.toString();\n  t.inputState.composing >= 0 && t.inputState.composing++;\n  let a, o = () => a || (a = W8(t, e, n));\n  return t.state.facet(OC).some((l) => l(t, e.from, e.to, s, o)) || t.dispatch(o()), !0;\n}\nfunction W8(t, e, n) {\n  let r, i = t.state, s = i.selection.main;\n  if (e.from >= s.from && e.to <= s.to && e.to - e.from >= (s.to - s.from) / 3 && (!n || n.main.empty && n.main.from == e.from + e.insert.length) && t.inputState.composing < 0) {\n    let o = s.from < e.from ? i.sliceDoc(s.from, e.from) : "", l = s.to > e.to ? i.sliceDoc(e.to, s.to) : "";\n    r = i.replaceSelection(t.state.toText(o + e.insert.sliceString(0, void 0, t.state.lineBreak) + l));\n  } else {\n    let o = i.changes(e), l = n && n.main.to <= o.newLength ? n.main : void 0;\n    if (i.selection.ranges.length > 1 && t.inputState.composing >= 0 && e.to <= s.to && e.to >= s.to - 10) {\n      let c = t.state.sliceDoc(e.from, e.to), h, f = n && EC(t, n.main.head);\n      if (f) {\n        let v = e.insert.length - (e.to - e.from);\n        h = { from: f.from, to: f.to - v };\n      } else\n        h = t.state.doc.lineAt(s.head);\n      let m = s.to - e.to, y = s.to - s.from;\n      r = i.changeByRange((v) => {\n        if (v.from == s.from && v.to == s.to)\n          return { changes: o, range: l || v.map(o) };\n        let C = v.to - m, S = C - c.length;\n        if (v.to - v.from != y || t.state.sliceDoc(S, C) != c || // Unfortunately, there\'s no way to make multiple\n        // changes in the same node work without aborting\n        // composition, so cursors in the composition range are\n        // ignored.\n        v.to >= h.from && v.from <= h.to)\n          return { range: v };\n        let M = i.changes({ from: S, to: C, insert: e.insert }), $ = v.to - s.to;\n        return {\n          changes: M,\n          range: l ? ne.range(Math.max(0, l.anchor + $), Math.max(0, l.head + $)) : v.map(M)\n        };\n      });\n    } else\n      r = {\n        changes: o,\n        selection: l && i.selection.replaceRange(l)\n      };\n  }\n  let a = "input.type";\n  return (t.composing || t.inputState.compositionPendingChange && t.inputState.compositionEndedAt > Date.now() - 50) && (t.inputState.compositionPendingChange = !1, a += ".compose", t.inputState.compositionFirstChange && (a += ".start", t.inputState.compositionFirstChange = !1)), i.update(r, { userEvent: a, scrollIntoView: !0 });\n}\nfunction U8(t, e, n, r) {\n  let i = Math.min(t.length, e.length), s = 0;\n  for (; s < i && t.charCodeAt(s) == e.charCodeAt(s); )\n    s++;\n  if (s == i && t.length == e.length)\n    return null;\n  let a = t.length, o = e.length;\n  for (; a > 0 && o > 0 && t.charCodeAt(a - 1) == e.charCodeAt(o - 1); )\n    a--, o--;\n  if (r == "end") {\n    let l = Math.max(0, s - Math.min(a, o));\n    n -= a + l - s;\n  }\n  if (a < s && t.length < e.length) {\n    let l = n <= s && n >= a ? s - n : 0;\n    s -= l, o = s + (o - a), a = s;\n  } else if (o < s) {\n    let l = n <= s && n >= o ? s - n : 0;\n    s -= l, a = s + (a - o), o = s;\n  }\n  return { from: s, toA: a, toB: o };\n}\nfunction q8(t) {\n  let e = [];\n  if (t.root.activeElement != t.contentDOM)\n    return e;\n  let { anchorNode: n, anchorOffset: r, focusNode: i, focusOffset: s } = t.observer.selectionRange;\n  return n && (e.push(new Ng(n, r)), (i != n || s != r) && e.push(new Ng(i, s))), e;\n}\nfunction G8(t, e) {\n  if (t.length == 0)\n    return null;\n  let n = t[0].pos, r = t.length == 2 ? t[1].pos : n;\n  return n > -1 && r > -1 ? ne.single(n + e, r + e) : null;\n}\nclass z8 {\n  setSelectionOrigin(e) {\n    this.lastSelectionOrigin = e, this.lastSelectionTime = Date.now();\n  }\n  constructor(e) {\n    this.view = e, this.lastKeyCode = 0, this.lastKeyTime = 0, this.lastTouchTime = 0, this.lastFocusTime = 0, this.lastScrollTop = 0, this.lastScrollLeft = 0, this.pendingIOSKey = void 0, this.tabFocusMode = -1, this.lastSelectionOrigin = null, this.lastSelectionTime = 0, this.lastContextMenu = 0, this.scrollHandlers = [], this.handlers = /* @__PURE__ */ Object.create(null), this.composing = -1, this.compositionFirstChange = null, this.compositionEndedAt = 0, this.compositionPendingKey = !1, this.compositionPendingChange = !1, this.mouseSelection = null, this.draggedContent = null, this.handleEvent = this.handleEvent.bind(this), this.notifiedFocused = e.hasFocus, ke.safari && e.contentDOM.addEventListener("input", () => null), ke.gecko && h6(e.contentDOM.ownerDocument);\n  }\n  handleEvent(e) {\n    !r6(this.view, e) || this.ignoreDuringComposition(e) || e.type == "keydown" && this.keydown(e) || this.runHandlers(e.type, e);\n  }\n  runHandlers(e, n) {\n    let r = this.handlers[e];\n    if (r) {\n      for (let i of r.observers)\n        i(this.view, n);\n      for (let i of r.handlers) {\n        if (n.defaultPrevented)\n          break;\n        if (i(this.view, n)) {\n          n.preventDefault();\n          break;\n        }\n      }\n    }\n  }\n  ensureHandlers(e) {\n    let n = H8(e), r = this.handlers, i = this.view.contentDOM;\n    for (let s in n)\n      if (s != "scroll") {\n        let a = !n[s].handlers.length, o = r[s];\n        o && a != !o.handlers.length && (i.removeEventListener(s, this.handleEvent), o = null), o || i.addEventListener(s, this.handleEvent, { passive: a });\n      }\n    for (let s in r)\n      s != "scroll" && !n[s] && i.removeEventListener(s, this.handleEvent);\n    this.handlers = n;\n  }\n  keydown(e) {\n    if (this.lastKeyCode = e.keyCode, this.lastKeyTime = Date.now(), e.keyCode == 9 && this.tabFocusMode > -1 && (!this.tabFocusMode || Date.now() <= this.tabFocusMode))\n      return !0;\n    if (this.tabFocusMode > 0 && e.keyCode != 27 && QC.indexOf(e.keyCode) < 0 && (this.tabFocusMode = -1), ke.android && ke.chrome && !e.synthetic && (e.keyCode == 13 || e.keyCode == 8))\n      return this.view.observer.delayAndroidKey(e.key, e.keyCode), !0;\n    let n;\n    return ke.ios && !e.synthetic && !e.altKey && !e.metaKey && ((n = MC.find((r) => r.keyCode == e.keyCode)) && !e.ctrlKey || Y8.indexOf(e.key) > -1 && e.ctrlKey && !e.shiftKey) ? (this.pendingIOSKey = n || e, setTimeout(() => this.flushIOSKey(), 250), !0) : (e.keyCode != 229 && this.view.observer.forceFlush(), !1);\n  }\n  flushIOSKey(e) {\n    let n = this.pendingIOSKey;\n    return !n || n.key == "Enter" && e && e.from < e.to && /^\\S+$/.test(e.insert.toString()) ? !1 : (this.pendingIOSKey = void 0, sa(this.view.contentDOM, n.key, n.keyCode, n instanceof KeyboardEvent ? n : void 0));\n  }\n  ignoreDuringComposition(e) {\n    return /^key/.test(e.type) ? this.composing > 0 ? !0 : ke.safari && !ke.ios && this.compositionPendingKey && Date.now() - this.compositionEndedAt < 100 ? (this.compositionPendingKey = !1, !0) : !1 : !1;\n  }\n  startMouseSelection(e) {\n    this.mouseSelection && this.mouseSelection.destroy(), this.mouseSelection = e;\n  }\n  update(e) {\n    this.view.observer.update(e), this.mouseSelection && this.mouseSelection.update(e), this.draggedContent && e.docChanged && (this.draggedContent = this.draggedContent.map(e.changes)), e.transactions.length && (this.lastKeyCode = this.lastSelectionTime = 0);\n  }\n  destroy() {\n    this.mouseSelection && this.mouseSelection.destroy();\n  }\n}\nfunction Vg(t, e) {\n  return (n, r) => {\n    try {\n      return e.call(t, r, n);\n    } catch (i) {\n      qn(n.state, i);\n    }\n  };\n}\nfunction H8(t) {\n  let e = /* @__PURE__ */ Object.create(null);\n  function n(r) {\n    return e[r] || (e[r] = { observers: [], handlers: [] });\n  }\n  for (let r of t) {\n    let i = r.spec;\n    if (i && i.domEventHandlers)\n      for (let s in i.domEventHandlers) {\n        let a = i.domEventHandlers[s];\n        a && n(s).handlers.push(Vg(r.value, a));\n      }\n    if (i && i.domEventObservers)\n      for (let s in i.domEventObservers) {\n        let a = i.domEventObservers[s];\n        a && n(s).observers.push(Vg(r.value, a));\n      }\n  }\n  for (let r in zr)\n    n(r).handlers.push(zr[r]);\n  for (let r in Br)\n    n(r).observers.push(Br[r]);\n  return e;\n}\nconst MC = [\n  { key: "Backspace", keyCode: 8, inputType: "deleteContentBackward" },\n  { key: "Enter", keyCode: 13, inputType: "insertParagraph" },\n  { key: "Enter", keyCode: 13, inputType: "insertLineBreak" },\n  { key: "Delete", keyCode: 46, inputType: "deleteContentForward" }\n], Y8 = "dthko", QC = [16, 17, 18, 20, 91, 92, 224, 225], Tl = 6;\nfunction jl(t) {\n  return Math.max(0, t) * 0.7 + 8;\n}\nfunction K8(t, e) {\n  return Math.max(Math.abs(t.clientX - e.clientX), Math.abs(t.clientY - e.clientY));\n}\nclass J8 {\n  constructor(e, n, r, i) {\n    this.view = e, this.startEvent = n, this.style = r, this.mustSelect = i, this.scrollSpeed = { x: 0, y: 0 }, this.scrolling = -1, this.lastEvent = n, this.scrollParents = l8(e.contentDOM), this.atoms = e.state.facet(Nd).map((a) => a(e));\n    let s = e.contentDOM.ownerDocument;\n    s.addEventListener("mousemove", this.move = this.move.bind(this)), s.addEventListener("mouseup", this.up = this.up.bind(this)), this.extend = n.shiftKey, this.multiple = e.state.facet(dt.allowMultipleSelections) && e6(e, n), this.dragging = n6(e, n) && RC(n) == 1 ? null : !1;\n  }\n  start(e) {\n    this.dragging === !1 && this.select(e);\n  }\n  move(e) {\n    if (e.buttons == 0)\n      return this.destroy();\n    if (this.dragging || this.dragging == null && K8(this.startEvent, e) < 10)\n      return;\n    this.select(this.lastEvent = e);\n    let n = 0, r = 0, i = 0, s = 0, a = this.view.win.innerWidth, o = this.view.win.innerHeight;\n    this.scrollParents.x && ({ left: i, right: a } = this.scrollParents.x.getBoundingClientRect()), this.scrollParents.y && ({ top: s, bottom: o } = this.scrollParents.y.getBoundingClientRect());\n    let l = Vd(this.view);\n    e.clientX - l.left <= i + Tl ? n = -jl(i - e.clientX) : e.clientX + l.right >= a - Tl && (n = jl(e.clientX - a)), e.clientY - l.top <= s + Tl ? r = -jl(s - e.clientY) : e.clientY + l.bottom >= o - Tl && (r = jl(e.clientY - o)), this.setScrollSpeed(n, r);\n  }\n  up(e) {\n    this.dragging == null && this.select(this.lastEvent), this.dragging || e.preventDefault(), this.destroy();\n  }\n  destroy() {\n    this.setScrollSpeed(0, 0);\n    let e = this.view.contentDOM.ownerDocument;\n    e.removeEventListener("mousemove", this.move), e.removeEventListener("mouseup", this.up), this.view.inputState.mouseSelection = this.view.inputState.draggedContent = null;\n  }\n  setScrollSpeed(e, n) {\n    this.scrollSpeed = { x: e, y: n }, e || n ? this.scrolling < 0 && (this.scrolling = setInterval(() => this.scroll(), 50)) : this.scrolling > -1 && (clearInterval(this.scrolling), this.scrolling = -1);\n  }\n  scroll() {\n    let { x: e, y: n } = this.scrollSpeed;\n    e && this.scrollParents.x && (this.scrollParents.x.scrollLeft += e, e = 0), n && this.scrollParents.y && (this.scrollParents.y.scrollTop += n, n = 0), (e || n) && this.view.win.scrollBy(e, n), this.dragging === !1 && this.select(this.lastEvent);\n  }\n  skipAtoms(e) {\n    let n = null;\n    for (let r = 0; r < e.ranges.length; r++) {\n      let i = e.ranges[r], s = null;\n      if (i.empty) {\n        let a = au(this.atoms, i.from, 0);\n        a != i.from && (s = ne.cursor(a, -1));\n      } else {\n        let a = au(this.atoms, i.from, -1), o = au(this.atoms, i.to, 1);\n        (a != i.from || o != i.to) && (s = ne.range(i.from == i.anchor ? a : o, i.from == i.head ? a : o));\n      }\n      s && (n || (n = e.ranges.slice()), n[r] = s);\n    }\n    return n ? ne.create(n, e.mainIndex) : e;\n  }\n  select(e) {\n    let { view: n } = this, r = this.skipAtoms(this.style.get(e, this.extend, this.multiple));\n    (this.mustSelect || !r.eq(n.state.selection, this.dragging === !1)) && this.view.dispatch({\n      selection: r,\n      userEvent: "select.pointer"\n    }), this.mustSelect = !1;\n  }\n  update(e) {\n    e.transactions.some((n) => n.isUserEvent("input.type")) ? this.destroy() : this.style.update(e) && setTimeout(() => this.select(this.lastEvent), 20);\n  }\n}\nfunction e6(t, e) {\n  let n = t.state.facet(mC);\n  return n.length ? n[0](e) : ke.mac ? e.metaKey : e.ctrlKey;\n}\nfunction t6(t, e) {\n  let n = t.state.facet(gC);\n  return n.length ? n[0](e) : ke.mac ? !e.altKey : !e.ctrlKey;\n}\nfunction n6(t, e) {\n  let { main: n } = t.state.selection;\n  if (n.empty)\n    return !1;\n  let r = Ao(t.root);\n  if (!r || r.rangeCount == 0)\n    return !0;\n  let i = r.getRangeAt(0).getClientRects();\n  for (let s = 0; s < i.length; s++) {\n    let a = i[s];\n    if (a.left <= e.clientX && a.right >= e.clientX && a.top <= e.clientY && a.bottom >= e.clientY)\n      return !0;\n  }\n  return !1;\n}\nfunction r6(t, e) {\n  if (!e.bubbles)\n    return !0;\n  if (e.defaultPrevented)\n    return !1;\n  for (let n = e.target, r; n != t.contentDOM; n = n.parentNode)\n    if (!n || n.nodeType == 11 || (r = At.get(n)) && r.ignoreEvent(e))\n      return !1;\n  return !0;\n}\nconst zr = /* @__PURE__ */ Object.create(null), Br = /* @__PURE__ */ Object.create(null), TC = ke.ie && ke.ie_version < 15 || ke.ios && ke.webkit_version < 604;\nfunction i6(t) {\n  let e = t.dom.parentNode;\n  if (!e)\n    return;\n  let n = e.appendChild(document.createElement("textarea"));\n  n.style.cssText = "position: fixed; left: -10000px; top: 10px", n.focus(), setTimeout(() => {\n    t.focus(), n.remove(), jC(t, n.value);\n  }, 50);\n}\nfunction Tc(t, e, n) {\n  for (let r of t.facet(e))\n    n = r(n, t);\n  return n;\n}\nfunction jC(t, e) {\n  e = Tc(t.state, $d, e);\n  let { state: n } = t, r, i = 1, s = n.toText(e), a = s.lines == n.selection.ranges.length;\n  if (nf != null && n.selection.ranges.every((l) => l.empty) && nf == s.toString()) {\n    let l = -1;\n    r = n.changeByRange((c) => {\n      let h = n.doc.lineAt(c.from);\n      if (h.from == l)\n        return { range: c };\n      l = h.from;\n      let f = n.toText((a ? s.line(i++).text : e) + n.lineBreak);\n      return {\n        changes: { from: h.from, insert: f },\n        range: ne.cursor(c.from + f.length)\n      };\n    });\n  } else a ? r = n.changeByRange((l) => {\n    let c = s.line(i++);\n    return {\n      changes: { from: l.from, to: l.to, insert: c.text },\n      range: ne.cursor(l.from + c.length)\n    };\n  }) : r = n.replaceSelection(s);\n  t.dispatch(r, {\n    userEvent: "input.paste",\n    scrollIntoView: !0\n  });\n}\nBr.scroll = (t) => {\n  t.inputState.lastScrollTop = t.scrollDOM.scrollTop, t.inputState.lastScrollLeft = t.scrollDOM.scrollLeft;\n};\nzr.keydown = (t, e) => (t.inputState.setSelectionOrigin("select"), e.keyCode == 27 && t.inputState.tabFocusMode != 0 && (t.inputState.tabFocusMode = Date.now() + 2e3), !1);\nBr.touchstart = (t, e) => {\n  t.inputState.lastTouchTime = Date.now(), t.inputState.setSelectionOrigin("select.pointer");\n};\nBr.touchmove = (t) => {\n  t.inputState.setSelectionOrigin("select.pointer");\n};\nzr.mousedown = (t, e) => {\n  if (t.observer.flush(), t.inputState.lastTouchTime > Date.now() - 2e3)\n    return !1;\n  let n = null;\n  for (let r of t.state.facet(bC))\n    if (n = r(t, e), n)\n      break;\n  if (!n && e.button == 0 && (n = o6(t, e)), n) {\n    let r = !t.hasFocus;\n    t.inputState.startMouseSelection(new J8(t, e, n, r)), r && t.observer.ignore(() => {\n      Hw(t.contentDOM);\n      let s = t.root.activeElement;\n      s && !s.contains(t.contentDOM) && s.blur();\n    });\n    let i = t.inputState.mouseSelection;\n    if (i)\n      return i.start(e), i.dragging === !1;\n  }\n  return !1;\n};\nfunction Xg(t, e, n, r) {\n  if (r == 1)\n    return ne.cursor(e, n);\n  if (r == 2)\n    return T8(t.state, e, n);\n  {\n    let i = en.find(t.docView, e), s = t.state.doc.lineAt(i ? i.posAtEnd : e), a = i ? i.posAtStart : s.from, o = i ? i.posAtEnd : s.to;\n    return o < t.state.doc.length && o == s.to && o++, ne.range(a, o);\n  }\n}\nlet Wg = (t, e, n) => e >= n.top && e <= n.bottom && t >= n.left && t <= n.right;\nfunction s6(t, e, n, r) {\n  let i = en.find(t.docView, e);\n  if (!i)\n    return 1;\n  let s = e - i.posAtStart;\n  if (s == 0)\n    return 1;\n  if (s == i.length)\n    return -1;\n  let a = i.coordsAt(s, -1);\n  if (a && Wg(n, r, a))\n    return -1;\n  let o = i.coordsAt(s, 1);\n  return o && Wg(n, r, o) ? 1 : a && a.bottom >= r ? -1 : 1;\n}\nfunction Ug(t, e) {\n  let n = t.posAtCoords({ x: e.clientX, y: e.clientY }, !1);\n  return { pos: n, bias: s6(t, n, e.clientX, e.clientY) };\n}\nconst a6 = ke.ie && ke.ie_version <= 11;\nlet qg = null, Gg = 0, zg = 0;\nfunction RC(t) {\n  if (!a6)\n    return t.detail;\n  let e = qg, n = zg;\n  return qg = t, zg = Date.now(), Gg = !e || n > Date.now() - 400 && Math.abs(e.clientX - t.clientX) < 2 && Math.abs(e.clientY - t.clientY) < 2 ? (Gg + 1) % 3 : 1;\n}\nfunction o6(t, e) {\n  let n = Ug(t, e), r = RC(e), i = t.state.selection;\n  return {\n    update(s) {\n      s.docChanged && (n.pos = s.changes.mapPos(n.pos), i = i.map(s.changes));\n    },\n    get(s, a, o) {\n      let l = Ug(t, s), c, h = Xg(t, l.pos, l.bias, r);\n      if (n.pos != l.pos && !a) {\n        let f = Xg(t, n.pos, n.bias, r), m = Math.min(f.from, h.from), y = Math.max(f.to, h.to);\n        h = m < h.from ? ne.range(m, y) : ne.range(y, m);\n      }\n      return a ? i.replaceRange(i.main.extend(h.from, h.to)) : o && r == 1 && i.ranges.length > 1 && (c = l6(i, l.pos)) ? c : o ? i.addRange(h) : ne.create([h]);\n    }\n  };\n}\nfunction l6(t, e) {\n  for (let n = 0; n < t.ranges.length; n++) {\n    let { from: r, to: i } = t.ranges[n];\n    if (r <= e && i >= e)\n      return ne.create(t.ranges.slice(0, n).concat(t.ranges.slice(n + 1)), t.mainIndex == n ? 0 : t.mainIndex - (t.mainIndex > n ? 1 : 0));\n  }\n  return null;\n}\nzr.dragstart = (t, e) => {\n  let { selection: { main: n } } = t.state;\n  if (e.target.draggable) {\n    let i = t.docView.nearest(e.target);\n    if (i && i.isWidget) {\n      let s = i.posAtStart, a = s + i.length;\n      (s >= n.to || a <= n.from) && (n = ne.range(s, a));\n    }\n  }\n  let { inputState: r } = t;\n  return r.mouseSelection && (r.mouseSelection.dragging = !0), r.draggedContent = n, e.dataTransfer && (e.dataTransfer.setData("Text", Tc(t.state, Ld, t.state.sliceDoc(n.from, n.to))), e.dataTransfer.effectAllowed = "copyMove"), !1;\n};\nzr.dragend = (t) => (t.inputState.draggedContent = null, !1);\nfunction Hg(t, e, n, r) {\n  if (n = Tc(t.state, $d, n), !n)\n    return;\n  let i = t.posAtCoords({ x: e.clientX, y: e.clientY }, !1), { draggedContent: s } = t.inputState, a = r && s && t6(t, e) ? { from: s.from, to: s.to } : null, o = { from: i, insert: n }, l = t.state.changes(a ? [a, o] : o);\n  t.focus(), t.dispatch({\n    changes: l,\n    selection: { anchor: l.mapPos(i, -1), head: l.mapPos(i, 1) },\n    userEvent: a ? "move.drop" : "input.drop"\n  }), t.inputState.draggedContent = null;\n}\nzr.drop = (t, e) => {\n  if (!e.dataTransfer)\n    return !1;\n  if (t.state.readOnly)\n    return !0;\n  let n = e.dataTransfer.files;\n  if (n && n.length) {\n    let r = Array(n.length), i = 0, s = () => {\n      ++i == n.length && Hg(t, e, r.filter((a) => a != null).join(t.state.lineBreak), !1);\n    };\n    for (let a = 0; a < n.length; a++) {\n      let o = new FileReader();\n      o.onerror = s, o.onload = () => {\n        /[\\x00-\\x08\\x0e-\\x1f]{2}/.test(o.result) || (r[a] = o.result), s();\n      }, o.readAsText(n[a]);\n    }\n    return !0;\n  } else {\n    let r = e.dataTransfer.getData("Text");\n    if (r)\n      return Hg(t, e, r, !0), !0;\n  }\n  return !1;\n};\nzr.paste = (t, e) => {\n  if (t.state.readOnly)\n    return !0;\n  t.observer.flush();\n  let n = TC ? null : e.clipboardData;\n  return n ? (jC(t, n.getData("text/plain") || n.getData("text/uri-list")), !0) : (i6(t), !1);\n};\nfunction u6(t, e) {\n  let n = t.dom.parentNode;\n  if (!n)\n    return;\n  let r = n.appendChild(document.createElement("textarea"));\n  r.style.cssText = "position: fixed; left: -10000px; top: 10px", r.value = e, r.focus(), r.selectionEnd = e.length, r.selectionStart = 0, setTimeout(() => {\n    r.remove(), t.focus();\n  }, 50);\n}\nfunction c6(t) {\n  let e = [], n = [], r = !1;\n  for (let i of t.selection.ranges)\n    i.empty || (e.push(t.sliceDoc(i.from, i.to)), n.push(i));\n  if (!e.length) {\n    let i = -1;\n    for (let { from: s } of t.selection.ranges) {\n      let a = t.doc.lineAt(s);\n      a.number > i && (e.push(a.text), n.push({ from: a.from, to: Math.min(t.doc.length, a.to + 1) })), i = a.number;\n    }\n    r = !0;\n  }\n  return { text: Tc(t, Ld, e.join(t.lineBreak)), ranges: n, linewise: r };\n}\nlet nf = null;\nzr.copy = zr.cut = (t, e) => {\n  let { text: n, ranges: r, linewise: i } = c6(t.state);\n  if (!n && !i)\n    return !1;\n  nf = i ? n : null, e.type == "cut" && !t.state.readOnly && t.dispatch({\n    changes: r,\n    scrollIntoView: !0,\n    userEvent: "delete.cut"\n  });\n  let s = TC ? null : e.clipboardData;\n  return s ? (s.clearData(), s.setData("text/plain", n), !0) : (u6(t, n), !1);\n};\nconst _C = /* @__PURE__ */ _i.define();\nfunction ZC(t, e) {\n  let n = [];\n  for (let r of t.facet(vC)) {\n    let i = r(t, e);\n    i && n.push(i);\n  }\n  return n ? t.update({ effects: n, annotations: _C.of(!0) }) : null;\n}\nfunction $C(t) {\n  setTimeout(() => {\n    let e = t.hasFocus;\n    if (e != t.inputState.notifiedFocused) {\n      let n = ZC(t.state, e);\n      n ? t.dispatch(n) : t.update([]);\n    }\n  }, 10);\n}\nBr.focus = (t) => {\n  t.inputState.lastFocusTime = Date.now(), !t.scrollDOM.scrollTop && (t.inputState.lastScrollTop || t.inputState.lastScrollLeft) && (t.scrollDOM.scrollTop = t.inputState.lastScrollTop, t.scrollDOM.scrollLeft = t.inputState.lastScrollLeft), $C(t);\n};\nBr.blur = (t) => {\n  t.observer.clearSelectionRange(), $C(t);\n};\nBr.compositionstart = Br.compositionupdate = (t) => {\n  t.observer.editContext || (t.inputState.compositionFirstChange == null && (t.inputState.compositionFirstChange = !0), t.inputState.composing < 0 && (t.inputState.composing = 0));\n};\nBr.compositionend = (t) => {\n  t.observer.editContext || (t.inputState.composing = -1, t.inputState.compositionEndedAt = Date.now(), t.inputState.compositionPendingKey = !0, t.inputState.compositionPendingChange = t.observer.pendingRecords().length > 0, t.inputState.compositionFirstChange = null, ke.chrome && ke.android ? t.observer.flushSoon() : t.inputState.compositionPendingChange ? Promise.resolve().then(() => t.observer.flush()) : setTimeout(() => {\n    t.inputState.composing < 0 && t.docView.hasComposition && t.update([]);\n  }, 50));\n};\nBr.contextmenu = (t) => {\n  t.inputState.lastContextMenu = Date.now();\n};\nzr.beforeinput = (t, e) => {\n  var n, r;\n  if (e.inputType == "insertReplacementText" && t.observer.editContext) {\n    let s = (n = e.dataTransfer) === null || n === void 0 ? void 0 : n.getData("text/plain"), a = e.getTargetRanges();\n    if (s && a.length) {\n      let o = a[0], l = t.posAtDOM(o.startContainer, o.startOffset), c = t.posAtDOM(o.endContainer, o.endOffset);\n      return Xd(t, { from: l, to: c, insert: t.state.toText(s) }, null), !0;\n    }\n  }\n  let i;\n  if (ke.chrome && ke.android && (i = MC.find((s) => s.inputType == e.inputType)) && (t.observer.delayAndroidKey(i.key, i.keyCode), i.key == "Backspace" || i.key == "Delete")) {\n    let s = ((r = window.visualViewport) === null || r === void 0 ? void 0 : r.height) || 0;\n    setTimeout(() => {\n      var a;\n      (((a = window.visualViewport) === null || a === void 0 ? void 0 : a.height) || 0) > s + 10 && t.hasFocus && (t.contentDOM.blur(), t.focus());\n    }, 100);\n  }\n  return ke.ios && e.inputType == "deleteContentForward" && t.observer.flushSoon(), ke.safari && e.inputType == "insertText" && t.inputState.composing >= 0 && setTimeout(() => Br.compositionend(t, e), 20), !1;\n};\nconst Yg = /* @__PURE__ */ new Set();\nfunction h6(t) {\n  Yg.has(t) || (Yg.add(t), t.addEventListener("copy", () => {\n  }), t.addEventListener("cut", () => {\n  }));\n}\nconst Kg = ["pre-wrap", "normal", "pre-line", "break-spaces"];\nlet va = !1;\nfunction Jg() {\n  va = !1;\n}\nclass p6 {\n  constructor(e) {\n    this.lineWrapping = e, this.doc = ht.empty, this.heightSamples = {}, this.lineHeight = 14, this.charWidth = 7, this.textHeight = 14, this.lineLength = 30;\n  }\n  heightForGap(e, n) {\n    let r = this.doc.lineAt(n).number - this.doc.lineAt(e).number + 1;\n    return this.lineWrapping && (r += Math.max(0, Math.ceil((n - e - r * this.lineLength * 0.5) / this.lineLength))), this.lineHeight * r;\n  }\n  heightForLine(e) {\n    return this.lineWrapping ? (1 + Math.max(0, Math.ceil((e - this.lineLength) / (this.lineLength - 5)))) * this.lineHeight : this.lineHeight;\n  }\n  setDoc(e) {\n    return this.doc = e, this;\n  }\n  mustRefreshForWrapping(e) {\n    return Kg.indexOf(e) > -1 != this.lineWrapping;\n  }\n  mustRefreshForHeights(e) {\n    let n = !1;\n    for (let r = 0; r < e.length; r++) {\n      let i = e[r];\n      i < 0 ? r++ : this.heightSamples[Math.floor(i * 10)] || (n = !0, this.heightSamples[Math.floor(i * 10)] = !0);\n    }\n    return n;\n  }\n  refresh(e, n, r, i, s, a) {\n    let o = Kg.indexOf(e) > -1, l = Math.round(n) != Math.round(this.lineHeight) || this.lineWrapping != o;\n    if (this.lineWrapping = o, this.lineHeight = n, this.charWidth = r, this.textHeight = i, this.lineLength = s, l) {\n      this.heightSamples = {};\n      for (let c = 0; c < a.length; c++) {\n        let h = a[c];\n        h < 0 ? c++ : this.heightSamples[Math.floor(h * 10)] = !0;\n      }\n    }\n    return l;\n  }\n}\nclass f6 {\n  constructor(e, n) {\n    this.from = e, this.heights = n, this.index = 0;\n  }\n  get more() {\n    return this.index < this.heights.length;\n  }\n}\nclass pi {\n  /**\n  @internal\n  */\n  constructor(e, n, r, i, s) {\n    this.from = e, this.length = n, this.top = r, this.height = i, this._content = s;\n  }\n  /**\n  The type of element this is. When querying lines, this may be\n  an array of all the blocks that make up the line.\n  */\n  get type() {\n    return typeof this._content == "number" ? Rn.Text : Array.isArray(this._content) ? this._content : this._content.type;\n  }\n  /**\n  The end of the element as a document position.\n  */\n  get to() {\n    return this.from + this.length;\n  }\n  /**\n  The bottom position of the element.\n  */\n  get bottom() {\n    return this.top + this.height;\n  }\n  /**\n  If this is a widget block, this will return the widget\n  associated with it.\n  */\n  get widget() {\n    return this._content instanceof ts ? this._content.widget : null;\n  }\n  /**\n  If this is a textblock, this holds the number of line breaks\n  that appear in widgets inside the block.\n  */\n  get widgetLineBreaks() {\n    return typeof this._content == "number" ? this._content : 0;\n  }\n  /**\n  @internal\n  */\n  join(e) {\n    let n = (Array.isArray(this._content) ? this._content : [this]).concat(Array.isArray(e._content) ? e._content : [e]);\n    return new pi(this.from, this.length + e.length, this.top, this.height + e.height, n);\n  }\n}\nvar Tt = /* @__PURE__ */ function(t) {\n  return t[t.ByPos = 0] = "ByPos", t[t.ByHeight = 1] = "ByHeight", t[t.ByPosNoHeight = 2] = "ByPosNoHeight", t;\n}(Tt || (Tt = {}));\nconst ou = 1e-3;\nclass _n {\n  constructor(e, n, r = 2) {\n    this.length = e, this.height = n, this.flags = r;\n  }\n  get outdated() {\n    return (this.flags & 2) > 0;\n  }\n  set outdated(e) {\n    this.flags = (e ? 2 : 0) | this.flags & -3;\n  }\n  setHeight(e) {\n    this.height != e && (Math.abs(this.height - e) > ou && (va = !0), this.height = e);\n  }\n  // Base case is to replace a leaf node, which simply builds a tree\n  // from the new nodes and returns that (HeightMapBranch and\n  // HeightMapGap override this to actually use from/to)\n  replace(e, n, r) {\n    return _n.of(r);\n  }\n  // Again, these are base cases, and are overridden for branch and gap nodes.\n  decomposeLeft(e, n) {\n    n.push(this);\n  }\n  decomposeRight(e, n) {\n    n.push(this);\n  }\n  applyChanges(e, n, r, i) {\n    let s = this, a = r.doc;\n    for (let o = i.length - 1; o >= 0; o--) {\n      let { fromA: l, toA: c, fromB: h, toB: f } = i[o], m = s.lineAt(l, Tt.ByPosNoHeight, r.setDoc(n), 0, 0), y = m.to >= c ? m : s.lineAt(c, Tt.ByPosNoHeight, r, 0, 0);\n      for (f += y.to - c, c = y.to; o > 0 && m.from <= i[o - 1].toA; )\n        l = i[o - 1].fromA, h = i[o - 1].fromB, o--, l < m.from && (m = s.lineAt(l, Tt.ByPosNoHeight, r, 0, 0));\n      h += m.from - l, l = m.from;\n      let v = Wd.build(r.setDoc(a), e, h, f);\n      s = Eu(s, s.replace(l, c, v));\n    }\n    return s.updateHeight(r, 0);\n  }\n  static empty() {\n    return new cr(0, 0);\n  }\n  // nodes uses null values to indicate the position of line breaks.\n  // There are never line breaks at the start or end of the array, or\n  // two line breaks next to each other, and the array isn\'t allowed\n  // to be empty (same restrictions as return value from the builder).\n  static of(e) {\n    if (e.length == 1)\n      return e[0];\n    let n = 0, r = e.length, i = 0, s = 0;\n    for (; ; )\n      if (n == r)\n        if (i > s * 2) {\n          let o = e[n - 1];\n          o.break ? e.splice(--n, 1, o.left, null, o.right) : e.splice(--n, 1, o.left, o.right), r += 1 + o.break, i -= o.size;\n        } else if (s > i * 2) {\n          let o = e[r];\n          o.break ? e.splice(r, 1, o.left, null, o.right) : e.splice(r, 1, o.left, o.right), r += 2 + o.break, s -= o.size;\n        } else\n          break;\n      else if (i < s) {\n        let o = e[n++];\n        o && (i += o.size);\n      } else {\n        let o = e[--r];\n        o && (s += o.size);\n      }\n    let a = 0;\n    return e[n - 1] == null ? (a = 1, n--) : e[n] == null && (a = 1, r++), new d6(_n.of(e.slice(0, n)), a, _n.of(e.slice(r)));\n  }\n}\nfunction Eu(t, e) {\n  return t == e ? t : (t.constructor != e.constructor && (va = !0), e);\n}\n_n.prototype.size = 1;\nclass LC extends _n {\n  constructor(e, n, r) {\n    super(e, n), this.deco = r;\n  }\n  blockAt(e, n, r, i) {\n    return new pi(i, this.length, r, this.height, this.deco || 0);\n  }\n  lineAt(e, n, r, i, s) {\n    return this.blockAt(0, r, i, s);\n  }\n  forEachLine(e, n, r, i, s, a) {\n    e <= s + this.length && n >= s && a(this.blockAt(0, r, i, s));\n  }\n  updateHeight(e, n = 0, r = !1, i) {\n    return i && i.from <= n && i.more && this.setHeight(i.heights[i.index++]), this.outdated = !1, this;\n  }\n  toString() {\n    return `block(${this.length})`;\n  }\n}\nclass cr extends LC {\n  constructor(e, n) {\n    super(e, n, null), this.collapsed = 0, this.widgetHeight = 0, this.breaks = 0;\n  }\n  blockAt(e, n, r, i) {\n    return new pi(i, this.length, r, this.height, this.breaks);\n  }\n  replace(e, n, r) {\n    let i = r[0];\n    return r.length == 1 && (i instanceof cr || i instanceof vn && i.flags & 4) && Math.abs(this.length - i.length) < 10 ? (i instanceof vn ? i = new cr(i.length, this.height) : i.height = this.height, this.outdated || (i.outdated = !1), i) : _n.of(r);\n  }\n  updateHeight(e, n = 0, r = !1, i) {\n    return i && i.from <= n && i.more ? this.setHeight(i.heights[i.index++]) : (r || this.outdated) && this.setHeight(Math.max(this.widgetHeight, e.heightForLine(this.length - this.collapsed)) + this.breaks * e.lineHeight), this.outdated = !1, this;\n  }\n  toString() {\n    return `line(${this.length}${this.collapsed ? -this.collapsed : ""}${this.widgetHeight ? ":" + this.widgetHeight : ""})`;\n  }\n}\nclass vn extends _n {\n  constructor(e) {\n    super(e, 0);\n  }\n  heightMetrics(e, n) {\n    let r = e.doc.lineAt(n).number, i = e.doc.lineAt(n + this.length).number, s = i - r + 1, a, o = 0;\n    if (e.lineWrapping) {\n      let l = Math.min(this.height, e.lineHeight * s);\n      a = l / s, this.length > s + 1 && (o = (this.height - l) / (this.length - s - 1));\n    } else\n      a = this.height / s;\n    return { firstLine: r, lastLine: i, perLine: a, perChar: o };\n  }\n  blockAt(e, n, r, i) {\n    let { firstLine: s, lastLine: a, perLine: o, perChar: l } = this.heightMetrics(n, i);\n    if (n.lineWrapping) {\n      let c = i + (e < n.lineHeight ? 0 : Math.round(Math.max(0, Math.min(1, (e - r) / this.height)) * this.length)), h = n.doc.lineAt(c), f = o + h.length * l, m = Math.max(r, e - f / 2);\n      return new pi(h.from, h.length, m, f, 0);\n    } else {\n      let c = Math.max(0, Math.min(a - s, Math.floor((e - r) / o))), { from: h, length: f } = n.doc.line(s + c);\n      return new pi(h, f, r + o * c, o, 0);\n    }\n  }\n  lineAt(e, n, r, i, s) {\n    if (n == Tt.ByHeight)\n      return this.blockAt(e, r, i, s);\n    if (n == Tt.ByPosNoHeight) {\n      let { from: y, to: v } = r.doc.lineAt(e);\n      return new pi(y, v - y, 0, 0, 0);\n    }\n    let { firstLine: a, perLine: o, perChar: l } = this.heightMetrics(r, s), c = r.doc.lineAt(e), h = o + c.length * l, f = c.number - a, m = i + o * f + l * (c.from - s - f);\n    return new pi(c.from, c.length, Math.max(i, Math.min(m, i + this.height - h)), h, 0);\n  }\n  forEachLine(e, n, r, i, s, a) {\n    e = Math.max(e, s), n = Math.min(n, s + this.length);\n    let { firstLine: o, perLine: l, perChar: c } = this.heightMetrics(r, s);\n    for (let h = e, f = i; h <= n; ) {\n      let m = r.doc.lineAt(h);\n      if (h == e) {\n        let v = m.number - o;\n        f += l * v + c * (e - s - v);\n      }\n      let y = l + c * m.length;\n      a(new pi(m.from, m.length, f, y, 0)), f += y, h = m.to + 1;\n    }\n  }\n  replace(e, n, r) {\n    let i = this.length - n;\n    if (i > 0) {\n      let s = r[r.length - 1];\n      s instanceof vn ? r[r.length - 1] = new vn(s.length + i) : r.push(null, new vn(i - 1));\n    }\n    if (e > 0) {\n      let s = r[0];\n      s instanceof vn ? r[0] = new vn(e + s.length) : r.unshift(new vn(e - 1), null);\n    }\n    return _n.of(r);\n  }\n  decomposeLeft(e, n) {\n    n.push(new vn(e - 1), null);\n  }\n  decomposeRight(e, n) {\n    n.push(null, new vn(this.length - e - 1));\n  }\n  updateHeight(e, n = 0, r = !1, i) {\n    let s = n + this.length;\n    if (i && i.from <= n + this.length && i.more) {\n      let a = [], o = Math.max(n, i.from), l = -1;\n      for (i.from > n && a.push(new vn(i.from - n - 1).updateHeight(e, n)); o <= s && i.more; ) {\n        let h = e.doc.lineAt(o).length;\n        a.length && a.push(null);\n        let f = i.heights[i.index++];\n        l == -1 ? l = f : Math.abs(f - l) >= ou && (l = -2);\n        let m = new cr(h, f);\n        m.outdated = !1, a.push(m), o += h + 1;\n      }\n      o <= s && a.push(null, new vn(s - o).updateHeight(e, o));\n      let c = _n.of(a);\n      return (l < 0 || Math.abs(c.height - this.height) >= ou || Math.abs(l - this.heightMetrics(e, n).perLine) >= ou) && (va = !0), Eu(this, c);\n    } else (r || this.outdated) && (this.setHeight(e.heightForGap(n, n + this.length)), this.outdated = !1);\n    return this;\n  }\n  toString() {\n    return `gap(${this.length})`;\n  }\n}\nclass d6 extends _n {\n  constructor(e, n, r) {\n    super(e.length + n + r.length, e.height + r.height, n | (e.outdated || r.outdated ? 2 : 0)), this.left = e, this.right = r, this.size = e.size + r.size;\n  }\n  get break() {\n    return this.flags & 1;\n  }\n  blockAt(e, n, r, i) {\n    let s = r + this.left.height;\n    return e < s ? this.left.blockAt(e, n, r, i) : this.right.blockAt(e, n, s, i + this.left.length + this.break);\n  }\n  lineAt(e, n, r, i, s) {\n    let a = i + this.left.height, o = s + this.left.length + this.break, l = n == Tt.ByHeight ? e < a : e < o, c = l ? this.left.lineAt(e, n, r, i, s) : this.right.lineAt(e, n, r, a, o);\n    if (this.break || (l ? c.to < o : c.from > o))\n      return c;\n    let h = n == Tt.ByPosNoHeight ? Tt.ByPosNoHeight : Tt.ByPos;\n    return l ? c.join(this.right.lineAt(o, h, r, a, o)) : this.left.lineAt(o, h, r, i, s).join(c);\n  }\n  forEachLine(e, n, r, i, s, a) {\n    let o = i + this.left.height, l = s + this.left.length + this.break;\n    if (this.break)\n      e < l && this.left.forEachLine(e, n, r, i, s, a), n >= l && this.right.forEachLine(e, n, r, o, l, a);\n    else {\n      let c = this.lineAt(l, Tt.ByPos, r, i, s);\n      e < c.from && this.left.forEachLine(e, c.from - 1, r, i, s, a), c.to >= e && c.from <= n && a(c), n > c.to && this.right.forEachLine(c.to + 1, n, r, o, l, a);\n    }\n  }\n  replace(e, n, r) {\n    let i = this.left.length + this.break;\n    if (n < i)\n      return this.balanced(this.left.replace(e, n, r), this.right);\n    if (e > this.left.length)\n      return this.balanced(this.left, this.right.replace(e - i, n - i, r));\n    let s = [];\n    e > 0 && this.decomposeLeft(e, s);\n    let a = s.length;\n    for (let o of r)\n      s.push(o);\n    if (e > 0 && e0(s, a - 1), n < this.length) {\n      let o = s.length;\n      this.decomposeRight(n, s), e0(s, o);\n    }\n    return _n.of(s);\n  }\n  decomposeLeft(e, n) {\n    let r = this.left.length;\n    if (e <= r)\n      return this.left.decomposeLeft(e, n);\n    n.push(this.left), this.break && (r++, e >= r && n.push(null)), e > r && this.right.decomposeLeft(e - r, n);\n  }\n  decomposeRight(e, n) {\n    let r = this.left.length, i = r + this.break;\n    if (e >= i)\n      return this.right.decomposeRight(e - i, n);\n    e < r && this.left.decomposeRight(e, n), this.break && e < i && n.push(null), n.push(this.right);\n  }\n  balanced(e, n) {\n    return e.size > 2 * n.size || n.size > 2 * e.size ? _n.of(this.break ? [e, null, n] : [e, n]) : (this.left = Eu(this.left, e), this.right = Eu(this.right, n), this.setHeight(e.height + n.height), this.outdated = e.outdated || n.outdated, this.size = e.size + n.size, this.length = e.length + this.break + n.length, this);\n  }\n  updateHeight(e, n = 0, r = !1, i) {\n    let { left: s, right: a } = this, o = n + s.length + this.break, l = null;\n    return i && i.from <= n + s.length && i.more ? l = s = s.updateHeight(e, n, r, i) : s.updateHeight(e, n, r), i && i.from <= o + a.length && i.more ? l = a = a.updateHeight(e, o, r, i) : a.updateHeight(e, o, r), l ? this.balanced(s, a) : (this.height = this.left.height + this.right.height, this.outdated = !1, this);\n  }\n  toString() {\n    return this.left + (this.break ? " " : "-") + this.right;\n  }\n}\nfunction e0(t, e) {\n  let n, r;\n  t[e] == null && (n = t[e - 1]) instanceof vn && (r = t[e + 1]) instanceof vn && t.splice(e - 1, 3, new vn(n.length + 1 + r.length));\n}\nconst m6 = 5;\nclass Wd {\n  constructor(e, n) {\n    this.pos = e, this.oracle = n, this.nodes = [], this.lineStart = -1, this.lineEnd = -1, this.covering = null, this.writtenTo = e;\n  }\n  get isCovered() {\n    return this.covering && this.nodes[this.nodes.length - 1] == this.covering;\n  }\n  span(e, n) {\n    if (this.lineStart > -1) {\n      let r = Math.min(n, this.lineEnd), i = this.nodes[this.nodes.length - 1];\n      i instanceof cr ? i.length += r - this.pos : (r > this.pos || !this.isCovered) && this.nodes.push(new cr(r - this.pos, -1)), this.writtenTo = r, n > r && (this.nodes.push(null), this.writtenTo++, this.lineStart = -1);\n    }\n    this.pos = n;\n  }\n  point(e, n, r) {\n    if (e < n || r.heightRelevant) {\n      let i = r.widget ? r.widget.estimatedHeight : 0, s = r.widget ? r.widget.lineBreaks : 0;\n      i < 0 && (i = this.oracle.lineHeight);\n      let a = n - e;\n      r.block ? this.addBlock(new LC(a, i, r)) : (a || s || i >= m6) && this.addLineDeco(i, s, a);\n    } else n > e && this.span(e, n);\n    this.lineEnd > -1 && this.lineEnd < this.pos && (this.lineEnd = this.oracle.doc.lineAt(this.pos).to);\n  }\n  enterLine() {\n    if (this.lineStart > -1)\n      return;\n    let { from: e, to: n } = this.oracle.doc.lineAt(this.pos);\n    this.lineStart = e, this.lineEnd = n, this.writtenTo < e && ((this.writtenTo < e - 1 || this.nodes[this.nodes.length - 1] == null) && this.nodes.push(this.blankContent(this.writtenTo, e - 1)), this.nodes.push(null)), this.pos > e && this.nodes.push(new cr(this.pos - e, -1)), this.writtenTo = this.pos;\n  }\n  blankContent(e, n) {\n    let r = new vn(n - e);\n    return this.oracle.doc.lineAt(e).to == n && (r.flags |= 4), r;\n  }\n  ensureLine() {\n    this.enterLine();\n    let e = this.nodes.length ? this.nodes[this.nodes.length - 1] : null;\n    if (e instanceof cr)\n      return e;\n    let n = new cr(0, -1);\n    return this.nodes.push(n), n;\n  }\n  addBlock(e) {\n    this.enterLine();\n    let n = e.deco;\n    n && n.startSide > 0 && !this.isCovered && this.ensureLine(), this.nodes.push(e), this.writtenTo = this.pos = this.pos + e.length, n && n.endSide > 0 && (this.covering = e);\n  }\n  addLineDeco(e, n, r) {\n    let i = this.ensureLine();\n    i.length += r, i.collapsed += r, i.widgetHeight = Math.max(i.widgetHeight, e), i.breaks += n, this.writtenTo = this.pos = this.pos + r;\n  }\n  finish(e) {\n    let n = this.nodes.length == 0 ? null : this.nodes[this.nodes.length - 1];\n    this.lineStart > -1 && !(n instanceof cr) && !this.isCovered ? this.nodes.push(new cr(0, -1)) : (this.writtenTo < this.pos || n == null) && this.nodes.push(this.blankContent(this.writtenTo, this.pos));\n    let r = e;\n    for (let i of this.nodes)\n      i instanceof cr && i.updateHeight(this.oracle, r), r += i ? i.length : 1;\n    return this.nodes;\n  }\n  // Always called with a region that on both sides either stretches\n  // to a line break or the end of the document.\n  // The returned array uses null to indicate line breaks, but never\n  // starts or ends in a line break, or has multiple line breaks next\n  // to each other.\n  static build(e, n, r, i) {\n    let s = new Wd(r, e);\n    return mt.spans(n, r, i, s, 0), s.finish(r);\n  }\n}\nfunction g6(t, e, n) {\n  let r = new b6();\n  return mt.compare(t, e, n, r, 0), r.changes;\n}\nclass b6 {\n  constructor() {\n    this.changes = [];\n  }\n  compareRange() {\n  }\n  comparePoint(e, n, r, i) {\n    (e < n || r && r.heightRelevant || i && i.heightRelevant) && su(e, n, this.changes, 5);\n  }\n}\nfunction y6(t, e) {\n  let n = t.getBoundingClientRect(), r = t.ownerDocument, i = r.defaultView || window, s = Math.max(0, n.left), a = Math.min(i.innerWidth, n.right), o = Math.max(0, n.top), l = Math.min(i.innerHeight, n.bottom);\n  for (let c = t.parentNode; c && c != r.body; )\n    if (c.nodeType == 1) {\n      let h = c, f = window.getComputedStyle(h);\n      if ((h.scrollHeight > h.clientHeight || h.scrollWidth > h.clientWidth) && f.overflow != "visible") {\n        let m = h.getBoundingClientRect();\n        s = Math.max(s, m.left), a = Math.min(a, m.right), o = Math.max(o, m.top), l = Math.min(c == t.parentNode ? i.innerHeight : l, m.bottom);\n      }\n      c = f.position == "absolute" || f.position == "fixed" ? h.offsetParent : h.parentNode;\n    } else if (c.nodeType == 11)\n      c = c.host;\n    else\n      break;\n  return {\n    left: s - n.left,\n    right: Math.max(s, a) - n.left,\n    top: o - (n.top + e),\n    bottom: Math.max(o, l) - (n.top + e)\n  };\n}\nfunction O6(t) {\n  let e = t.getBoundingClientRect(), n = t.ownerDocument.defaultView || window;\n  return e.left < n.innerWidth && e.right > 0 && e.top < n.innerHeight && e.bottom > 0;\n}\nfunction v6(t, e) {\n  let n = t.getBoundingClientRect();\n  return {\n    left: 0,\n    right: n.right - n.left,\n    top: e,\n    bottom: n.bottom - (n.top + e)\n  };\n}\nclass Vh {\n  constructor(e, n, r, i) {\n    this.from = e, this.to = n, this.size = r, this.displaySize = i;\n  }\n  static same(e, n) {\n    if (e.length != n.length)\n      return !1;\n    for (let r = 0; r < e.length; r++) {\n      let i = e[r], s = n[r];\n      if (i.from != s.from || i.to != s.to || i.size != s.size)\n        return !1;\n    }\n    return !0;\n  }\n  draw(e, n) {\n    return Te.replace({\n      widget: new x6(this.displaySize * (n ? e.scaleY : e.scaleX), n)\n    }).range(this.from, this.to);\n  }\n}\nclass x6 extends Zi {\n  constructor(e, n) {\n    super(), this.size = e, this.vertical = n;\n  }\n  eq(e) {\n    return e.size == this.size && e.vertical == this.vertical;\n  }\n  toDOM() {\n    let e = document.createElement("div");\n    return this.vertical ? e.style.height = this.size + "px" : (e.style.width = this.size + "px", e.style.height = "2px", e.style.display = "inline-block"), e;\n  }\n  get estimatedHeight() {\n    return this.vertical ? this.size : -1;\n  }\n}\nclass t0 {\n  constructor(e) {\n    this.state = e, this.pixelViewport = { left: 0, right: window.innerWidth, top: 0, bottom: 0 }, this.inView = !0, this.paddingTop = 0, this.paddingBottom = 0, this.contentDOMWidth = 0, this.contentDOMHeight = 0, this.editorHeight = 0, this.editorWidth = 0, this.scrollTop = 0, this.scrolledToBottom = !1, this.scaleX = 1, this.scaleY = 1, this.scrollAnchorPos = 0, this.scrollAnchorHeight = -1, this.scaler = n0, this.scrollTarget = null, this.printing = !1, this.mustMeasureContent = !0, this.defaultTextDirection = Dt.LTR, this.visibleRanges = [], this.mustEnforceCursorAssoc = !1;\n    let n = e.facet(Id).some((r) => typeof r != "function" && r.class == "cm-lineWrapping");\n    this.heightOracle = new p6(n), this.stateDeco = e.facet(Po).filter((r) => typeof r != "function"), this.heightMap = _n.empty().applyChanges(this.stateDeco, ht.empty, this.heightOracle.setDoc(e.doc), [new Er(0, 0, 0, e.doc.length)]);\n    for (let r = 0; r < 2 && (this.viewport = this.getViewport(0, null), !!this.updateForViewport()); r++)\n      ;\n    this.updateViewportLines(), this.lineGaps = this.ensureLineGaps([]), this.lineGapDeco = Te.set(this.lineGaps.map((r) => r.draw(this, !1))), this.computeVisibleRanges();\n  }\n  updateForViewport() {\n    let e = [this.viewport], { main: n } = this.state.selection;\n    for (let r = 0; r <= 1; r++) {\n      let i = r ? n.head : n.anchor;\n      if (!e.some(({ from: s, to: a }) => i >= s && i <= a)) {\n        let { from: s, to: a } = this.lineBlockAt(i);\n        e.push(new Rl(s, a));\n      }\n    }\n    return this.viewports = e.sort((r, i) => r.from - i.from), this.updateScaler();\n  }\n  updateScaler() {\n    let e = this.scaler;\n    return this.scaler = this.heightMap.height <= 7e6 ? n0 : new Ud(this.heightOracle, this.heightMap, this.viewports), e.eq(this.scaler) ? 0 : 2;\n  }\n  updateViewportLines() {\n    this.viewportLines = [], this.heightMap.forEachLine(this.viewport.from, this.viewport.to, this.heightOracle.setDoc(this.state.doc), 0, 0, (e) => {\n      this.viewportLines.push(oo(e, this.scaler));\n    });\n  }\n  update(e, n = null) {\n    this.state = e.state;\n    let r = this.stateDeco;\n    this.stateDeco = this.state.facet(Po).filter((h) => typeof h != "function");\n    let i = e.changedRanges, s = Er.extendWithRanges(i, g6(r, this.stateDeco, e ? e.changes : ln.empty(this.state.doc.length))), a = this.heightMap.height, o = this.scrolledToBottom ? null : this.scrollAnchorAt(this.scrollTop);\n    Jg(), this.heightMap = this.heightMap.applyChanges(this.stateDeco, e.startState.doc, this.heightOracle.setDoc(this.state.doc), s), (this.heightMap.height != a || va) && (e.flags |= 2), o ? (this.scrollAnchorPos = e.changes.mapPos(o.from, -1), this.scrollAnchorHeight = o.top) : (this.scrollAnchorPos = -1, this.scrollAnchorHeight = this.heightMap.height);\n    let l = s.length ? this.mapViewport(this.viewport, e.changes) : this.viewport;\n    (n && (n.range.head < l.from || n.range.head > l.to) || !this.viewportIsAppropriate(l)) && (l = this.getViewport(0, n));\n    let c = l.from != this.viewport.from || l.to != this.viewport.to;\n    this.viewport = l, e.flags |= this.updateForViewport(), (c || !e.changes.empty || e.flags & 2) && this.updateViewportLines(), (this.lineGaps.length || this.viewport.to - this.viewport.from > 4e3) && this.updateLineGaps(this.ensureLineGaps(this.mapLineGaps(this.lineGaps, e.changes))), e.flags |= this.computeVisibleRanges(e.changes), n && (this.scrollTarget = n), !this.mustEnforceCursorAssoc && e.selectionSet && e.view.lineWrapping && e.state.selection.main.empty && e.state.selection.main.assoc && !e.state.facet(kC) && (this.mustEnforceCursorAssoc = !0);\n  }\n  measure(e) {\n    let n = e.contentDOM, r = window.getComputedStyle(n), i = this.heightOracle, s = r.whiteSpace;\n    this.defaultTextDirection = r.direction == "rtl" ? Dt.RTL : Dt.LTR;\n    let a = this.heightOracle.mustRefreshForWrapping(s), o = n.getBoundingClientRect(), l = a || this.mustMeasureContent || this.contentDOMHeight != o.height;\n    this.contentDOMHeight = o.height, this.mustMeasureContent = !1;\n    let c = 0, h = 0;\n    if (o.width && o.height) {\n      let { scaleX: R, scaleY: B } = zw(n, o);\n      (R > 5e-3 && Math.abs(this.scaleX - R) > 5e-3 || B > 5e-3 && Math.abs(this.scaleY - B) > 5e-3) && (this.scaleX = R, this.scaleY = B, c |= 16, a = l = !0);\n    }\n    let f = (parseInt(r.paddingTop) || 0) * this.scaleY, m = (parseInt(r.paddingBottom) || 0) * this.scaleY;\n    (this.paddingTop != f || this.paddingBottom != m) && (this.paddingTop = f, this.paddingBottom = m, c |= 18), this.editorWidth != e.scrollDOM.clientWidth && (i.lineWrapping && (l = !0), this.editorWidth = e.scrollDOM.clientWidth, c |= 16);\n    let y = e.scrollDOM.scrollTop * this.scaleY;\n    this.scrollTop != y && (this.scrollAnchorHeight = -1, this.scrollTop = y), this.scrolledToBottom = Kw(e.scrollDOM);\n    let v = (this.printing ? v6 : y6)(n, this.paddingTop), C = v.top - this.pixelViewport.top, S = v.bottom - this.pixelViewport.bottom;\n    this.pixelViewport = v;\n    let M = this.pixelViewport.bottom > this.pixelViewport.top && this.pixelViewport.right > this.pixelViewport.left;\n    if (M != this.inView && (this.inView = M, M && (l = !0)), !this.inView && !this.scrollTarget && !O6(e.dom))\n      return 0;\n    let $ = o.width;\n    if ((this.contentDOMWidth != $ || this.editorHeight != e.scrollDOM.clientHeight) && (this.contentDOMWidth = o.width, this.editorHeight = e.scrollDOM.clientHeight, c |= 16), l) {\n      let R = e.docView.measureVisibleLineHeights(this.viewport);\n      if (i.mustRefreshForHeights(R) && (a = !0), a || i.lineWrapping && Math.abs($ - this.contentDOMWidth) > i.charWidth) {\n        let { lineHeight: B, charWidth: Z, textHeight: N } = e.docView.measureTextSize();\n        a = B > 0 && i.refresh(s, B, Z, N, $ / Z, R), a && (e.docView.minWidth = 0, c |= 16);\n      }\n      C > 0 && S > 0 ? h = Math.max(C, S) : C < 0 && S < 0 && (h = Math.min(C, S)), Jg();\n      for (let B of this.viewports) {\n        let Z = B.from == this.viewport.from ? R : e.docView.measureVisibleLineHeights(B);\n        this.heightMap = (a ? _n.empty().applyChanges(this.stateDeco, ht.empty, this.heightOracle, [new Er(0, 0, 0, e.state.doc.length)]) : this.heightMap).updateHeight(i, 0, a, new f6(B.from, Z));\n      }\n      va && (c |= 2);\n    }\n    let U = !this.viewportIsAppropriate(this.viewport, h) || this.scrollTarget && (this.scrollTarget.range.head < this.viewport.from || this.scrollTarget.range.head > this.viewport.to);\n    return U && (c & 2 && (c |= this.updateScaler()), this.viewport = this.getViewport(h, this.scrollTarget), c |= this.updateForViewport()), (c & 2 || U) && this.updateViewportLines(), (this.lineGaps.length || this.viewport.to - this.viewport.from > 4e3) && this.updateLineGaps(this.ensureLineGaps(a ? [] : this.lineGaps, e)), c |= this.computeVisibleRanges(), this.mustEnforceCursorAssoc && (this.mustEnforceCursorAssoc = !1, e.docView.enforceCursorAssoc()), c;\n  }\n  get visibleTop() {\n    return this.scaler.fromDOM(this.pixelViewport.top);\n  }\n  get visibleBottom() {\n    return this.scaler.fromDOM(this.pixelViewport.bottom);\n  }\n  getViewport(e, n) {\n    let r = 0.5 - Math.max(-0.5, Math.min(0.5, e / 1e3 / 2)), i = this.heightMap, s = this.heightOracle, { visibleTop: a, visibleBottom: o } = this, l = new Rl(i.lineAt(a - r * 1e3, Tt.ByHeight, s, 0, 0).from, i.lineAt(o + (1 - r) * 1e3, Tt.ByHeight, s, 0, 0).to);\n    if (n) {\n      let { head: c } = n.range;\n      if (c < l.from || c > l.to) {\n        let h = Math.min(this.editorHeight, this.pixelViewport.bottom - this.pixelViewport.top), f = i.lineAt(c, Tt.ByPos, s, 0, 0), m;\n        n.y == "center" ? m = (f.top + f.bottom) / 2 - h / 2 : n.y == "start" || n.y == "nearest" && c < l.from ? m = f.top : m = f.bottom - h, l = new Rl(i.lineAt(m - 1e3 / 2, Tt.ByHeight, s, 0, 0).from, i.lineAt(m + h + 1e3 / 2, Tt.ByHeight, s, 0, 0).to);\n      }\n    }\n    return l;\n  }\n  mapViewport(e, n) {\n    let r = n.mapPos(e.from, -1), i = n.mapPos(e.to, 1);\n    return new Rl(this.heightMap.lineAt(r, Tt.ByPos, this.heightOracle, 0, 0).from, this.heightMap.lineAt(i, Tt.ByPos, this.heightOracle, 0, 0).to);\n  }\n  // Checks if a given viewport covers the visible part of the\n  // document and not too much beyond that.\n  viewportIsAppropriate({ from: e, to: n }, r = 0) {\n    if (!this.inView)\n      return !0;\n    let { top: i } = this.heightMap.lineAt(e, Tt.ByPos, this.heightOracle, 0, 0), { bottom: s } = this.heightMap.lineAt(n, Tt.ByPos, this.heightOracle, 0, 0), { visibleTop: a, visibleBottom: o } = this;\n    return (e == 0 || i <= a - Math.max(10, Math.min(\n      -r,\n      250\n      /* VP.MaxCoverMargin */\n    ))) && (n == this.state.doc.length || s >= o + Math.max(10, Math.min(\n      r,\n      250\n      /* VP.MaxCoverMargin */\n    ))) && i > a - 2 * 1e3 && s < o + 2 * 1e3;\n  }\n  mapLineGaps(e, n) {\n    if (!e.length || n.empty)\n      return e;\n    let r = [];\n    for (let i of e)\n      n.touchesRange(i.from, i.to) || r.push(new Vh(n.mapPos(i.from), n.mapPos(i.to), i.size, i.displaySize));\n    return r;\n  }\n  // Computes positions in the viewport where the start or end of a\n  // line should be hidden, trying to reuse existing line gaps when\n  // appropriate to avoid unneccesary redraws.\n  // Uses crude character-counting for the positioning and sizing,\n  // since actual DOM coordinates aren\'t always available and\n  // predictable. Relies on generous margins (see LG.Margin) to hide\n  // the artifacts this might produce from the user.\n  ensureLineGaps(e, n) {\n    let r = this.heightOracle.lineWrapping, i = r ? 1e4 : 2e3, s = i >> 1, a = i << 1;\n    if (this.defaultTextDirection != Dt.LTR && !r)\n      return [];\n    let o = [], l = (h, f, m, y) => {\n      if (f - h < s)\n        return;\n      let v = this.state.selection.main, C = [v.from];\n      v.empty || C.push(v.to);\n      for (let M of C)\n        if (M > h && M < f) {\n          l(h, M - 10, m, y), l(M + 10, f, m, y);\n          return;\n        }\n      let S = w6(e, (M) => M.from >= m.from && M.to <= m.to && Math.abs(M.from - h) < s && Math.abs(M.to - f) < s && !C.some(($) => M.from < $ && M.to > $));\n      if (!S) {\n        if (f < m.to && n && r && n.visibleRanges.some((U) => U.from <= f && U.to >= f)) {\n          let U = n.moveToLineBoundary(ne.cursor(f), !1, !0).head;\n          U > h && (f = U);\n        }\n        let M = this.gapSize(m, h, f, y), $ = r || M < 2e6 ? M : 2e6;\n        S = new Vh(h, f, M, $);\n      }\n      o.push(S);\n    }, c = (h) => {\n      if (h.length < a || h.type != Rn.Text)\n        return;\n      let f = k6(h.from, h.to, this.stateDeco);\n      if (f.total < a)\n        return;\n      let m = this.scrollTarget ? this.scrollTarget.range.head : null, y, v;\n      if (r) {\n        let C = i / this.heightOracle.lineLength * this.heightOracle.lineHeight, S, M;\n        if (m != null) {\n          let $ = Zl(f, m), U = ((this.visibleBottom - this.visibleTop) / 2 + C) / h.height;\n          S = $ - U, M = $ + U;\n        } else\n          S = (this.visibleTop - h.top - C) / h.height, M = (this.visibleBottom - h.top + C) / h.height;\n        y = _l(f, S), v = _l(f, M);\n      } else {\n        let C = f.total * this.heightOracle.charWidth, S = i * this.heightOracle.charWidth, M = 0;\n        if (C > 2e6)\n          for (let Z of e)\n            Z.from >= h.from && Z.from < h.to && Z.size != Z.displaySize && Z.from * this.heightOracle.charWidth + M < this.pixelViewport.left && (M = Z.size - Z.displaySize);\n        let $ = this.pixelViewport.left + M, U = this.pixelViewport.right + M, R, B;\n        if (m != null) {\n          let Z = Zl(f, m), N = ((U - $) / 2 + S) / C;\n          R = Z - N, B = Z + N;\n        } else\n          R = ($ - S) / C, B = (U + S) / C;\n        y = _l(f, R), v = _l(f, B);\n      }\n      y > h.from && l(h.from, y, h, f), v < h.to && l(v, h.to, h, f);\n    };\n    for (let h of this.viewportLines)\n      Array.isArray(h.type) ? h.type.forEach(c) : c(h);\n    return o;\n  }\n  gapSize(e, n, r, i) {\n    let s = Zl(i, r) - Zl(i, n);\n    return this.heightOracle.lineWrapping ? e.height * s : i.total * this.heightOracle.charWidth * s;\n  }\n  updateLineGaps(e) {\n    Vh.same(e, this.lineGaps) || (this.lineGaps = e, this.lineGapDeco = Te.set(e.map((n) => n.draw(this, this.heightOracle.lineWrapping))));\n  }\n  computeVisibleRanges(e) {\n    let n = this.stateDeco;\n    this.lineGaps.length && (n = n.concat(this.lineGapDeco));\n    let r = [];\n    mt.spans(n, this.viewport.from, this.viewport.to, {\n      span(s, a) {\n        r.push({ from: s, to: a });\n      },\n      point() {\n      }\n    }, 20);\n    let i = 0;\n    if (r.length != this.visibleRanges.length)\n      i = 12;\n    else\n      for (let s = 0; s < r.length && !(i & 8); s++) {\n        let a = this.visibleRanges[s], o = r[s];\n        (a.from != o.from || a.to != o.to) && (i |= 4, e && e.mapPos(a.from, -1) == o.from && e.mapPos(a.to, 1) == o.to || (i |= 8));\n      }\n    return this.visibleRanges = r, i;\n  }\n  lineBlockAt(e) {\n    return e >= this.viewport.from && e <= this.viewport.to && this.viewportLines.find((n) => n.from <= e && n.to >= e) || oo(this.heightMap.lineAt(e, Tt.ByPos, this.heightOracle, 0, 0), this.scaler);\n  }\n  lineBlockAtHeight(e) {\n    return e >= this.viewportLines[0].top && e <= this.viewportLines[this.viewportLines.length - 1].bottom && this.viewportLines.find((n) => n.top <= e && n.bottom >= e) || oo(this.heightMap.lineAt(this.scaler.fromDOM(e), Tt.ByHeight, this.heightOracle, 0, 0), this.scaler);\n  }\n  scrollAnchorAt(e) {\n    let n = this.lineBlockAtHeight(e + 8);\n    return n.from >= this.viewport.from || this.viewportLines[0].top - e > 200 ? n : this.viewportLines[0];\n  }\n  elementAtHeight(e) {\n    return oo(this.heightMap.blockAt(this.scaler.fromDOM(e), this.heightOracle, 0, 0), this.scaler);\n  }\n  get docHeight() {\n    return this.scaler.toDOM(this.heightMap.height);\n  }\n  get contentHeight() {\n    return this.docHeight + this.paddingTop + this.paddingBottom;\n  }\n}\nclass Rl {\n  constructor(e, n) {\n    this.from = e, this.to = n;\n  }\n}\nfunction k6(t, e, n) {\n  let r = [], i = t, s = 0;\n  return mt.spans(n, t, e, {\n    span() {\n    },\n    point(a, o) {\n      a > i && (r.push({ from: i, to: a }), s += a - i), i = o;\n    }\n  }, 20), i < e && (r.push({ from: i, to: e }), s += e - i), { total: s, ranges: r };\n}\nfunction _l({ total: t, ranges: e }, n) {\n  if (n <= 0)\n    return e[0].from;\n  if (n >= 1)\n    return e[e.length - 1].to;\n  let r = Math.floor(t * n);\n  for (let i = 0; ; i++) {\n    let { from: s, to: a } = e[i], o = a - s;\n    if (r <= o)\n      return s + r;\n    r -= o;\n  }\n}\nfunction Zl(t, e) {\n  let n = 0;\n  for (let { from: r, to: i } of t.ranges) {\n    if (e <= i) {\n      n += e - r;\n      break;\n    }\n    n += i - r;\n  }\n  return n / t.total;\n}\nfunction w6(t, e) {\n  for (let n of t)\n    if (e(n))\n      return n;\n}\nconst n0 = {\n  toDOM(t) {\n    return t;\n  },\n  fromDOM(t) {\n    return t;\n  },\n  scale: 1,\n  eq(t) {\n    return t == this;\n  }\n};\nclass Ud {\n  constructor(e, n, r) {\n    let i = 0, s = 0, a = 0;\n    this.viewports = r.map(({ from: o, to: l }) => {\n      let c = n.lineAt(o, Tt.ByPos, e, 0, 0).top, h = n.lineAt(l, Tt.ByPos, e, 0, 0).bottom;\n      return i += h - c, { from: o, to: l, top: c, bottom: h, domTop: 0, domBottom: 0 };\n    }), this.scale = (7e6 - i) / (n.height - i);\n    for (let o of this.viewports)\n      o.domTop = a + (o.top - s) * this.scale, a = o.domBottom = o.domTop + (o.bottom - o.top), s = o.bottom;\n  }\n  toDOM(e) {\n    for (let n = 0, r = 0, i = 0; ; n++) {\n      let s = n < this.viewports.length ? this.viewports[n] : null;\n      if (!s || e < s.top)\n        return i + (e - r) * this.scale;\n      if (e <= s.bottom)\n        return s.domTop + (e - s.top);\n      r = s.bottom, i = s.domBottom;\n    }\n  }\n  fromDOM(e) {\n    for (let n = 0, r = 0, i = 0; ; n++) {\n      let s = n < this.viewports.length ? this.viewports[n] : null;\n      if (!s || e < s.domTop)\n        return r + (e - i) / this.scale;\n      if (e <= s.domBottom)\n        return s.top + (e - s.domTop);\n      r = s.bottom, i = s.domBottom;\n    }\n  }\n  eq(e) {\n    return e instanceof Ud ? this.scale == e.scale && this.viewports.length == e.viewports.length && this.viewports.every((n, r) => n.from == e.viewports[r].from && n.to == e.viewports[r].to) : !1;\n  }\n}\nfunction oo(t, e) {\n  if (e.scale == 1)\n    return t;\n  let n = e.toDOM(t.top), r = e.toDOM(t.bottom);\n  return new pi(t.from, t.length, n, r - n, Array.isArray(t._content) ? t._content.map((i) => oo(i, e)) : t._content);\n}\nconst $l = /* @__PURE__ */ Ae.define({ combine: (t) => t.join(" ") }), rf = /* @__PURE__ */ Ae.define({ combine: (t) => t.indexOf(!0) > -1 }), sf = /* @__PURE__ */ Ji.newName(), IC = /* @__PURE__ */ Ji.newName(), NC = /* @__PURE__ */ Ji.newName(), VC = { "&light": "." + IC, "&dark": "." + NC };\nfunction af(t, e, n) {\n  return new Ji(e, {\n    finish(r) {\n      return /&/.test(r) ? r.replace(/&\\w*/, (i) => {\n        if (i == "&")\n          return t;\n        if (!n || !n[i])\n          throw new RangeError(`Unsupported selector: ${i}`);\n        return n[i];\n      }) : t + " " + r;\n    }\n  });\n}\nconst C6 = /* @__PURE__ */ af("." + sf, {\n  "&": {\n    position: "relative !important",\n    boxSizing: "border-box",\n    "&.cm-focused": {\n      // Provide a simple default outline to make sure a focused\n      // editor is visually distinct. Can\'t leave the default behavior\n      // because that will apply to the content element, which is\n      // inside the scrollable container and doesn\'t include the\n      // gutters. We also can\'t use an \'auto\' outline, since those\n      // are, for some reason, drawn behind the element content, which\n      // will cause things like the active line background to cover\n      // the outline (#297).\n      outline: "1px dotted #212121"\n    },\n    display: "flex !important",\n    flexDirection: "column"\n  },\n  ".cm-scroller": {\n    display: "flex !important",\n    alignItems: "flex-start !important",\n    fontFamily: "monospace",\n    lineHeight: 1.4,\n    height: "100%",\n    overflowX: "auto",\n    position: "relative",\n    zIndex: 0,\n    overflowAnchor: "none"\n  },\n  ".cm-content": {\n    margin: 0,\n    flexGrow: 2,\n    flexShrink: 0,\n    display: "block",\n    whiteSpace: "pre",\n    wordWrap: "normal",\n    // https://github.com/codemirror/dev/issues/456\n    boxSizing: "border-box",\n    minHeight: "100%",\n    padding: "4px 0",\n    outline: "none",\n    "&[contenteditable=true]": {\n      WebkitUserModify: "read-write-plaintext-only"\n    }\n  },\n  ".cm-lineWrapping": {\n    whiteSpace_fallback: "pre-wrap",\n    // For IE\n    whiteSpace: "break-spaces",\n    wordBreak: "break-word",\n    // For Safari, which doesn\'t support overflow-wrap: anywhere\n    overflowWrap: "anywhere",\n    flexShrink: 1\n  },\n  "&light .cm-content": { caretColor: "black" },\n  "&dark .cm-content": { caretColor: "white" },\n  ".cm-line": {\n    display: "block",\n    padding: "0 2px 0 6px"\n  },\n  ".cm-layer": {\n    position: "absolute",\n    left: 0,\n    top: 0,\n    contain: "size style",\n    "& > *": {\n      position: "absolute"\n    }\n  },\n  "&light .cm-selectionBackground": {\n    background: "#d9d9d9"\n  },\n  "&dark .cm-selectionBackground": {\n    background: "#222"\n  },\n  "&light.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground": {\n    background: "#d7d4f0"\n  },\n  "&dark.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground": {\n    background: "#233"\n  },\n  ".cm-cursorLayer": {\n    pointerEvents: "none"\n  },\n  "&.cm-focused > .cm-scroller > .cm-cursorLayer": {\n    animation: "steps(1) cm-blink 1.2s infinite"\n  },\n  // Two animations defined so that we can switch between them to\n  // restart the animation without forcing another style\n  // recomputation.\n  "@keyframes cm-blink": { "0%": {}, "50%": { opacity: 0 }, "100%": {} },\n  "@keyframes cm-blink2": { "0%": {}, "50%": { opacity: 0 }, "100%": {} },\n  ".cm-cursor, .cm-dropCursor": {\n    borderLeft: "1.2px solid black",\n    marginLeft: "-0.6px",\n    pointerEvents: "none"\n  },\n  ".cm-cursor": {\n    display: "none"\n  },\n  "&dark .cm-cursor": {\n    borderLeftColor: "#ddd"\n  },\n  ".cm-dropCursor": {\n    position: "absolute"\n  },\n  "&.cm-focused > .cm-scroller > .cm-cursorLayer .cm-cursor": {\n    display: "block"\n  },\n  ".cm-iso": {\n    unicodeBidi: "isolate"\n  },\n  ".cm-announced": {\n    position: "fixed",\n    top: "-10000px"\n  },\n  "@media print": {\n    ".cm-announced": { display: "none" }\n  },\n  "&light .cm-activeLine": { backgroundColor: "#cceeff44" },\n  "&dark .cm-activeLine": { backgroundColor: "#99eeff33" },\n  "&light .cm-specialChar": { color: "red" },\n  "&dark .cm-specialChar": { color: "#f78" },\n  ".cm-gutters": {\n    flexShrink: 0,\n    display: "flex",\n    height: "100%",\n    boxSizing: "border-box",\n    insetInlineStart: 0,\n    zIndex: 200\n  },\n  "&light .cm-gutters": {\n    backgroundColor: "#f5f5f5",\n    color: "#6c6c6c",\n    borderRight: "1px solid #ddd"\n  },\n  "&dark .cm-gutters": {\n    backgroundColor: "#333338",\n    color: "#ccc"\n  },\n  ".cm-gutter": {\n    display: "flex !important",\n    // Necessary -- prevents margin collapsing\n    flexDirection: "column",\n    flexShrink: 0,\n    boxSizing: "border-box",\n    minHeight: "100%",\n    overflow: "hidden"\n  },\n  ".cm-gutterElement": {\n    boxSizing: "border-box"\n  },\n  ".cm-lineNumbers .cm-gutterElement": {\n    padding: "0 3px 0 5px",\n    minWidth: "20px",\n    textAlign: "right",\n    whiteSpace: "nowrap"\n  },\n  "&light .cm-activeLineGutter": {\n    backgroundColor: "#e2f2ff"\n  },\n  "&dark .cm-activeLineGutter": {\n    backgroundColor: "#222227"\n  },\n  ".cm-panels": {\n    boxSizing: "border-box",\n    position: "sticky",\n    left: 0,\n    right: 0,\n    zIndex: 300\n  },\n  "&light .cm-panels": {\n    backgroundColor: "#f5f5f5",\n    color: "black"\n  },\n  "&light .cm-panels-top": {\n    borderBottom: "1px solid #ddd"\n  },\n  "&light .cm-panels-bottom": {\n    borderTop: "1px solid #ddd"\n  },\n  "&dark .cm-panels": {\n    backgroundColor: "#333338",\n    color: "white"\n  },\n  ".cm-tab": {\n    display: "inline-block",\n    overflow: "hidden",\n    verticalAlign: "bottom"\n  },\n  ".cm-widgetBuffer": {\n    verticalAlign: "text-top",\n    height: "1em",\n    width: 0,\n    display: "inline"\n  },\n  ".cm-placeholder": {\n    color: "#888",\n    display: "inline-block",\n    verticalAlign: "top"\n  },\n  ".cm-highlightSpace": {\n    backgroundImage: "radial-gradient(circle at 50% 55%, #aaa 20%, transparent 5%)",\n    backgroundPosition: "center"\n  },\n  ".cm-highlightTab": {\n    backgroundImage: `url(\'data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="200" height="20"><path stroke="%23888" stroke-width="1" fill="none" d="M1 10H196L190 5M190 15L196 10M197 4L197 16"/></svg>\')`,\n    backgroundSize: "auto 100%",\n    backgroundPosition: "right 90%",\n    backgroundRepeat: "no-repeat"\n  },\n  ".cm-trailingSpace": {\n    backgroundColor: "#ff332255"\n  },\n  ".cm-button": {\n    verticalAlign: "middle",\n    color: "inherit",\n    fontSize: "70%",\n    padding: ".2em 1em",\n    borderRadius: "1px"\n  },\n  "&light .cm-button": {\n    backgroundImage: "linear-gradient(#eff1f5, #d9d9df)",\n    border: "1px solid #888",\n    "&:active": {\n      backgroundImage: "linear-gradient(#b4b4b4, #d0d3d6)"\n    }\n  },\n  "&dark .cm-button": {\n    backgroundImage: "linear-gradient(#393939, #111)",\n    border: "1px solid #888",\n    "&:active": {\n      backgroundImage: "linear-gradient(#111, #333)"\n    }\n  },\n  ".cm-textfield": {\n    verticalAlign: "middle",\n    color: "inherit",\n    fontSize: "70%",\n    border: "1px solid silver",\n    padding: ".2em .5em"\n  },\n  "&light .cm-textfield": {\n    backgroundColor: "white"\n  },\n  "&dark .cm-textfield": {\n    border: "1px solid #555",\n    backgroundColor: "inherit"\n  }\n}, VC), S6 = {\n  childList: !0,\n  characterData: !0,\n  subtree: !0,\n  attributes: !0,\n  characterDataOldValue: !0\n}, Xh = ke.ie && ke.ie_version <= 11;\nclass A6 {\n  constructor(e) {\n    this.view = e, this.active = !1, this.editContext = null, this.selectionRange = new u8(), this.selectionChanged = !1, this.delayedFlush = -1, this.resizeTimeout = -1, this.queue = [], this.delayedAndroidKey = null, this.flushingAndroidKey = -1, this.lastChange = 0, this.scrollTargets = [], this.intersection = null, this.resizeScroll = null, this.intersecting = !1, this.gapIntersection = null, this.gaps = [], this.printQuery = null, this.parentCheck = -1, this.dom = e.contentDOM, this.observer = new MutationObserver((n) => {\n      for (let r of n)\n        this.queue.push(r);\n      (ke.ie && ke.ie_version <= 11 || ke.ios && e.composing) && n.some((r) => r.type == "childList" && r.removedNodes.length || r.type == "characterData" && r.oldValue.length > r.target.nodeValue.length) ? this.flushSoon() : this.flush();\n    }), window.EditContext && e.constructor.EDIT_CONTEXT !== !1 && // Chrome <126 doesn\'t support inverted selections in edit context (#1392)\n    !(ke.chrome && ke.chrome_version < 126) && (this.editContext = new P6(e), e.state.facet(Si) && (e.contentDOM.editContext = this.editContext.editContext)), Xh && (this.onCharData = (n) => {\n      this.queue.push({\n        target: n.target,\n        type: "characterData",\n        oldValue: n.prevValue\n      }), this.flushSoon();\n    }), this.onSelectionChange = this.onSelectionChange.bind(this), this.onResize = this.onResize.bind(this), this.onPrint = this.onPrint.bind(this), this.onScroll = this.onScroll.bind(this), window.matchMedia && (this.printQuery = window.matchMedia("print")), typeof ResizeObserver == "function" && (this.resizeScroll = new ResizeObserver(() => {\n      var n;\n      ((n = this.view.docView) === null || n === void 0 ? void 0 : n.lastUpdate) < Date.now() - 75 && this.onResize();\n    }), this.resizeScroll.observe(e.scrollDOM)), this.addWindowListeners(this.win = e.win), this.start(), typeof IntersectionObserver == "function" && (this.intersection = new IntersectionObserver((n) => {\n      this.parentCheck < 0 && (this.parentCheck = setTimeout(this.listenForScroll.bind(this), 1e3)), n.length > 0 && n[n.length - 1].intersectionRatio > 0 != this.intersecting && (this.intersecting = !this.intersecting, this.intersecting != this.view.inView && this.onScrollChanged(document.createEvent("Event")));\n    }, { threshold: [0, 1e-3] }), this.intersection.observe(this.dom), this.gapIntersection = new IntersectionObserver((n) => {\n      n.length > 0 && n[n.length - 1].intersectionRatio > 0 && this.onScrollChanged(document.createEvent("Event"));\n    }, {})), this.listenForScroll(), this.readSelectionRange();\n  }\n  onScrollChanged(e) {\n    this.view.inputState.runHandlers("scroll", e), this.intersecting && this.view.measure();\n  }\n  onScroll(e) {\n    this.intersecting && this.flush(!1), this.editContext && this.view.requestMeasure(this.editContext.measureReq), this.onScrollChanged(e);\n  }\n  onResize() {\n    this.resizeTimeout < 0 && (this.resizeTimeout = setTimeout(() => {\n      this.resizeTimeout = -1, this.view.requestMeasure();\n    }, 50));\n  }\n  onPrint(e) {\n    (e.type == "change" || !e.type) && !e.matches || (this.view.viewState.printing = !0, this.view.measure(), setTimeout(() => {\n      this.view.viewState.printing = !1, this.view.requestMeasure();\n    }, 500));\n  }\n  updateGaps(e) {\n    if (this.gapIntersection && (e.length != this.gaps.length || this.gaps.some((n, r) => n != e[r]))) {\n      this.gapIntersection.disconnect();\n      for (let n of e)\n        this.gapIntersection.observe(n);\n      this.gaps = e;\n    }\n  }\n  onSelectionChange(e) {\n    let n = this.selectionChanged;\n    if (!this.readSelectionRange() || this.delayedAndroidKey)\n      return;\n    let { view: r } = this, i = this.selectionRange;\n    if (r.state.facet(Si) ? r.root.activeElement != this.dom : !iu(this.dom, i))\n      return;\n    let s = i.anchorNode && r.docView.nearest(i.anchorNode);\n    if (s && s.ignoreEvent(e)) {\n      n || (this.selectionChanged = !1);\n      return;\n    }\n    (ke.ie && ke.ie_version <= 11 || ke.android && ke.chrome) && !r.state.selection.main.empty && // (Selection.isCollapsed isn\'t reliable on IE)\n    i.focusNode && fo(i.focusNode, i.focusOffset, i.anchorNode, i.anchorOffset) ? this.flushSoon() : this.flush(!1);\n  }\n  readSelectionRange() {\n    let { view: e } = this, n = Ao(e.root);\n    if (!n)\n      return !1;\n    let r = ke.safari && e.root.nodeType == 11 && e.root.activeElement == this.dom && D6(this.view, n) || n;\n    if (!r || this.selectionRange.eq(r))\n      return !1;\n    let i = iu(this.dom, r);\n    return i && !this.selectionChanged && e.inputState.lastFocusTime > Date.now() - 200 && e.inputState.lastTouchTime < Date.now() - 300 && h8(this.dom, r) ? (this.view.inputState.lastFocusTime = 0, e.docView.updateSelection(), !1) : (this.selectionRange.setRange(r), i && (this.selectionChanged = !0), !0);\n  }\n  setSelectionRange(e, n) {\n    this.selectionRange.set(e.node, e.offset, n.node, n.offset), this.selectionChanged = !1;\n  }\n  clearSelectionRange() {\n    this.selectionRange.set(null, 0, null, 0);\n  }\n  listenForScroll() {\n    this.parentCheck = -1;\n    let e = 0, n = null;\n    for (let r = this.dom; r; )\n      if (r.nodeType == 1)\n        !n && e < this.scrollTargets.length && this.scrollTargets[e] == r ? e++ : n || (n = this.scrollTargets.slice(0, e)), n && n.push(r), r = r.assignedSlot || r.parentNode;\n      else if (r.nodeType == 11)\n        r = r.host;\n      else\n        break;\n    if (e < this.scrollTargets.length && !n && (n = this.scrollTargets.slice(0, e)), n) {\n      for (let r of this.scrollTargets)\n        r.removeEventListener("scroll", this.onScroll);\n      for (let r of this.scrollTargets = n)\n        r.addEventListener("scroll", this.onScroll);\n    }\n  }\n  ignore(e) {\n    if (!this.active)\n      return e();\n    try {\n      return this.stop(), e();\n    } finally {\n      this.start(), this.clear();\n    }\n  }\n  start() {\n    this.active || (this.observer.observe(this.dom, S6), Xh && this.dom.addEventListener("DOMCharacterDataModified", this.onCharData), this.active = !0);\n  }\n  stop() {\n    this.active && (this.active = !1, this.observer.disconnect(), Xh && this.dom.removeEventListener("DOMCharacterDataModified", this.onCharData));\n  }\n  // Throw away any pending changes\n  clear() {\n    this.processRecords(), this.queue.length = 0, this.selectionChanged = !1;\n  }\n  // Chrome Android, especially in combination with GBoard, not only\n  // doesn\'t reliably fire regular key events, but also often\n  // surrounds the effect of enter or backspace with a bunch of\n  // composition events that, when interrupted, cause text duplication\n  // or other kinds of corruption. This hack makes the editor back off\n  // from handling DOM changes for a moment when such a key is\n  // detected (via beforeinput or keydown), and then tries to flush\n  // them or, if that has no effect, dispatches the given key.\n  delayAndroidKey(e, n) {\n    var r;\n    if (!this.delayedAndroidKey) {\n      let i = () => {\n        let s = this.delayedAndroidKey;\n        s && (this.clearDelayedAndroidKey(), this.view.inputState.lastKeyCode = s.keyCode, this.view.inputState.lastKeyTime = Date.now(), !this.flush() && s.force && sa(this.dom, s.key, s.keyCode));\n      };\n      this.flushingAndroidKey = this.view.win.requestAnimationFrame(i);\n    }\n    (!this.delayedAndroidKey || e == "Enter") && (this.delayedAndroidKey = {\n      key: e,\n      keyCode: n,\n      // Only run the key handler when no changes are detected if\n      // this isn\'t coming right after another change, in which case\n      // it is probably part of a weird chain of updates, and should\n      // be ignored if it returns the DOM to its previous state.\n      force: this.lastChange < Date.now() - 50 || !!(!((r = this.delayedAndroidKey) === null || r === void 0) && r.force)\n    });\n  }\n  clearDelayedAndroidKey() {\n    this.win.cancelAnimationFrame(this.flushingAndroidKey), this.delayedAndroidKey = null, this.flushingAndroidKey = -1;\n  }\n  flushSoon() {\n    this.delayedFlush < 0 && (this.delayedFlush = this.view.win.requestAnimationFrame(() => {\n      this.delayedFlush = -1, this.flush();\n    }));\n  }\n  forceFlush() {\n    this.delayedFlush >= 0 && (this.view.win.cancelAnimationFrame(this.delayedFlush), this.delayedFlush = -1), this.flush();\n  }\n  pendingRecords() {\n    for (let e of this.observer.takeRecords())\n      this.queue.push(e);\n    return this.queue;\n  }\n  processRecords() {\n    let e = this.pendingRecords();\n    e.length && (this.queue = []);\n    let n = -1, r = -1, i = !1;\n    for (let s of e) {\n      let a = this.readMutation(s);\n      a && (a.typeOver && (i = !0), n == -1 ? { from: n, to: r } = a : (n = Math.min(a.from, n), r = Math.max(a.to, r)));\n    }\n    return { from: n, to: r, typeOver: i };\n  }\n  readChange() {\n    let { from: e, to: n, typeOver: r } = this.processRecords(), i = this.selectionChanged && iu(this.dom, this.selectionRange);\n    if (e < 0 && !i)\n      return null;\n    e > -1 && (this.lastChange = Date.now()), this.view.inputState.lastFocusTime = 0, this.selectionChanged = !1;\n    let s = new X8(this.view, e, n, r);\n    return this.view.docView.domChanged = { newSel: s.newSel ? s.newSel.main : null }, s;\n  }\n  // Apply pending changes, if any\n  flush(e = !0) {\n    if (this.delayedFlush >= 0 || this.delayedAndroidKey)\n      return !1;\n    e && this.readSelectionRange();\n    let n = this.readChange();\n    if (!n)\n      return this.view.requestMeasure(), !1;\n    let r = this.view.state, i = BC(this.view, n);\n    return this.view.state == r && (n.domChanged || n.newSel && !n.newSel.main.eq(this.view.state.selection.main)) && this.view.update([]), i;\n  }\n  readMutation(e) {\n    let n = this.view.docView.nearest(e.target);\n    if (!n || n.ignoreMutation(e))\n      return null;\n    if (n.markDirty(e.type == "attributes"), e.type == "attributes" && (n.flags |= 4), e.type == "childList") {\n      let r = r0(n, e.previousSibling || e.target.previousSibling, -1), i = r0(n, e.nextSibling || e.target.nextSibling, 1);\n      return {\n        from: r ? n.posAfter(r) : n.posAtStart,\n        to: i ? n.posBefore(i) : n.posAtEnd,\n        typeOver: !1\n      };\n    } else return e.type == "characterData" ? { from: n.posAtStart, to: n.posAtEnd, typeOver: e.target.nodeValue == e.oldValue } : null;\n  }\n  setWindow(e) {\n    e != this.win && (this.removeWindowListeners(this.win), this.win = e, this.addWindowListeners(this.win));\n  }\n  addWindowListeners(e) {\n    e.addEventListener("resize", this.onResize), this.printQuery ? this.printQuery.addEventListener ? this.printQuery.addEventListener("change", this.onPrint) : this.printQuery.addListener(this.onPrint) : e.addEventListener("beforeprint", this.onPrint), e.addEventListener("scroll", this.onScroll), e.document.addEventListener("selectionchange", this.onSelectionChange);\n  }\n  removeWindowListeners(e) {\n    e.removeEventListener("scroll", this.onScroll), e.removeEventListener("resize", this.onResize), this.printQuery ? this.printQuery.removeEventListener ? this.printQuery.removeEventListener("change", this.onPrint) : this.printQuery.removeListener(this.onPrint) : e.removeEventListener("beforeprint", this.onPrint), e.document.removeEventListener("selectionchange", this.onSelectionChange);\n  }\n  update(e) {\n    this.editContext && (this.editContext.update(e), e.startState.facet(Si) != e.state.facet(Si) && (e.view.contentDOM.editContext = e.state.facet(Si) ? this.editContext.editContext : null));\n  }\n  destroy() {\n    var e, n, r;\n    this.stop(), (e = this.intersection) === null || e === void 0 || e.disconnect(), (n = this.gapIntersection) === null || n === void 0 || n.disconnect(), (r = this.resizeScroll) === null || r === void 0 || r.disconnect();\n    for (let i of this.scrollTargets)\n      i.removeEventListener("scroll", this.onScroll);\n    this.removeWindowListeners(this.win), clearTimeout(this.parentCheck), clearTimeout(this.resizeTimeout), this.win.cancelAnimationFrame(this.delayedFlush), this.win.cancelAnimationFrame(this.flushingAndroidKey), this.editContext && (this.view.contentDOM.editContext = null, this.editContext.destroy());\n  }\n}\nfunction r0(t, e, n) {\n  for (; e; ) {\n    let r = At.get(e);\n    if (r && r.parent == t)\n      return r;\n    let i = e.parentNode;\n    e = i != t.dom ? i : n > 0 ? e.nextSibling : e.previousSibling;\n  }\n  return null;\n}\nfunction i0(t, e) {\n  let n = e.startContainer, r = e.startOffset, i = e.endContainer, s = e.endOffset, a = t.docView.domAtPos(t.state.selection.main.anchor);\n  return fo(a.node, a.offset, i, s) && ([n, r, i, s] = [i, s, n, r]), { anchorNode: n, anchorOffset: r, focusNode: i, focusOffset: s };\n}\nfunction D6(t, e) {\n  if (e.getComposedRanges) {\n    let i = e.getComposedRanges(t.root)[0];\n    if (i)\n      return i0(t, i);\n  }\n  let n = null;\n  function r(i) {\n    i.preventDefault(), i.stopImmediatePropagation(), n = i.getTargetRanges()[0];\n  }\n  return t.contentDOM.addEventListener("beforeinput", r, !0), t.dom.ownerDocument.execCommand("indent"), t.contentDOM.removeEventListener("beforeinput", r, !0), n ? i0(t, n) : null;\n}\nclass P6 {\n  constructor(e) {\n    this.from = 0, this.to = 0, this.pendingContextChange = null, this.handlers = /* @__PURE__ */ Object.create(null), this.composing = null, this.resetRange(e.state);\n    let n = this.editContext = new window.EditContext({\n      text: e.state.doc.sliceString(this.from, this.to),\n      selectionStart: this.toContextPos(Math.max(this.from, Math.min(this.to, e.state.selection.main.anchor))),\n      selectionEnd: this.toContextPos(e.state.selection.main.head)\n    });\n    this.handlers.textupdate = (r) => {\n      let i = e.state.selection.main, { anchor: s, head: a } = i, o = this.toEditorPos(r.updateRangeStart), l = this.toEditorPos(r.updateRangeEnd);\n      e.inputState.composing >= 0 && !this.composing && (this.composing = { contextBase: r.updateRangeStart, editorBase: o, drifted: !1 });\n      let c = { from: o, to: l, insert: ht.of(r.text.split(`\n`)) };\n      if (c.from == this.from && s < this.from ? c.from = s : c.to == this.to && s > this.to && (c.to = s), c.from == c.to && !c.insert.length) {\n        let h = ne.single(this.toEditorPos(r.selectionStart), this.toEditorPos(r.selectionEnd));\n        h.main.eq(i) || e.dispatch({ selection: h, userEvent: "select" });\n        return;\n      }\n      if ((ke.mac || ke.android) && c.from == a - 1 && /^\\. ?$/.test(r.text) && e.contentDOM.getAttribute("autocorrect") == "off" && (c = { from: o, to: l, insert: ht.of([r.text.replace(".", " ")]) }), this.pendingContextChange = c, !e.state.readOnly) {\n        let h = this.to - this.from + (c.to - c.from + c.insert.length);\n        Xd(e, c, ne.single(this.toEditorPos(r.selectionStart, h), this.toEditorPos(r.selectionEnd, h)));\n      }\n      this.pendingContextChange && (this.revertPending(e.state), this.setSelection(e.state));\n    }, this.handlers.characterboundsupdate = (r) => {\n      let i = [], s = null;\n      for (let a = this.toEditorPos(r.rangeStart), o = this.toEditorPos(r.rangeEnd); a < o; a++) {\n        let l = e.coordsForChar(a);\n        s = l && new DOMRect(l.left, l.top, l.right - l.left, l.bottom - l.top) || s || new DOMRect(), i.push(s);\n      }\n      n.updateCharacterBounds(r.rangeStart, i);\n    }, this.handlers.textformatupdate = (r) => {\n      let i = [];\n      for (let s of r.getTextFormats()) {\n        let a = s.underlineStyle, o = s.underlineThickness;\n        if (a != "None" && o != "None") {\n          let l = this.toEditorPos(s.rangeStart), c = this.toEditorPos(s.rangeEnd);\n          if (l < c) {\n            let h = `text-decoration: underline ${a == "Dashed" ? "dashed " : a == "Squiggle" ? "wavy " : ""}${o == "Thin" ? 1 : 2}px`;\n            i.push(Te.mark({ attributes: { style: h } }).range(l, c));\n          }\n        }\n      }\n      e.dispatch({ effects: CC.of(Te.set(i)) });\n    }, this.handlers.compositionstart = () => {\n      e.inputState.composing < 0 && (e.inputState.composing = 0, e.inputState.compositionFirstChange = !0);\n    }, this.handlers.compositionend = () => {\n      if (e.inputState.composing = -1, e.inputState.compositionFirstChange = null, this.composing) {\n        let { drifted: r } = this.composing;\n        this.composing = null, r && this.reset(e.state);\n      }\n    };\n    for (let r in this.handlers)\n      n.addEventListener(r, this.handlers[r]);\n    this.measureReq = { read: (r) => {\n      this.editContext.updateControlBounds(r.contentDOM.getBoundingClientRect());\n      let i = Ao(r.root);\n      i && i.rangeCount && this.editContext.updateSelectionBounds(i.getRangeAt(0).getBoundingClientRect());\n    } };\n  }\n  applyEdits(e) {\n    let n = 0, r = !1, i = this.pendingContextChange;\n    return e.changes.iterChanges((s, a, o, l, c) => {\n      if (r)\n        return;\n      let h = c.length - (a - s);\n      if (i && a >= i.to)\n        if (i.from == s && i.to == a && i.insert.eq(c)) {\n          i = this.pendingContextChange = null, n += h, this.to += h;\n          return;\n        } else\n          i = null, this.revertPending(e.state);\n      if (s += n, a += n, a <= this.from)\n        this.from += h, this.to += h;\n      else if (s < this.to) {\n        if (s < this.from || a > this.to || this.to - this.from + c.length > 3e4) {\n          r = !0;\n          return;\n        }\n        this.editContext.updateText(this.toContextPos(s), this.toContextPos(a), c.toString()), this.to += h;\n      }\n      n += h;\n    }), i && !r && this.revertPending(e.state), !r;\n  }\n  update(e) {\n    let n = this.pendingContextChange;\n    this.composing && (this.composing.drifted || e.transactions.some((r) => !r.isUserEvent("input.type") && r.changes.touchesRange(this.from, this.to))) ? (this.composing.drifted = !0, this.composing.editorBase = e.changes.mapPos(this.composing.editorBase)) : !this.applyEdits(e) || !this.rangeIsValid(e.state) ? (this.pendingContextChange = null, this.reset(e.state)) : (e.docChanged || e.selectionSet || n) && this.setSelection(e.state), (e.geometryChanged || e.docChanged || e.selectionSet) && e.view.requestMeasure(this.measureReq);\n  }\n  resetRange(e) {\n    let { head: n } = e.selection.main;\n    this.from = Math.max(\n      0,\n      n - 1e4\n      /* CxVp.Margin */\n    ), this.to = Math.min(\n      e.doc.length,\n      n + 1e4\n      /* CxVp.Margin */\n    );\n  }\n  reset(e) {\n    this.resetRange(e), this.editContext.updateText(0, this.editContext.text.length, e.doc.sliceString(this.from, this.to)), this.setSelection(e);\n  }\n  revertPending(e) {\n    let n = this.pendingContextChange;\n    this.pendingContextChange = null, this.editContext.updateText(this.toContextPos(n.from), this.toContextPos(n.from + n.insert.length), e.doc.sliceString(n.from, n.to));\n  }\n  setSelection(e) {\n    let { main: n } = e.selection, r = this.toContextPos(Math.max(this.from, Math.min(this.to, n.anchor))), i = this.toContextPos(n.head);\n    (this.editContext.selectionStart != r || this.editContext.selectionEnd != i) && this.editContext.updateSelection(r, i);\n  }\n  rangeIsValid(e) {\n    let { head: n } = e.selection.main;\n    return !(this.from > 0 && n - this.from < 500 || this.to < e.doc.length && this.to - n < 500 || this.to - this.from > 1e4 * 3);\n  }\n  toEditorPos(e, n = this.to - this.from) {\n    e = Math.min(e, n);\n    let r = this.composing;\n    return r && r.drifted ? r.editorBase + (e - r.contextBase) : e + this.from;\n  }\n  toContextPos(e) {\n    let n = this.composing;\n    return n && n.drifted ? n.contextBase + (e - n.editorBase) : e - this.from;\n  }\n  destroy() {\n    for (let e in this.handlers)\n      this.editContext.removeEventListener(e, this.handlers[e]);\n  }\n}\nclass be {\n  /**\n  The current editor state.\n  */\n  get state() {\n    return this.viewState.state;\n  }\n  /**\n  To be able to display large documents without consuming too much\n  memory or overloading the browser, CodeMirror only draws the\n  code that is visible (plus a margin around it) to the DOM. This\n  property tells you the extent of the current drawn viewport, in\n  document positions.\n  */\n  get viewport() {\n    return this.viewState.viewport;\n  }\n  /**\n  When there are, for example, large collapsed ranges in the\n  viewport, its size can be a lot bigger than the actual visible\n  content. Thus, if you are doing something like styling the\n  content in the viewport, it is preferable to only do so for\n  these ranges, which are the subset of the viewport that is\n  actually drawn.\n  */\n  get visibleRanges() {\n    return this.viewState.visibleRanges;\n  }\n  /**\n  Returns false when the editor is entirely scrolled out of view\n  or otherwise hidden.\n  */\n  get inView() {\n    return this.viewState.inView;\n  }\n  /**\n  Indicates whether the user is currently composing text via\n  [IME](https://en.wikipedia.org/wiki/Input_method), and at least\n  one change has been made in the current composition.\n  */\n  get composing() {\n    return this.inputState.composing > 0;\n  }\n  /**\n  Indicates whether the user is currently in composing state. Note\n  that on some platforms, like Android, this will be the case a\n  lot, since just putting the cursor on a word starts a\n  composition there.\n  */\n  get compositionStarted() {\n    return this.inputState.composing >= 0;\n  }\n  /**\n  The document or shadow root that the view lives in.\n  */\n  get root() {\n    return this._root;\n  }\n  /**\n  @internal\n  */\n  get win() {\n    return this.dom.ownerDocument.defaultView || window;\n  }\n  /**\n  Construct a new view. You\'ll want to either provide a `parent`\n  option, or put `view.dom` into your document after creating a\n  view, so that the user can see the editor.\n  */\n  constructor(e = {}) {\n    var n;\n    this.plugins = [], this.pluginMap = /* @__PURE__ */ new Map(), this.editorAttrs = {}, this.contentAttrs = {}, this.bidiCache = [], this.destroyed = !1, this.updateState = 2, this.measureScheduled = -1, this.measureRequests = [], this.contentDOM = document.createElement("div"), this.scrollDOM = document.createElement("div"), this.scrollDOM.tabIndex = -1, this.scrollDOM.className = "cm-scroller", this.scrollDOM.appendChild(this.contentDOM), this.announceDOM = document.createElement("div"), this.announceDOM.className = "cm-announced", this.announceDOM.setAttribute("aria-live", "polite"), this.dom = document.createElement("div"), this.dom.appendChild(this.announceDOM), this.dom.appendChild(this.scrollDOM), e.parent && e.parent.appendChild(this.dom);\n    let { dispatch: r } = e;\n    this.dispatchTransactions = e.dispatchTransactions || r && ((i) => i.forEach((s) => r(s, this))) || ((i) => this.update(i)), this.dispatch = this.dispatch.bind(this), this._root = e.root || c8(e.parent) || document, this.viewState = new t0(e.state || dt.create(e)), e.scrollTo && e.scrollTo.is(Ql) && (this.viewState.scrollTarget = e.scrollTo.value.clip(this.viewState.state)), this.plugins = this.state.facet(io).map((i) => new Lh(i));\n    for (let i of this.plugins)\n      i.update(this);\n    this.observer = new A6(this), this.inputState = new z8(this), this.inputState.ensureHandlers(this.plugins), this.docView = new Rg(this), this.mountStyles(), this.updateAttrs(), this.updateState = 0, this.requestMeasure(), !((n = document.fonts) === null || n === void 0) && n.ready && document.fonts.ready.then(() => this.requestMeasure());\n  }\n  dispatch(...e) {\n    let n = e.length == 1 && e[0] instanceof rn ? e : e.length == 1 && Array.isArray(e[0]) ? e[0] : [this.state.update(...e)];\n    this.dispatchTransactions(n, this);\n  }\n  /**\n  Update the view for the given array of transactions. This will\n  update the visible document and selection to match the state\n  produced by the transactions, and notify view plugins of the\n  change. You should usually call\n  [`dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch) instead, which uses this\n  as a primitive.\n  */\n  update(e) {\n    if (this.updateState != 0)\n      throw new Error("Calls to EditorView.update are not allowed while an update is in progress");\n    let n = !1, r = !1, i, s = this.state;\n    for (let m of e) {\n      if (m.startState != s)\n        throw new RangeError("Trying to update state with a transaction that doesn\'t start from the previous state.");\n      s = m.state;\n    }\n    if (this.destroyed) {\n      this.viewState.state = s;\n      return;\n    }\n    let a = this.hasFocus, o = 0, l = null;\n    e.some((m) => m.annotation(_C)) ? (this.inputState.notifiedFocused = a, o = 1) : a != this.inputState.notifiedFocused && (this.inputState.notifiedFocused = a, l = ZC(s, a), l || (o = 1));\n    let c = this.observer.delayedAndroidKey, h = null;\n    if (c ? (this.observer.clearDelayedAndroidKey(), h = this.observer.readChange(), (h && !this.state.doc.eq(s.doc) || !this.state.selection.eq(s.selection)) && (h = null)) : this.observer.clear(), s.facet(dt.phrases) != this.state.facet(dt.phrases))\n      return this.setState(s);\n    i = Pu.create(this, s, e), i.flags |= o;\n    let f = this.viewState.scrollTarget;\n    try {\n      this.updateState = 2;\n      for (let m of e) {\n        if (f && (f = f.map(m.changes)), m.scrollIntoView) {\n          let { main: y } = m.state.selection;\n          f = new aa(y.empty ? y : ne.cursor(y.head, y.head > y.anchor ? -1 : 1));\n        }\n        for (let y of m.effects)\n          y.is(Ql) && (f = y.value.clip(this.state));\n      }\n      this.viewState.update(i, f), this.bidiCache = Fu.update(this.bidiCache, i.changes), i.empty || (this.updatePlugins(i), this.inputState.update(i)), n = this.docView.update(i), this.state.facet(so) != this.styleModules && this.mountStyles(), r = this.updateAttrs(), this.showAnnouncements(e), this.docView.updateSelection(n, e.some((m) => m.isUserEvent("select.pointer")));\n    } finally {\n      this.updateState = 0;\n    }\n    if (i.startState.facet($l) != i.state.facet($l) && (this.viewState.mustMeasureContent = !0), (n || r || f || this.viewState.mustEnforceCursorAssoc || this.viewState.mustMeasureContent) && this.requestMeasure(), n && this.docViewUpdate(), !i.empty)\n      for (let m of this.state.facet(Jp))\n        try {\n          m(i);\n        } catch (y) {\n          qn(this.state, y, "update listener");\n        }\n    (l || h) && Promise.resolve().then(() => {\n      l && this.state == l.startState && this.dispatch(l), h && !BC(this, h) && c.force && sa(this.contentDOM, c.key, c.keyCode);\n    });\n  }\n  /**\n  Reset the view to the given state. (This will cause the entire\n  document to be redrawn and all view plugins to be reinitialized,\n  so you should probably only use it when the new state isn\'t\n  derived from the old state. Otherwise, use\n  [`dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch) instead.)\n  */\n  setState(e) {\n    if (this.updateState != 0)\n      throw new Error("Calls to EditorView.setState are not allowed while an update is in progress");\n    if (this.destroyed) {\n      this.viewState.state = e;\n      return;\n    }\n    this.updateState = 2;\n    let n = this.hasFocus;\n    try {\n      for (let r of this.plugins)\n        r.destroy(this);\n      this.viewState = new t0(e), this.plugins = e.facet(io).map((r) => new Lh(r)), this.pluginMap.clear();\n      for (let r of this.plugins)\n        r.update(this);\n      this.docView.destroy(), this.docView = new Rg(this), this.inputState.ensureHandlers(this.plugins), this.mountStyles(), this.updateAttrs(), this.bidiCache = [];\n    } finally {\n      this.updateState = 0;\n    }\n    n && this.focus(), this.requestMeasure();\n  }\n  updatePlugins(e) {\n    let n = e.startState.facet(io), r = e.state.facet(io);\n    if (n != r) {\n      let i = [];\n      for (let s of r) {\n        let a = n.indexOf(s);\n        if (a < 0)\n          i.push(new Lh(s));\n        else {\n          let o = this.plugins[a];\n          o.mustUpdate = e, i.push(o);\n        }\n      }\n      for (let s of this.plugins)\n        s.mustUpdate != e && s.destroy(this);\n      this.plugins = i, this.pluginMap.clear();\n    } else\n      for (let i of this.plugins)\n        i.mustUpdate = e;\n    for (let i = 0; i < this.plugins.length; i++)\n      this.plugins[i].update(this);\n    n != r && this.inputState.ensureHandlers(this.plugins);\n  }\n  docViewUpdate() {\n    for (let e of this.plugins) {\n      let n = e.value;\n      if (n && n.docViewUpdate)\n        try {\n          n.docViewUpdate(this);\n        } catch (r) {\n          qn(this.state, r, "doc view update listener");\n        }\n    }\n  }\n  /**\n  @internal\n  */\n  measure(e = !0) {\n    if (this.destroyed)\n      return;\n    if (this.measureScheduled > -1 && this.win.cancelAnimationFrame(this.measureScheduled), this.observer.delayedAndroidKey) {\n      this.measureScheduled = -1, this.requestMeasure();\n      return;\n    }\n    this.measureScheduled = 0, e && this.observer.forceFlush();\n    let n = null, r = this.scrollDOM, i = r.scrollTop * this.scaleY, { scrollAnchorPos: s, scrollAnchorHeight: a } = this.viewState;\n    Math.abs(i - this.viewState.scrollTop) > 1 && (a = -1), this.viewState.scrollAnchorHeight = -1;\n    try {\n      for (let o = 0; ; o++) {\n        if (a < 0)\n          if (Kw(r))\n            s = -1, a = this.viewState.heightMap.height;\n          else {\n            let y = this.viewState.scrollAnchorAt(i);\n            s = y.from, a = y.top;\n          }\n        this.updateState = 1;\n        let l = this.viewState.measure(this);\n        if (!l && !this.measureRequests.length && this.viewState.scrollTarget == null)\n          break;\n        if (o > 5) {\n          console.warn(this.measureRequests.length ? "Measure loop restarted more than 5 times" : "Viewport failed to stabilize");\n          break;\n        }\n        let c = [];\n        l & 4 || ([this.measureRequests, c] = [c, this.measureRequests]);\n        let h = c.map((y) => {\n          try {\n            return y.read(this);\n          } catch (v) {\n            return qn(this.state, v), s0;\n          }\n        }), f = Pu.create(this, this.state, []), m = !1;\n        f.flags |= l, n ? n.flags |= l : n = f, this.updateState = 2, f.empty || (this.updatePlugins(f), this.inputState.update(f), this.updateAttrs(), m = this.docView.update(f), m && this.docViewUpdate());\n        for (let y = 0; y < c.length; y++)\n          if (h[y] != s0)\n            try {\n              let v = c[y];\n              v.write && v.write(h[y], this);\n            } catch (v) {\n              qn(this.state, v);\n            }\n        if (m && this.docView.updateSelection(!0), !f.viewportChanged && this.measureRequests.length == 0) {\n          if (this.viewState.editorHeight)\n            if (this.viewState.scrollTarget) {\n              this.docView.scrollIntoView(this.viewState.scrollTarget), this.viewState.scrollTarget = null, a = -1;\n              continue;\n            } else {\n              let v = (s < 0 ? this.viewState.heightMap.height : this.viewState.lineBlockAt(s).top) - a;\n              if (v > 1 || v < -1) {\n                i = i + v, r.scrollTop = i / this.scaleY, a = -1;\n                continue;\n              }\n            }\n          break;\n        }\n      }\n    } finally {\n      this.updateState = 0, this.measureScheduled = -1;\n    }\n    if (n && !n.empty)\n      for (let o of this.state.facet(Jp))\n        o(n);\n  }\n  /**\n  Get the CSS classes for the currently active editor themes.\n  */\n  get themeClasses() {\n    return sf + " " + (this.state.facet(rf) ? NC : IC) + " " + this.state.facet($l);\n  }\n  updateAttrs() {\n    let e = a0(this, SC, {\n      class: "cm-editor" + (this.hasFocus ? " cm-focused " : " ") + this.themeClasses\n    }), n = {\n      spellcheck: "false",\n      autocorrect: "off",\n      autocapitalize: "off",\n      writingsuggestions: "false",\n      translate: "no",\n      contenteditable: this.state.facet(Si) ? "true" : "false",\n      class: "cm-content",\n      style: `${ke.tabSize}: ${this.state.tabSize}`,\n      role: "textbox",\n      "aria-multiline": "true"\n    };\n    this.state.readOnly && (n["aria-readonly"] = "true"), a0(this, Id, n);\n    let r = this.observer.ignore(() => {\n      let i = Gp(this.contentDOM, this.contentAttrs, n), s = Gp(this.dom, this.editorAttrs, e);\n      return i || s;\n    });\n    return this.editorAttrs = e, this.contentAttrs = n, r;\n  }\n  showAnnouncements(e) {\n    let n = !0;\n    for (let r of e)\n      for (let i of r.effects)\n        if (i.is(be.announce)) {\n          n && (this.announceDOM.textContent = ""), n = !1;\n          let s = this.announceDOM.appendChild(document.createElement("div"));\n          s.textContent = i.value;\n        }\n  }\n  mountStyles() {\n    this.styleModules = this.state.facet(so);\n    let e = this.state.facet(be.cspNonce);\n    Ji.mount(this.root, this.styleModules.concat(C6).reverse(), e ? { nonce: e } : void 0);\n  }\n  readMeasured() {\n    if (this.updateState == 2)\n      throw new Error("Reading the editor layout isn\'t allowed during an update");\n    this.updateState == 0 && this.measureScheduled > -1 && this.measure(!1);\n  }\n  /**\n  Schedule a layout measurement, optionally providing callbacks to\n  do custom DOM measuring followed by a DOM write phase. Using\n  this is preferable reading DOM layout directly from, for\n  example, an event handler, because it\'ll make sure measuring and\n  drawing done by other components is synchronized, avoiding\n  unnecessary DOM layout computations.\n  */\n  requestMeasure(e) {\n    if (this.measureScheduled < 0 && (this.measureScheduled = this.win.requestAnimationFrame(() => this.measure())), e) {\n      if (this.measureRequests.indexOf(e) > -1)\n        return;\n      if (e.key != null) {\n        for (let n = 0; n < this.measureRequests.length; n++)\n          if (this.measureRequests[n].key === e.key) {\n            this.measureRequests[n] = e;\n            return;\n          }\n      }\n      this.measureRequests.push(e);\n    }\n  }\n  /**\n  Get the value of a specific plugin, if present. Note that\n  plugins that crash can be dropped from a view, so even when you\n  know you registered a given plugin, it is recommended to check\n  the return value of this method.\n  */\n  plugin(e) {\n    let n = this.pluginMap.get(e);\n    return (n === void 0 || n && n.spec != e) && this.pluginMap.set(e, n = this.plugins.find((r) => r.spec == e) || null), n && n.update(this).value;\n  }\n  /**\n  The top position of the document, in screen coordinates. This\n  may be negative when the editor is scrolled down. Points\n  directly to the top of the first line, not above the padding.\n  */\n  get documentTop() {\n    return this.contentDOM.getBoundingClientRect().top + this.viewState.paddingTop;\n  }\n  /**\n  Reports the padding above and below the document.\n  */\n  get documentPadding() {\n    return { top: this.viewState.paddingTop, bottom: this.viewState.paddingBottom };\n  }\n  /**\n  If the editor is transformed with CSS, this provides the scale\n  along the X axis. Otherwise, it will just be 1. Note that\n  transforms other than translation and scaling are not supported.\n  */\n  get scaleX() {\n    return this.viewState.scaleX;\n  }\n  /**\n  Provide the CSS transformed scale along the Y axis.\n  */\n  get scaleY() {\n    return this.viewState.scaleY;\n  }\n  /**\n  Find the text line or block widget at the given vertical\n  position (which is interpreted as relative to the [top of the\n  document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop)).\n  */\n  elementAtHeight(e) {\n    return this.readMeasured(), this.viewState.elementAtHeight(e);\n  }\n  /**\n  Find the line block (see\n  [`lineBlockAt`](https://codemirror.net/6/docs/ref/#view.EditorView.lineBlockAt) at the given\n  height, again interpreted relative to the [top of the\n  document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop).\n  */\n  lineBlockAtHeight(e) {\n    return this.readMeasured(), this.viewState.lineBlockAtHeight(e);\n  }\n  /**\n  Get the extent and vertical position of all [line\n  blocks](https://codemirror.net/6/docs/ref/#view.EditorView.lineBlockAt) in the viewport. Positions\n  are relative to the [top of the\n  document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop);\n  */\n  get viewportLineBlocks() {\n    return this.viewState.viewportLines;\n  }\n  /**\n  Find the line block around the given document position. A line\n  block is a range delimited on both sides by either a\n  non-[hidden](https://codemirror.net/6/docs/ref/#view.Decoration^replace) line break, or the\n  start/end of the document. It will usually just hold a line of\n  text, but may be broken into multiple textblocks by block\n  widgets.\n  */\n  lineBlockAt(e) {\n    return this.viewState.lineBlockAt(e);\n  }\n  /**\n  The editor\'s total content height.\n  */\n  get contentHeight() {\n    return this.viewState.contentHeight;\n  }\n  /**\n  Move a cursor position by [grapheme\n  cluster](https://codemirror.net/6/docs/ref/#state.findClusterBreak). `forward` determines whether\n  the motion is away from the line start, or towards it. In\n  bidirectional text, the line is traversed in visual order, using\n  the editor\'s [text direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection).\n  When the start position was the last one on the line, the\n  returned position will be across the line break. If there is no\n  further line, the original position is returned.\n  \n  By default, this method moves over a single cluster. The\n  optional `by` argument can be used to move across more. It will\n  be called with the first cluster as argument, and should return\n  a predicate that determines, for each subsequent cluster,\n  whether it should also be moved over.\n  */\n  moveByChar(e, n, r) {\n    return Nh(this, e, Ig(this, e, n, r));\n  }\n  /**\n  Move a cursor position across the next group of either\n  [letters](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer) or non-letter\n  non-whitespace characters.\n  */\n  moveByGroup(e, n) {\n    return Nh(this, e, Ig(this, e, n, (r) => L8(this, e.head, r)));\n  }\n  /**\n  Get the cursor position visually at the start or end of a line.\n  Note that this may differ from the _logical_ position at its\n  start or end (which is simply at `line.from`/`line.to`) if text\n  at the start or end goes against the line\'s base text direction.\n  */\n  visualLineSide(e, n) {\n    let r = this.bidiSpans(e), i = this.textDirectionAt(e.from), s = r[n ? r.length - 1 : 0];\n    return ne.cursor(s.side(n, i) + e.from, s.forward(!n, i) ? 1 : -1);\n  }\n  /**\n  Move to the next line boundary in the given direction. If\n  `includeWrap` is true, line wrapping is on, and there is a\n  further wrap point on the current line, the wrap point will be\n  returned. Otherwise this function will return the start or end\n  of the line.\n  */\n  moveToLineBoundary(e, n, r = !0) {\n    return $8(this, e, n, r);\n  }\n  /**\n  Move a cursor position vertically. When `distance` isn\'t given,\n  it defaults to moving to the next line (including wrapped\n  lines). Otherwise, `distance` should provide a positive distance\n  in pixels.\n  \n  When `start` has a\n  [`goalColumn`](https://codemirror.net/6/docs/ref/#state.SelectionRange.goalColumn), the vertical\n  motion will use that as a target horizontal position. Otherwise,\n  the cursor\'s own horizontal position is used. The returned\n  cursor will have its goal column set to whichever column was\n  used.\n  */\n  moveVertically(e, n, r) {\n    return Nh(this, e, I8(this, e, n, r));\n  }\n  /**\n  Find the DOM parent node and offset (child offset if `node` is\n  an element, character offset when it is a text node) at the\n  given document position.\n  \n  Note that for positions that aren\'t currently in\n  `visibleRanges`, the resulting DOM position isn\'t necessarily\n  meaningful (it may just point before or after a placeholder\n  element).\n  */\n  domAtPos(e) {\n    return this.docView.domAtPos(e);\n  }\n  /**\n  Find the document position at the given DOM node. Can be useful\n  for associating positions with DOM events. Will raise an error\n  when `node` isn\'t part of the editor content.\n  */\n  posAtDOM(e, n = 0) {\n    return this.docView.posFromDOM(e, n);\n  }\n  posAtCoords(e, n = !0) {\n    return this.readMeasured(), FC(this, e, n);\n  }\n  /**\n  Get the screen coordinates at the given document position.\n  `side` determines whether the coordinates are based on the\n  element before (-1) or after (1) the position (if no element is\n  available on the given side, the method will transparently use\n  another strategy to get reasonable coordinates).\n  */\n  coordsAtPos(e, n = 1) {\n    this.readMeasured();\n    let r = this.docView.coordsAt(e, n);\n    if (!r || r.left == r.right)\n      return r;\n    let i = this.state.doc.lineAt(e), s = this.bidiSpans(i), a = s[Hi.find(s, e - i.from, -1, n)];\n    return Mc(r, a.dir == Dt.LTR == n > 0);\n  }\n  /**\n  Return the rectangle around a given character. If `pos` does not\n  point in front of a character that is in the viewport and\n  rendered (i.e. not replaced, not a line break), this will return\n  null. For space characters that are a line wrap point, this will\n  return the position before the line break.\n  */\n  coordsForChar(e) {\n    return this.readMeasured(), this.docView.coordsForChar(e);\n  }\n  /**\n  The default width of a character in the editor. May not\n  accurately reflect the width of all characters (given variable\n  width fonts or styling of invididual ranges).\n  */\n  get defaultCharacterWidth() {\n    return this.viewState.heightOracle.charWidth;\n  }\n  /**\n  The default height of a line in the editor. May not be accurate\n  for all lines.\n  */\n  get defaultLineHeight() {\n    return this.viewState.heightOracle.lineHeight;\n  }\n  /**\n  The text direction\n  ([`direction`](https://developer.mozilla.org/en-US/docs/Web/CSS/direction)\n  CSS property) of the editor\'s content element.\n  */\n  get textDirection() {\n    return this.viewState.defaultTextDirection;\n  }\n  /**\n  Find the text direction of the block at the given position, as\n  assigned by CSS. If\n  [`perLineTextDirection`](https://codemirror.net/6/docs/ref/#view.EditorView^perLineTextDirection)\n  isn\'t enabled, or the given position is outside of the viewport,\n  this will always return the same as\n  [`textDirection`](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection). Note that\n  this may trigger a DOM layout.\n  */\n  textDirectionAt(e) {\n    return !this.state.facet(xC) || e < this.viewport.from || e > this.viewport.to ? this.textDirection : (this.readMeasured(), this.docView.textDirectionAt(e));\n  }\n  /**\n  Whether this editor [wraps lines](https://codemirror.net/6/docs/ref/#view.EditorView.lineWrapping)\n  (as determined by the\n  [`white-space`](https://developer.mozilla.org/en-US/docs/Web/CSS/white-space)\n  CSS property of its content element).\n  */\n  get lineWrapping() {\n    return this.viewState.heightOracle.lineWrapping;\n  }\n  /**\n  Returns the bidirectional text structure of the given line\n  (which should be in the current document) as an array of span\n  objects. The order of these spans matches the [text\n  direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection)—if that is\n  left-to-right, the leftmost spans come first, otherwise the\n  rightmost spans come first.\n  */\n  bidiSpans(e) {\n    if (e.length > E6)\n      return fC(e.length);\n    let n = this.textDirectionAt(e.from), r;\n    for (let s of this.bidiCache)\n      if (s.from == e.from && s.dir == n && (s.fresh || pC(s.isolates, r = jg(this, e))))\n        return s.order;\n    r || (r = jg(this, e));\n    let i = w8(e.text, n, r);\n    return this.bidiCache.push(new Fu(e.from, e.to, n, r, !0, i)), i;\n  }\n  /**\n  Check whether the editor has focus.\n  */\n  get hasFocus() {\n    var e;\n    return (this.dom.ownerDocument.hasFocus() || ke.safari && ((e = this.inputState) === null || e === void 0 ? void 0 : e.lastContextMenu) > Date.now() - 3e4) && this.root.activeElement == this.contentDOM;\n  }\n  /**\n  Put focus on the editor.\n  */\n  focus() {\n    this.observer.ignore(() => {\n      Hw(this.contentDOM), this.docView.updateSelection();\n    });\n  }\n  /**\n  Update the [root](https://codemirror.net/6/docs/ref/##view.EditorViewConfig.root) in which the editor lives. This is only\n  necessary when moving the editor\'s existing DOM to a new window or shadow root.\n  */\n  setRoot(e) {\n    this._root != e && (this._root = e, this.observer.setWindow((e.nodeType == 9 ? e : e.ownerDocument).defaultView || window), this.mountStyles());\n  }\n  /**\n  Clean up this editor view, removing its element from the\n  document, unregistering event handlers, and notifying\n  plugins. The view instance can no longer be used after\n  calling this.\n  */\n  destroy() {\n    this.root.activeElement == this.contentDOM && this.contentDOM.blur();\n    for (let e of this.plugins)\n      e.destroy(this);\n    this.plugins = [], this.inputState.destroy(), this.docView.destroy(), this.dom.remove(), this.observer.destroy(), this.measureScheduled > -1 && this.win.cancelAnimationFrame(this.measureScheduled), this.destroyed = !0;\n  }\n  /**\n  Returns an effect that can be\n  [added](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) to a transaction to\n  cause it to scroll the given position or range into view.\n  */\n  static scrollIntoView(e, n = {}) {\n    return Ql.of(new aa(typeof e == "number" ? ne.cursor(e) : e, n.y, n.x, n.yMargin, n.xMargin));\n  }\n  /**\n  Return an effect that resets the editor to its current (at the\n  time this method was called) scroll position. Note that this\n  only affects the editor\'s own scrollable element, not parents.\n  See also\n  [`EditorViewConfig.scrollTo`](https://codemirror.net/6/docs/ref/#view.EditorViewConfig.scrollTo).\n  \n  The effect should be used with a document identical to the one\n  it was created for. Failing to do so is not an error, but may\n  not scroll to the expected position. You can\n  [map](https://codemirror.net/6/docs/ref/#state.StateEffect.map) the effect to account for changes.\n  */\n  scrollSnapshot() {\n    let { scrollTop: e, scrollLeft: n } = this.scrollDOM, r = this.viewState.scrollAnchorAt(e);\n    return Ql.of(new aa(ne.cursor(r.from), "start", "start", r.top - e, n, !0));\n  }\n  /**\n  Enable or disable tab-focus mode, which disables key bindings\n  for Tab and Shift-Tab, letting the browser\'s default\n  focus-changing behavior go through instead. This is useful to\n  prevent trapping keyboard users in your editor.\n  \n  Without argument, this toggles the mode. With a boolean, it\n  enables (true) or disables it (false). Given a number, it\n  temporarily enables the mode until that number of milliseconds\n  have passed or another non-Tab key is pressed.\n  */\n  setTabFocusMode(e) {\n    e == null ? this.inputState.tabFocusMode = this.inputState.tabFocusMode < 0 ? 0 : -1 : typeof e == "boolean" ? this.inputState.tabFocusMode = e ? 0 : -1 : this.inputState.tabFocusMode != 0 && (this.inputState.tabFocusMode = Date.now() + e);\n  }\n  /**\n  Returns an extension that can be used to add DOM event handlers.\n  The value should be an object mapping event names to handler\n  functions. For any given event, such functions are ordered by\n  extension precedence, and the first handler to return true will\n  be assumed to have handled that event, and no other handlers or\n  built-in behavior will be activated for it. These are registered\n  on the [content element](https://codemirror.net/6/docs/ref/#view.EditorView.contentDOM), except\n  for `scroll` handlers, which will be called any time the\n  editor\'s [scroll element](https://codemirror.net/6/docs/ref/#view.EditorView.scrollDOM) or one of\n  its parent nodes is scrolled.\n  */\n  static domEventHandlers(e) {\n    return pn.define(() => ({}), { eventHandlers: e });\n  }\n  /**\n  Create an extension that registers DOM event observers. Contrary\n  to event [handlers](https://codemirror.net/6/docs/ref/#view.EditorView^domEventHandlers),\n  observers can\'t be prevented from running by a higher-precedence\n  handler returning true. They also don\'t prevent other handlers\n  and observers from running when they return true, and should not\n  call `preventDefault`.\n  */\n  static domEventObservers(e) {\n    return pn.define(() => ({}), { eventObservers: e });\n  }\n  /**\n  Create a theme extension. The first argument can be a\n  [`style-mod`](https://github.com/marijnh/style-mod#documentation)\n  style spec providing the styles for the theme. These will be\n  prefixed with a generated class for the style.\n  \n  Because the selectors will be prefixed with a scope class, rule\n  that directly match the editor\'s [wrapper\n  element](https://codemirror.net/6/docs/ref/#view.EditorView.dom)—to which the scope class will be\n  added—need to be explicitly differentiated by adding an `&` to\n  the selector for that element—for example\n  `&.cm-focused`.\n  \n  When `dark` is set to true, the theme will be marked as dark,\n  which will cause the `&dark` rules from [base\n  themes](https://codemirror.net/6/docs/ref/#view.EditorView^baseTheme) to be used (as opposed to\n  `&light` when a light theme is active).\n  */\n  static theme(e, n) {\n    let r = Ji.newName(), i = [$l.of(r), so.of(af(`.${r}`, e))];\n    return n && n.dark && i.push(rf.of(!0)), i;\n  }\n  /**\n  Create an extension that adds styles to the base theme. Like\n  with [`theme`](https://codemirror.net/6/docs/ref/#view.EditorView^theme), use `&` to indicate the\n  place of the editor wrapper element when directly targeting\n  that. You can also use `&dark` or `&light` instead to only\n  target editors with a dark or light theme.\n  */\n  static baseTheme(e) {\n    return jr.lowest(so.of(af("." + sf, e, VC)));\n  }\n  /**\n  Retrieve an editor view instance from the view\'s DOM\n  representation.\n  */\n  static findFromDOM(e) {\n    var n;\n    let r = e.querySelector(".cm-content"), i = r && At.get(r) || At.get(e);\n    return ((n = i?.rootView) === null || n === void 0 ? void 0 : n.view) || null;\n  }\n}\nbe.styleModule = so;\nbe.inputHandler = OC;\nbe.clipboardInputFilter = $d;\nbe.clipboardOutputFilter = Ld;\nbe.scrollHandler = wC;\nbe.focusChangeEffect = vC;\nbe.perLineTextDirection = xC;\nbe.exceptionSink = yC;\nbe.updateListener = Jp;\nbe.editable = Si;\nbe.mouseSelectionStyle = bC;\nbe.dragMovesSelection = gC;\nbe.clickAddsSelectionRange = mC;\nbe.decorations = Po;\nbe.outerDecorations = AC;\nbe.atomicRanges = Nd;\nbe.bidiIsolatedRanges = DC;\nbe.scrollMargins = PC;\nbe.darkTheme = rf;\nbe.cspNonce = /* @__PURE__ */ Ae.define({ combine: (t) => t.length ? t[0] : "" });\nbe.contentAttributes = Id;\nbe.editorAttributes = SC;\nbe.lineWrapping = /* @__PURE__ */ be.contentAttributes.of({ class: "cm-lineWrapping" });\nbe.announce = /* @__PURE__ */ Ie.define();\nconst E6 = 4096, s0 = {};\nclass Fu {\n  constructor(e, n, r, i, s, a) {\n    this.from = e, this.to = n, this.dir = r, this.isolates = i, this.fresh = s, this.order = a;\n  }\n  static update(e, n) {\n    if (n.empty && !e.some((s) => s.fresh))\n      return e;\n    let r = [], i = e.length ? e[e.length - 1].dir : Dt.LTR;\n    for (let s = Math.max(0, e.length - 10); s < e.length; s++) {\n      let a = e[s];\n      a.dir == i && !n.touchesRange(a.from, a.to) && r.push(new Fu(n.mapPos(a.from, 1), n.mapPos(a.to, -1), a.dir, a.isolates, !1, a.order));\n    }\n    return r;\n  }\n}\nfunction a0(t, e, n) {\n  for (let r = t.state.facet(e), i = r.length - 1; i >= 0; i--) {\n    let s = r[i], a = typeof s == "function" ? s(t) : s;\n    a && qp(a, n);\n  }\n  return n;\n}\nconst F6 = ke.mac ? "mac" : ke.windows ? "win" : ke.linux ? "linux" : "key";\nfunction B6(t, e) {\n  const n = t.split(/-(?!$)/);\n  let r = n[n.length - 1];\n  r == "Space" && (r = " ");\n  let i, s, a, o;\n  for (let l = 0; l < n.length - 1; ++l) {\n    const c = n[l];\n    if (/^(cmd|meta|m)$/i.test(c))\n      o = !0;\n    else if (/^a(lt)?$/i.test(c))\n      i = !0;\n    else if (/^(c|ctrl|control)$/i.test(c))\n      s = !0;\n    else if (/^s(hift)?$/i.test(c))\n      a = !0;\n    else if (/^mod$/i.test(c))\n      e == "mac" ? o = !0 : s = !0;\n    else\n      throw new Error("Unrecognized modifier name: " + c);\n  }\n  return i && (r = "Alt-" + r), s && (r = "Ctrl-" + r), o && (r = "Meta-" + r), a && (r = "Shift-" + r), r;\n}\nfunction Ll(t, e, n) {\n  return e.altKey && (t = "Alt-" + t), e.ctrlKey && (t = "Ctrl-" + t), e.metaKey && (t = "Meta-" + t), n !== !1 && e.shiftKey && (t = "Shift-" + t), t;\n}\nconst M6 = /* @__PURE__ */ jr.default(/* @__PURE__ */ be.domEventHandlers({\n  keydown(t, e) {\n    return WC(XC(e.state), t, e, "editor");\n  }\n})), Rs = /* @__PURE__ */ Ae.define({ enables: M6 }), o0 = /* @__PURE__ */ new WeakMap();\nfunction XC(t) {\n  let e = t.facet(Rs), n = o0.get(e);\n  return n || o0.set(e, n = j6(e.reduce((r, i) => r.concat(i), []))), n;\n}\nfunction Q6(t, e, n) {\n  return WC(XC(t.state), e, t, n);\n}\nlet Ui = null;\nconst T6 = 4e3;\nfunction j6(t, e = F6) {\n  let n = /* @__PURE__ */ Object.create(null), r = /* @__PURE__ */ Object.create(null), i = (a, o) => {\n    let l = r[a];\n    if (l == null)\n      r[a] = o;\n    else if (l != o)\n      throw new Error("Key binding " + a + " is used both as a regular binding and as a multi-stroke prefix");\n  }, s = (a, o, l, c, h) => {\n    var f, m;\n    let y = n[a] || (n[a] = /* @__PURE__ */ Object.create(null)), v = o.split(/ (?!$)/).map((M) => B6(M, e));\n    for (let M = 1; M < v.length; M++) {\n      let $ = v.slice(0, M).join(" ");\n      i($, !0), y[$] || (y[$] = {\n        preventDefault: !0,\n        stopPropagation: !1,\n        run: [(U) => {\n          let R = Ui = { view: U, prefix: $, scope: a };\n          return setTimeout(() => {\n            Ui == R && (Ui = null);\n          }, T6), !0;\n        }]\n      });\n    }\n    let C = v.join(" ");\n    i(C, !1);\n    let S = y[C] || (y[C] = {\n      preventDefault: !1,\n      stopPropagation: !1,\n      run: ((m = (f = y._any) === null || f === void 0 ? void 0 : f.run) === null || m === void 0 ? void 0 : m.slice()) || []\n    });\n    l && S.run.push(l), c && (S.preventDefault = !0), h && (S.stopPropagation = !0);\n  };\n  for (let a of t) {\n    let o = a.scope ? a.scope.split(" ") : ["editor"];\n    if (a.any)\n      for (let c of o) {\n        let h = n[c] || (n[c] = /* @__PURE__ */ Object.create(null));\n        h._any || (h._any = { preventDefault: !1, stopPropagation: !1, run: [] });\n        let { any: f } = a;\n        for (let m in h)\n          h[m].run.push((y) => f(y, of));\n      }\n    let l = a[e] || a.key;\n    if (l)\n      for (let c of o)\n        s(c, l, a.run, a.preventDefault, a.stopPropagation), a.shift && s(c, "Shift-" + l, a.shift, a.preventDefault, a.stopPropagation);\n  }\n  return n;\n}\nlet of = null;\nfunction WC(t, e, n, r) {\n  of = e;\n  let i = s8(e), s = hr(i, 0), a = hi(s) == i.length && i != " ", o = "", l = !1, c = !1, h = !1;\n  Ui && Ui.view == n && Ui.scope == r && (o = Ui.prefix + " ", QC.indexOf(e.keyCode) < 0 && (c = !0, Ui = null));\n  let f = /* @__PURE__ */ new Set(), m = (S) => {\n    if (S) {\n      for (let M of S.run)\n        if (!f.has(M) && (f.add(M), M(n)))\n          return S.stopPropagation && (h = !0), !0;\n      S.preventDefault && (S.stopPropagation && (h = !0), c = !0);\n    }\n    return !1;\n  }, y = t[r], v, C;\n  return y && (m(y[o + Ll(i, e, !a)]) ? l = !0 : a && (e.altKey || e.metaKey || e.ctrlKey) && // Ctrl-Alt may be used for AltGr on Windows\n  !(ke.windows && e.ctrlKey && e.altKey) && (v = es[e.keyCode]) && v != i ? (m(y[o + Ll(v, e, !0)]) || e.shiftKey && (C = So[e.keyCode]) != i && C != v && m(y[o + Ll(C, e, !1)])) && (l = !0) : a && e.shiftKey && m(y[o + Ll(i, e, !0)]) && (l = !0), !l && m(y._any) && (l = !0)), c && (l = !0), l && h && e.stopPropagation(), of = null, l;\n}\nclass zo {\n  /**\n  Create a marker with the given class and dimensions. If `width`\n  is null, the DOM element will get no width style.\n  */\n  constructor(e, n, r, i, s) {\n    this.className = e, this.left = n, this.top = r, this.width = i, this.height = s;\n  }\n  draw() {\n    let e = document.createElement("div");\n    return e.className = this.className, this.adjust(e), e;\n  }\n  update(e, n) {\n    return n.className != this.className ? !1 : (this.adjust(e), !0);\n  }\n  adjust(e) {\n    e.style.left = this.left + "px", e.style.top = this.top + "px", this.width != null && (e.style.width = this.width + "px"), e.style.height = this.height + "px";\n  }\n  eq(e) {\n    return this.left == e.left && this.top == e.top && this.width == e.width && this.height == e.height && this.className == e.className;\n  }\n  /**\n  Create a set of rectangles for the given selection range,\n  assigning them theclass`className`. Will create a single\n  rectangle for empty ranges, and a set of selection-style\n  rectangles covering the range\'s content (in a bidi-aware\n  way) for non-empty ones.\n  */\n  static forRange(e, n, r) {\n    if (r.empty) {\n      let i = e.coordsAtPos(r.head, r.assoc || 1);\n      if (!i)\n        return [];\n      let s = UC(e);\n      return [new zo(n, i.left - s.left, i.top - s.top, null, i.bottom - i.top)];\n    } else\n      return R6(e, n, r);\n  }\n}\nfunction UC(t) {\n  let e = t.scrollDOM.getBoundingClientRect();\n  return { left: (t.textDirection == Dt.LTR ? e.left : e.right - t.scrollDOM.clientWidth * t.scaleX) - t.scrollDOM.scrollLeft * t.scaleX, top: e.top - t.scrollDOM.scrollTop * t.scaleY };\n}\nfunction l0(t, e, n, r) {\n  let i = t.coordsAtPos(e, n * 2);\n  if (!i)\n    return r;\n  let s = t.dom.getBoundingClientRect(), a = (i.top + i.bottom) / 2, o = t.posAtCoords({ x: s.left + 1, y: a }), l = t.posAtCoords({ x: s.right - 1, y: a });\n  return o == null || l == null ? r : { from: Math.max(r.from, Math.min(o, l)), to: Math.min(r.to, Math.max(o, l)) };\n}\nfunction R6(t, e, n) {\n  if (n.to <= t.viewport.from || n.from >= t.viewport.to)\n    return [];\n  let r = Math.max(n.from, t.viewport.from), i = Math.min(n.to, t.viewport.to), s = t.textDirection == Dt.LTR, a = t.contentDOM, o = a.getBoundingClientRect(), l = UC(t), c = a.querySelector(".cm-line"), h = c && window.getComputedStyle(c), f = o.left + (h ? parseInt(h.paddingLeft) + Math.min(0, parseInt(h.textIndent)) : 0), m = o.right - (h ? parseInt(h.paddingRight) : 0), y = tf(t, r), v = tf(t, i), C = y.type == Rn.Text ? y : null, S = v.type == Rn.Text ? v : null;\n  if (C && (t.lineWrapping || y.widgetLineBreaks) && (C = l0(t, r, 1, C)), S && (t.lineWrapping || v.widgetLineBreaks) && (S = l0(t, i, -1, S)), C && S && C.from == S.from && C.to == S.to)\n    return $(U(n.from, n.to, C));\n  {\n    let B = C ? U(n.from, null, C) : R(y, !1), Z = S ? U(null, n.to, S) : R(v, !0), N = [];\n    return (C || y).to < (S || v).from - (C && S ? 1 : 0) || y.widgetLineBreaks > 1 && B.bottom + t.defaultLineHeight / 2 < Z.top ? N.push(M(f, B.bottom, m, Z.top)) : B.bottom < Z.top && t.elementAtHeight((B.bottom + Z.top) / 2).type == Rn.Text && (B.bottom = Z.top = (B.bottom + Z.top) / 2), $(B).concat(N).concat($(Z));\n  }\n  function M(B, Z, N, q) {\n    return new zo(e, B - l.left, Z - l.top, N - B, q - Z);\n  }\n  function $({ top: B, bottom: Z, horizontal: N }) {\n    let q = [];\n    for (let se = 0; se < N.length; se += 2)\n      q.push(M(N[se], B, N[se + 1], Z));\n    return q;\n  }\n  function U(B, Z, N) {\n    let q = 1e9, se = -1e9, K = [];\n    function ce(fe, De, Ee, re, Ce) {\n      let Le = t.coordsAtPos(fe, fe == N.to ? -2 : 2), xe = t.coordsAtPos(Ee, Ee == N.from ? 2 : -2);\n      !Le || !xe || (q = Math.min(Le.top, xe.top, q), se = Math.max(Le.bottom, xe.bottom, se), Ce == Dt.LTR ? K.push(s && De ? f : Le.left, s && re ? m : xe.right) : K.push(!s && re ? f : xe.left, !s && De ? m : Le.right));\n    }\n    let H = B ?? N.from, ie = Z ?? N.to;\n    for (let fe of t.visibleRanges)\n      if (fe.to > H && fe.from < ie)\n        for (let De = Math.max(fe.from, H), Ee = Math.min(fe.to, ie); ; ) {\n          let re = t.state.doc.lineAt(De);\n          for (let Ce of t.bidiSpans(re)) {\n            let Le = Ce.from + re.from, xe = Ce.to + re.from;\n            if (Le >= Ee)\n              break;\n            xe > De && ce(Math.max(Le, De), B == null && Le <= H, Math.min(xe, Ee), Z == null && xe >= ie, Ce.dir);\n          }\n          if (De = re.to + 1, De >= Ee)\n            break;\n        }\n    return K.length == 0 && ce(H, B == null, ie, Z == null, t.textDirection), { top: q, bottom: se, horizontal: K };\n  }\n  function R(B, Z) {\n    let N = o.top + (Z ? B.top : B.bottom);\n    return { top: N, bottom: N, horizontal: [] };\n  }\n}\nfunction _6(t, e) {\n  return t.constructor == e.constructor && t.eq(e);\n}\nclass Z6 {\n  constructor(e, n) {\n    this.view = e, this.layer = n, this.drawn = [], this.scaleX = 1, this.scaleY = 1, this.measureReq = { read: this.measure.bind(this), write: this.draw.bind(this) }, this.dom = e.scrollDOM.appendChild(document.createElement("div")), this.dom.classList.add("cm-layer"), n.above && this.dom.classList.add("cm-layer-above"), n.class && this.dom.classList.add(n.class), this.scale(), this.dom.setAttribute("aria-hidden", "true"), this.setOrder(e.state), e.requestMeasure(this.measureReq), n.mount && n.mount(this.dom, e);\n  }\n  update(e) {\n    e.startState.facet(lu) != e.state.facet(lu) && this.setOrder(e.state), (this.layer.update(e, this.dom) || e.geometryChanged) && (this.scale(), e.view.requestMeasure(this.measureReq));\n  }\n  docViewUpdate(e) {\n    this.layer.updateOnDocViewUpdate !== !1 && e.requestMeasure(this.measureReq);\n  }\n  setOrder(e) {\n    let n = 0, r = e.facet(lu);\n    for (; n < r.length && r[n] != this.layer; )\n      n++;\n    this.dom.style.zIndex = String((this.layer.above ? 150 : -1) - n);\n  }\n  measure() {\n    return this.layer.markers(this.view);\n  }\n  scale() {\n    let { scaleX: e, scaleY: n } = this.view;\n    (e != this.scaleX || n != this.scaleY) && (this.scaleX = e, this.scaleY = n, this.dom.style.transform = `scale(${1 / e}, ${1 / n})`);\n  }\n  draw(e) {\n    if (e.length != this.drawn.length || e.some((n, r) => !_6(n, this.drawn[r]))) {\n      let n = this.dom.firstChild, r = 0;\n      for (let i of e)\n        i.update && n && i.constructor && this.drawn[r].constructor && i.update(n, this.drawn[r]) ? (n = n.nextSibling, r++) : this.dom.insertBefore(i.draw(), n);\n      for (; n; ) {\n        let i = n.nextSibling;\n        n.remove(), n = i;\n      }\n      this.drawn = e;\n    }\n  }\n  destroy() {\n    this.layer.destroy && this.layer.destroy(this.dom, this.view), this.dom.remove();\n  }\n}\nconst lu = /* @__PURE__ */ Ae.define();\nfunction qC(t) {\n  return [\n    pn.define((e) => new Z6(e, t)),\n    lu.of(t)\n  ];\n}\nconst GC = !(ke.ios && ke.webkit && ke.webkit_version < 534), xa = /* @__PURE__ */ Ae.define({\n  combine(t) {\n    return ls(t, {\n      cursorBlinkRate: 1200,\n      drawRangeCursor: !0\n    }, {\n      cursorBlinkRate: (e, n) => Math.min(e, n),\n      drawRangeCursor: (e, n) => e || n\n    });\n  }\n});\nfunction $6(t = {}) {\n  return [\n    xa.of(t),\n    L6,\n    I6,\n    N6,\n    kC.of(!0)\n  ];\n}\nfunction zC(t) {\n  return t.facet(xa);\n}\nfunction HC(t) {\n  return t.startState.facet(xa) != t.state.facet(xa);\n}\nconst L6 = /* @__PURE__ */ qC({\n  above: !0,\n  markers(t) {\n    let { state: e } = t, n = e.facet(xa), r = [];\n    for (let i of e.selection.ranges) {\n      let s = i == e.selection.main;\n      if (i.empty ? !s || GC : n.drawRangeCursor) {\n        let a = s ? "cm-cursor cm-cursor-primary" : "cm-cursor cm-cursor-secondary", o = i.empty ? i : ne.cursor(i.head, i.head > i.anchor ? -1 : 1);\n        for (let l of zo.forRange(t, a, o))\n          r.push(l);\n      }\n    }\n    return r;\n  },\n  update(t, e) {\n    t.transactions.some((r) => r.selection) && (e.style.animationName = e.style.animationName == "cm-blink" ? "cm-blink2" : "cm-blink");\n    let n = HC(t);\n    return n && u0(t.state, e), t.docChanged || t.selectionSet || n;\n  },\n  mount(t, e) {\n    u0(e.state, t);\n  },\n  class: "cm-cursorLayer"\n});\nfunction u0(t, e) {\n  e.style.animationDuration = t.facet(xa).cursorBlinkRate + "ms";\n}\nconst I6 = /* @__PURE__ */ qC({\n  above: !1,\n  markers(t) {\n    return t.state.selection.ranges.map((e) => e.empty ? [] : zo.forRange(t, "cm-selectionBackground", e)).reduce((e, n) => e.concat(n));\n  },\n  update(t, e) {\n    return t.docChanged || t.selectionSet || t.viewportChanged || HC(t);\n  },\n  class: "cm-selectionLayer"\n}), lf = {\n  ".cm-line": {\n    "& ::selection, &::selection": { backgroundColor: "transparent !important" }\n  },\n  ".cm-content": {\n    "& :focus": {\n      caretColor: "initial !important",\n      "&::selection, & ::selection": {\n        backgroundColor: "Highlight !important"\n      }\n    }\n  }\n};\nGC && (lf[".cm-line"].caretColor = lf[".cm-content"].caretColor = "transparent !important");\nconst N6 = /* @__PURE__ */ jr.highest(/* @__PURE__ */ be.theme(lf));\nfunction V6() {\n  return W6;\n}\nconst X6 = /* @__PURE__ */ Te.line({ class: "cm-activeLine" }), W6 = /* @__PURE__ */ pn.fromClass(class {\n  constructor(t) {\n    this.decorations = this.getDeco(t);\n  }\n  update(t) {\n    (t.docChanged || t.selectionSet) && (this.decorations = this.getDeco(t.view));\n  }\n  getDeco(t) {\n    let e = -1, n = [];\n    for (let r of t.state.selection.ranges) {\n      let i = t.lineBlockAt(r.head);\n      i.from > e && (n.push(X6.range(i.from)), e = i.from);\n    }\n    return Te.set(n);\n  }\n}, {\n  decorations: (t) => t.decorations\n}), Ja = "-10000px";\nclass YC {\n  constructor(e, n, r, i) {\n    this.facet = n, this.createTooltipView = r, this.removeTooltipView = i, this.input = e.state.facet(n), this.tooltips = this.input.filter((a) => a);\n    let s = null;\n    this.tooltipViews = this.tooltips.map((a) => s = r(a, s));\n  }\n  update(e, n) {\n    var r;\n    let i = e.state.facet(this.facet), s = i.filter((l) => l);\n    if (i === this.input) {\n      for (let l of this.tooltipViews)\n        l.update && l.update(e);\n      return !1;\n    }\n    let a = [], o = n ? [] : null;\n    for (let l = 0; l < s.length; l++) {\n      let c = s[l], h = -1;\n      if (c) {\n        for (let f = 0; f < this.tooltips.length; f++) {\n          let m = this.tooltips[f];\n          m && m.create == c.create && (h = f);\n        }\n        if (h < 0)\n          a[l] = this.createTooltipView(c, l ? a[l - 1] : null), o && (o[l] = !!c.above);\n        else {\n          let f = a[l] = this.tooltipViews[h];\n          o && (o[l] = n[h]), f.update && f.update(e);\n        }\n      }\n    }\n    for (let l of this.tooltipViews)\n      a.indexOf(l) < 0 && (this.removeTooltipView(l), (r = l.destroy) === null || r === void 0 || r.call(l));\n    return n && (o.forEach((l, c) => n[c] = l), n.length = o.length), this.input = i, this.tooltips = s, this.tooltipViews = a, !0;\n  }\n}\nfunction U6(t) {\n  let { win: e } = t;\n  return { top: 0, left: 0, bottom: e.innerHeight, right: e.innerWidth };\n}\nconst Wh = /* @__PURE__ */ Ae.define({\n  combine: (t) => {\n    var e, n, r;\n    return {\n      position: ke.ios ? "absolute" : ((e = t.find((i) => i.position)) === null || e === void 0 ? void 0 : e.position) || "fixed",\n      parent: ((n = t.find((i) => i.parent)) === null || n === void 0 ? void 0 : n.parent) || null,\n      tooltipSpace: ((r = t.find((i) => i.tooltipSpace)) === null || r === void 0 ? void 0 : r.tooltipSpace) || U6\n    };\n  }\n}), c0 = /* @__PURE__ */ new WeakMap(), qd = /* @__PURE__ */ pn.fromClass(class {\n  constructor(t) {\n    this.view = t, this.above = [], this.inView = !0, this.madeAbsolute = !1, this.lastTransaction = 0, this.measureTimeout = -1;\n    let e = t.state.facet(Wh);\n    this.position = e.position, this.parent = e.parent, this.classes = t.themeClasses, this.createContainer(), this.measureReq = { read: this.readMeasure.bind(this), write: this.writeMeasure.bind(this), key: this }, this.resizeObserver = typeof ResizeObserver == "function" ? new ResizeObserver(() => this.measureSoon()) : null, this.manager = new YC(t, Gd, (n, r) => this.createTooltip(n, r), (n) => {\n      this.resizeObserver && this.resizeObserver.unobserve(n.dom), n.dom.remove();\n    }), this.above = this.manager.tooltips.map((n) => !!n.above), this.intersectionObserver = typeof IntersectionObserver == "function" ? new IntersectionObserver((n) => {\n      Date.now() > this.lastTransaction - 50 && n.length > 0 && n[n.length - 1].intersectionRatio < 1 && this.measureSoon();\n    }, { threshold: [1] }) : null, this.observeIntersection(), t.win.addEventListener("resize", this.measureSoon = this.measureSoon.bind(this)), this.maybeMeasure();\n  }\n  createContainer() {\n    this.parent ? (this.container = document.createElement("div"), this.container.style.position = "relative", this.container.className = this.view.themeClasses, this.parent.appendChild(this.container)) : this.container = this.view.dom;\n  }\n  observeIntersection() {\n    if (this.intersectionObserver) {\n      this.intersectionObserver.disconnect();\n      for (let t of this.manager.tooltipViews)\n        this.intersectionObserver.observe(t.dom);\n    }\n  }\n  measureSoon() {\n    this.measureTimeout < 0 && (this.measureTimeout = setTimeout(() => {\n      this.measureTimeout = -1, this.maybeMeasure();\n    }, 50));\n  }\n  update(t) {\n    t.transactions.length && (this.lastTransaction = Date.now());\n    let e = this.manager.update(t, this.above);\n    e && this.observeIntersection();\n    let n = e || t.geometryChanged, r = t.state.facet(Wh);\n    if (r.position != this.position && !this.madeAbsolute) {\n      this.position = r.position;\n      for (let i of this.manager.tooltipViews)\n        i.dom.style.position = this.position;\n      n = !0;\n    }\n    if (r.parent != this.parent) {\n      this.parent && this.container.remove(), this.parent = r.parent, this.createContainer();\n      for (let i of this.manager.tooltipViews)\n        this.container.appendChild(i.dom);\n      n = !0;\n    } else this.parent && this.view.themeClasses != this.classes && (this.classes = this.container.className = this.view.themeClasses);\n    n && this.maybeMeasure();\n  }\n  createTooltip(t, e) {\n    let n = t.create(this.view), r = e ? e.dom : null;\n    if (n.dom.classList.add("cm-tooltip"), t.arrow && !n.dom.querySelector(".cm-tooltip > .cm-tooltip-arrow")) {\n      let i = document.createElement("div");\n      i.className = "cm-tooltip-arrow", n.dom.appendChild(i);\n    }\n    return n.dom.style.position = this.position, n.dom.style.top = Ja, n.dom.style.left = "0px", this.container.insertBefore(n.dom, r), n.mount && n.mount(this.view), this.resizeObserver && this.resizeObserver.observe(n.dom), n;\n  }\n  destroy() {\n    var t, e, n;\n    this.view.win.removeEventListener("resize", this.measureSoon);\n    for (let r of this.manager.tooltipViews)\n      r.dom.remove(), (t = r.destroy) === null || t === void 0 || t.call(r);\n    this.parent && this.container.remove(), (e = this.resizeObserver) === null || e === void 0 || e.disconnect(), (n = this.intersectionObserver) === null || n === void 0 || n.disconnect(), clearTimeout(this.measureTimeout);\n  }\n  readMeasure() {\n    let t = 1, e = 1, n = !1;\n    if (this.position == "fixed" && this.manager.tooltipViews.length) {\n      let { dom: s } = this.manager.tooltipViews[0];\n      if (ke.gecko)\n        n = s.offsetParent != this.container.ownerDocument.body;\n      else if (s.style.top == Ja && s.style.left == "0px") {\n        let a = s.getBoundingClientRect();\n        n = Math.abs(a.top + 1e4) > 1 || Math.abs(a.left) > 1;\n      }\n    }\n    if (n || this.position == "absolute")\n      if (this.parent) {\n        let s = this.parent.getBoundingClientRect();\n        s.width && s.height && (t = s.width / this.parent.offsetWidth, e = s.height / this.parent.offsetHeight);\n      } else\n        ({ scaleX: t, scaleY: e } = this.view.viewState);\n    let r = this.view.scrollDOM.getBoundingClientRect(), i = Vd(this.view);\n    return {\n      visible: {\n        left: r.left + i.left,\n        top: r.top + i.top,\n        right: r.right - i.right,\n        bottom: r.bottom - i.bottom\n      },\n      parent: this.parent ? this.container.getBoundingClientRect() : this.view.dom.getBoundingClientRect(),\n      pos: this.manager.tooltips.map((s, a) => {\n        let o = this.manager.tooltipViews[a];\n        return o.getCoords ? o.getCoords(s.pos) : this.view.coordsAtPos(s.pos);\n      }),\n      size: this.manager.tooltipViews.map(({ dom: s }) => s.getBoundingClientRect()),\n      space: this.view.state.facet(Wh).tooltipSpace(this.view),\n      scaleX: t,\n      scaleY: e,\n      makeAbsolute: n\n    };\n  }\n  writeMeasure(t) {\n    var e;\n    if (t.makeAbsolute) {\n      this.madeAbsolute = !0, this.position = "absolute";\n      for (let o of this.manager.tooltipViews)\n        o.dom.style.position = "absolute";\n    }\n    let { visible: n, space: r, scaleX: i, scaleY: s } = t, a = [];\n    for (let o = 0; o < this.manager.tooltips.length; o++) {\n      let l = this.manager.tooltips[o], c = this.manager.tooltipViews[o], { dom: h } = c, f = t.pos[o], m = t.size[o];\n      if (!f || l.clip !== !1 && (f.bottom <= Math.max(n.top, r.top) || f.top >= Math.min(n.bottom, r.bottom) || f.right < Math.max(n.left, r.left) - 0.1 || f.left > Math.min(n.right, r.right) + 0.1)) {\n        h.style.top = Ja;\n        continue;\n      }\n      let y = l.arrow ? c.dom.querySelector(".cm-tooltip-arrow") : null, v = y ? 7 : 0, C = m.right - m.left, S = (e = c0.get(c)) !== null && e !== void 0 ? e : m.bottom - m.top, M = c.offset || G6, $ = this.view.textDirection == Dt.LTR, U = m.width > r.right - r.left ? $ ? r.left : r.right - m.width : $ ? Math.max(r.left, Math.min(f.left - (y ? 14 : 0) + M.x, r.right - C)) : Math.min(Math.max(r.left, f.left - C + (y ? 14 : 0) - M.x), r.right - C), R = this.above[o];\n      !l.strictSide && (R ? f.top - S - v - M.y < r.top : f.bottom + S + v + M.y > r.bottom) && R == r.bottom - f.bottom > f.top - r.top && (R = this.above[o] = !R);\n      let B = (R ? f.top - r.top : r.bottom - f.bottom) - v;\n      if (B < S && c.resize !== !1) {\n        if (B < this.view.defaultLineHeight) {\n          h.style.top = Ja;\n          continue;\n        }\n        c0.set(c, S), h.style.height = (S = B) / s + "px";\n      } else h.style.height && (h.style.height = "");\n      let Z = R ? f.top - S - v - M.y : f.bottom + v + M.y, N = U + C;\n      if (c.overlap !== !0)\n        for (let q of a)\n          q.left < N && q.right > U && q.top < Z + S && q.bottom > Z && (Z = R ? q.top - S - 2 - v : q.bottom + v + 2);\n      if (this.position == "absolute" ? (h.style.top = (Z - t.parent.top) / s + "px", h0(h, (U - t.parent.left) / i)) : (h.style.top = Z / s + "px", h0(h, U / i)), y) {\n        let q = f.left + ($ ? M.x : -M.x) - (U + 14 - 7);\n        y.style.left = q / i + "px";\n      }\n      c.overlap !== !0 && a.push({ left: U, top: Z, right: N, bottom: Z + S }), h.classList.toggle("cm-tooltip-above", R), h.classList.toggle("cm-tooltip-below", !R), c.positioned && c.positioned(t.space);\n    }\n  }\n  maybeMeasure() {\n    if (this.manager.tooltips.length && (this.view.inView && this.view.requestMeasure(this.measureReq), this.inView != this.view.inView && (this.inView = this.view.inView, !this.inView)))\n      for (let t of this.manager.tooltipViews)\n        t.dom.style.top = Ja;\n  }\n}, {\n  eventObservers: {\n    scroll() {\n      this.maybeMeasure();\n    }\n  }\n});\nfunction h0(t, e) {\n  let n = parseInt(t.style.left, 10);\n  (isNaN(n) || Math.abs(e - n) > 1) && (t.style.left = e + "px");\n}\nconst q6 = /* @__PURE__ */ be.baseTheme({\n  ".cm-tooltip": {\n    zIndex: 500,\n    boxSizing: "border-box"\n  },\n  "&light .cm-tooltip": {\n    border: "1px solid #bbb",\n    backgroundColor: "#f5f5f5"\n  },\n  "&light .cm-tooltip-section:not(:first-child)": {\n    borderTop: "1px solid #bbb"\n  },\n  "&dark .cm-tooltip": {\n    backgroundColor: "#333338",\n    color: "white"\n  },\n  ".cm-tooltip-arrow": {\n    height: "7px",\n    width: `${7 * 2}px`,\n    position: "absolute",\n    zIndex: -1,\n    overflow: "hidden",\n    "&:before, &:after": {\n      content: "\'\'",\n      position: "absolute",\n      width: 0,\n      height: 0,\n      borderLeft: "7px solid transparent",\n      borderRight: "7px solid transparent"\n    },\n    ".cm-tooltip-above &": {\n      bottom: "-7px",\n      "&:before": {\n        borderTop: "7px solid #bbb"\n      },\n      "&:after": {\n        borderTop: "7px solid #f5f5f5",\n        bottom: "1px"\n      }\n    },\n    ".cm-tooltip-below &": {\n      top: "-7px",\n      "&:before": {\n        borderBottom: "7px solid #bbb"\n      },\n      "&:after": {\n        borderBottom: "7px solid #f5f5f5",\n        top: "1px"\n      }\n    }\n  },\n  "&dark .cm-tooltip .cm-tooltip-arrow": {\n    "&:before": {\n      borderTopColor: "#333338",\n      borderBottomColor: "#333338"\n    },\n    "&:after": {\n      borderTopColor: "transparent",\n      borderBottomColor: "transparent"\n    }\n  }\n}), G6 = { x: 0, y: 0 }, Gd = /* @__PURE__ */ Ae.define({\n  enables: [qd, q6]\n}), Bu = /* @__PURE__ */ Ae.define({\n  combine: (t) => t.reduce((e, n) => e.concat(n), [])\n});\nclass jc {\n  // Needs to be static so that host tooltip instances always match\n  static create(e) {\n    return new jc(e);\n  }\n  constructor(e) {\n    this.view = e, this.mounted = !1, this.dom = document.createElement("div"), this.dom.classList.add("cm-tooltip-hover"), this.manager = new YC(e, Bu, (n, r) => this.createHostedView(n, r), (n) => n.dom.remove());\n  }\n  createHostedView(e, n) {\n    let r = e.create(this.view);\n    return r.dom.classList.add("cm-tooltip-section"), this.dom.insertBefore(r.dom, n ? n.dom.nextSibling : this.dom.firstChild), this.mounted && r.mount && r.mount(this.view), r;\n  }\n  mount(e) {\n    for (let n of this.manager.tooltipViews)\n      n.mount && n.mount(e);\n    this.mounted = !0;\n  }\n  positioned(e) {\n    for (let n of this.manager.tooltipViews)\n      n.positioned && n.positioned(e);\n  }\n  update(e) {\n    this.manager.update(e);\n  }\n  destroy() {\n    var e;\n    for (let n of this.manager.tooltipViews)\n      (e = n.destroy) === null || e === void 0 || e.call(n);\n  }\n  passProp(e) {\n    let n;\n    for (let r of this.manager.tooltipViews) {\n      let i = r[e];\n      if (i !== void 0) {\n        if (n === void 0)\n          n = i;\n        else if (n !== i)\n          return;\n      }\n    }\n    return n;\n  }\n  get offset() {\n    return this.passProp("offset");\n  }\n  get getCoords() {\n    return this.passProp("getCoords");\n  }\n  get overlap() {\n    return this.passProp("overlap");\n  }\n  get resize() {\n    return this.passProp("resize");\n  }\n}\nconst z6 = /* @__PURE__ */ Gd.compute([Bu], (t) => {\n  let e = t.facet(Bu);\n  return e.length === 0 ? null : {\n    pos: Math.min(...e.map((n) => n.pos)),\n    end: Math.max(...e.map((n) => {\n      var r;\n      return (r = n.end) !== null && r !== void 0 ? r : n.pos;\n    })),\n    create: jc.create,\n    above: e[0].above,\n    arrow: e.some((n) => n.arrow)\n  };\n});\nclass H6 {\n  constructor(e, n, r, i, s) {\n    this.view = e, this.source = n, this.field = r, this.setHover = i, this.hoverTime = s, this.hoverTimeout = -1, this.restartTimeout = -1, this.pending = null, this.lastMove = { x: 0, y: 0, target: e.dom, time: 0 }, this.checkHover = this.checkHover.bind(this), e.dom.addEventListener("mouseleave", this.mouseleave = this.mouseleave.bind(this)), e.dom.addEventListener("mousemove", this.mousemove = this.mousemove.bind(this));\n  }\n  update() {\n    this.pending && (this.pending = null, clearTimeout(this.restartTimeout), this.restartTimeout = setTimeout(() => this.startHover(), 20));\n  }\n  get active() {\n    return this.view.state.field(this.field);\n  }\n  checkHover() {\n    if (this.hoverTimeout = -1, this.active.length)\n      return;\n    let e = Date.now() - this.lastMove.time;\n    e < this.hoverTime ? this.hoverTimeout = setTimeout(this.checkHover, this.hoverTime - e) : this.startHover();\n  }\n  startHover() {\n    clearTimeout(this.restartTimeout);\n    let { view: e, lastMove: n } = this, r = e.docView.nearest(n.target);\n    if (!r)\n      return;\n    let i, s = 1;\n    if (r instanceof zi)\n      i = r.posAtStart;\n    else {\n      if (i = e.posAtCoords(n), i == null)\n        return;\n      let o = e.coordsAtPos(i);\n      if (!o || n.y < o.top || n.y > o.bottom || n.x < o.left - e.defaultCharacterWidth || n.x > o.right + e.defaultCharacterWidth)\n        return;\n      let l = e.bidiSpans(e.state.doc.lineAt(i)).find((h) => h.from <= i && h.to >= i), c = l && l.dir == Dt.RTL ? -1 : 1;\n      s = n.x < o.left ? -c : c;\n    }\n    let a = this.source(e, i, s);\n    if (a?.then) {\n      let o = this.pending = { pos: i };\n      a.then((l) => {\n        this.pending == o && (this.pending = null, l && !(Array.isArray(l) && !l.length) && e.dispatch({ effects: this.setHover.of(Array.isArray(l) ? l : [l]) }));\n      }, (l) => qn(e.state, l, "hover tooltip"));\n    } else a && !(Array.isArray(a) && !a.length) && e.dispatch({ effects: this.setHover.of(Array.isArray(a) ? a : [a]) });\n  }\n  get tooltip() {\n    let e = this.view.plugin(qd), n = e ? e.manager.tooltips.findIndex((r) => r.create == jc.create) : -1;\n    return n > -1 ? e.manager.tooltipViews[n] : null;\n  }\n  mousemove(e) {\n    var n, r;\n    this.lastMove = { x: e.clientX, y: e.clientY, target: e.target, time: Date.now() }, this.hoverTimeout < 0 && (this.hoverTimeout = setTimeout(this.checkHover, this.hoverTime));\n    let { active: i, tooltip: s } = this;\n    if (i.length && s && !Y6(s.dom, e) || this.pending) {\n      let { pos: a } = i[0] || this.pending, o = (r = (n = i[0]) === null || n === void 0 ? void 0 : n.end) !== null && r !== void 0 ? r : a;\n      (a == o ? this.view.posAtCoords(this.lastMove) != a : !K6(this.view, a, o, e.clientX, e.clientY)) && (this.view.dispatch({ effects: this.setHover.of([]) }), this.pending = null);\n    }\n  }\n  mouseleave(e) {\n    clearTimeout(this.hoverTimeout), this.hoverTimeout = -1;\n    let { active: n } = this;\n    if (n.length) {\n      let { tooltip: r } = this;\n      r && r.dom.contains(e.relatedTarget) ? this.watchTooltipLeave(r.dom) : this.view.dispatch({ effects: this.setHover.of([]) });\n    }\n  }\n  watchTooltipLeave(e) {\n    let n = (r) => {\n      e.removeEventListener("mouseleave", n), this.active.length && !this.view.dom.contains(r.relatedTarget) && this.view.dispatch({ effects: this.setHover.of([]) });\n    };\n    e.addEventListener("mouseleave", n);\n  }\n  destroy() {\n    clearTimeout(this.hoverTimeout), this.view.dom.removeEventListener("mouseleave", this.mouseleave), this.view.dom.removeEventListener("mousemove", this.mousemove);\n  }\n}\nconst Il = 4;\nfunction Y6(t, e) {\n  let { left: n, right: r, top: i, bottom: s } = t.getBoundingClientRect(), a;\n  if (a = t.querySelector(".cm-tooltip-arrow")) {\n    let o = a.getBoundingClientRect();\n    i = Math.min(o.top, i), s = Math.max(o.bottom, s);\n  }\n  return e.clientX >= n - Il && e.clientX <= r + Il && e.clientY >= i - Il && e.clientY <= s + Il;\n}\nfunction K6(t, e, n, r, i, s) {\n  let a = t.scrollDOM.getBoundingClientRect(), o = t.documentTop + t.documentPadding.top + t.contentHeight;\n  if (a.left > r || a.right < r || a.top > i || Math.min(a.bottom, o) < i)\n    return !1;\n  let l = t.posAtCoords({ x: r, y: i }, !1);\n  return l >= e && l <= n;\n}\nfunction KC(t, e = {}) {\n  let n = Ie.define(), r = Vt.define({\n    create() {\n      return [];\n    },\n    update(i, s) {\n      if (i.length && (e.hideOnChange && (s.docChanged || s.selection) ? i = [] : e.hideOn && (i = i.filter((a) => !e.hideOn(s, a))), s.docChanged)) {\n        let a = [];\n        for (let o of i) {\n          let l = s.changes.mapPos(o.pos, -1, nn.TrackDel);\n          if (l != null) {\n            let c = Object.assign(/* @__PURE__ */ Object.create(null), o);\n            c.pos = l, c.end != null && (c.end = s.changes.mapPos(c.end)), a.push(c);\n          }\n        }\n        i = a;\n      }\n      for (let a of s.effects)\n        a.is(n) && (i = a.value), a.is(J6) && (i = []);\n      return i;\n    },\n    provide: (i) => Bu.from(i)\n  });\n  return {\n    active: r,\n    extension: [\n      r,\n      pn.define((i) => new H6(\n        i,\n        t,\n        r,\n        n,\n        e.hoverTime || 300\n        /* Hover.Time */\n      )),\n      z6\n    ]\n  };\n}\nfunction JC(t, e) {\n  let n = t.plugin(qd);\n  if (!n)\n    return null;\n  let r = n.manager.tooltips.indexOf(e);\n  return r < 0 ? null : n.manager.tooltipViews[r];\n}\nconst J6 = /* @__PURE__ */ Ie.define(), p0 = /* @__PURE__ */ Ae.define({\n  combine(t) {\n    let e, n;\n    for (let r of t)\n      e = e || r.topContainer, n = n || r.bottomContainer;\n    return { topContainer: e, bottomContainer: n };\n  }\n});\nfunction Eo(t, e) {\n  let n = t.plugin(eS), r = n ? n.specs.indexOf(e) : -1;\n  return r > -1 ? n.panels[r] : null;\n}\nconst eS = /* @__PURE__ */ pn.fromClass(class {\n  constructor(t) {\n    this.input = t.state.facet(ns), this.specs = this.input.filter((n) => n), this.panels = this.specs.map((n) => n(t));\n    let e = t.state.facet(p0);\n    this.top = new Nl(t, !0, e.topContainer), this.bottom = new Nl(t, !1, e.bottomContainer), this.top.sync(this.panels.filter((n) => n.top)), this.bottom.sync(this.panels.filter((n) => !n.top));\n    for (let n of this.panels)\n      n.dom.classList.add("cm-panel"), n.mount && n.mount();\n  }\n  update(t) {\n    let e = t.state.facet(p0);\n    this.top.container != e.topContainer && (this.top.sync([]), this.top = new Nl(t.view, !0, e.topContainer)), this.bottom.container != e.bottomContainer && (this.bottom.sync([]), this.bottom = new Nl(t.view, !1, e.bottomContainer)), this.top.syncClasses(), this.bottom.syncClasses();\n    let n = t.state.facet(ns);\n    if (n != this.input) {\n      let r = n.filter((l) => l), i = [], s = [], a = [], o = [];\n      for (let l of r) {\n        let c = this.specs.indexOf(l), h;\n        c < 0 ? (h = l(t.view), o.push(h)) : (h = this.panels[c], h.update && h.update(t)), i.push(h), (h.top ? s : a).push(h);\n      }\n      this.specs = r, this.panels = i, this.top.sync(s), this.bottom.sync(a);\n      for (let l of o)\n        l.dom.classList.add("cm-panel"), l.mount && l.mount();\n    } else\n      for (let r of this.panels)\n        r.update && r.update(t);\n  }\n  destroy() {\n    this.top.sync([]), this.bottom.sync([]);\n  }\n}, {\n  provide: (t) => be.scrollMargins.of((e) => {\n    let n = e.plugin(t);\n    return n && { top: n.top.scrollMargin(), bottom: n.bottom.scrollMargin() };\n  })\n});\nclass Nl {\n  constructor(e, n, r) {\n    this.view = e, this.top = n, this.container = r, this.dom = void 0, this.classes = "", this.panels = [], this.syncClasses();\n  }\n  sync(e) {\n    for (let n of this.panels)\n      n.destroy && e.indexOf(n) < 0 && n.destroy();\n    this.panels = e, this.syncDOM();\n  }\n  syncDOM() {\n    if (this.panels.length == 0) {\n      this.dom && (this.dom.remove(), this.dom = void 0);\n      return;\n    }\n    if (!this.dom) {\n      this.dom = document.createElement("div"), this.dom.className = this.top ? "cm-panels cm-panels-top" : "cm-panels cm-panels-bottom", this.dom.style[this.top ? "top" : "bottom"] = "0";\n      let n = this.container || this.view.dom;\n      n.insertBefore(this.dom, this.top ? n.firstChild : null);\n    }\n    let e = this.dom.firstChild;\n    for (let n of this.panels)\n      if (n.dom.parentNode == this.dom) {\n        for (; e != n.dom; )\n          e = f0(e);\n        e = e.nextSibling;\n      } else\n        this.dom.insertBefore(n.dom, e);\n    for (; e; )\n      e = f0(e);\n  }\n  scrollMargin() {\n    return !this.dom || this.container ? 0 : Math.max(0, this.top ? this.dom.getBoundingClientRect().bottom - Math.max(0, this.view.scrollDOM.getBoundingClientRect().top) : Math.min(innerHeight, this.view.scrollDOM.getBoundingClientRect().bottom) - this.dom.getBoundingClientRect().top);\n  }\n  syncClasses() {\n    if (!(!this.container || this.classes == this.view.themeClasses)) {\n      for (let e of this.classes.split(" "))\n        e && this.container.classList.remove(e);\n      for (let e of (this.classes = this.view.themeClasses).split(" "))\n        e && this.container.classList.add(e);\n    }\n  }\n}\nfunction f0(t) {\n  let e = t.nextSibling;\n  return t.remove(), e;\n}\nconst ns = /* @__PURE__ */ Ae.define({\n  enables: eS\n});\nclass rs extends Ms {\n  /**\n  @internal\n  */\n  compare(e) {\n    return this == e || this.constructor == e.constructor && this.eq(e);\n  }\n  /**\n  Compare this marker to another marker of the same type.\n  */\n  eq(e) {\n    return !1;\n  }\n  /**\n  Called if the marker has a `toDOM` method and its representation\n  was removed from a gutter.\n  */\n  destroy(e) {\n  }\n}\nrs.prototype.elementClass = "";\nrs.prototype.toDOM = void 0;\nrs.prototype.mapMode = nn.TrackBefore;\nrs.prototype.startSide = rs.prototype.endSide = -1;\nrs.prototype.point = !0;\nconst uu = /* @__PURE__ */ Ae.define(), eM = /* @__PURE__ */ Ae.define(), cu = /* @__PURE__ */ Ae.define(), d0 = /* @__PURE__ */ Ae.define({\n  combine: (t) => t.some((e) => e)\n});\nfunction tM(t) {\n  return [\n    nM\n  ];\n}\nconst nM = /* @__PURE__ */ pn.fromClass(class {\n  constructor(t) {\n    this.view = t, this.prevViewport = t.viewport, this.dom = document.createElement("div"), this.dom.className = "cm-gutters", this.dom.setAttribute("aria-hidden", "true"), this.dom.style.minHeight = this.view.contentHeight / this.view.scaleY + "px", this.gutters = t.state.facet(cu).map((e) => new g0(t, e));\n    for (let e of this.gutters)\n      this.dom.appendChild(e.dom);\n    this.fixed = !t.state.facet(d0), this.fixed && (this.dom.style.position = "sticky"), this.syncGutters(!1), t.scrollDOM.insertBefore(this.dom, t.contentDOM);\n  }\n  update(t) {\n    if (this.updateGutters(t)) {\n      let e = this.prevViewport, n = t.view.viewport, r = Math.min(e.to, n.to) - Math.max(e.from, n.from);\n      this.syncGutters(r < (n.to - n.from) * 0.8);\n    }\n    t.geometryChanged && (this.dom.style.minHeight = this.view.contentHeight / this.view.scaleY + "px"), this.view.state.facet(d0) != !this.fixed && (this.fixed = !this.fixed, this.dom.style.position = this.fixed ? "sticky" : ""), this.prevViewport = t.view.viewport;\n  }\n  syncGutters(t) {\n    let e = this.dom.nextSibling;\n    t && this.dom.remove();\n    let n = mt.iter(this.view.state.facet(uu), this.view.viewport.from), r = [], i = this.gutters.map((s) => new rM(s, this.view.viewport, -this.view.documentPadding.top));\n    for (let s of this.view.viewportLineBlocks)\n      if (r.length && (r = []), Array.isArray(s.type)) {\n        let a = !0;\n        for (let o of s.type)\n          if (o.type == Rn.Text && a) {\n            uf(n, r, o.from);\n            for (let l of i)\n              l.line(this.view, o, r);\n            a = !1;\n          } else if (o.widget)\n            for (let l of i)\n              l.widget(this.view, o);\n      } else if (s.type == Rn.Text) {\n        uf(n, r, s.from);\n        for (let a of i)\n          a.line(this.view, s, r);\n      } else if (s.widget)\n        for (let a of i)\n          a.widget(this.view, s);\n    for (let s of i)\n      s.finish();\n    t && this.view.scrollDOM.insertBefore(this.dom, e);\n  }\n  updateGutters(t) {\n    let e = t.startState.facet(cu), n = t.state.facet(cu), r = t.docChanged || t.heightChanged || t.viewportChanged || !mt.eq(t.startState.facet(uu), t.state.facet(uu), t.view.viewport.from, t.view.viewport.to);\n    if (e == n)\n      for (let i of this.gutters)\n        i.update(t) && (r = !0);\n    else {\n      r = !0;\n      let i = [];\n      for (let s of n) {\n        let a = e.indexOf(s);\n        a < 0 ? i.push(new g0(this.view, s)) : (this.gutters[a].update(t), i.push(this.gutters[a]));\n      }\n      for (let s of this.gutters)\n        s.dom.remove(), i.indexOf(s) < 0 && s.destroy();\n      for (let s of i)\n        this.dom.appendChild(s.dom);\n      this.gutters = i;\n    }\n    return r;\n  }\n  destroy() {\n    for (let t of this.gutters)\n      t.destroy();\n    this.dom.remove();\n  }\n}, {\n  provide: (t) => be.scrollMargins.of((e) => {\n    let n = e.plugin(t);\n    return !n || n.gutters.length == 0 || !n.fixed ? null : e.textDirection == Dt.LTR ? { left: n.dom.offsetWidth * e.scaleX } : { right: n.dom.offsetWidth * e.scaleX };\n  })\n});\nfunction m0(t) {\n  return Array.isArray(t) ? t : [t];\n}\nfunction uf(t, e, n) {\n  for (; t.value && t.from <= n; )\n    t.from == n && e.push(t.value), t.next();\n}\nclass rM {\n  constructor(e, n, r) {\n    this.gutter = e, this.height = r, this.i = 0, this.cursor = mt.iter(e.markers, n.from);\n  }\n  addElement(e, n, r) {\n    let { gutter: i } = this, s = (n.top - this.height) / e.scaleY, a = n.height / e.scaleY;\n    if (this.i == i.elements.length) {\n      let o = new tS(e, a, s, r);\n      i.elements.push(o), i.dom.appendChild(o.dom);\n    } else\n      i.elements[this.i].update(e, a, s, r);\n    this.height = n.bottom, this.i++;\n  }\n  line(e, n, r) {\n    let i = [];\n    uf(this.cursor, i, n.from), r.length && (i = i.concat(r));\n    let s = this.gutter.config.lineMarker(e, n, i);\n    s && i.unshift(s);\n    let a = this.gutter;\n    i.length == 0 && !a.config.renderEmptyElements || this.addElement(e, n, i);\n  }\n  widget(e, n) {\n    let r = this.gutter.config.widgetMarker(e, n.widget, n), i = r ? [r] : null;\n    for (let s of e.state.facet(eM)) {\n      let a = s(e, n.widget, n);\n      a && (i || (i = [])).push(a);\n    }\n    i && this.addElement(e, n, i);\n  }\n  finish() {\n    let e = this.gutter;\n    for (; e.elements.length > this.i; ) {\n      let n = e.elements.pop();\n      e.dom.removeChild(n.dom), n.destroy();\n    }\n  }\n}\nclass g0 {\n  constructor(e, n) {\n    this.view = e, this.config = n, this.elements = [], this.spacer = null, this.dom = document.createElement("div"), this.dom.className = "cm-gutter" + (this.config.class ? " " + this.config.class : "");\n    for (let r in n.domEventHandlers)\n      this.dom.addEventListener(r, (i) => {\n        let s = i.target, a;\n        if (s != this.dom && this.dom.contains(s)) {\n          for (; s.parentNode != this.dom; )\n            s = s.parentNode;\n          let l = s.getBoundingClientRect();\n          a = (l.top + l.bottom) / 2;\n        } else\n          a = i.clientY;\n        let o = e.lineBlockAtHeight(a - e.documentTop);\n        n.domEventHandlers[r](e, o, i) && i.preventDefault();\n      });\n    this.markers = m0(n.markers(e)), n.initialSpacer && (this.spacer = new tS(e, 0, 0, [n.initialSpacer(e)]), this.dom.appendChild(this.spacer.dom), this.spacer.dom.style.cssText += "visibility: hidden; pointer-events: none");\n  }\n  update(e) {\n    let n = this.markers;\n    if (this.markers = m0(this.config.markers(e.view)), this.spacer && this.config.updateSpacer) {\n      let i = this.config.updateSpacer(this.spacer.markers[0], e);\n      i != this.spacer.markers[0] && this.spacer.update(e.view, 0, 0, [i]);\n    }\n    let r = e.view.viewport;\n    return !mt.eq(this.markers, n, r.from, r.to) || (this.config.lineMarkerChange ? this.config.lineMarkerChange(e) : !1);\n  }\n  destroy() {\n    for (let e of this.elements)\n      e.destroy();\n  }\n}\nclass tS {\n  constructor(e, n, r, i) {\n    this.height = -1, this.above = 0, this.markers = [], this.dom = document.createElement("div"), this.dom.className = "cm-gutterElement", this.update(e, n, r, i);\n  }\n  update(e, n, r, i) {\n    this.height != n && (this.height = n, this.dom.style.height = n + "px"), this.above != r && (this.dom.style.marginTop = (this.above = r) ? r + "px" : ""), iM(this.markers, i) || this.setMarkers(e, i);\n  }\n  setMarkers(e, n) {\n    let r = "cm-gutterElement", i = this.dom.firstChild;\n    for (let s = 0, a = 0; ; ) {\n      let o = a, l = s < n.length ? n[s++] : null, c = !1;\n      if (l) {\n        let h = l.elementClass;\n        h && (r += " " + h);\n        for (let f = a; f < this.markers.length; f++)\n          if (this.markers[f].compare(l)) {\n            o = f, c = !0;\n            break;\n          }\n      } else\n        o = this.markers.length;\n      for (; a < o; ) {\n        let h = this.markers[a++];\n        if (h.toDOM) {\n          h.destroy(i);\n          let f = i.nextSibling;\n          i.remove(), i = f;\n        }\n      }\n      if (!l)\n        break;\n      l.toDOM && (c ? i = i.nextSibling : this.dom.insertBefore(l.toDOM(e), i)), c && a++;\n    }\n    this.dom.className = r, this.markers = n;\n  }\n  destroy() {\n    this.setMarkers(null, []);\n  }\n}\nfunction iM(t, e) {\n  if (t.length != e.length)\n    return !1;\n  for (let n = 0; n < t.length; n++)\n    if (!t[n].compare(e[n]))\n      return !1;\n  return !0;\n}\nconst sM = /* @__PURE__ */ Ae.define(), aM = /* @__PURE__ */ Ae.define(), Ys = /* @__PURE__ */ Ae.define({\n  combine(t) {\n    return ls(t, { formatNumber: String, domEventHandlers: {} }, {\n      domEventHandlers(e, n) {\n        let r = Object.assign({}, e);\n        for (let i in n) {\n          let s = r[i], a = n[i];\n          r[i] = s ? (o, l, c) => s(o, l, c) || a(o, l, c) : a;\n        }\n        return r;\n      }\n    });\n  }\n});\nclass Uh extends rs {\n  constructor(e) {\n    super(), this.number = e;\n  }\n  eq(e) {\n    return this.number == e.number;\n  }\n  toDOM() {\n    return document.createTextNode(this.number);\n  }\n}\nfunction qh(t, e) {\n  return t.state.facet(Ys).formatNumber(e, t.state);\n}\nconst oM = /* @__PURE__ */ cu.compute([Ys], (t) => ({\n  class: "cm-lineNumbers",\n  renderEmptyElements: !1,\n  markers(e) {\n    return e.state.facet(sM);\n  },\n  lineMarker(e, n, r) {\n    return r.some((i) => i.toDOM) ? null : new Uh(qh(e, e.state.doc.lineAt(n.from).number));\n  },\n  widgetMarker: (e, n, r) => {\n    for (let i of e.state.facet(aM)) {\n      let s = i(e, n, r);\n      if (s)\n        return s;\n    }\n    return null;\n  },\n  lineMarkerChange: (e) => e.startState.facet(Ys) != e.state.facet(Ys),\n  initialSpacer(e) {\n    return new Uh(qh(e, b0(e.state.doc.lines)));\n  },\n  updateSpacer(e, n) {\n    let r = qh(n.view, b0(n.view.state.doc.lines));\n    return r == e.number ? e : new Uh(r);\n  },\n  domEventHandlers: t.facet(Ys).domEventHandlers\n}));\nfunction lM(t = {}) {\n  return [\n    Ys.of(t),\n    tM(),\n    oM\n  ];\n}\nfunction b0(t) {\n  let e = 9;\n  for (; e < t; )\n    e = e * 10 + 9;\n  return e;\n}\nconst uM = /* @__PURE__ */ new class extends rs {\n  constructor() {\n    super(...arguments), this.elementClass = "cm-activeLineGutter";\n  }\n}(), cM = /* @__PURE__ */ uu.compute(["selection"], (t) => {\n  let e = [], n = -1;\n  for (let r of t.selection.ranges) {\n    let i = t.doc.lineAt(r.head).from;\n    i > n && (n = i, e.push(uM.range(i)));\n  }\n  return mt.of(e);\n});\nfunction hM() {\n  return cM;\n}\nconst nS = 1024;\nlet pM = 0;\nclass Gh {\n  constructor(e, n) {\n    this.from = e, this.to = n;\n  }\n}\nclass nt {\n  /**\n  Create a new node prop type.\n  */\n  constructor(e = {}) {\n    this.id = pM++, this.perNode = !!e.perNode, this.deserialize = e.deserialize || (() => {\n      throw new Error("This node type doesn\'t define a deserialize function");\n    });\n  }\n  /**\n  This is meant to be used with\n  [`NodeSet.extend`](#common.NodeSet.extend) or\n  [`LRParser.configure`](#lr.ParserConfig.props) to compute\n  prop values for each node type in the set. Takes a [match\n  object](#common.NodeType^match) or function that returns undefined\n  if the node type doesn\'t get this prop, and the prop\'s value if\n  it does.\n  */\n  add(e) {\n    if (this.perNode)\n      throw new RangeError("Can\'t add per-node props to node types");\n    return typeof e != "function" && (e = Kn.match(e)), (n) => {\n      let r = e(n);\n      return r === void 0 ? null : [this, r];\n    };\n  }\n}\nnt.closedBy = new nt({ deserialize: (t) => t.split(" ") });\nnt.openedBy = new nt({ deserialize: (t) => t.split(" ") });\nnt.group = new nt({ deserialize: (t) => t.split(" ") });\nnt.isolate = new nt({ deserialize: (t) => {\n  if (t && t != "rtl" && t != "ltr" && t != "auto")\n    throw new RangeError("Invalid value for isolate: " + t);\n  return t || "auto";\n} });\nnt.contextHash = new nt({ perNode: !0 });\nnt.lookAhead = new nt({ perNode: !0 });\nnt.mounted = new nt({ perNode: !0 });\nclass Mu {\n  constructor(e, n, r) {\n    this.tree = e, this.overlay = n, this.parser = r;\n  }\n  /**\n  @internal\n  */\n  static get(e) {\n    return e && e.props && e.props[nt.mounted.id];\n  }\n}\nconst fM = /* @__PURE__ */ Object.create(null);\nclass Kn {\n  /**\n  @internal\n  */\n  constructor(e, n, r, i = 0) {\n    this.name = e, this.props = n, this.id = r, this.flags = i;\n  }\n  /**\n  Define a node type.\n  */\n  static define(e) {\n    let n = e.props && e.props.length ? /* @__PURE__ */ Object.create(null) : fM, r = (e.top ? 1 : 0) | (e.skipped ? 2 : 0) | (e.error ? 4 : 0) | (e.name == null ? 8 : 0), i = new Kn(e.name || "", n, e.id, r);\n    if (e.props) {\n      for (let s of e.props)\n        if (Array.isArray(s) || (s = s(i)), s) {\n          if (s[0].perNode)\n            throw new RangeError("Can\'t store a per-node prop on a node type");\n          n[s[0].id] = s[1];\n        }\n    }\n    return i;\n  }\n  /**\n  Retrieves a node prop for this type. Will return `undefined` if\n  the prop isn\'t present on this node.\n  */\n  prop(e) {\n    return this.props[e.id];\n  }\n  /**\n  True when this is the top node of a grammar.\n  */\n  get isTop() {\n    return (this.flags & 1) > 0;\n  }\n  /**\n  True when this node is produced by a skip rule.\n  */\n  get isSkipped() {\n    return (this.flags & 2) > 0;\n  }\n  /**\n  Indicates whether this is an error node.\n  */\n  get isError() {\n    return (this.flags & 4) > 0;\n  }\n  /**\n  When true, this node type doesn\'t correspond to a user-declared\n  named node, for example because it is used to cache repetition.\n  */\n  get isAnonymous() {\n    return (this.flags & 8) > 0;\n  }\n  /**\n  Returns true when this node\'s name or one of its\n  [groups](#common.NodeProp^group) matches the given string.\n  */\n  is(e) {\n    if (typeof e == "string") {\n      if (this.name == e)\n        return !0;\n      let n = this.prop(nt.group);\n      return n ? n.indexOf(e) > -1 : !1;\n    }\n    return this.id == e;\n  }\n  /**\n  Create a function from node types to arbitrary values by\n  specifying an object whose property names are node or\n  [group](#common.NodeProp^group) names. Often useful with\n  [`NodeProp.add`](#common.NodeProp.add). You can put multiple\n  names, separated by spaces, in a single property name to map\n  multiple node names to a single value.\n  */\n  static match(e) {\n    let n = /* @__PURE__ */ Object.create(null);\n    for (let r in e)\n      for (let i of r.split(" "))\n        n[i] = e[r];\n    return (r) => {\n      for (let i = r.prop(nt.group), s = -1; s < (i ? i.length : 0); s++) {\n        let a = n[s < 0 ? r.name : i[s]];\n        if (a)\n          return a;\n      }\n    };\n  }\n}\nKn.none = new Kn(\n  "",\n  /* @__PURE__ */ Object.create(null),\n  0,\n  8\n  /* NodeFlag.Anonymous */\n);\nclass zd {\n  /**\n  Create a set with the given types. The `id` property of each\n  type should correspond to its position within the array.\n  */\n  constructor(e) {\n    this.types = e;\n    for (let n = 0; n < e.length; n++)\n      if (e[n].id != n)\n        throw new RangeError("Node type ids should correspond to array positions when creating a node set");\n  }\n  /**\n  Create a copy of this set with some node properties added. The\n  arguments to this method can be created with\n  [`NodeProp.add`](#common.NodeProp.add).\n  */\n  extend(...e) {\n    let n = [];\n    for (let r of this.types) {\n      let i = null;\n      for (let s of e) {\n        let a = s(r);\n        a && (i || (i = Object.assign({}, r.props)), i[a[0].id] = a[1]);\n      }\n      n.push(i ? new Kn(r.name, i, r.id, r.flags) : r);\n    }\n    return new zd(n);\n  }\n}\nconst Vl = /* @__PURE__ */ new WeakMap(), y0 = /* @__PURE__ */ new WeakMap();\nvar un;\n(function(t) {\n  t[t.ExcludeBuffers = 1] = "ExcludeBuffers", t[t.IncludeAnonymous = 2] = "IncludeAnonymous", t[t.IgnoreMounts = 4] = "IgnoreMounts", t[t.IgnoreOverlays = 8] = "IgnoreOverlays";\n})(un || (un = {}));\nclass an {\n  /**\n  Construct a new tree. See also [`Tree.build`](#common.Tree^build).\n  */\n  constructor(e, n, r, i, s) {\n    if (this.type = e, this.children = n, this.positions = r, this.length = i, this.props = null, s && s.length) {\n      this.props = /* @__PURE__ */ Object.create(null);\n      for (let [a, o] of s)\n        this.props[typeof a == "number" ? a : a.id] = o;\n    }\n  }\n  /**\n  @internal\n  */\n  toString() {\n    let e = Mu.get(this);\n    if (e && !e.overlay)\n      return e.tree.toString();\n    let n = "";\n    for (let r of this.children) {\n      let i = r.toString();\n      i && (n && (n += ","), n += i);\n    }\n    return this.type.name ? (/\\W/.test(this.type.name) && !this.type.isError ? JSON.stringify(this.type.name) : this.type.name) + (n.length ? "(" + n + ")" : "") : n;\n  }\n  /**\n  Get a [tree cursor](#common.TreeCursor) positioned at the top of\n  the tree. Mode can be used to [control](#common.IterMode) which\n  nodes the cursor visits.\n  */\n  cursor(e = 0) {\n    return new hf(this.topNode, e);\n  }\n  /**\n  Get a [tree cursor](#common.TreeCursor) pointing into this tree\n  at the given position and side (see\n  [`moveTo`](#common.TreeCursor.moveTo).\n  */\n  cursorAt(e, n = 0, r = 0) {\n    let i = Vl.get(this) || this.topNode, s = new hf(i);\n    return s.moveTo(e, n), Vl.set(this, s._tree), s;\n  }\n  /**\n  Get a [syntax node](#common.SyntaxNode) object for the top of the\n  tree.\n  */\n  get topNode() {\n    return new zn(this, 0, 0, null);\n  }\n  /**\n  Get the [syntax node](#common.SyntaxNode) at the given position.\n  If `side` is -1, this will move into nodes that end at the\n  position. If 1, it\'ll move into nodes that start at the\n  position. With 0, it\'ll only enter nodes that cover the position\n  from both sides.\n  \n  Note that this will not enter\n  [overlays](#common.MountedTree.overlay), and you often want\n  [`resolveInner`](#common.Tree.resolveInner) instead.\n  */\n  resolve(e, n = 0) {\n    let r = Fo(Vl.get(this) || this.topNode, e, n, !1);\n    return Vl.set(this, r), r;\n  }\n  /**\n  Like [`resolve`](#common.Tree.resolve), but will enter\n  [overlaid](#common.MountedTree.overlay) nodes, producing a syntax node\n  pointing into the innermost overlaid tree at the given position\n  (with parent links going through all parent structure, including\n  the host trees).\n  */\n  resolveInner(e, n = 0) {\n    let r = Fo(y0.get(this) || this.topNode, e, n, !0);\n    return y0.set(this, r), r;\n  }\n  /**\n  In some situations, it can be useful to iterate through all\n  nodes around a position, including those in overlays that don\'t\n  directly cover the position. This method gives you an iterator\n  that will produce all nodes, from small to big, around the given\n  position.\n  */\n  resolveStack(e, n = 0) {\n    return gM(this, e, n);\n  }\n  /**\n  Iterate over the tree and its children, calling `enter` for any\n  node that touches the `from`/`to` region (if given) before\n  running over such a node\'s children, and `leave` (if given) when\n  leaving the node. When `enter` returns `false`, that node will\n  not have its children iterated over (or `leave` called).\n  */\n  iterate(e) {\n    let { enter: n, leave: r, from: i = 0, to: s = this.length } = e, a = e.mode || 0, o = (a & un.IncludeAnonymous) > 0;\n    for (let l = this.cursor(a | un.IncludeAnonymous); ; ) {\n      let c = !1;\n      if (l.from <= s && l.to >= i && (!o && l.type.isAnonymous || n(l) !== !1)) {\n        if (l.firstChild())\n          continue;\n        c = !0;\n      }\n      for (; c && r && (o || !l.type.isAnonymous) && r(l), !l.nextSibling(); ) {\n        if (!l.parent())\n          return;\n        c = !0;\n      }\n    }\n  }\n  /**\n  Get the value of the given [node prop](#common.NodeProp) for this\n  node. Works with both per-node and per-type props.\n  */\n  prop(e) {\n    return e.perNode ? this.props ? this.props[e.id] : void 0 : this.type.prop(e);\n  }\n  /**\n  Returns the node\'s [per-node props](#common.NodeProp.perNode) in a\n  format that can be passed to the [`Tree`](#common.Tree)\n  constructor.\n  */\n  get propValues() {\n    let e = [];\n    if (this.props)\n      for (let n in this.props)\n        e.push([+n, this.props[n]]);\n    return e;\n  }\n  /**\n  Balance the direct children of this tree, producing a copy of\n  which may have children grouped into subtrees with type\n  [`NodeType.none`](#common.NodeType^none).\n  */\n  balance(e = {}) {\n    return this.children.length <= 8 ? this : Kd(Kn.none, this.children, this.positions, 0, this.children.length, 0, this.length, (n, r, i) => new an(this.type, n, r, i, this.propValues), e.makeTree || ((n, r, i) => new an(Kn.none, n, r, i)));\n  }\n  /**\n  Build a tree from a postfix-ordered buffer of node information,\n  or a cursor over such a buffer.\n  */\n  static build(e) {\n    return bM(e);\n  }\n}\nan.empty = new an(Kn.none, [], [], 0);\nclass Hd {\n  constructor(e, n) {\n    this.buffer = e, this.index = n;\n  }\n  get id() {\n    return this.buffer[this.index - 4];\n  }\n  get start() {\n    return this.buffer[this.index - 3];\n  }\n  get end() {\n    return this.buffer[this.index - 2];\n  }\n  get size() {\n    return this.buffer[this.index - 1];\n  }\n  get pos() {\n    return this.index;\n  }\n  next() {\n    this.index -= 4;\n  }\n  fork() {\n    return new Hd(this.buffer, this.index);\n  }\n}\nclass is {\n  /**\n  Create a tree buffer.\n  */\n  constructor(e, n, r) {\n    this.buffer = e, this.length = n, this.set = r;\n  }\n  /**\n  @internal\n  */\n  get type() {\n    return Kn.none;\n  }\n  /**\n  @internal\n  */\n  toString() {\n    let e = [];\n    for (let n = 0; n < this.buffer.length; )\n      e.push(this.childString(n)), n = this.buffer[n + 3];\n    return e.join(",");\n  }\n  /**\n  @internal\n  */\n  childString(e) {\n    let n = this.buffer[e], r = this.buffer[e + 3], i = this.set.types[n], s = i.name;\n    if (/\\W/.test(s) && !i.isError && (s = JSON.stringify(s)), e += 4, r == e)\n      return s;\n    let a = [];\n    for (; e < r; )\n      a.push(this.childString(e)), e = this.buffer[e + 3];\n    return s + "(" + a.join(",") + ")";\n  }\n  /**\n  @internal\n  */\n  findChild(e, n, r, i, s) {\n    let { buffer: a } = this, o = -1;\n    for (let l = e; l != n && !(rS(s, i, a[l + 1], a[l + 2]) && (o = l, r > 0)); l = a[l + 3])\n      ;\n    return o;\n  }\n  /**\n  @internal\n  */\n  slice(e, n, r) {\n    let i = this.buffer, s = new Uint16Array(n - e), a = 0;\n    for (let o = e, l = 0; o < n; ) {\n      s[l++] = i[o++], s[l++] = i[o++] - r;\n      let c = s[l++] = i[o++] - r;\n      s[l++] = i[o++] - e, a = Math.max(a, c);\n    }\n    return new is(s, a, this.set);\n  }\n}\nfunction rS(t, e, n, r) {\n  switch (t) {\n    case -2:\n      return n < e;\n    case -1:\n      return r >= e && n < e;\n    case 0:\n      return n < e && r > e;\n    case 1:\n      return n <= e && r > e;\n    case 2:\n      return r > e;\n    case 4:\n      return !0;\n  }\n}\nfunction Fo(t, e, n, r) {\n  for (var i; t.from == t.to || (n < 1 ? t.from >= e : t.from > e) || (n > -1 ? t.to <= e : t.to < e); ) {\n    let a = !r && t instanceof zn && t.index < 0 ? null : t.parent;\n    if (!a)\n      return t;\n    t = a;\n  }\n  let s = r ? 0 : un.IgnoreOverlays;\n  if (r)\n    for (let a = t, o = a.parent; o; a = o, o = a.parent)\n      a instanceof zn && a.index < 0 && ((i = o.enter(e, n, s)) === null || i === void 0 ? void 0 : i.from) != a.from && (t = o);\n  for (; ; ) {\n    let a = t.enter(e, n, s);\n    if (!a)\n      return t;\n    t = a;\n  }\n}\nclass iS {\n  cursor(e = 0) {\n    return new hf(this, e);\n  }\n  getChild(e, n = null, r = null) {\n    let i = O0(this, e, n, r);\n    return i.length ? i[0] : null;\n  }\n  getChildren(e, n = null, r = null) {\n    return O0(this, e, n, r);\n  }\n  resolve(e, n = 0) {\n    return Fo(this, e, n, !1);\n  }\n  resolveInner(e, n = 0) {\n    return Fo(this, e, n, !0);\n  }\n  matchContext(e) {\n    return cf(this.parent, e);\n  }\n  enterUnfinishedNodesBefore(e) {\n    let n = this.childBefore(e), r = this;\n    for (; n; ) {\n      let i = n.lastChild;\n      if (!i || i.to != n.to)\n        break;\n      i.type.isError && i.from == i.to ? (r = n, n = i.prevSibling) : n = i;\n    }\n    return r;\n  }\n  get node() {\n    return this;\n  }\n  get next() {\n    return this.parent;\n  }\n}\nclass zn extends iS {\n  constructor(e, n, r, i) {\n    super(), this._tree = e, this.from = n, this.index = r, this._parent = i;\n  }\n  get type() {\n    return this._tree.type;\n  }\n  get name() {\n    return this._tree.type.name;\n  }\n  get to() {\n    return this.from + this._tree.length;\n  }\n  nextChild(e, n, r, i, s = 0) {\n    for (let a = this; ; ) {\n      for (let { children: o, positions: l } = a._tree, c = n > 0 ? o.length : -1; e != c; e += n) {\n        let h = o[e], f = l[e] + a.from;\n        if (rS(i, r, f, f + h.length)) {\n          if (h instanceof is) {\n            if (s & un.ExcludeBuffers)\n              continue;\n            let m = h.findChild(0, h.buffer.length, n, r - f, i);\n            if (m > -1)\n              return new fi(new dM(a, h, e, f), null, m);\n          } else if (s & un.IncludeAnonymous || !h.type.isAnonymous || Yd(h)) {\n            let m;\n            if (!(s & un.IgnoreMounts) && (m = Mu.get(h)) && !m.overlay)\n              return new zn(m.tree, f, e, a);\n            let y = new zn(h, f, e, a);\n            return s & un.IncludeAnonymous || !y.type.isAnonymous ? y : y.nextChild(n < 0 ? h.children.length - 1 : 0, n, r, i);\n          }\n        }\n      }\n      if (s & un.IncludeAnonymous || !a.type.isAnonymous || (a.index >= 0 ? e = a.index + n : e = n < 0 ? -1 : a._parent._tree.children.length, a = a._parent, !a))\n        return null;\n    }\n  }\n  get firstChild() {\n    return this.nextChild(\n      0,\n      1,\n      0,\n      4\n      /* Side.DontCare */\n    );\n  }\n  get lastChild() {\n    return this.nextChild(\n      this._tree.children.length - 1,\n      -1,\n      0,\n      4\n      /* Side.DontCare */\n    );\n  }\n  childAfter(e) {\n    return this.nextChild(\n      0,\n      1,\n      e,\n      2\n      /* Side.After */\n    );\n  }\n  childBefore(e) {\n    return this.nextChild(\n      this._tree.children.length - 1,\n      -1,\n      e,\n      -2\n      /* Side.Before */\n    );\n  }\n  enter(e, n, r = 0) {\n    let i;\n    if (!(r & un.IgnoreOverlays) && (i = Mu.get(this._tree)) && i.overlay) {\n      let s = e - this.from;\n      for (let { from: a, to: o } of i.overlay)\n        if ((n > 0 ? a <= s : a < s) && (n < 0 ? o >= s : o > s))\n          return new zn(i.tree, i.overlay[0].from + this.from, -1, this);\n    }\n    return this.nextChild(0, 1, e, n, r);\n  }\n  nextSignificantParent() {\n    let e = this;\n    for (; e.type.isAnonymous && e._parent; )\n      e = e._parent;\n    return e;\n  }\n  get parent() {\n    return this._parent ? this._parent.nextSignificantParent() : null;\n  }\n  get nextSibling() {\n    return this._parent && this.index >= 0 ? this._parent.nextChild(\n      this.index + 1,\n      1,\n      0,\n      4\n      /* Side.DontCare */\n    ) : null;\n  }\n  get prevSibling() {\n    return this._parent && this.index >= 0 ? this._parent.nextChild(\n      this.index - 1,\n      -1,\n      0,\n      4\n      /* Side.DontCare */\n    ) : null;\n  }\n  get tree() {\n    return this._tree;\n  }\n  toTree() {\n    return this._tree;\n  }\n  /**\n  @internal\n  */\n  toString() {\n    return this._tree.toString();\n  }\n}\nfunction O0(t, e, n, r) {\n  let i = t.cursor(), s = [];\n  if (!i.firstChild())\n    return s;\n  if (n != null) {\n    for (let a = !1; !a; )\n      if (a = i.type.is(n), !i.nextSibling())\n        return s;\n  }\n  for (; ; ) {\n    if (r != null && i.type.is(r))\n      return s;\n    if (i.type.is(e) && s.push(i.node), !i.nextSibling())\n      return r == null ? s : [];\n  }\n}\nfunction cf(t, e, n = e.length - 1) {\n  for (let r = t; n >= 0; r = r.parent) {\n    if (!r)\n      return !1;\n    if (!r.type.isAnonymous) {\n      if (e[n] && e[n] != r.name)\n        return !1;\n      n--;\n    }\n  }\n  return !0;\n}\nclass dM {\n  constructor(e, n, r, i) {\n    this.parent = e, this.buffer = n, this.index = r, this.start = i;\n  }\n}\nclass fi extends iS {\n  get name() {\n    return this.type.name;\n  }\n  get from() {\n    return this.context.start + this.context.buffer.buffer[this.index + 1];\n  }\n  get to() {\n    return this.context.start + this.context.buffer.buffer[this.index + 2];\n  }\n  constructor(e, n, r) {\n    super(), this.context = e, this._parent = n, this.index = r, this.type = e.buffer.set.types[e.buffer.buffer[r]];\n  }\n  child(e, n, r) {\n    let { buffer: i } = this.context, s = i.findChild(this.index + 4, i.buffer[this.index + 3], e, n - this.context.start, r);\n    return s < 0 ? null : new fi(this.context, this, s);\n  }\n  get firstChild() {\n    return this.child(\n      1,\n      0,\n      4\n      /* Side.DontCare */\n    );\n  }\n  get lastChild() {\n    return this.child(\n      -1,\n      0,\n      4\n      /* Side.DontCare */\n    );\n  }\n  childAfter(e) {\n    return this.child(\n      1,\n      e,\n      2\n      /* Side.After */\n    );\n  }\n  childBefore(e) {\n    return this.child(\n      -1,\n      e,\n      -2\n      /* Side.Before */\n    );\n  }\n  enter(e, n, r = 0) {\n    if (r & un.ExcludeBuffers)\n      return null;\n    let { buffer: i } = this.context, s = i.findChild(this.index + 4, i.buffer[this.index + 3], n > 0 ? 1 : -1, e - this.context.start, n);\n    return s < 0 ? null : new fi(this.context, this, s);\n  }\n  get parent() {\n    return this._parent || this.context.parent.nextSignificantParent();\n  }\n  externalSibling(e) {\n    return this._parent ? null : this.context.parent.nextChild(\n      this.context.index + e,\n      e,\n      0,\n      4\n      /* Side.DontCare */\n    );\n  }\n  get nextSibling() {\n    let { buffer: e } = this.context, n = e.buffer[this.index + 3];\n    return n < (this._parent ? e.buffer[this._parent.index + 3] : e.buffer.length) ? new fi(this.context, this._parent, n) : this.externalSibling(1);\n  }\n  get prevSibling() {\n    let { buffer: e } = this.context, n = this._parent ? this._parent.index + 4 : 0;\n    return this.index == n ? this.externalSibling(-1) : new fi(this.context, this._parent, e.findChild(\n      n,\n      this.index,\n      -1,\n      0,\n      4\n      /* Side.DontCare */\n    ));\n  }\n  get tree() {\n    return null;\n  }\n  toTree() {\n    let e = [], n = [], { buffer: r } = this.context, i = this.index + 4, s = r.buffer[this.index + 3];\n    if (s > i) {\n      let a = r.buffer[this.index + 1];\n      e.push(r.slice(i, s, a)), n.push(0);\n    }\n    return new an(this.type, e, n, this.to - this.from);\n  }\n  /**\n  @internal\n  */\n  toString() {\n    return this.context.buffer.childString(this.index);\n  }\n}\nfunction sS(t) {\n  if (!t.length)\n    return null;\n  let e = 0, n = t[0];\n  for (let s = 1; s < t.length; s++) {\n    let a = t[s];\n    (a.from > n.from || a.to < n.to) && (n = a, e = s);\n  }\n  let r = n instanceof zn && n.index < 0 ? null : n.parent, i = t.slice();\n  return r ? i[e] = r : i.splice(e, 1), new mM(i, n);\n}\nclass mM {\n  constructor(e, n) {\n    this.heads = e, this.node = n;\n  }\n  get next() {\n    return sS(this.heads);\n  }\n}\nfunction gM(t, e, n) {\n  let r = t.resolveInner(e, n), i = null;\n  for (let s = r instanceof zn ? r : r.context.parent; s; s = s.parent)\n    if (s.index < 0) {\n      let a = s.parent;\n      (i || (i = [r])).push(a.resolve(e, n)), s = a;\n    } else {\n      let a = Mu.get(s.tree);\n      if (a && a.overlay && a.overlay[0].from <= e && a.overlay[a.overlay.length - 1].to >= e) {\n        let o = new zn(a.tree, a.overlay[0].from + s.from, -1, s);\n        (i || (i = [r])).push(Fo(o, e, n, !1));\n      }\n    }\n  return i ? sS(i) : r;\n}\nclass hf {\n  /**\n  Shorthand for `.type.name`.\n  */\n  get name() {\n    return this.type.name;\n  }\n  /**\n  @internal\n  */\n  constructor(e, n = 0) {\n    if (this.mode = n, this.buffer = null, this.stack = [], this.index = 0, this.bufferNode = null, e instanceof zn)\n      this.yieldNode(e);\n    else {\n      this._tree = e.context.parent, this.buffer = e.context;\n      for (let r = e._parent; r; r = r._parent)\n        this.stack.unshift(r.index);\n      this.bufferNode = e, this.yieldBuf(e.index);\n    }\n  }\n  yieldNode(e) {\n    return e ? (this._tree = e, this.type = e.type, this.from = e.from, this.to = e.to, !0) : !1;\n  }\n  yieldBuf(e, n) {\n    this.index = e;\n    let { start: r, buffer: i } = this.buffer;\n    return this.type = n || i.set.types[i.buffer[e]], this.from = r + i.buffer[e + 1], this.to = r + i.buffer[e + 2], !0;\n  }\n  /**\n  @internal\n  */\n  yield(e) {\n    return e ? e instanceof zn ? (this.buffer = null, this.yieldNode(e)) : (this.buffer = e.context, this.yieldBuf(e.index, e.type)) : !1;\n  }\n  /**\n  @internal\n  */\n  toString() {\n    return this.buffer ? this.buffer.buffer.childString(this.index) : this._tree.toString();\n  }\n  /**\n  @internal\n  */\n  enterChild(e, n, r) {\n    if (!this.buffer)\n      return this.yield(this._tree.nextChild(e < 0 ? this._tree._tree.children.length - 1 : 0, e, n, r, this.mode));\n    let { buffer: i } = this.buffer, s = i.findChild(this.index + 4, i.buffer[this.index + 3], e, n - this.buffer.start, r);\n    return s < 0 ? !1 : (this.stack.push(this.index), this.yieldBuf(s));\n  }\n  /**\n  Move the cursor to this node\'s first child. When this returns\n  false, the node has no child, and the cursor has not been moved.\n  */\n  firstChild() {\n    return this.enterChild(\n      1,\n      0,\n      4\n      /* Side.DontCare */\n    );\n  }\n  /**\n  Move the cursor to this node\'s last child.\n  */\n  lastChild() {\n    return this.enterChild(\n      -1,\n      0,\n      4\n      /* Side.DontCare */\n    );\n  }\n  /**\n  Move the cursor to the first child that ends after `pos`.\n  */\n  childAfter(e) {\n    return this.enterChild(\n      1,\n      e,\n      2\n      /* Side.After */\n    );\n  }\n  /**\n  Move to the last child that starts before `pos`.\n  */\n  childBefore(e) {\n    return this.enterChild(\n      -1,\n      e,\n      -2\n      /* Side.Before */\n    );\n  }\n  /**\n  Move the cursor to the child around `pos`. If side is -1 the\n  child may end at that position, when 1 it may start there. This\n  will also enter [overlaid](#common.MountedTree.overlay)\n  [mounted](#common.NodeProp^mounted) trees unless `overlays` is\n  set to false.\n  */\n  enter(e, n, r = this.mode) {\n    return this.buffer ? r & un.ExcludeBuffers ? !1 : this.enterChild(1, e, n) : this.yield(this._tree.enter(e, n, r));\n  }\n  /**\n  Move to the node\'s parent node, if this isn\'t the top node.\n  */\n  parent() {\n    if (!this.buffer)\n      return this.yieldNode(this.mode & un.IncludeAnonymous ? this._tree._parent : this._tree.parent);\n    if (this.stack.length)\n      return this.yieldBuf(this.stack.pop());\n    let e = this.mode & un.IncludeAnonymous ? this.buffer.parent : this.buffer.parent.nextSignificantParent();\n    return this.buffer = null, this.yieldNode(e);\n  }\n  /**\n  @internal\n  */\n  sibling(e) {\n    if (!this.buffer)\n      return this._tree._parent ? this.yield(this._tree.index < 0 ? null : this._tree._parent.nextChild(this._tree.index + e, e, 0, 4, this.mode)) : !1;\n    let { buffer: n } = this.buffer, r = this.stack.length - 1;\n    if (e < 0) {\n      let i = r < 0 ? 0 : this.stack[r] + 4;\n      if (this.index != i)\n        return this.yieldBuf(n.findChild(\n          i,\n          this.index,\n          -1,\n          0,\n          4\n          /* Side.DontCare */\n        ));\n    } else {\n      let i = n.buffer[this.index + 3];\n      if (i < (r < 0 ? n.buffer.length : n.buffer[this.stack[r] + 3]))\n        return this.yieldBuf(i);\n    }\n    return r < 0 ? this.yield(this.buffer.parent.nextChild(this.buffer.index + e, e, 0, 4, this.mode)) : !1;\n  }\n  /**\n  Move to this node\'s next sibling, if any.\n  */\n  nextSibling() {\n    return this.sibling(1);\n  }\n  /**\n  Move to this node\'s previous sibling, if any.\n  */\n  prevSibling() {\n    return this.sibling(-1);\n  }\n  atLastNode(e) {\n    let n, r, { buffer: i } = this;\n    if (i) {\n      if (e > 0) {\n        if (this.index < i.buffer.buffer.length)\n          return !1;\n      } else\n        for (let s = 0; s < this.index; s++)\n          if (i.buffer.buffer[s + 3] < this.index)\n            return !1;\n      ({ index: n, parent: r } = i);\n    } else\n      ({ index: n, _parent: r } = this._tree);\n    for (; r; { index: n, _parent: r } = r)\n      if (n > -1)\n        for (let s = n + e, a = e < 0 ? -1 : r._tree.children.length; s != a; s += e) {\n          let o = r._tree.children[s];\n          if (this.mode & un.IncludeAnonymous || o instanceof is || !o.type.isAnonymous || Yd(o))\n            return !1;\n        }\n    return !0;\n  }\n  move(e, n) {\n    if (n && this.enterChild(\n      e,\n      0,\n      4\n      /* Side.DontCare */\n    ))\n      return !0;\n    for (; ; ) {\n      if (this.sibling(e))\n        return !0;\n      if (this.atLastNode(e) || !this.parent())\n        return !1;\n    }\n  }\n  /**\n  Move to the next node in a\n  [pre-order](https://en.wikipedia.org/wiki/Tree_traversal#Pre-order,_NLR)\n  traversal, going from a node to its first child or, if the\n  current node is empty or `enter` is false, its next sibling or\n  the next sibling of the first parent node that has one.\n  */\n  next(e = !0) {\n    return this.move(1, e);\n  }\n  /**\n  Move to the next node in a last-to-first pre-order traversal. A\n  node is followed by its last child or, if it has none, its\n  previous sibling or the previous sibling of the first parent\n  node that has one.\n  */\n  prev(e = !0) {\n    return this.move(-1, e);\n  }\n  /**\n  Move the cursor to the innermost node that covers `pos`. If\n  `side` is -1, it will enter nodes that end at `pos`. If it is 1,\n  it will enter nodes that start at `pos`.\n  */\n  moveTo(e, n = 0) {\n    for (; (this.from == this.to || (n < 1 ? this.from >= e : this.from > e) || (n > -1 ? this.to <= e : this.to < e)) && this.parent(); )\n      ;\n    for (; this.enterChild(1, e, n); )\n      ;\n    return this;\n  }\n  /**\n  Get a [syntax node](#common.SyntaxNode) at the cursor\'s current\n  position.\n  */\n  get node() {\n    if (!this.buffer)\n      return this._tree;\n    let e = this.bufferNode, n = null, r = 0;\n    if (e && e.context == this.buffer)\n      e: for (let i = this.index, s = this.stack.length; s >= 0; ) {\n        for (let a = e; a; a = a._parent)\n          if (a.index == i) {\n            if (i == this.index)\n              return a;\n            n = a, r = s + 1;\n            break e;\n          }\n        i = this.stack[--s];\n      }\n    for (let i = r; i < this.stack.length; i++)\n      n = new fi(this.buffer, n, this.stack[i]);\n    return this.bufferNode = new fi(this.buffer, n, this.index);\n  }\n  /**\n  Get the [tree](#common.Tree) that represents the current node, if\n  any. Will return null when the node is in a [tree\n  buffer](#common.TreeBuffer).\n  */\n  get tree() {\n    return this.buffer ? null : this._tree._tree;\n  }\n  /**\n  Iterate over the current node and all its descendants, calling\n  `enter` when entering a node and `leave`, if given, when leaving\n  one. When `enter` returns `false`, any children of that node are\n  skipped, and `leave` isn\'t called for it.\n  */\n  iterate(e, n) {\n    for (let r = 0; ; ) {\n      let i = !1;\n      if (this.type.isAnonymous || e(this) !== !1) {\n        if (this.firstChild()) {\n          r++;\n          continue;\n        }\n        this.type.isAnonymous || (i = !0);\n      }\n      for (; ; ) {\n        if (i && n && n(this), i = this.type.isAnonymous, !r)\n          return;\n        if (this.nextSibling())\n          break;\n        this.parent(), r--, i = !0;\n      }\n    }\n  }\n  /**\n  Test whether the current node matches a given context—a sequence\n  of direct parent node names. Empty strings in the context array\n  are treated as wildcards.\n  */\n  matchContext(e) {\n    if (!this.buffer)\n      return cf(this.node.parent, e);\n    let { buffer: n } = this.buffer, { types: r } = n.set;\n    for (let i = e.length - 1, s = this.stack.length - 1; i >= 0; s--) {\n      if (s < 0)\n        return cf(this._tree, e, i);\n      let a = r[n.buffer[this.stack[s]]];\n      if (!a.isAnonymous) {\n        if (e[i] && e[i] != a.name)\n          return !1;\n        i--;\n      }\n    }\n    return !0;\n  }\n}\nfunction Yd(t) {\n  return t.children.some((e) => e instanceof is || !e.type.isAnonymous || Yd(e));\n}\nfunction bM(t) {\n  var e;\n  let { buffer: n, nodeSet: r, maxBufferLength: i = nS, reused: s = [], minRepeatType: a = r.types.length } = t, o = Array.isArray(n) ? new Hd(n, n.length) : n, l = r.types, c = 0, h = 0;\n  function f(B, Z, N, q, se, K) {\n    let { id: ce, start: H, end: ie, size: fe } = o, De = h, Ee = c;\n    for (; fe < 0; )\n      if (o.next(), fe == -1) {\n        let je = s[ce];\n        N.push(je), q.push(H - B);\n        return;\n      } else if (fe == -3) {\n        c = ce;\n        return;\n      } else if (fe == -4) {\n        h = ce;\n        return;\n      } else\n        throw new RangeError(`Unrecognized record size: ${fe}`);\n    let re = l[ce], Ce, Le, xe = H - B;\n    if (ie - H <= i && (Le = S(o.pos - Z, se))) {\n      let je = new Uint16Array(Le.size - Le.skip), he = o.pos - Le.size, Pe = je.length;\n      for (; o.pos > he; )\n        Pe = M(Le.start, je, Pe);\n      Ce = new is(je, ie - Le.start, r), xe = Le.start - B;\n    } else {\n      let je = o.pos - fe;\n      o.next();\n      let he = [], Pe = [], Pt = ce >= a ? ce : -1, ut = 0, We = ie;\n      for (; o.pos > je; )\n        Pt >= 0 && o.id == Pt && o.size >= 0 ? (o.end <= We - i && (v(he, Pe, H, ut, o.end, We, Pt, De, Ee), ut = he.length, We = o.end), o.next()) : K > 2500 ? m(H, je, he, Pe) : f(H, je, he, Pe, Pt, K + 1);\n      if (Pt >= 0 && ut > 0 && ut < he.length && v(he, Pe, H, ut, H, We, Pt, De, Ee), he.reverse(), Pe.reverse(), Pt > -1 && ut > 0) {\n        let Mt = y(re, Ee);\n        Ce = Kd(re, he, Pe, 0, he.length, 0, ie - H, Mt, Mt);\n      } else\n        Ce = C(re, he, Pe, ie - H, De - ie, Ee);\n    }\n    N.push(Ce), q.push(xe);\n  }\n  function m(B, Z, N, q) {\n    let se = [], K = 0, ce = -1;\n    for (; o.pos > Z; ) {\n      let { id: H, start: ie, end: fe, size: De } = o;\n      if (De > 4)\n        o.next();\n      else {\n        if (ce > -1 && ie < ce)\n          break;\n        ce < 0 && (ce = fe - i), se.push(H, ie, fe), K++, o.next();\n      }\n    }\n    if (K) {\n      let H = new Uint16Array(K * 4), ie = se[se.length - 2];\n      for (let fe = se.length - 3, De = 0; fe >= 0; fe -= 3)\n        H[De++] = se[fe], H[De++] = se[fe + 1] - ie, H[De++] = se[fe + 2] - ie, H[De++] = De;\n      N.push(new is(H, se[2] - ie, r)), q.push(ie - B);\n    }\n  }\n  function y(B, Z) {\n    return (N, q, se) => {\n      let K = 0, ce = N.length - 1, H, ie;\n      if (ce >= 0 && (H = N[ce]) instanceof an) {\n        if (!ce && H.type == B && H.length == se)\n          return H;\n        (ie = H.prop(nt.lookAhead)) && (K = q[ce] + H.length + ie);\n      }\n      return C(B, N, q, se, K, Z);\n    };\n  }\n  function v(B, Z, N, q, se, K, ce, H, ie) {\n    let fe = [], De = [];\n    for (; B.length > q; )\n      fe.push(B.pop()), De.push(Z.pop() + N - se);\n    B.push(C(r.types[ce], fe, De, K - se, H - K, ie)), Z.push(se - N);\n  }\n  function C(B, Z, N, q, se, K, ce) {\n    if (K) {\n      let H = [nt.contextHash, K];\n      ce = ce ? [H].concat(ce) : [H];\n    }\n    if (se > 25) {\n      let H = [nt.lookAhead, se];\n      ce = ce ? [H].concat(ce) : [H];\n    }\n    return new an(B, Z, N, q, ce);\n  }\n  function S(B, Z) {\n    let N = o.fork(), q = 0, se = 0, K = 0, ce = N.end - i, H = { size: 0, start: 0, skip: 0 };\n    e: for (let ie = N.pos - B; N.pos > ie; ) {\n      let fe = N.size;\n      if (N.id == Z && fe >= 0) {\n        H.size = q, H.start = se, H.skip = K, K += 4, q += 4, N.next();\n        continue;\n      }\n      let De = N.pos - fe;\n      if (fe < 0 || De < ie || N.start < ce)\n        break;\n      let Ee = N.id >= a ? 4 : 0, re = N.start;\n      for (N.next(); N.pos > De; ) {\n        if (N.size < 0)\n          if (N.size == -3)\n            Ee += 4;\n          else\n            break e;\n        else N.id >= a && (Ee += 4);\n        N.next();\n      }\n      se = re, q += fe, K += Ee;\n    }\n    return (Z < 0 || q == B) && (H.size = q, H.start = se, H.skip = K), H.size > 4 ? H : void 0;\n  }\n  function M(B, Z, N) {\n    let { id: q, start: se, end: K, size: ce } = o;\n    if (o.next(), ce >= 0 && q < a) {\n      let H = N;\n      if (ce > 4) {\n        let ie = o.pos - (ce - 4);\n        for (; o.pos > ie; )\n          N = M(B, Z, N);\n      }\n      Z[--N] = H, Z[--N] = K - B, Z[--N] = se - B, Z[--N] = q;\n    } else ce == -3 ? c = q : ce == -4 && (h = q);\n    return N;\n  }\n  let $ = [], U = [];\n  for (; o.pos > 0; )\n    f(t.start || 0, t.bufferStart || 0, $, U, -1, 0);\n  let R = (e = t.length) !== null && e !== void 0 ? e : $.length ? U[0] + $[0].length : 0;\n  return new an(l[t.topID], $.reverse(), U.reverse(), R);\n}\nconst v0 = /* @__PURE__ */ new WeakMap();\nfunction hu(t, e) {\n  if (!t.isAnonymous || e instanceof is || e.type != t)\n    return 1;\n  let n = v0.get(e);\n  if (n == null) {\n    n = 1;\n    for (let r of e.children) {\n      if (r.type != t || !(r instanceof an)) {\n        n = 1;\n        break;\n      }\n      n += hu(t, r);\n    }\n    v0.set(e, n);\n  }\n  return n;\n}\nfunction Kd(t, e, n, r, i, s, a, o, l) {\n  let c = 0;\n  for (let v = r; v < i; v++)\n    c += hu(t, e[v]);\n  let h = Math.ceil(\n    c * 1.5 / 8\n    /* Balance.BranchFactor */\n  ), f = [], m = [];\n  function y(v, C, S, M, $) {\n    for (let U = S; U < M; ) {\n      let R = U, B = C[U], Z = hu(t, v[U]);\n      for (U++; U < M; U++) {\n        let N = hu(t, v[U]);\n        if (Z + N >= h)\n          break;\n        Z += N;\n      }\n      if (U == R + 1) {\n        if (Z > h) {\n          let N = v[R];\n          y(N.children, N.positions, 0, N.children.length, C[R] + $);\n          continue;\n        }\n        f.push(v[R]);\n      } else {\n        let N = C[U - 1] + v[U - 1].length - B;\n        f.push(Kd(t, v, C, R, U, B, N, null, l));\n      }\n      m.push(B + $ - s);\n    }\n  }\n  return y(e, n, r, i, 0), (o || l)(f, m, a);\n}\nclass yM {\n  constructor() {\n    this.map = /* @__PURE__ */ new WeakMap();\n  }\n  setBuffer(e, n, r) {\n    let i = this.map.get(e);\n    i || this.map.set(e, i = /* @__PURE__ */ new Map()), i.set(n, r);\n  }\n  getBuffer(e, n) {\n    let r = this.map.get(e);\n    return r && r.get(n);\n  }\n  /**\n  Set the value for this syntax node.\n  */\n  set(e, n) {\n    e instanceof fi ? this.setBuffer(e.context.buffer, e.index, n) : e instanceof zn && this.map.set(e.tree, n);\n  }\n  /**\n  Retrieve value for this syntax node, if it exists in the map.\n  */\n  get(e) {\n    return e instanceof fi ? this.getBuffer(e.context.buffer, e.index) : e instanceof zn ? this.map.get(e.tree) : void 0;\n  }\n  /**\n  Set the value for the node that a cursor currently points to.\n  */\n  cursorSet(e, n) {\n    e.buffer ? this.setBuffer(e.buffer.buffer, e.index, n) : this.map.set(e.tree, n);\n  }\n  /**\n  Retrieve the value for the node that a cursor currently points\n  to.\n  */\n  cursorGet(e) {\n    return e.buffer ? this.getBuffer(e.buffer.buffer, e.index) : this.map.get(e.tree);\n  }\n}\nclass Ds {\n  /**\n  Construct a tree fragment. You\'ll usually want to use\n  [`addTree`](#common.TreeFragment^addTree) and\n  [`applyChanges`](#common.TreeFragment^applyChanges) instead of\n  calling this directly.\n  */\n  constructor(e, n, r, i, s = !1, a = !1) {\n    this.from = e, this.to = n, this.tree = r, this.offset = i, this.open = (s ? 1 : 0) | (a ? 2 : 0);\n  }\n  /**\n  Whether the start of the fragment represents the start of a\n  parse, or the end of a change. (In the second case, it may not\n  be safe to reuse some nodes at the start, depending on the\n  parsing algorithm.)\n  */\n  get openStart() {\n    return (this.open & 1) > 0;\n  }\n  /**\n  Whether the end of the fragment represents the end of a\n  full-document parse, or the start of a change.\n  */\n  get openEnd() {\n    return (this.open & 2) > 0;\n  }\n  /**\n  Create a set of fragments from a freshly parsed tree, or update\n  an existing set of fragments by replacing the ones that overlap\n  with a tree with content from the new tree. When `partial` is\n  true, the parse is treated as incomplete, and the resulting\n  fragment has [`openEnd`](#common.TreeFragment.openEnd) set to\n  true.\n  */\n  static addTree(e, n = [], r = !1) {\n    let i = [new Ds(0, e.length, e, 0, !1, r)];\n    for (let s of n)\n      s.to > e.length && i.push(s);\n    return i;\n  }\n  /**\n  Apply a set of edits to an array of fragments, removing or\n  splitting fragments as necessary to remove edited ranges, and\n  adjusting offsets for fragments that moved.\n  */\n  static applyChanges(e, n, r = 128) {\n    if (!n.length)\n      return e;\n    let i = [], s = 1, a = e.length ? e[0] : null;\n    for (let o = 0, l = 0, c = 0; ; o++) {\n      let h = o < n.length ? n[o] : null, f = h ? h.fromA : 1e9;\n      if (f - l >= r)\n        for (; a && a.from < f; ) {\n          let m = a;\n          if (l >= m.from || f <= m.to || c) {\n            let y = Math.max(m.from, l) - c, v = Math.min(m.to, f) - c;\n            m = y >= v ? null : new Ds(y, v, m.tree, m.offset + c, o > 0, !!h);\n          }\n          if (m && i.push(m), a.to > f)\n            break;\n          a = s < e.length ? e[s++] : null;\n        }\n      if (!h)\n        break;\n      l = h.toA, c = h.toA - h.toB;\n    }\n    return i;\n  }\n}\nclass aS {\n  /**\n  Start a parse, returning a [partial parse](#common.PartialParse)\n  object. [`fragments`](#common.TreeFragment) can be passed in to\n  make the parse incremental.\n  \n  By default, the entire input is parsed. You can pass `ranges`,\n  which should be a sorted array of non-empty, non-overlapping\n  ranges, to parse only those ranges. The tree returned in that\n  case will start at `ranges[0].from`.\n  */\n  startParse(e, n, r) {\n    return typeof e == "string" && (e = new OM(e)), r = r ? r.length ? r.map((i) => new Gh(i.from, i.to)) : [new Gh(0, 0)] : [new Gh(0, e.length)], this.createParse(e, n || [], r);\n  }\n  /**\n  Run a full parse, returning the resulting tree.\n  */\n  parse(e, n, r) {\n    let i = this.startParse(e, n, r);\n    for (; ; ) {\n      let s = i.advance();\n      if (s)\n        return s;\n    }\n  }\n}\nclass OM {\n  constructor(e) {\n    this.string = e;\n  }\n  get length() {\n    return this.string.length;\n  }\n  chunk(e) {\n    return this.string.slice(e);\n  }\n  get lineChunks() {\n    return !1;\n  }\n  read(e, n) {\n    return this.string.slice(e, n);\n  }\n}\nnew nt({ perNode: !0 });\nlet vM = 0;\nclass kr {\n  /**\n  @internal\n  */\n  constructor(e, n, r, i) {\n    this.name = e, this.set = n, this.base = r, this.modified = i, this.id = vM++;\n  }\n  toString() {\n    let { name: e } = this;\n    for (let n of this.modified)\n      n.name && (e = `${n.name}(${e})`);\n    return e;\n  }\n  static define(e, n) {\n    let r = typeof e == "string" ? e : "?";\n    if (e instanceof kr && (n = e), n?.base)\n      throw new Error("Can not derive from a modified tag");\n    let i = new kr(r, [], null, []);\n    if (i.set.push(i), n)\n      for (let s of n.set)\n        i.set.push(s);\n    return i;\n  }\n  /**\n  Define a tag _modifier_, which is a function that, given a tag,\n  will return a tag that is a subtag of the original. Applying the\n  same modifier to a twice tag will return the same value (`m1(t1)\n  == m1(t1)`) and applying multiple modifiers will, regardless or\n  order, produce the same tag (`m1(m2(t1)) == m2(m1(t1))`).\n  \n  When multiple modifiers are applied to a given base tag, each\n  smaller set of modifiers is registered as a parent, so that for\n  example `m1(m2(m3(t1)))` is a subtype of `m1(m2(t1))`,\n  `m1(m3(t1)`, and so on.\n  */\n  static defineModifier(e) {\n    let n = new Qu(e);\n    return (r) => r.modified.indexOf(n) > -1 ? r : Qu.get(r.base || r, r.modified.concat(n).sort((i, s) => i.id - s.id));\n  }\n}\nlet xM = 0;\nclass Qu {\n  constructor(e) {\n    this.name = e, this.instances = [], this.id = xM++;\n  }\n  static get(e, n) {\n    if (!n.length)\n      return e;\n    let r = n[0].instances.find((o) => o.base == e && kM(n, o.modified));\n    if (r)\n      return r;\n    let i = [], s = new kr(e.name, i, e, n);\n    for (let o of n)\n      o.instances.push(s);\n    let a = wM(n);\n    for (let o of e.set)\n      if (!o.modified.length)\n        for (let l of a)\n          i.push(Qu.get(o, l));\n    return s;\n  }\n}\nfunction kM(t, e) {\n  return t.length == e.length && t.every((n, r) => n == e[r]);\n}\nfunction wM(t) {\n  let e = [[]];\n  for (let n = 0; n < t.length; n++)\n    for (let r = 0, i = e.length; r < i; r++)\n      e.push(e[r].concat(t[n]));\n  return e.sort((n, r) => r.length - n.length);\n}\nfunction oS(t) {\n  let e = /* @__PURE__ */ Object.create(null);\n  for (let n in t) {\n    let r = t[n];\n    Array.isArray(r) || (r = [r]);\n    for (let i of n.split(" "))\n      if (i) {\n        let s = [], a = 2, o = i;\n        for (let f = 0; ; ) {\n          if (o == "..." && f > 0 && f + 3 == i.length) {\n            a = 1;\n            break;\n          }\n          let m = /^"(?:[^"\\\\]|\\\\.)*?"|[^\\/!]+/.exec(o);\n          if (!m)\n            throw new RangeError("Invalid path: " + i);\n          if (s.push(m[0] == "*" ? "" : m[0][0] == \'"\' ? JSON.parse(m[0]) : m[0]), f += m[0].length, f == i.length)\n            break;\n          let y = i[f++];\n          if (f == i.length && y == "!") {\n            a = 0;\n            break;\n          }\n          if (y != "/")\n            throw new RangeError("Invalid path: " + i);\n          o = i.slice(f);\n        }\n        let l = s.length - 1, c = s[l];\n        if (!c)\n          throw new RangeError("Invalid path: " + i);\n        let h = new Tu(r, a, l > 0 ? s.slice(0, l) : null);\n        e[c] = h.sort(e[c]);\n      }\n  }\n  return lS.add(e);\n}\nconst lS = new nt();\nclass Tu {\n  constructor(e, n, r, i) {\n    this.tags = e, this.mode = n, this.context = r, this.next = i;\n  }\n  get opaque() {\n    return this.mode == 0;\n  }\n  get inherit() {\n    return this.mode == 1;\n  }\n  sort(e) {\n    return !e || e.depth < this.depth ? (this.next = e, this) : (e.next = this.sort(e.next), e);\n  }\n  get depth() {\n    return this.context ? this.context.length : 0;\n  }\n}\nTu.empty = new Tu([], 2, null);\nfunction uS(t, e) {\n  let n = /* @__PURE__ */ Object.create(null);\n  for (let s of t)\n    if (!Array.isArray(s.tag))\n      n[s.tag.id] = s.class;\n    else\n      for (let a of s.tag)\n        n[a.id] = s.class;\n  let { scope: r, all: i = null } = e || {};\n  return {\n    style: (s) => {\n      let a = i;\n      for (let o of s)\n        for (let l of o.set) {\n          let c = n[l.id];\n          if (c) {\n            a = a ? a + " " + c : c;\n            break;\n          }\n        }\n      return a;\n    },\n    scope: r\n  };\n}\nfunction CM(t, e) {\n  let n = null;\n  for (let r of t) {\n    let i = r.style(e);\n    i && (n = n ? n + " " + i : i);\n  }\n  return n;\n}\nfunction SM(t, e, n, r = 0, i = t.length) {\n  let s = new AM(r, Array.isArray(e) ? e : [e], n);\n  s.highlightRange(t.cursor(), r, i, "", s.highlighters), s.flush(i);\n}\nclass AM {\n  constructor(e, n, r) {\n    this.at = e, this.highlighters = n, this.span = r, this.class = "";\n  }\n  startSpan(e, n) {\n    n != this.class && (this.flush(e), e > this.at && (this.at = e), this.class = n);\n  }\n  flush(e) {\n    e > this.at && this.class && this.span(this.at, e, this.class);\n  }\n  highlightRange(e, n, r, i, s) {\n    let { type: a, from: o, to: l } = e;\n    if (o >= r || l <= n)\n      return;\n    a.isTop && (s = this.highlighters.filter((y) => !y.scope || y.scope(a)));\n    let c = i, h = DM(e) || Tu.empty, f = CM(s, h.tags);\n    if (f && (c && (c += " "), c += f, h.mode == 1 && (i += (i ? " " : "") + f)), this.startSpan(Math.max(n, o), c), h.opaque)\n      return;\n    let m = e.tree && e.tree.prop(nt.mounted);\n    if (m && m.overlay) {\n      let y = e.node.enter(m.overlay[0].from + o, 1), v = this.highlighters.filter((S) => !S.scope || S.scope(m.tree.type)), C = e.firstChild();\n      for (let S = 0, M = o; ; S++) {\n        let $ = S < m.overlay.length ? m.overlay[S] : null, U = $ ? $.from + o : l, R = Math.max(n, M), B = Math.min(r, U);\n        if (R < B && C)\n          for (; e.from < B && (this.highlightRange(e, R, B, i, s), this.startSpan(Math.min(B, e.to), c), !(e.to >= U || !e.nextSibling())); )\n            ;\n        if (!$ || U > r)\n          break;\n        M = $.to + o, M > n && (this.highlightRange(y.cursor(), Math.max(n, $.from + o), Math.min(r, M), "", v), this.startSpan(Math.min(r, M), c));\n      }\n      C && e.parent();\n    } else if (e.firstChild()) {\n      m && (i = "");\n      do\n        if (!(e.to <= n)) {\n          if (e.from >= r)\n            break;\n          this.highlightRange(e, n, r, i, s), this.startSpan(Math.min(r, e.to), c);\n        }\n      while (e.nextSibling());\n      e.parent();\n    }\n  }\n}\nfunction DM(t) {\n  let e = t.type.prop(lS);\n  for (; e && e.context && !t.matchContext(e.context); )\n    e = e.next;\n  return e || null;\n}\nconst ye = kr.define, Xl = ye(), Vi = ye(), x0 = ye(Vi), k0 = ye(Vi), Xi = ye(), Wl = ye(Xi), zh = ye(Xi), si = ye(), bs = ye(si), ni = ye(), ri = ye(), pf = ye(), eo = ye(pf), Ul = ye(), u = {\n  /**\n  A comment.\n  */\n  comment: Xl,\n  /**\n  A line [comment](#highlight.tags.comment).\n  */\n  lineComment: ye(Xl),\n  /**\n  A block [comment](#highlight.tags.comment).\n  */\n  blockComment: ye(Xl),\n  /**\n  A documentation [comment](#highlight.tags.comment).\n  */\n  docComment: ye(Xl),\n  /**\n  Any kind of identifier.\n  */\n  name: Vi,\n  /**\n  The [name](#highlight.tags.name) of a variable.\n  */\n  variableName: ye(Vi),\n  /**\n  A type [name](#highlight.tags.name).\n  */\n  typeName: x0,\n  /**\n  A tag name (subtag of [`typeName`](#highlight.tags.typeName)).\n  */\n  tagName: ye(x0),\n  /**\n  A property or field [name](#highlight.tags.name).\n  */\n  propertyName: k0,\n  /**\n  An attribute name (subtag of [`propertyName`](#highlight.tags.propertyName)).\n  */\n  attributeName: ye(k0),\n  /**\n  The [name](#highlight.tags.name) of a class.\n  */\n  className: ye(Vi),\n  /**\n  A label [name](#highlight.tags.name).\n  */\n  labelName: ye(Vi),\n  /**\n  A namespace [name](#highlight.tags.name).\n  */\n  namespace: ye(Vi),\n  /**\n  The [name](#highlight.tags.name) of a macro.\n  */\n  macroName: ye(Vi),\n  /**\n  A literal value.\n  */\n  literal: Xi,\n  /**\n  A string [literal](#highlight.tags.literal).\n  */\n  string: Wl,\n  /**\n  A documentation [string](#highlight.tags.string).\n  */\n  docString: ye(Wl),\n  /**\n  A character literal (subtag of [string](#highlight.tags.string)).\n  */\n  character: ye(Wl),\n  /**\n  An attribute value (subtag of [string](#highlight.tags.string)).\n  */\n  attributeValue: ye(Wl),\n  /**\n  A number [literal](#highlight.tags.literal).\n  */\n  number: zh,\n  /**\n  An integer [number](#highlight.tags.number) literal.\n  */\n  integer: ye(zh),\n  /**\n  A floating-point [number](#highlight.tags.number) literal.\n  */\n  float: ye(zh),\n  /**\n  A boolean [literal](#highlight.tags.literal).\n  */\n  bool: ye(Xi),\n  /**\n  Regular expression [literal](#highlight.tags.literal).\n  */\n  regexp: ye(Xi),\n  /**\n  An escape [literal](#highlight.tags.literal), for example a\n  backslash escape in a string.\n  */\n  escape: ye(Xi),\n  /**\n  A color [literal](#highlight.tags.literal).\n  */\n  color: ye(Xi),\n  /**\n  A URL [literal](#highlight.tags.literal).\n  */\n  url: ye(Xi),\n  /**\n  A language keyword.\n  */\n  keyword: ni,\n  /**\n  The [keyword](#highlight.tags.keyword) for the self or this\n  object.\n  */\n  self: ye(ni),\n  /**\n  The [keyword](#highlight.tags.keyword) for null.\n  */\n  null: ye(ni),\n  /**\n  A [keyword](#highlight.tags.keyword) denoting some atomic value.\n  */\n  atom: ye(ni),\n  /**\n  A [keyword](#highlight.tags.keyword) that represents a unit.\n  */\n  unit: ye(ni),\n  /**\n  A modifier [keyword](#highlight.tags.keyword).\n  */\n  modifier: ye(ni),\n  /**\n  A [keyword](#highlight.tags.keyword) that acts as an operator.\n  */\n  operatorKeyword: ye(ni),\n  /**\n  A control-flow related [keyword](#highlight.tags.keyword).\n  */\n  controlKeyword: ye(ni),\n  /**\n  A [keyword](#highlight.tags.keyword) that defines something.\n  */\n  definitionKeyword: ye(ni),\n  /**\n  A [keyword](#highlight.tags.keyword) related to defining or\n  interfacing with modules.\n  */\n  moduleKeyword: ye(ni),\n  /**\n  An operator.\n  */\n  operator: ri,\n  /**\n  An [operator](#highlight.tags.operator) that dereferences something.\n  */\n  derefOperator: ye(ri),\n  /**\n  Arithmetic-related [operator](#highlight.tags.operator).\n  */\n  arithmeticOperator: ye(ri),\n  /**\n  Logical [operator](#highlight.tags.operator).\n  */\n  logicOperator: ye(ri),\n  /**\n  Bit [operator](#highlight.tags.operator).\n  */\n  bitwiseOperator: ye(ri),\n  /**\n  Comparison [operator](#highlight.tags.operator).\n  */\n  compareOperator: ye(ri),\n  /**\n  [Operator](#highlight.tags.operator) that updates its operand.\n  */\n  updateOperator: ye(ri),\n  /**\n  [Operator](#highlight.tags.operator) that defines something.\n  */\n  definitionOperator: ye(ri),\n  /**\n  Type-related [operator](#highlight.tags.operator).\n  */\n  typeOperator: ye(ri),\n  /**\n  Control-flow [operator](#highlight.tags.operator).\n  */\n  controlOperator: ye(ri),\n  /**\n  Program or markup punctuation.\n  */\n  punctuation: pf,\n  /**\n  [Punctuation](#highlight.tags.punctuation) that separates\n  things.\n  */\n  separator: ye(pf),\n  /**\n  Bracket-style [punctuation](#highlight.tags.punctuation).\n  */\n  bracket: eo,\n  /**\n  Angle [brackets](#highlight.tags.bracket) (usually `<` and `>`\n  tokens).\n  */\n  angleBracket: ye(eo),\n  /**\n  Square [brackets](#highlight.tags.bracket) (usually `[` and `]`\n  tokens).\n  */\n  squareBracket: ye(eo),\n  /**\n  Parentheses (usually `(` and `)` tokens). Subtag of\n  [bracket](#highlight.tags.bracket).\n  */\n  paren: ye(eo),\n  /**\n  Braces (usually `{` and `}` tokens). Subtag of\n  [bracket](#highlight.tags.bracket).\n  */\n  brace: ye(eo),\n  /**\n  Content, for example plain text in XML or markup documents.\n  */\n  content: si,\n  /**\n  [Content](#highlight.tags.content) that represents a heading.\n  */\n  heading: bs,\n  /**\n  A level 1 [heading](#highlight.tags.heading).\n  */\n  heading1: ye(bs),\n  /**\n  A level 2 [heading](#highlight.tags.heading).\n  */\n  heading2: ye(bs),\n  /**\n  A level 3 [heading](#highlight.tags.heading).\n  */\n  heading3: ye(bs),\n  /**\n  A level 4 [heading](#highlight.tags.heading).\n  */\n  heading4: ye(bs),\n  /**\n  A level 5 [heading](#highlight.tags.heading).\n  */\n  heading5: ye(bs),\n  /**\n  A level 6 [heading](#highlight.tags.heading).\n  */\n  heading6: ye(bs),\n  /**\n  A prose [content](#highlight.tags.content) separator (such as a horizontal rule).\n  */\n  contentSeparator: ye(si),\n  /**\n  [Content](#highlight.tags.content) that represents a list.\n  */\n  list: ye(si),\n  /**\n  [Content](#highlight.tags.content) that represents a quote.\n  */\n  quote: ye(si),\n  /**\n  [Content](#highlight.tags.content) that is emphasized.\n  */\n  emphasis: ye(si),\n  /**\n  [Content](#highlight.tags.content) that is styled strong.\n  */\n  strong: ye(si),\n  /**\n  [Content](#highlight.tags.content) that is part of a link.\n  */\n  link: ye(si),\n  /**\n  [Content](#highlight.tags.content) that is styled as code or\n  monospace.\n  */\n  monospace: ye(si),\n  /**\n  [Content](#highlight.tags.content) that has a strike-through\n  style.\n  */\n  strikethrough: ye(si),\n  /**\n  Inserted text in a change-tracking format.\n  */\n  inserted: ye(),\n  /**\n  Deleted text.\n  */\n  deleted: ye(),\n  /**\n  Changed text.\n  */\n  changed: ye(),\n  /**\n  An invalid or unsyntactic element.\n  */\n  invalid: ye(),\n  /**\n  Metadata or meta-instruction.\n  */\n  meta: Ul,\n  /**\n  [Metadata](#highlight.tags.meta) that applies to the entire\n  document.\n  */\n  documentMeta: ye(Ul),\n  /**\n  [Metadata](#highlight.tags.meta) that annotates or adds\n  attributes to a given syntactic element.\n  */\n  annotation: ye(Ul),\n  /**\n  Processing instruction or preprocessor directive. Subtag of\n  [meta](#highlight.tags.meta).\n  */\n  processingInstruction: ye(Ul),\n  /**\n  [Modifier](#highlight.Tag^defineModifier) that indicates that a\n  given element is being defined. Expected to be used with the\n  various [name](#highlight.tags.name) tags.\n  */\n  definition: kr.defineModifier("definition"),\n  /**\n  [Modifier](#highlight.Tag^defineModifier) that indicates that\n  something is constant. Mostly expected to be used with\n  [variable names](#highlight.tags.variableName).\n  */\n  constant: kr.defineModifier("constant"),\n  /**\n  [Modifier](#highlight.Tag^defineModifier) used to indicate that\n  a [variable](#highlight.tags.variableName) or [property\n  name](#highlight.tags.propertyName) is being called or defined\n  as a function.\n  */\n  function: kr.defineModifier("function"),\n  /**\n  [Modifier](#highlight.Tag^defineModifier) that can be applied to\n  [names](#highlight.tags.name) to indicate that they belong to\n  the language\'s standard environment.\n  */\n  standard: kr.defineModifier("standard"),\n  /**\n  [Modifier](#highlight.Tag^defineModifier) that indicates a given\n  [names](#highlight.tags.name) is local to some scope.\n  */\n  local: kr.defineModifier("local"),\n  /**\n  A generic variant [modifier](#highlight.Tag^defineModifier) that\n  can be used to tag language-specific alternative variants of\n  some common tag. It is recommended for themes to define special\n  forms of at least the [string](#highlight.tags.string) and\n  [variable name](#highlight.tags.variableName) tags, since those\n  come up a lot.\n  */\n  special: kr.defineModifier("special")\n};\nfor (let t in u) {\n  let e = u[t];\n  e instanceof kr && (e.name = t);\n}\nuS([\n  { tag: u.link, class: "tok-link" },\n  { tag: u.heading, class: "tok-heading" },\n  { tag: u.emphasis, class: "tok-emphasis" },\n  { tag: u.strong, class: "tok-strong" },\n  { tag: u.keyword, class: "tok-keyword" },\n  { tag: u.atom, class: "tok-atom" },\n  { tag: u.bool, class: "tok-bool" },\n  { tag: u.url, class: "tok-url" },\n  { tag: u.labelName, class: "tok-labelName" },\n  { tag: u.inserted, class: "tok-inserted" },\n  { tag: u.deleted, class: "tok-deleted" },\n  { tag: u.literal, class: "tok-literal" },\n  { tag: u.string, class: "tok-string" },\n  { tag: u.number, class: "tok-number" },\n  { tag: [u.regexp, u.escape, u.special(u.string)], class: "tok-string2" },\n  { tag: u.variableName, class: "tok-variableName" },\n  { tag: u.local(u.variableName), class: "tok-variableName tok-local" },\n  { tag: u.definition(u.variableName), class: "tok-variableName tok-definition" },\n  { tag: u.special(u.variableName), class: "tok-variableName2" },\n  { tag: u.definition(u.propertyName), class: "tok-propertyName tok-definition" },\n  { tag: u.typeName, class: "tok-typeName" },\n  { tag: u.namespace, class: "tok-namespace" },\n  { tag: u.className, class: "tok-className" },\n  { tag: u.macroName, class: "tok-macroName" },\n  { tag: u.propertyName, class: "tok-propertyName" },\n  { tag: u.operator, class: "tok-operator" },\n  { tag: u.comment, class: "tok-comment" },\n  { tag: u.meta, class: "tok-meta" },\n  { tag: u.invalid, class: "tok-invalid" },\n  { tag: u.punctuation, class: "tok-punctuation" }\n]);\nvar Hh;\nconst Ks = /* @__PURE__ */ new nt();\nfunction cS(t) {\n  return Ae.define({\n    combine: t ? (e) => e.concat(t) : void 0\n  });\n}\nconst Jd = /* @__PURE__ */ new nt();\nclass Sr {\n  /**\n  Construct a language object. If you need to invoke this\n  directly, first define a data facet with\n  [`defineLanguageFacet`](https://codemirror.net/6/docs/ref/#language.defineLanguageFacet), and then\n  configure your parser to [attach](https://codemirror.net/6/docs/ref/#language.languageDataProp) it\n  to the language\'s outer syntax node.\n  */\n  constructor(e, n, r = [], i = "") {\n    this.data = e, this.name = i, dt.prototype.hasOwnProperty("tree") || Object.defineProperty(dt.prototype, "tree", { get() {\n      return wn(this);\n    } }), this.parser = n, this.extension = [\n      wa.of(this),\n      dt.languageData.of((s, a, o) => {\n        let l = w0(s, a, o), c = l.type.prop(Ks);\n        if (!c)\n          return [];\n        let h = s.facet(c), f = l.type.prop(Jd);\n        if (f) {\n          let m = l.resolve(a - l.from, o);\n          for (let y of f)\n            if (y.test(m, s)) {\n              let v = s.facet(y.facet);\n              return y.type == "replace" ? v : v.concat(h);\n            }\n        }\n        return h;\n      })\n    ].concat(r);\n  }\n  /**\n  Query whether this language is active at the given position.\n  */\n  isActiveAt(e, n, r = -1) {\n    return w0(e, n, r).type.prop(Ks) == this.data;\n  }\n  /**\n  Find the document regions that were parsed using this language.\n  The returned regions will _include_ any nested languages rooted\n  in this language, when those exist.\n  */\n  findRegions(e) {\n    let n = e.facet(wa);\n    if (n?.data == this.data)\n      return [{ from: 0, to: e.doc.length }];\n    if (!n || !n.allowsNesting)\n      return [];\n    let r = [], i = (s, a) => {\n      if (s.prop(Ks) == this.data) {\n        r.push({ from: a, to: a + s.length });\n        return;\n      }\n      let o = s.prop(nt.mounted);\n      if (o) {\n        if (o.tree.prop(Ks) == this.data) {\n          if (o.overlay)\n            for (let l of o.overlay)\n              r.push({ from: l.from + a, to: l.to + a });\n          else\n            r.push({ from: a, to: a + s.length });\n          return;\n        } else if (o.overlay) {\n          let l = r.length;\n          if (i(o.tree, o.overlay[0].from + a), r.length > l)\n            return;\n        }\n      }\n      for (let l = 0; l < s.children.length; l++) {\n        let c = s.children[l];\n        c instanceof an && i(c, s.positions[l] + a);\n      }\n    };\n    return i(wn(e), 0), r;\n  }\n  /**\n  Indicates whether this language allows nested languages. The\n  default implementation returns true.\n  */\n  get allowsNesting() {\n    return !0;\n  }\n}\nSr.setState = /* @__PURE__ */ Ie.define();\nfunction w0(t, e, n) {\n  let r = t.facet(wa), i = wn(t).topNode;\n  if (!r || r.allowsNesting)\n    for (let s = i; s; s = s.enter(e, n, un.ExcludeBuffers))\n      s.type.isTop && (i = s);\n  return i;\n}\nclass ju extends Sr {\n  constructor(e, n, r) {\n    super(e, n, [], r), this.parser = n;\n  }\n  /**\n  Define a language from a parser.\n  */\n  static define(e) {\n    let n = cS(e.languageData);\n    return new ju(n, e.parser.configure({\n      props: [Ks.add((r) => r.isTop ? n : void 0)]\n    }), e.name);\n  }\n  /**\n  Create a new instance of this language with a reconfigured\n  version of its parser and optionally a new name.\n  */\n  configure(e, n) {\n    return new ju(this.data, this.parser.configure(e), n || this.name);\n  }\n  get allowsNesting() {\n    return this.parser.hasWrappers();\n  }\n}\nfunction wn(t) {\n  let e = t.field(Sr.state, !1);\n  return e ? e.tree : an.empty;\n}\nfunction hS(t, e, n = 50) {\n  var r;\n  let i = (r = t.field(Sr.state, !1)) === null || r === void 0 ? void 0 : r.context;\n  if (!i)\n    return null;\n  let s = i.viewport;\n  i.updateViewport({ from: 0, to: e });\n  let a = i.isDone(e) || i.work(n, e) ? i.tree : null;\n  return i.updateViewport(s), a;\n}\nclass PM {\n  /**\n  Create an input object for the given document.\n  */\n  constructor(e) {\n    this.doc = e, this.cursorPos = 0, this.string = "", this.cursor = e.iter();\n  }\n  get length() {\n    return this.doc.length;\n  }\n  syncTo(e) {\n    return this.string = this.cursor.next(e - this.cursorPos).value, this.cursorPos = e + this.string.length, this.cursorPos - this.string.length;\n  }\n  chunk(e) {\n    return this.syncTo(e), this.string;\n  }\n  get lineChunks() {\n    return !0;\n  }\n  read(e, n) {\n    let r = this.cursorPos - this.string.length;\n    return e < r || n >= this.cursorPos ? this.doc.sliceString(e, n) : this.string.slice(e - r, n - r);\n  }\n}\nlet to = null;\nclass Ru {\n  constructor(e, n, r = [], i, s, a, o, l) {\n    this.parser = e, this.state = n, this.fragments = r, this.tree = i, this.treeLen = s, this.viewport = a, this.skipped = o, this.scheduleOn = l, this.parse = null, this.tempSkipped = [];\n  }\n  /**\n  @internal\n  */\n  static create(e, n, r) {\n    return new Ru(e, n, [], an.empty, 0, r, [], null);\n  }\n  startParse() {\n    return this.parser.startParse(new PM(this.state.doc), this.fragments);\n  }\n  /**\n  @internal\n  */\n  work(e, n) {\n    return n != null && n >= this.state.doc.length && (n = void 0), this.tree != an.empty && this.isDone(n ?? this.state.doc.length) ? (this.takeTree(), !0) : this.withContext(() => {\n      var r;\n      if (typeof e == "number") {\n        let i = Date.now() + e;\n        e = () => Date.now() > i;\n      }\n      for (this.parse || (this.parse = this.startParse()), n != null && (this.parse.stoppedAt == null || this.parse.stoppedAt > n) && n < this.state.doc.length && this.parse.stopAt(n); ; ) {\n        let i = this.parse.advance();\n        if (i)\n          if (this.fragments = this.withoutTempSkipped(Ds.addTree(i, this.fragments, this.parse.stoppedAt != null)), this.treeLen = (r = this.parse.stoppedAt) !== null && r !== void 0 ? r : this.state.doc.length, this.tree = i, this.parse = null, this.treeLen < (n ?? this.state.doc.length))\n            this.parse = this.startParse();\n          else\n            return !0;\n        if (e())\n          return !1;\n      }\n    });\n  }\n  /**\n  @internal\n  */\n  takeTree() {\n    let e, n;\n    this.parse && (e = this.parse.parsedPos) >= this.treeLen && ((this.parse.stoppedAt == null || this.parse.stoppedAt > e) && this.parse.stopAt(e), this.withContext(() => {\n      for (; !(n = this.parse.advance()); )\n        ;\n    }), this.treeLen = e, this.tree = n, this.fragments = this.withoutTempSkipped(Ds.addTree(this.tree, this.fragments, !0)), this.parse = null);\n  }\n  withContext(e) {\n    let n = to;\n    to = this;\n    try {\n      return e();\n    } finally {\n      to = n;\n    }\n  }\n  withoutTempSkipped(e) {\n    for (let n; n = this.tempSkipped.pop(); )\n      e = C0(e, n.from, n.to);\n    return e;\n  }\n  /**\n  @internal\n  */\n  changes(e, n) {\n    let { fragments: r, tree: i, treeLen: s, viewport: a, skipped: o } = this;\n    if (this.takeTree(), !e.empty) {\n      let l = [];\n      if (e.iterChangedRanges((c, h, f, m) => l.push({ fromA: c, toA: h, fromB: f, toB: m })), r = Ds.applyChanges(r, l), i = an.empty, s = 0, a = { from: e.mapPos(a.from, -1), to: e.mapPos(a.to, 1) }, this.skipped.length) {\n        o = [];\n        for (let c of this.skipped) {\n          let h = e.mapPos(c.from, 1), f = e.mapPos(c.to, -1);\n          h < f && o.push({ from: h, to: f });\n        }\n      }\n    }\n    return new Ru(this.parser, n, r, i, s, a, o, this.scheduleOn);\n  }\n  /**\n  @internal\n  */\n  updateViewport(e) {\n    if (this.viewport.from == e.from && this.viewport.to == e.to)\n      return !1;\n    this.viewport = e;\n    let n = this.skipped.length;\n    for (let r = 0; r < this.skipped.length; r++) {\n      let { from: i, to: s } = this.skipped[r];\n      i < e.to && s > e.from && (this.fragments = C0(this.fragments, i, s), this.skipped.splice(r--, 1));\n    }\n    return this.skipped.length >= n ? !1 : (this.reset(), !0);\n  }\n  /**\n  @internal\n  */\n  reset() {\n    this.parse && (this.takeTree(), this.parse = null);\n  }\n  /**\n  Notify the parse scheduler that the given region was skipped\n  because it wasn\'t in view, and the parse should be restarted\n  when it comes into view.\n  */\n  skipUntilInView(e, n) {\n    this.skipped.push({ from: e, to: n });\n  }\n  /**\n  Returns a parser intended to be used as placeholder when\n  asynchronously loading a nested parser. It\'ll skip its input and\n  mark it as not-really-parsed, so that the next update will parse\n  it again.\n  \n  When `until` is given, a reparse will be scheduled when that\n  promise resolves.\n  */\n  static getSkippingParser(e) {\n    return new class extends aS {\n      createParse(n, r, i) {\n        let s = i[0].from, a = i[i.length - 1].to;\n        return {\n          parsedPos: s,\n          advance() {\n            let l = to;\n            if (l) {\n              for (let c of i)\n                l.tempSkipped.push(c);\n              e && (l.scheduleOn = l.scheduleOn ? Promise.all([l.scheduleOn, e]) : e);\n            }\n            return this.parsedPos = a, new an(Kn.none, [], [], a - s);\n          },\n          stoppedAt: null,\n          stopAt() {\n          }\n        };\n      }\n    }();\n  }\n  /**\n  @internal\n  */\n  isDone(e) {\n    e = Math.min(e, this.state.doc.length);\n    let n = this.fragments;\n    return this.treeLen >= e && n.length && n[0].from == 0 && n[0].to >= e;\n  }\n  /**\n  Get the context for the current parse, or `null` if no editor\n  parse is in progress.\n  */\n  static get() {\n    return to;\n  }\n}\nfunction C0(t, e, n) {\n  return Ds.applyChanges(t, [{ fromA: e, toA: n, fromB: e, toB: n }]);\n}\nclass ka {\n  constructor(e) {\n    this.context = e, this.tree = e.tree;\n  }\n  apply(e) {\n    if (!e.docChanged && this.tree == this.context.tree)\n      return this;\n    let n = this.context.changes(e.changes, e.state), r = this.context.treeLen == e.startState.doc.length ? void 0 : Math.max(e.changes.mapPos(this.context.treeLen), n.viewport.to);\n    return n.work(20, r) || n.takeTree(), new ka(n);\n  }\n  static init(e) {\n    let n = Math.min(3e3, e.doc.length), r = Ru.create(e.facet(wa).parser, e, { from: 0, to: n });\n    return r.work(20, n) || r.takeTree(), new ka(r);\n  }\n}\nSr.state = /* @__PURE__ */ Vt.define({\n  create: ka.init,\n  update(t, e) {\n    for (let n of e.effects)\n      if (n.is(Sr.setState))\n        return n.value;\n    return e.startState.facet(wa) != e.state.facet(wa) ? ka.init(e.state) : t.apply(e);\n  }\n});\nlet pS = (t) => {\n  let e = setTimeout(\n    () => t(),\n    500\n    /* Work.MaxPause */\n  );\n  return () => clearTimeout(e);\n};\ntypeof requestIdleCallback < "u" && (pS = (t) => {\n  let e = -1, n = setTimeout(\n    () => {\n      e = requestIdleCallback(t, {\n        timeout: 400\n        /* Work.MinPause */\n      });\n    },\n    100\n    /* Work.MinPause */\n  );\n  return () => e < 0 ? clearTimeout(n) : cancelIdleCallback(e);\n});\nconst Yh = typeof navigator < "u" && (!((Hh = navigator.scheduling) === null || Hh === void 0) && Hh.isInputPending) ? () => navigator.scheduling.isInputPending() : null, EM = /* @__PURE__ */ pn.fromClass(class {\n  constructor(e) {\n    this.view = e, this.working = null, this.workScheduled = 0, this.chunkEnd = -1, this.chunkBudget = -1, this.work = this.work.bind(this), this.scheduleWork();\n  }\n  update(e) {\n    let n = this.view.state.field(Sr.state).context;\n    (n.updateViewport(e.view.viewport) || this.view.viewport.to > n.treeLen) && this.scheduleWork(), (e.docChanged || e.selectionSet) && (this.view.hasFocus && (this.chunkBudget += 50), this.scheduleWork()), this.checkAsyncSchedule(n);\n  }\n  scheduleWork() {\n    if (this.working)\n      return;\n    let { state: e } = this.view, n = e.field(Sr.state);\n    (n.tree != n.context.tree || !n.context.isDone(e.doc.length)) && (this.working = pS(this.work));\n  }\n  work(e) {\n    this.working = null;\n    let n = Date.now();\n    if (this.chunkEnd < n && (this.chunkEnd < 0 || this.view.hasFocus) && (this.chunkEnd = n + 3e4, this.chunkBudget = 3e3), this.chunkBudget <= 0)\n      return;\n    let { state: r, viewport: { to: i } } = this.view, s = r.field(Sr.state);\n    if (s.tree == s.context.tree && s.context.isDone(\n      i + 1e5\n      /* Work.MaxParseAhead */\n    ))\n      return;\n    let a = Date.now() + Math.min(this.chunkBudget, 100, e && !Yh ? Math.max(25, e.timeRemaining() - 5) : 1e9), o = s.context.treeLen < i && r.doc.length > i + 1e3, l = s.context.work(() => Yh && Yh() || Date.now() > a, i + (o ? 0 : 1e5));\n    this.chunkBudget -= Date.now() - n, (l || this.chunkBudget <= 0) && (s.context.takeTree(), this.view.dispatch({ effects: Sr.setState.of(new ka(s.context)) })), this.chunkBudget > 0 && !(l && !o) && this.scheduleWork(), this.checkAsyncSchedule(s.context);\n  }\n  checkAsyncSchedule(e) {\n    e.scheduleOn && (this.workScheduled++, e.scheduleOn.then(() => this.scheduleWork()).catch((n) => qn(this.view.state, n)).then(() => this.workScheduled--), e.scheduleOn = null);\n  }\n  destroy() {\n    this.working && this.working();\n  }\n  isWorking() {\n    return !!(this.working || this.workScheduled > 0);\n  }\n}, {\n  eventHandlers: { focus() {\n    this.scheduleWork();\n  } }\n}), wa = /* @__PURE__ */ Ae.define({\n  combine(t) {\n    return t.length ? t[0] : null;\n  },\n  enables: (t) => [\n    Sr.state,\n    EM,\n    be.contentAttributes.compute([t], (e) => {\n      let n = e.facet(t);\n      return n && n.name ? { "data-language": n.name } : {};\n    })\n  ]\n});\nclass FM {\n  /**\n  Create a language support object.\n  */\n  constructor(e, n = []) {\n    this.language = e, this.support = n, this.extension = [e, n];\n  }\n}\nconst BM = /* @__PURE__ */ Ae.define(), Ca = /* @__PURE__ */ Ae.define({\n  combine: (t) => {\n    if (!t.length)\n      return "  ";\n    let e = t[0];\n    if (!e || /\\S/.test(e) || Array.from(e).some((n) => n != e[0]))\n      throw new Error("Invalid indent unit: " + JSON.stringify(t[0]));\n    return e;\n  }\n});\nfunction _u(t) {\n  let e = t.facet(Ca);\n  return e.charCodeAt(0) == 9 ? t.tabSize * e.length : e.length;\n}\nfunction Zu(t, e) {\n  let n = "", r = t.tabSize, i = t.facet(Ca)[0];\n  if (i == "\t") {\n    for (; e >= r; )\n      n += "\t", e -= r;\n    i = " ";\n  }\n  for (let s = 0; s < e; s++)\n    n += i;\n  return n;\n}\nfunction fS(t, e) {\n  t instanceof dt && (t = new Rc(t));\n  for (let r of t.state.facet(BM)) {\n    let i = r(t, e);\n    if (i !== void 0)\n      return i;\n  }\n  let n = wn(t.state);\n  return n.length >= e ? MM(t, n, e) : null;\n}\nclass Rc {\n  /**\n  Create an indent context.\n  */\n  constructor(e, n = {}) {\n    this.state = e, this.options = n, this.unit = _u(e);\n  }\n  /**\n  Get a description of the line at the given position, taking\n  [simulated line\n  breaks](https://codemirror.net/6/docs/ref/#language.IndentContext.constructor^options.simulateBreak)\n  into account. If there is such a break at `pos`, the `bias`\n  argument determines whether the part of the line line before or\n  after the break is used.\n  */\n  lineAt(e, n = 1) {\n    let r = this.state.doc.lineAt(e), { simulateBreak: i, simulateDoubleBreak: s } = this.options;\n    return i != null && i >= r.from && i <= r.to ? s && i == e ? { text: "", from: e } : (n < 0 ? i < e : i <= e) ? { text: r.text.slice(i - r.from), from: i } : { text: r.text.slice(0, i - r.from), from: r.from } : r;\n  }\n  /**\n  Get the text directly after `pos`, either the entire line\n  or the next 100 characters, whichever is shorter.\n  */\n  textAfterPos(e, n = 1) {\n    if (this.options.simulateDoubleBreak && e == this.options.simulateBreak)\n      return "";\n    let { text: r, from: i } = this.lineAt(e, n);\n    return r.slice(e - i, Math.min(r.length, e + 100 - i));\n  }\n  /**\n  Find the column for the given position.\n  */\n  column(e, n = 1) {\n    let { text: r, from: i } = this.lineAt(e, n), s = this.countColumn(r, e - i), a = this.options.overrideIndentation ? this.options.overrideIndentation(i) : -1;\n    return a > -1 && (s += a - this.countColumn(r, r.search(/\\S|$/))), s;\n  }\n  /**\n  Find the column position (taking tabs into account) of the given\n  position in the given string.\n  */\n  countColumn(e, n = e.length) {\n    return Bc(e, this.state.tabSize, n);\n  }\n  /**\n  Find the indentation column of the line at the given point.\n  */\n  lineIndent(e, n = 1) {\n    let { text: r, from: i } = this.lineAt(e, n), s = this.options.overrideIndentation;\n    if (s) {\n      let a = s(i);\n      if (a > -1)\n        return a;\n    }\n    return this.countColumn(r, r.search(/\\S|$/));\n  }\n  /**\n  Returns the [simulated line\n  break](https://codemirror.net/6/docs/ref/#language.IndentContext.constructor^options.simulateBreak)\n  for this context, if any.\n  */\n  get simulatedBreak() {\n    return this.options.simulateBreak || null;\n  }\n}\nconst dS = /* @__PURE__ */ new nt();\nfunction MM(t, e, n) {\n  let r = e.resolveStack(n), i = e.resolveInner(n, -1).resolve(n, 0).enterUnfinishedNodesBefore(n);\n  if (i != r.node) {\n    let s = [];\n    for (let a = i; a && !(a.from == r.node.from && a.type == r.node.type); a = a.parent)\n      s.push(a);\n    for (let a = s.length - 1; a >= 0; a--)\n      r = { node: s[a], next: r };\n  }\n  return mS(r, t, n);\n}\nfunction mS(t, e, n) {\n  for (let r = t; r; r = r.next) {\n    let i = TM(r.node);\n    if (i)\n      return i(em.create(e, n, r));\n  }\n  return 0;\n}\nfunction QM(t) {\n  return t.pos == t.options.simulateBreak && t.options.simulateDoubleBreak;\n}\nfunction TM(t) {\n  let e = t.type.prop(dS);\n  if (e)\n    return e;\n  let n = t.firstChild, r;\n  if (n && (r = n.type.prop(nt.closedBy))) {\n    let i = t.lastChild, s = i && r.indexOf(i.name) > -1;\n    return (a) => gS(a, !0, 1, void 0, s && !QM(a) ? i.from : void 0);\n  }\n  return t.parent == null ? jM : null;\n}\nfunction jM() {\n  return 0;\n}\nclass em extends Rc {\n  constructor(e, n, r) {\n    super(e.state, e.options), this.base = e, this.pos = n, this.context = r;\n  }\n  /**\n  The syntax tree node to which the indentation strategy\n  applies.\n  */\n  get node() {\n    return this.context.node;\n  }\n  /**\n  @internal\n  */\n  static create(e, n, r) {\n    return new em(e, n, r);\n  }\n  /**\n  Get the text directly after `this.pos`, either the entire line\n  or the next 100 characters, whichever is shorter.\n  */\n  get textAfter() {\n    return this.textAfterPos(this.pos);\n  }\n  /**\n  Get the indentation at the reference line for `this.node`, which\n  is the line on which it starts, unless there is a node that is\n  _not_ a parent of this node covering the start of that line. If\n  so, the line at the start of that node is tried, again skipping\n  on if it is covered by another such node.\n  */\n  get baseIndent() {\n    return this.baseIndentFor(this.node);\n  }\n  /**\n  Get the indentation for the reference line of the given node\n  (see [`baseIndent`](https://codemirror.net/6/docs/ref/#language.TreeIndentContext.baseIndent)).\n  */\n  baseIndentFor(e) {\n    let n = this.state.doc.lineAt(e.from);\n    for (; ; ) {\n      let r = e.resolve(n.from);\n      for (; r.parent && r.parent.from == r.from; )\n        r = r.parent;\n      if (RM(r, e))\n        break;\n      n = this.state.doc.lineAt(r.from);\n    }\n    return this.lineIndent(n.from);\n  }\n  /**\n  Continue looking for indentations in the node\'s parent nodes,\n  and return the result of that.\n  */\n  continue() {\n    return mS(this.context.next, this.base, this.pos);\n  }\n}\nfunction RM(t, e) {\n  for (let n = e; n; n = n.parent)\n    if (t == n)\n      return !0;\n  return !1;\n}\nfunction _M(t) {\n  let e = t.node, n = e.childAfter(e.from), r = e.lastChild;\n  if (!n)\n    return null;\n  let i = t.options.simulateBreak, s = t.state.doc.lineAt(n.from), a = i == null || i <= s.from ? s.to : Math.min(s.to, i);\n  for (let o = n.to; ; ) {\n    let l = e.childAfter(o);\n    if (!l || l == r)\n      return null;\n    if (!l.type.isSkipped) {\n      if (l.from >= a)\n        return null;\n      let c = /^ */.exec(s.text.slice(n.to - s.from))[0].length;\n      return { from: n.from, to: n.to + c };\n    }\n    o = l.to;\n  }\n}\nfunction ZM({ closing: t, align: e = !0, units: n = 1 }) {\n  return (r) => gS(r, e, n, t);\n}\nfunction gS(t, e, n, r, i) {\n  let s = t.textAfter, a = s.match(/^\\s*/)[0].length, o = r && s.slice(a, a + r.length) == r || i == t.pos + a, l = e ? _M(t) : null;\n  return l ? o ? t.column(l.from) : t.column(l.to) : t.baseIndent + (o ? 0 : t.unit * n);\n}\nconst $M = (t) => t.baseIndent;\nfunction Kh({ except: t, units: e = 1 } = {}) {\n  return (n) => {\n    let r = t && t.test(n.textAfter);\n    return n.baseIndent + (r ? 0 : e * n.unit);\n  };\n}\nconst LM = /* @__PURE__ */ Ae.define(), bS = /* @__PURE__ */ new nt();\nfunction IM(t) {\n  let e = t.firstChild, n = t.lastChild;\n  return e && e.to < n.from ? { from: e.to, to: n.type.isError ? t.to : n.from } : null;\n}\nfunction NM(t, e, n) {\n  let r = wn(t);\n  if (r.length < n)\n    return null;\n  let i = r.resolveStack(n, 1), s = null;\n  for (let a = i; a; a = a.next) {\n    let o = a.node;\n    if (o.to <= n || o.from > n)\n      continue;\n    if (s && o.from < e)\n      break;\n    let l = o.type.prop(bS);\n    if (l && (o.to < r.length - 50 || r.length == t.doc.length || !VM(o))) {\n      let c = l(o, t);\n      c && c.from <= n && c.from >= e && c.to > n && (s = c);\n    }\n  }\n  return s;\n}\nfunction VM(t) {\n  let e = t.lastChild;\n  return e && e.to == t.to && e.type.isError;\n}\nfunction yS(t, e, n) {\n  for (let r of t.facet(LM)) {\n    let i = r(t, e, n);\n    if (i)\n      return i;\n  }\n  return NM(t, e, n);\n}\nfunction OS(t, e) {\n  let n = e.mapPos(t.from, 1), r = e.mapPos(t.to, -1);\n  return n >= r ? void 0 : { from: n, to: r };\n}\nconst tm = /* @__PURE__ */ Ie.define({ map: OS }), _c = /* @__PURE__ */ Ie.define({ map: OS });\nfunction vS(t) {\n  let e = [];\n  for (let { head: n } of t.state.selection.ranges)\n    e.some((r) => r.from <= n && r.to >= n) || e.push(t.lineBlockAt(n));\n  return e;\n}\nconst Ho = /* @__PURE__ */ Vt.define({\n  create() {\n    return Te.none;\n  },\n  update(t, e) {\n    t = t.map(e.changes);\n    for (let n of e.effects)\n      if (n.is(tm) && !XM(t, n.value.from, n.value.to)) {\n        let { preparePlaceholder: r } = e.state.facet(SS), i = r ? Te.replace({ widget: new HM(r(e.state, n.value)) }) : S0;\n        t = t.update({ add: [i.range(n.value.from, n.value.to)] });\n      } else n.is(_c) && (t = t.update({\n        filter: (r, i) => n.value.from != r || n.value.to != i,\n        filterFrom: n.value.from,\n        filterTo: n.value.to\n      }));\n    if (e.selection) {\n      let n = !1, { head: r } = e.selection.main;\n      t.between(r, r, (i, s) => {\n        i < r && s > r && (n = !0);\n      }), n && (t = t.update({\n        filterFrom: r,\n        filterTo: r,\n        filter: (i, s) => s <= r || i >= r\n      }));\n    }\n    return t;\n  },\n  provide: (t) => be.decorations.from(t),\n  toJSON(t, e) {\n    let n = [];\n    return t.between(0, e.doc.length, (r, i) => {\n      n.push(r, i);\n    }), n;\n  },\n  fromJSON(t) {\n    if (!Array.isArray(t) || t.length % 2)\n      throw new RangeError("Invalid JSON for fold state");\n    let e = [];\n    for (let n = 0; n < t.length; ) {\n      let r = t[n++], i = t[n++];\n      if (typeof r != "number" || typeof i != "number")\n        throw new RangeError("Invalid JSON for fold state");\n      e.push(S0.range(r, i));\n    }\n    return Te.set(e, !0);\n  }\n});\nfunction xS(t, e, n) {\n  var r;\n  let i = null;\n  return (r = t.field(Ho, !1)) === null || r === void 0 || r.between(e, n, (s, a) => {\n    (!i || i.from > s) && (i = { from: s, to: a });\n  }), i;\n}\nfunction XM(t, e, n) {\n  let r = !1;\n  return t.between(e, e, (i, s) => {\n    i == e && s == n && (r = !0);\n  }), r;\n}\nfunction kS(t, e) {\n  return t.field(Ho, !1) ? e : e.concat(Ie.appendConfig.of(zM()));\n}\nconst wS = (t) => {\n  for (let e of vS(t)) {\n    let n = yS(t.state, e.from, e.to);\n    if (n)\n      return t.dispatch({ effects: kS(t.state, [tm.of(n), CS(t, n)]) }), !0;\n  }\n  return !1;\n}, WM = (t) => {\n  if (!t.state.field(Ho, !1))\n    return !1;\n  let e = [];\n  for (let n of vS(t)) {\n    let r = xS(t.state, n.from, n.to);\n    r && e.push(_c.of(r), CS(t, r, !1));\n  }\n  return e.length && t.dispatch({ effects: e }), e.length > 0;\n};\nfunction CS(t, e, n = !0) {\n  let r = t.state.doc.lineAt(e.from).number, i = t.state.doc.lineAt(e.to).number;\n  return be.announce.of(`${t.state.phrase(n ? "Folded lines" : "Unfolded lines")} ${r} ${t.state.phrase("to")} ${i}.`);\n}\nconst UM = (t) => {\n  let { state: e } = t, n = [];\n  for (let r = 0; r < e.doc.length; ) {\n    let i = t.lineBlockAt(r), s = yS(e, i.from, i.to);\n    s && n.push(tm.of(s)), r = (s ? t.lineBlockAt(s.to) : i).to + 1;\n  }\n  return n.length && t.dispatch({ effects: kS(t.state, n) }), !!n.length;\n}, qM = (t) => {\n  let e = t.state.field(Ho, !1);\n  if (!e || !e.size)\n    return !1;\n  let n = [];\n  return e.between(0, t.state.doc.length, (r, i) => {\n    n.push(_c.of({ from: r, to: i }));\n  }), t.dispatch({ effects: n }), !0;\n}, GM = {\n  placeholderDOM: null,\n  preparePlaceholder: null,\n  placeholderText: "…"\n}, SS = /* @__PURE__ */ Ae.define({\n  combine(t) {\n    return ls(t, GM);\n  }\n});\nfunction zM(t) {\n  return [Ho, YM];\n}\nfunction AS(t, e) {\n  let { state: n } = t, r = n.facet(SS), i = (a) => {\n    let o = t.lineBlockAt(t.posAtDOM(a.target)), l = xS(t.state, o.from, o.to);\n    l && t.dispatch({ effects: _c.of(l) }), a.preventDefault();\n  };\n  if (r.placeholderDOM)\n    return r.placeholderDOM(t, i, e);\n  let s = document.createElement("span");\n  return s.textContent = r.placeholderText, s.setAttribute("aria-label", n.phrase("folded code")), s.title = n.phrase("unfold"), s.className = "cm-foldPlaceholder", s.onclick = i, s;\n}\nconst S0 = /* @__PURE__ */ Te.replace({ widget: /* @__PURE__ */ new class extends Zi {\n  toDOM(t) {\n    return AS(t, null);\n  }\n}() });\nclass HM extends Zi {\n  constructor(e) {\n    super(), this.value = e;\n  }\n  eq(e) {\n    return this.value == e.value;\n  }\n  toDOM(e) {\n    return AS(e, this.value);\n  }\n}\nconst YM = /* @__PURE__ */ be.baseTheme({\n  ".cm-foldPlaceholder": {\n    backgroundColor: "#eee",\n    border: "1px solid #ddd",\n    color: "#888",\n    borderRadius: ".2em",\n    margin: "0 1px",\n    padding: "0 1px",\n    cursor: "pointer"\n  },\n  ".cm-foldGutter span": {\n    padding: "0 1px",\n    cursor: "pointer"\n  }\n});\nclass Yo {\n  constructor(e, n) {\n    this.specs = e;\n    let r;\n    function i(o) {\n      let l = Ji.newName();\n      return (r || (r = /* @__PURE__ */ Object.create(null)))["." + l] = o, l;\n    }\n    const s = typeof n.all == "string" ? n.all : n.all ? i(n.all) : void 0, a = n.scope;\n    this.scope = a instanceof Sr ? (o) => o.prop(Ks) == a.data : a ? (o) => o == a : void 0, this.style = uS(e.map((o) => ({\n      tag: o.tag,\n      class: o.class || i(Object.assign({}, o, { tag: null }))\n    })), {\n      all: s\n    }).style, this.module = r ? new Ji(r) : null, this.themeType = n.themeType;\n  }\n  /**\n  Create a highlighter style that associates the given styles to\n  the given tags. The specs must be objects that hold a style tag\n  or array of tags in their `tag` property, and either a single\n  `class` property providing a static CSS class (for highlighter\n  that rely on external styling), or a\n  [`style-mod`](https://github.com/marijnh/style-mod#documentation)-style\n  set of CSS properties (which define the styling for those tags).\n  \n  The CSS rules created for a highlighter will be emitted in the\n  order of the spec\'s properties. That means that for elements that\n  have multiple tags associated with them, styles defined further\n  down in the list will have a higher CSS precedence than styles\n  defined earlier.\n  */\n  static define(e, n) {\n    return new Yo(e, n || {});\n  }\n}\nconst ff = /* @__PURE__ */ Ae.define(), KM = /* @__PURE__ */ Ae.define({\n  combine(t) {\n    return t.length ? [t[0]] : null;\n  }\n});\nfunction Jh(t) {\n  let e = t.facet(ff);\n  return e.length ? e : t.facet(KM);\n}\nfunction DS(t, e) {\n  let n = [eQ], r;\n  return t instanceof Yo && (t.module && n.push(be.styleModule.of(t.module)), r = t.themeType), r ? n.push(ff.computeN([be.darkTheme], (i) => i.facet(be.darkTheme) == (r == "dark") ? [t] : [])) : n.push(ff.of(t)), n;\n}\nclass JM {\n  constructor(e) {\n    this.markCache = /* @__PURE__ */ Object.create(null), this.tree = wn(e.state), this.decorations = this.buildDeco(e, Jh(e.state)), this.decoratedTo = e.viewport.to;\n  }\n  update(e) {\n    let n = wn(e.state), r = Jh(e.state), i = r != Jh(e.startState), { viewport: s } = e.view, a = e.changes.mapPos(this.decoratedTo, 1);\n    n.length < s.to && !i && n.type == this.tree.type && a >= s.to ? (this.decorations = this.decorations.map(e.changes), this.decoratedTo = a) : (n != this.tree || e.viewportChanged || i) && (this.tree = n, this.decorations = this.buildDeco(e.view, r), this.decoratedTo = s.to);\n  }\n  buildDeco(e, n) {\n    if (!n || !this.tree.length)\n      return Te.none;\n    let r = new Qi();\n    for (let { from: i, to: s } of e.visibleRanges)\n      SM(this.tree, n, (a, o, l) => {\n        r.add(a, o, this.markCache[l] || (this.markCache[l] = Te.mark({ class: l })));\n      }, i, s);\n    return r.finish();\n  }\n}\nconst eQ = /* @__PURE__ */ jr.high(/* @__PURE__ */ pn.fromClass(JM, {\n  decorations: (t) => t.decorations\n})), tQ = /* @__PURE__ */ Yo.define([\n  {\n    tag: u.meta,\n    color: "#404740"\n  },\n  {\n    tag: u.link,\n    textDecoration: "underline"\n  },\n  {\n    tag: u.heading,\n    textDecoration: "underline",\n    fontWeight: "bold"\n  },\n  {\n    tag: u.emphasis,\n    fontStyle: "italic"\n  },\n  {\n    tag: u.strong,\n    fontWeight: "bold"\n  },\n  {\n    tag: u.strikethrough,\n    textDecoration: "line-through"\n  },\n  {\n    tag: u.keyword,\n    color: "#708"\n  },\n  {\n    tag: [u.atom, u.bool, u.url, u.contentSeparator, u.labelName],\n    color: "#219"\n  },\n  {\n    tag: [u.literal, u.inserted],\n    color: "#164"\n  },\n  {\n    tag: [u.string, u.deleted],\n    color: "#a11"\n  },\n  {\n    tag: [u.regexp, u.escape, /* @__PURE__ */ u.special(u.string)],\n    color: "#e40"\n  },\n  {\n    tag: /* @__PURE__ */ u.definition(u.variableName),\n    color: "#00f"\n  },\n  {\n    tag: /* @__PURE__ */ u.local(u.variableName),\n    color: "#30a"\n  },\n  {\n    tag: [u.typeName, u.namespace],\n    color: "#085"\n  },\n  {\n    tag: u.className,\n    color: "#167"\n  },\n  {\n    tag: [/* @__PURE__ */ u.special(u.variableName), u.macroName],\n    color: "#256"\n  },\n  {\n    tag: /* @__PURE__ */ u.definition(u.propertyName),\n    color: "#00c"\n  },\n  {\n    tag: u.comment,\n    color: "#940"\n  },\n  {\n    tag: u.invalid,\n    color: "#f00"\n  }\n]), nQ = /* @__PURE__ */ be.baseTheme({\n  "&.cm-focused .cm-matchingBracket": { backgroundColor: "#328c8252" },\n  "&.cm-focused .cm-nonmatchingBracket": { backgroundColor: "#bb555544" }\n}), PS = 1e4, ES = "()[]{}", FS = /* @__PURE__ */ Ae.define({\n  combine(t) {\n    return ls(t, {\n      afterCursor: !0,\n      brackets: ES,\n      maxScanDistance: PS,\n      renderMatch: sQ\n    });\n  }\n}), rQ = /* @__PURE__ */ Te.mark({ class: "cm-matchingBracket" }), iQ = /* @__PURE__ */ Te.mark({ class: "cm-nonmatchingBracket" });\nfunction sQ(t) {\n  let e = [], n = t.matched ? rQ : iQ;\n  return e.push(n.range(t.start.from, t.start.to)), t.end && e.push(n.range(t.end.from, t.end.to)), e;\n}\nconst aQ = /* @__PURE__ */ Vt.define({\n  create() {\n    return Te.none;\n  },\n  update(t, e) {\n    if (!e.docChanged && !e.selection)\n      return t;\n    let n = [], r = e.state.facet(FS);\n    for (let i of e.state.selection.ranges) {\n      if (!i.empty)\n        continue;\n      let s = Ar(e.state, i.head, -1, r) || i.head > 0 && Ar(e.state, i.head - 1, 1, r) || r.afterCursor && (Ar(e.state, i.head, 1, r) || i.head < e.state.doc.length && Ar(e.state, i.head + 1, -1, r));\n      s && (n = n.concat(r.renderMatch(s, e.state)));\n    }\n    return Te.set(n, !0);\n  },\n  provide: (t) => be.decorations.from(t)\n}), oQ = [\n  aQ,\n  nQ\n];\nfunction lQ(t = {}) {\n  return [FS.of(t), oQ];\n}\nconst uQ = /* @__PURE__ */ new nt();\nfunction df(t, e, n) {\n  let r = t.prop(e < 0 ? nt.openedBy : nt.closedBy);\n  if (r)\n    return r;\n  if (t.name.length == 1) {\n    let i = n.indexOf(t.name);\n    if (i > -1 && i % 2 == (e < 0 ? 1 : 0))\n      return [n[i + e]];\n  }\n  return null;\n}\nfunction mf(t) {\n  let e = t.type.prop(uQ);\n  return e ? e(t.node) : t;\n}\nfunction Ar(t, e, n, r = {}) {\n  let i = r.maxScanDistance || PS, s = r.brackets || ES, a = wn(t), o = a.resolveInner(e, n);\n  for (let l = o; l; l = l.parent) {\n    let c = df(l.type, n, s);\n    if (c && l.from < l.to) {\n      let h = mf(l);\n      if (h && (n > 0 ? e >= h.from && e < h.to : e > h.from && e <= h.to))\n        return cQ(t, e, n, l, h, c, s);\n    }\n  }\n  return hQ(t, e, n, a, o.type, i, s);\n}\nfunction cQ(t, e, n, r, i, s, a) {\n  let o = r.parent, l = { from: i.from, to: i.to }, c = 0, h = o?.cursor();\n  if (h && (n < 0 ? h.childBefore(r.from) : h.childAfter(r.to)))\n    do\n      if (n < 0 ? h.to <= r.from : h.from >= r.to) {\n        if (c == 0 && s.indexOf(h.type.name) > -1 && h.from < h.to) {\n          let f = mf(h);\n          return { start: l, end: f ? { from: f.from, to: f.to } : void 0, matched: !0 };\n        } else if (df(h.type, n, a))\n          c++;\n        else if (df(h.type, -n, a)) {\n          if (c == 0) {\n            let f = mf(h);\n            return {\n              start: l,\n              end: f && f.from < f.to ? { from: f.from, to: f.to } : void 0,\n              matched: !1\n            };\n          }\n          c--;\n        }\n      }\n    while (n < 0 ? h.prevSibling() : h.nextSibling());\n  return { start: l, matched: !1 };\n}\nfunction hQ(t, e, n, r, i, s, a) {\n  let o = n < 0 ? t.sliceDoc(e - 1, e) : t.sliceDoc(e, e + 1), l = a.indexOf(o);\n  if (l < 0 || l % 2 == 0 != n > 0)\n    return null;\n  let c = { from: n < 0 ? e - 1 : e, to: n > 0 ? e + 1 : e }, h = t.doc.iterRange(e, n > 0 ? t.doc.length : 0), f = 0;\n  for (let m = 0; !h.next().done && m <= s; ) {\n    let y = h.value;\n    n < 0 && (m += y.length);\n    let v = e + m * n;\n    for (let C = n > 0 ? 0 : y.length - 1, S = n > 0 ? y.length : -1; C != S; C += n) {\n      let M = a.indexOf(y[C]);\n      if (!(M < 0 || r.resolveInner(v + C, 1).type != i))\n        if (M % 2 == 0 == n > 0)\n          f++;\n        else {\n          if (f == 1)\n            return { start: c, end: { from: v + C, to: v + C + 1 }, matched: M >> 1 == l >> 1 };\n          f--;\n        }\n    }\n    n > 0 && (m += y.length);\n  }\n  return h.done ? { start: c, matched: !1 } : null;\n}\nfunction A0(t, e, n, r = 0, i = 0) {\n  e == null && (e = t.search(/[^\\s\\u00a0]/), e == -1 && (e = t.length));\n  let s = i;\n  for (let a = r; a < e; a++)\n    t.charCodeAt(a) == 9 ? s += n - s % n : s++;\n  return s;\n}\nclass pQ {\n  /**\n  Create a stream.\n  */\n  constructor(e, n, r, i) {\n    this.string = e, this.tabSize = n, this.indentUnit = r, this.overrideIndent = i, this.pos = 0, this.start = 0, this.lastColumnPos = 0, this.lastColumnValue = 0;\n  }\n  /**\n  True if we are at the end of the line.\n  */\n  eol() {\n    return this.pos >= this.string.length;\n  }\n  /**\n  True if we are at the start of the line.\n  */\n  sol() {\n    return this.pos == 0;\n  }\n  /**\n  Get the next code unit after the current position, or undefined\n  if we\'re at the end of the line.\n  */\n  peek() {\n    return this.string.charAt(this.pos) || void 0;\n  }\n  /**\n  Read the next code unit and advance `this.pos`.\n  */\n  next() {\n    if (this.pos < this.string.length)\n      return this.string.charAt(this.pos++);\n  }\n  /**\n  Match the next character against the given string, regular\n  expression, or predicate. Consume and return it if it matches.\n  */\n  eat(e) {\n    let n = this.string.charAt(this.pos), r;\n    if (typeof e == "string" ? r = n == e : r = n && (e instanceof RegExp ? e.test(n) : e(n)), r)\n      return ++this.pos, n;\n  }\n  /**\n  Continue matching characters that match the given string,\n  regular expression, or predicate function. Return true if any\n  characters were consumed.\n  */\n  eatWhile(e) {\n    let n = this.pos;\n    for (; this.eat(e); )\n      ;\n    return this.pos > n;\n  }\n  /**\n  Consume whitespace ahead of `this.pos`. Return true if any was\n  found.\n  */\n  eatSpace() {\n    let e = this.pos;\n    for (; /[\\s\\u00a0]/.test(this.string.charAt(this.pos)); )\n      ++this.pos;\n    return this.pos > e;\n  }\n  /**\n  Move to the end of the line.\n  */\n  skipToEnd() {\n    this.pos = this.string.length;\n  }\n  /**\n  Move to directly before the given character, if found on the\n  current line.\n  */\n  skipTo(e) {\n    let n = this.string.indexOf(e, this.pos);\n    if (n > -1)\n      return this.pos = n, !0;\n  }\n  /**\n  Move back `n` characters.\n  */\n  backUp(e) {\n    this.pos -= e;\n  }\n  /**\n  Get the column position at `this.pos`.\n  */\n  column() {\n    return this.lastColumnPos < this.start && (this.lastColumnValue = A0(this.string, this.start, this.tabSize, this.lastColumnPos, this.lastColumnValue), this.lastColumnPos = this.start), this.lastColumnValue;\n  }\n  /**\n  Get the indentation column of the current line.\n  */\n  indentation() {\n    var e;\n    return (e = this.overrideIndent) !== null && e !== void 0 ? e : A0(this.string, null, this.tabSize);\n  }\n  /**\n  Match the input against the given string or regular expression\n  (which should start with a `^`). Return true or the regexp match\n  if it matches.\n  \n  Unless `consume` is set to `false`, this will move `this.pos`\n  past the matched text.\n  \n  When matching a string `caseInsensitive` can be set to true to\n  make the match case-insensitive.\n  */\n  match(e, n, r) {\n    if (typeof e == "string") {\n      let i = (a) => r ? a.toLowerCase() : a, s = this.string.substr(this.pos, e.length);\n      return i(s) == i(e) ? (n !== !1 && (this.pos += e.length), !0) : null;\n    } else {\n      let i = this.string.slice(this.pos).match(e);\n      return i && i.index > 0 ? null : (i && n !== !1 && (this.pos += i[0].length), i);\n    }\n  }\n  /**\n  Get the current token.\n  */\n  current() {\n    return this.string.slice(this.start, this.pos);\n  }\n}\nconst fQ = /* @__PURE__ */ Object.create(null), D0 = [Kn.none], P0 = [], E0 = /* @__PURE__ */ Object.create(null), dQ = /* @__PURE__ */ Object.create(null);\nfor (let [t, e] of [\n  ["variable", "variableName"],\n  ["variable-2", "variableName.special"],\n  ["string-2", "string.special"],\n  ["def", "variableName.definition"],\n  ["tag", "tagName"],\n  ["attribute", "attributeName"],\n  ["type", "typeName"],\n  ["builtin", "variableName.standard"],\n  ["qualifier", "modifier"],\n  ["error", "invalid"],\n  ["header", "heading"],\n  ["property", "propertyName"]\n])\n  dQ[t] = /* @__PURE__ */ mQ(fQ, e);\nfunction ep(t, e) {\n  P0.indexOf(t) > -1 || (P0.push(t), console.warn(e));\n}\nfunction mQ(t, e) {\n  let n = [];\n  for (let o of e.split(" ")) {\n    let l = [];\n    for (let c of o.split(".")) {\n      let h = t[c] || u[c];\n      h ? typeof h == "function" ? l.length ? l = l.map(h) : ep(c, `Modifier ${c} used at start of tag`) : l.length ? ep(c, `Tag ${c} used as modifier`) : l = Array.isArray(h) ? h : [h] : ep(c, `Unknown highlighting tag ${c}`);\n    }\n    for (let c of l)\n      n.push(c);\n  }\n  if (!n.length)\n    return 0;\n  let r = e.replace(/ /g, "_"), i = r + " " + n.map((o) => o.id), s = E0[i];\n  if (s)\n    return s.id;\n  let a = E0[i] = Kn.define({\n    id: D0.length,\n    name: r,\n    props: [oS({ [r]: n })]\n  });\n  return D0.push(a), a.id;\n}\nDt.RTL, Dt.LTR;\nclass BS {\n  /**\n  Create a new completion context. (Mostly useful for testing\n  completion sources—in the editor, the extension will create\n  these for you.)\n  */\n  constructor(e, n, r, i) {\n    this.state = e, this.pos = n, this.explicit = r, this.view = i, this.abortListeners = [], this.abortOnDocChange = !1;\n  }\n  /**\n  Get the extent, content, and (if there is a token) type of the\n  token before `this.pos`.\n  */\n  tokenBefore(e) {\n    let n = wn(this.state).resolveInner(this.pos, -1);\n    for (; n && e.indexOf(n.name) < 0; )\n      n = n.parent;\n    return n ? {\n      from: n.from,\n      to: this.pos,\n      text: this.state.sliceDoc(n.from, this.pos),\n      type: n.type\n    } : null;\n  }\n  /**\n  Get the match of the given expression directly before the\n  cursor.\n  */\n  matchBefore(e) {\n    let n = this.state.doc.lineAt(this.pos), r = Math.max(n.from, this.pos - 250), i = n.text.slice(r - n.from, this.pos - n.from), s = i.search(QS(e, !1));\n    return s < 0 ? null : { from: r + s, to: this.pos, text: i.slice(s) };\n  }\n  /**\n  Yields true when the query has been aborted. Can be useful in\n  asynchronous queries to avoid doing work that will be ignored.\n  */\n  get aborted() {\n    return this.abortListeners == null;\n  }\n  /**\n  Allows you to register abort handlers, which will be called when\n  the query is\n  [aborted](https://codemirror.net/6/docs/ref/#autocomplete.CompletionContext.aborted).\n  \n  By default, running queries will not be aborted for regular\n  typing or backspacing, on the assumption that they are likely to\n  return a result with a\n  [`validFor`](https://codemirror.net/6/docs/ref/#autocomplete.CompletionResult.validFor) field that\n  allows the result to be used after all. Passing `onDocChange:\n  true` will cause this query to be aborted for any document\n  change.\n  */\n  addEventListener(e, n, r) {\n    e == "abort" && this.abortListeners && (this.abortListeners.push(n), r && r.onDocChange && (this.abortOnDocChange = !0));\n  }\n}\nfunction F0(t) {\n  let e = Object.keys(t).join(""), n = /\\w/.test(e);\n  return n && (e = e.replace(/\\w/g, "")), `[${n ? "\\\\w" : ""}${e.replace(/[^\\w\\s]/g, "\\\\$&")}]`;\n}\nfunction gQ(t) {\n  let e = /* @__PURE__ */ Object.create(null), n = /* @__PURE__ */ Object.create(null);\n  for (let { label: i } of t) {\n    e[i[0]] = !0;\n    for (let s = 1; s < i.length; s++)\n      n[i[s]] = !0;\n  }\n  let r = F0(e) + F0(n) + "*$";\n  return [new RegExp("^" + r), new RegExp(r)];\n}\nfunction MS(t) {\n  let e = t.map((i) => typeof i == "string" ? { label: i } : i), [n, r] = e.every((i) => /^\\w+$/.test(i.label)) ? [/\\w*$/, /\\w+$/] : gQ(e);\n  return (i) => {\n    let s = i.matchBefore(r);\n    return s || i.explicit ? { from: s ? s.from : i.pos, options: e, validFor: n } : null;\n  };\n}\nfunction bQ(t, e) {\n  return (n) => {\n    for (let r = wn(n.state).resolveInner(n.pos, -1); r; r = r.parent) {\n      if (t.indexOf(r.name) > -1)\n        return null;\n      if (r.type.isTop)\n        break;\n    }\n    return e(n);\n  };\n}\nclass B0 {\n  constructor(e, n, r, i) {\n    this.completion = e, this.source = n, this.match = r, this.score = i;\n  }\n}\nfunction Ps(t) {\n  return t.selection.main.from;\n}\nfunction QS(t, e) {\n  var n;\n  let { source: r } = t, i = e && r[0] != "^", s = r[r.length - 1] != "$";\n  return !i && !s ? t : new RegExp(`${i ? "^" : ""}(?:${r})${s ? "$" : ""}`, (n = t.flags) !== null && n !== void 0 ? n : t.ignoreCase ? "i" : "");\n}\nconst nm = /* @__PURE__ */ _i.define();\nfunction yQ(t, e, n, r) {\n  let { main: i } = t.selection, s = n - i.from, a = r - i.from;\n  return Object.assign(Object.assign({}, t.changeByRange((o) => {\n    if (o != i && n != r && t.sliceDoc(o.from + s, o.from + a) != t.sliceDoc(n, r))\n      return { range: o };\n    let l = t.toText(e);\n    return {\n      changes: { from: o.from + s, to: r == i.from ? o.to : o.from + a, insert: l },\n      range: ne.cursor(o.from + s + l.length)\n    };\n  })), { scrollIntoView: !0, userEvent: "input.complete" });\n}\nconst M0 = /* @__PURE__ */ new WeakMap();\nfunction OQ(t) {\n  if (!Array.isArray(t))\n    return t;\n  let e = M0.get(t);\n  return e || M0.set(t, e = MS(t)), e;\n}\nconst $u = /* @__PURE__ */ Ie.define(), Bo = /* @__PURE__ */ Ie.define();\nclass vQ {\n  constructor(e) {\n    this.pattern = e, this.chars = [], this.folded = [], this.any = [], this.precise = [], this.byWord = [], this.score = 0, this.matched = [];\n    for (let n = 0; n < e.length; ) {\n      let r = hr(e, n), i = hi(r);\n      this.chars.push(r);\n      let s = e.slice(n, n + i), a = s.toUpperCase();\n      this.folded.push(hr(a == s ? s.toLowerCase() : a, 0)), n += i;\n    }\n    this.astral = e.length != this.chars.length;\n  }\n  ret(e, n) {\n    return this.score = e, this.matched = n, this;\n  }\n  // Matches a given word (completion) against the pattern (input).\n  // Will return a boolean indicating whether there was a match and,\n  // on success, set `this.score` to the score, `this.matched` to an\n  // array of `from, to` pairs indicating the matched parts of `word`.\n  //\n  // The score is a number that is more negative the worse the match\n  // is. See `Penalty` above.\n  match(e) {\n    if (this.pattern.length == 0)\n      return this.ret(-100, []);\n    if (e.length < this.pattern.length)\n      return null;\n    let { chars: n, folded: r, any: i, precise: s, byWord: a } = this;\n    if (n.length == 1) {\n      let $ = hr(e, 0), U = hi($), R = U == e.length ? 0 : -100;\n      if ($ != n[0]) if ($ == r[0])\n        R += -200;\n      else\n        return null;\n      return this.ret(R, [0, U]);\n    }\n    let o = e.indexOf(this.pattern);\n    if (o == 0)\n      return this.ret(e.length == this.pattern.length ? 0 : -100, [0, this.pattern.length]);\n    let l = n.length, c = 0;\n    if (o < 0) {\n      for (let $ = 0, U = Math.min(e.length, 200); $ < U && c < l; ) {\n        let R = hr(e, $);\n        (R == n[c] || R == r[c]) && (i[c++] = $), $ += hi(R);\n      }\n      if (c < l)\n        return null;\n    }\n    let h = 0, f = 0, m = !1, y = 0, v = -1, C = -1, S = /[a-z]/.test(e), M = !0;\n    for (let $ = 0, U = Math.min(e.length, 200), R = 0; $ < U && f < l; ) {\n      let B = hr(e, $);\n      o < 0 && (h < l && B == n[h] && (s[h++] = $), y < l && (B == n[y] || B == r[y] ? (y == 0 && (v = $), C = $ + 1, y++) : y = 0));\n      let Z, N = B < 255 ? B >= 48 && B <= 57 || B >= 97 && B <= 122 ? 2 : B >= 65 && B <= 90 ? 1 : 0 : (Z = Qd(B)) != Z.toLowerCase() ? 1 : Z != Z.toUpperCase() ? 2 : 0;\n      (!$ || N == 1 && S || R == 0 && N != 0) && (n[f] == B || r[f] == B && (m = !0) ? a[f++] = $ : a.length && (M = !1)), R = N, $ += hi(B);\n    }\n    return f == l && a[0] == 0 && M ? this.result(-100 + (m ? -200 : 0), a, e) : y == l && v == 0 ? this.ret(-200 - e.length + (C == e.length ? 0 : -100), [0, C]) : o > -1 ? this.ret(-700 - e.length, [o, o + this.pattern.length]) : y == l ? this.ret(-900 - e.length, [v, C]) : f == l ? this.result(-100 + (m ? -200 : 0) + -700 + (M ? 0 : -1100), a, e) : n.length == 2 ? null : this.result((i[0] ? -700 : 0) + -200 + -1100, i, e);\n  }\n  result(e, n, r) {\n    let i = [], s = 0;\n    for (let a of n) {\n      let o = a + (this.astral ? hi(hr(r, a)) : 1);\n      s && i[s - 1] == a ? i[s - 1] = o : (i[s++] = a, i[s++] = o);\n    }\n    return this.ret(e - r.length, i);\n  }\n}\nclass xQ {\n  constructor(e) {\n    this.pattern = e, this.matched = [], this.score = 0, this.folded = e.toLowerCase();\n  }\n  match(e) {\n    if (e.length < this.pattern.length)\n      return null;\n    let n = e.slice(0, this.pattern.length), r = n == this.pattern ? 0 : n.toLowerCase() == this.folded ? -200 : null;\n    return r == null ? null : (this.matched = [0, n.length], this.score = r + (e.length == this.pattern.length ? 0 : -100), this);\n  }\n}\nconst gn = /* @__PURE__ */ Ae.define({\n  combine(t) {\n    return ls(t, {\n      activateOnTyping: !0,\n      activateOnCompletion: () => !1,\n      activateOnTypingDelay: 100,\n      selectOnOpen: !0,\n      override: null,\n      closeOnBlur: !0,\n      maxRenderedOptions: 100,\n      defaultKeymap: !0,\n      tooltipClass: () => "",\n      optionClass: () => "",\n      aboveCursor: !1,\n      icons: !0,\n      addToOptions: [],\n      positionInfo: kQ,\n      filterStrict: !1,\n      compareCompletions: (e, n) => e.label.localeCompare(n.label),\n      interactionDelay: 75,\n      updateSyncTime: 100\n    }, {\n      defaultKeymap: (e, n) => e && n,\n      closeOnBlur: (e, n) => e && n,\n      icons: (e, n) => e && n,\n      tooltipClass: (e, n) => (r) => Q0(e(r), n(r)),\n      optionClass: (e, n) => (r) => Q0(e(r), n(r)),\n      addToOptions: (e, n) => e.concat(n),\n      filterStrict: (e, n) => e || n\n    });\n  }\n});\nfunction Q0(t, e) {\n  return t ? e ? t + " " + e : t : e;\n}\nfunction kQ(t, e, n, r, i, s) {\n  let a = t.textDirection == Dt.RTL, o = a, l = !1, c = "top", h, f, m = e.left - i.left, y = i.right - e.right, v = r.right - r.left, C = r.bottom - r.top;\n  if (o && m < Math.min(v, y) ? o = !1 : !o && y < Math.min(v, m) && (o = !0), v <= (o ? m : y))\n    h = Math.max(i.top, Math.min(n.top, i.bottom - C)) - e.top, f = Math.min(400, o ? m : y);\n  else {\n    l = !0, f = Math.min(\n      400,\n      (a ? e.right : i.right - e.left) - 30\n      /* Info.Margin */\n    );\n    let $ = i.bottom - e.bottom;\n    $ >= C || $ > e.top ? h = n.bottom - e.top : (c = "bottom", h = e.bottom - n.top);\n  }\n  let S = (e.bottom - e.top) / s.offsetHeight, M = (e.right - e.left) / s.offsetWidth;\n  return {\n    style: `${c}: ${h / S}px; max-width: ${f / M}px`,\n    class: "cm-completionInfo-" + (l ? a ? "left-narrow" : "right-narrow" : o ? "left" : "right")\n  };\n}\nfunction wQ(t) {\n  let e = t.addToOptions.slice();\n  return t.icons && e.push({\n    render(n) {\n      let r = document.createElement("div");\n      return r.classList.add("cm-completionIcon"), n.type && r.classList.add(...n.type.split(/\\s+/g).map((i) => "cm-completionIcon-" + i)), r.setAttribute("aria-hidden", "true"), r;\n    },\n    position: 20\n  }), e.push({\n    render(n, r, i, s) {\n      let a = document.createElement("span");\n      a.className = "cm-completionLabel";\n      let o = n.displayLabel || n.label, l = 0;\n      for (let c = 0; c < s.length; ) {\n        let h = s[c++], f = s[c++];\n        h > l && a.appendChild(document.createTextNode(o.slice(l, h)));\n        let m = a.appendChild(document.createElement("span"));\n        m.appendChild(document.createTextNode(o.slice(h, f))), m.className = "cm-completionMatchedText", l = f;\n      }\n      return l < o.length && a.appendChild(document.createTextNode(o.slice(l))), a;\n    },\n    position: 50\n  }, {\n    render(n) {\n      if (!n.detail)\n        return null;\n      let r = document.createElement("span");\n      return r.className = "cm-completionDetail", r.textContent = n.detail, r;\n    },\n    position: 80\n  }), e.sort((n, r) => n.position - r.position).map((n) => n.render);\n}\nfunction tp(t, e, n) {\n  if (t <= n)\n    return { from: 0, to: t };\n  if (e < 0 && (e = 0), e <= t >> 1) {\n    let i = Math.floor(e / n);\n    return { from: i * n, to: (i + 1) * n };\n  }\n  let r = Math.floor((t - e) / n);\n  return { from: t - (r + 1) * n, to: t - r * n };\n}\nclass CQ {\n  constructor(e, n, r) {\n    this.view = e, this.stateField = n, this.applyCompletion = r, this.info = null, this.infoDestroy = null, this.placeInfoReq = {\n      read: () => this.measureInfo(),\n      write: (l) => this.placeInfo(l),\n      key: this\n    }, this.space = null, this.currentClass = "";\n    let i = e.state.field(n), { options: s, selected: a } = i.open, o = e.state.facet(gn);\n    this.optionContent = wQ(o), this.optionClass = o.optionClass, this.tooltipClass = o.tooltipClass, this.range = tp(s.length, a, o.maxRenderedOptions), this.dom = document.createElement("div"), this.dom.className = "cm-tooltip-autocomplete", this.updateTooltipClass(e.state), this.dom.addEventListener("mousedown", (l) => {\n      let { options: c } = e.state.field(n).open;\n      for (let h = l.target, f; h && h != this.dom; h = h.parentNode)\n        if (h.nodeName == "LI" && (f = /-(\\d+)$/.exec(h.id)) && +f[1] < c.length) {\n          this.applyCompletion(e, c[+f[1]]), l.preventDefault();\n          return;\n        }\n    }), this.dom.addEventListener("focusout", (l) => {\n      let c = e.state.field(this.stateField, !1);\n      c && c.tooltip && e.state.facet(gn).closeOnBlur && l.relatedTarget != e.contentDOM && e.dispatch({ effects: Bo.of(null) });\n    }), this.showOptions(s, i.id);\n  }\n  mount() {\n    this.updateSel();\n  }\n  showOptions(e, n) {\n    this.list && this.list.remove(), this.list = this.dom.appendChild(this.createListBox(e, n, this.range)), this.list.addEventListener("scroll", () => {\n      this.info && this.view.requestMeasure(this.placeInfoReq);\n    });\n  }\n  update(e) {\n    var n;\n    let r = e.state.field(this.stateField), i = e.startState.field(this.stateField);\n    if (this.updateTooltipClass(e.state), r != i) {\n      let { options: s, selected: a, disabled: o } = r.open;\n      (!i.open || i.open.options != s) && (this.range = tp(s.length, a, e.state.facet(gn).maxRenderedOptions), this.showOptions(s, r.id)), this.updateSel(), o != ((n = i.open) === null || n === void 0 ? void 0 : n.disabled) && this.dom.classList.toggle("cm-tooltip-autocomplete-disabled", !!o);\n    }\n  }\n  updateTooltipClass(e) {\n    let n = this.tooltipClass(e);\n    if (n != this.currentClass) {\n      for (let r of this.currentClass.split(" "))\n        r && this.dom.classList.remove(r);\n      for (let r of n.split(" "))\n        r && this.dom.classList.add(r);\n      this.currentClass = n;\n    }\n  }\n  positioned(e) {\n    this.space = e, this.info && this.view.requestMeasure(this.placeInfoReq);\n  }\n  updateSel() {\n    let e = this.view.state.field(this.stateField), n = e.open;\n    if ((n.selected > -1 && n.selected < this.range.from || n.selected >= this.range.to) && (this.range = tp(n.options.length, n.selected, this.view.state.facet(gn).maxRenderedOptions), this.showOptions(n.options, e.id)), this.updateSelectedOption(n.selected)) {\n      this.destroyInfo();\n      let { completion: r } = n.options[n.selected], { info: i } = r;\n      if (!i)\n        return;\n      let s = typeof i == "string" ? document.createTextNode(i) : i(r);\n      if (!s)\n        return;\n      "then" in s ? s.then((a) => {\n        a && this.view.state.field(this.stateField, !1) == e && this.addInfoPane(a, r);\n      }).catch((a) => qn(this.view.state, a, "completion info")) : this.addInfoPane(s, r);\n    }\n  }\n  addInfoPane(e, n) {\n    this.destroyInfo();\n    let r = this.info = document.createElement("div");\n    if (r.className = "cm-tooltip cm-completionInfo", e.nodeType != null)\n      r.appendChild(e), this.infoDestroy = null;\n    else {\n      let { dom: i, destroy: s } = e;\n      r.appendChild(i), this.infoDestroy = s || null;\n    }\n    this.dom.appendChild(r), this.view.requestMeasure(this.placeInfoReq);\n  }\n  updateSelectedOption(e) {\n    let n = null;\n    for (let r = this.list.firstChild, i = this.range.from; r; r = r.nextSibling, i++)\n      r.nodeName != "LI" || !r.id ? i-- : i == e ? r.hasAttribute("aria-selected") || (r.setAttribute("aria-selected", "true"), n = r) : r.hasAttribute("aria-selected") && r.removeAttribute("aria-selected");\n    return n && AQ(this.list, n), n;\n  }\n  measureInfo() {\n    let e = this.dom.querySelector("[aria-selected]");\n    if (!e || !this.info)\n      return null;\n    let n = this.dom.getBoundingClientRect(), r = this.info.getBoundingClientRect(), i = e.getBoundingClientRect(), s = this.space;\n    if (!s) {\n      let a = this.dom.ownerDocument.defaultView || window;\n      s = { left: 0, top: 0, right: a.innerWidth, bottom: a.innerHeight };\n    }\n    return i.top > Math.min(s.bottom, n.bottom) - 10 || i.bottom < Math.max(s.top, n.top) + 10 ? null : this.view.state.facet(gn).positionInfo(this.view, n, i, r, s, this.dom);\n  }\n  placeInfo(e) {\n    this.info && (e ? (e.style && (this.info.style.cssText = e.style), this.info.className = "cm-tooltip cm-completionInfo " + (e.class || "")) : this.info.style.cssText = "top: -1e6px");\n  }\n  createListBox(e, n, r) {\n    const i = document.createElement("ul");\n    i.id = n, i.setAttribute("role", "listbox"), i.setAttribute("aria-expanded", "true"), i.setAttribute("aria-label", this.view.state.phrase("Completions"));\n    let s = null;\n    for (let a = r.from; a < r.to; a++) {\n      let { completion: o, match: l } = e[a], { section: c } = o;\n      if (c) {\n        let m = typeof c == "string" ? c : c.name;\n        if (m != s && (a > r.from || r.from == 0))\n          if (s = m, typeof c != "string" && c.header)\n            i.appendChild(c.header(c));\n          else {\n            let y = i.appendChild(document.createElement("completion-section"));\n            y.textContent = m;\n          }\n      }\n      const h = i.appendChild(document.createElement("li"));\n      h.id = n + "-" + a, h.setAttribute("role", "option");\n      let f = this.optionClass(o);\n      f && (h.className = f);\n      for (let m of this.optionContent) {\n        let y = m(o, this.view.state, this.view, l);\n        y && h.appendChild(y);\n      }\n    }\n    return r.from && i.classList.add("cm-completionListIncompleteTop"), r.to < e.length && i.classList.add("cm-completionListIncompleteBottom"), i;\n  }\n  destroyInfo() {\n    this.info && (this.infoDestroy && this.infoDestroy(), this.info.remove(), this.info = null);\n  }\n  destroy() {\n    this.destroyInfo();\n  }\n}\nfunction SQ(t, e) {\n  return (n) => new CQ(n, t, e);\n}\nfunction AQ(t, e) {\n  let n = t.getBoundingClientRect(), r = e.getBoundingClientRect(), i = n.height / t.offsetHeight;\n  r.top < n.top ? t.scrollTop -= (n.top - r.top) / i : r.bottom > n.bottom && (t.scrollTop += (r.bottom - n.bottom) / i);\n}\nfunction T0(t) {\n  return (t.boost || 0) * 100 + (t.apply ? 10 : 0) + (t.info ? 5 : 0) + (t.type ? 1 : 0);\n}\nfunction DQ(t, e) {\n  let n = [], r = null, i = (c) => {\n    n.push(c);\n    let { section: h } = c.completion;\n    if (h) {\n      r || (r = []);\n      let f = typeof h == "string" ? h : h.name;\n      r.some((m) => m.name == f) || r.push(typeof h == "string" ? { name: f } : h);\n    }\n  }, s = e.facet(gn);\n  for (let c of t)\n    if (c.hasResult()) {\n      let h = c.result.getMatch;\n      if (c.result.filter === !1)\n        for (let f of c.result.options)\n          i(new B0(f, c.source, h ? h(f) : [], 1e9 - n.length));\n      else {\n        let f = e.sliceDoc(c.from, c.to), m, y = s.filterStrict ? new xQ(f) : new vQ(f);\n        for (let v of c.result.options)\n          if (m = y.match(v.label)) {\n            let C = v.displayLabel ? h ? h(v, m.matched) : [] : m.matched;\n            i(new B0(v, c.source, C, m.score + (v.boost || 0)));\n          }\n      }\n    }\n  if (r) {\n    let c = /* @__PURE__ */ Object.create(null), h = 0, f = (m, y) => {\n      var v, C;\n      return ((v = m.rank) !== null && v !== void 0 ? v : 1e9) - ((C = y.rank) !== null && C !== void 0 ? C : 1e9) || (m.name < y.name ? -1 : 1);\n    };\n    for (let m of r.sort(f))\n      h -= 1e5, c[m.name] = h;\n    for (let m of n) {\n      let { section: y } = m.completion;\n      y && (m.score += c[typeof y == "string" ? y : y.name]);\n    }\n  }\n  let a = [], o = null, l = s.compareCompletions;\n  for (let c of n.sort((h, f) => f.score - h.score || l(h.completion, f.completion))) {\n    let h = c.completion;\n    !o || o.label != h.label || o.detail != h.detail || o.type != null && h.type != null && o.type != h.type || o.apply != h.apply || o.boost != h.boost ? a.push(c) : T0(c.completion) > T0(o) && (a[a.length - 1] = c), o = c.completion;\n  }\n  return a;\n}\nclass Js {\n  constructor(e, n, r, i, s, a) {\n    this.options = e, this.attrs = n, this.tooltip = r, this.timestamp = i, this.selected = s, this.disabled = a;\n  }\n  setSelected(e, n) {\n    return e == this.selected || e >= this.options.length ? this : new Js(this.options, j0(n, e), this.tooltip, this.timestamp, e, this.disabled);\n  }\n  static build(e, n, r, i, s, a) {\n    if (i && !a && e.some((c) => c.isPending))\n      return i.setDisabled();\n    let o = DQ(e, n);\n    if (!o.length)\n      return i && e.some((c) => c.isPending) ? i.setDisabled() : null;\n    let l = n.facet(gn).selectOnOpen ? 0 : -1;\n    if (i && i.selected != l && i.selected != -1) {\n      let c = i.options[i.selected].completion;\n      for (let h = 0; h < o.length; h++)\n        if (o[h].completion == c) {\n          l = h;\n          break;\n        }\n    }\n    return new Js(o, j0(r, l), {\n      pos: e.reduce((c, h) => h.hasResult() ? Math.min(c, h.from) : c, 1e8),\n      create: QQ,\n      above: s.aboveCursor\n    }, i ? i.timestamp : Date.now(), l, !1);\n  }\n  map(e) {\n    return new Js(this.options, this.attrs, Object.assign(Object.assign({}, this.tooltip), { pos: e.mapPos(this.tooltip.pos) }), this.timestamp, this.selected, this.disabled);\n  }\n  setDisabled() {\n    return new Js(this.options, this.attrs, this.tooltip, this.timestamp, this.selected, !0);\n  }\n}\nclass Lu {\n  constructor(e, n, r) {\n    this.active = e, this.id = n, this.open = r;\n  }\n  static start() {\n    return new Lu(BQ, "cm-ac-" + Math.floor(Math.random() * 2e6).toString(36), null);\n  }\n  update(e) {\n    let { state: n } = e, r = n.facet(gn), s = (r.override || n.languageDataAt("autocomplete", Ps(n)).map(OQ)).map((l) => (this.active.find((h) => h.source == l) || new Dr(\n      l,\n      this.active.some(\n        (h) => h.state != 0\n        /* State.Inactive */\n      ) ? 1 : 0\n      /* State.Inactive */\n    )).update(e, r));\n    s.length == this.active.length && s.every((l, c) => l == this.active[c]) && (s = this.active);\n    let a = this.open, o = e.effects.some((l) => l.is(rm));\n    a && e.docChanged && (a = a.map(e.changes)), e.selection || s.some((l) => l.hasResult() && e.changes.touchesRange(l.from, l.to)) || !PQ(s, this.active) || o ? a = Js.build(s, n, this.id, a, r, o) : a && a.disabled && !s.some((l) => l.isPending) && (a = null), !a && s.every((l) => !l.isPending) && s.some((l) => l.hasResult()) && (s = s.map((l) => l.hasResult() ? new Dr(\n      l.source,\n      0\n      /* State.Inactive */\n    ) : l));\n    for (let l of e.effects)\n      l.is(jS) && (a = a && a.setSelected(l.value, this.id));\n    return s == this.active && a == this.open ? this : new Lu(s, this.id, a);\n  }\n  get tooltip() {\n    return this.open ? this.open.tooltip : null;\n  }\n  get attrs() {\n    return this.open ? this.open.attrs : this.active.length ? EQ : FQ;\n  }\n}\nfunction PQ(t, e) {\n  if (t == e)\n    return !0;\n  for (let n = 0, r = 0; ; ) {\n    for (; n < t.length && !t[n].hasResult(); )\n      n++;\n    for (; r < e.length && !e[r].hasResult(); )\n      r++;\n    let i = n == t.length, s = r == e.length;\n    if (i || s)\n      return i == s;\n    if (t[n++].result != e[r++].result)\n      return !1;\n  }\n}\nconst EQ = {\n  "aria-autocomplete": "list"\n}, FQ = {};\nfunction j0(t, e) {\n  let n = {\n    "aria-autocomplete": "list",\n    "aria-haspopup": "listbox",\n    "aria-controls": t\n  };\n  return e > -1 && (n["aria-activedescendant"] = t + "-" + e), n;\n}\nconst BQ = [];\nfunction TS(t, e) {\n  if (t.isUserEvent("input.complete")) {\n    let r = t.annotation(nm);\n    if (r && e.activateOnCompletion(r))\n      return 12;\n  }\n  let n = t.isUserEvent("input.type");\n  return n && e.activateOnTyping ? 5 : n ? 1 : t.isUserEvent("delete.backward") ? 2 : t.selection ? 8 : t.docChanged ? 16 : 0;\n}\nclass Dr {\n  constructor(e, n, r = !1) {\n    this.source = e, this.state = n, this.explicit = r;\n  }\n  hasResult() {\n    return !1;\n  }\n  get isPending() {\n    return this.state == 1;\n  }\n  update(e, n) {\n    let r = TS(e, n), i = this;\n    (r & 8 || r & 16 && this.touches(e)) && (i = new Dr(\n      i.source,\n      0\n      /* State.Inactive */\n    )), r & 4 && i.state == 0 && (i = new Dr(\n      this.source,\n      1\n      /* State.Pending */\n    )), i = i.updateFor(e, r);\n    for (let s of e.effects)\n      if (s.is($u))\n        i = new Dr(i.source, 1, s.value);\n      else if (s.is(Bo))\n        i = new Dr(\n          i.source,\n          0\n          /* State.Inactive */\n        );\n      else if (s.is(rm))\n        for (let a of s.value)\n          a.source == i.source && (i = a);\n    return i;\n  }\n  updateFor(e, n) {\n    return this.map(e.changes);\n  }\n  map(e) {\n    return this;\n  }\n  touches(e) {\n    return e.changes.touchesRange(Ps(e.state));\n  }\n}\nclass oa extends Dr {\n  constructor(e, n, r, i, s, a) {\n    super(e, 3, n), this.limit = r, this.result = i, this.from = s, this.to = a;\n  }\n  hasResult() {\n    return !0;\n  }\n  updateFor(e, n) {\n    var r;\n    if (!(n & 3))\n      return this.map(e.changes);\n    let i = this.result;\n    i.map && !e.changes.empty && (i = i.map(i, e.changes));\n    let s = e.changes.mapPos(this.from), a = e.changes.mapPos(this.to, 1), o = Ps(e.state);\n    if (o > a || !i || n & 2 && (Ps(e.startState) == this.from || o < this.limit))\n      return new Dr(\n        this.source,\n        n & 4 ? 1 : 0\n        /* State.Inactive */\n      );\n    let l = e.changes.mapPos(this.limit);\n    return MQ(i.validFor, e.state, s, a) ? new oa(this.source, this.explicit, l, i, s, a) : i.update && (i = i.update(i, s, a, new BS(e.state, o, !1))) ? new oa(this.source, this.explicit, l, i, i.from, (r = i.to) !== null && r !== void 0 ? r : Ps(e.state)) : new Dr(this.source, 1, this.explicit);\n  }\n  map(e) {\n    return e.empty ? this : (this.result.map ? this.result.map(this.result, e) : this.result) ? new oa(this.source, this.explicit, e.mapPos(this.limit), this.result, e.mapPos(this.from), e.mapPos(this.to, 1)) : new Dr(\n      this.source,\n      0\n      /* State.Inactive */\n    );\n  }\n  touches(e) {\n    return e.changes.touchesRange(this.from, this.to);\n  }\n}\nfunction MQ(t, e, n, r) {\n  if (!t)\n    return !1;\n  let i = e.sliceDoc(n, r);\n  return typeof t == "function" ? t(i, n, r, e) : QS(t, !0).test(i);\n}\nconst rm = /* @__PURE__ */ Ie.define({\n  map(t, e) {\n    return t.map((n) => n.map(e));\n  }\n}), jS = /* @__PURE__ */ Ie.define(), jn = /* @__PURE__ */ Vt.define({\n  create() {\n    return Lu.start();\n  },\n  update(t, e) {\n    return t.update(e);\n  },\n  provide: (t) => [\n    Gd.from(t, (e) => e.tooltip),\n    be.contentAttributes.from(t, (e) => e.attrs)\n  ]\n});\nfunction im(t, e) {\n  const n = e.completion.apply || e.completion.label;\n  let r = t.state.field(jn).active.find((i) => i.source == e.source);\n  return r instanceof oa ? (typeof n == "string" ? t.dispatch(Object.assign(Object.assign({}, yQ(t.state, n, r.from, r.to)), { annotations: nm.of(e.completion) })) : n(t, e.completion, r.from, r.to), !0) : !1;\n}\nconst QQ = /* @__PURE__ */ SQ(jn, im);\nfunction Yi(t, e = "option") {\n  return (n) => {\n    let r = n.state.field(jn, !1);\n    if (!r || !r.open || r.open.disabled || Date.now() - r.open.timestamp < n.state.facet(gn).interactionDelay)\n      return !1;\n    let i = 1, s;\n    e == "page" && (s = JC(n, r.open.tooltip)) && (i = Math.max(2, Math.floor(s.dom.offsetHeight / s.dom.querySelector("li").offsetHeight) - 1));\n    let { length: a } = r.open.options, o = r.open.selected > -1 ? r.open.selected + i * (t ? 1 : -1) : t ? 0 : a - 1;\n    return o < 0 ? o = e == "page" ? 0 : a - 1 : o >= a && (o = e == "page" ? a - 1 : 0), n.dispatch({ effects: jS.of(o) }), !0;\n  };\n}\nconst gf = (t) => {\n  let e = t.state.field(jn, !1);\n  return t.state.readOnly || !e || !e.open || e.open.selected < 0 || e.open.disabled || Date.now() - e.open.timestamp < t.state.facet(gn).interactionDelay ? !1 : im(t, e.open.options[e.open.selected]);\n}, bf = (t) => t.state.field(jn, !1) ? (t.dispatch({ effects: $u.of(!0) }), !0) : !1, RS = (t) => {\n  let e = t.state.field(jn, !1);\n  return !e || !e.active.some(\n    (n) => n.state != 0\n    /* State.Inactive */\n  ) ? !1 : (t.dispatch({ effects: Bo.of(null) }), !0);\n};\nclass TQ {\n  constructor(e, n) {\n    this.active = e, this.context = n, this.time = Date.now(), this.updates = [], this.done = void 0;\n  }\n}\nconst jQ = 50, RQ = 1e3, _Q = /* @__PURE__ */ pn.fromClass(class {\n  constructor(t) {\n    this.view = t, this.debounceUpdate = -1, this.running = [], this.debounceAccept = -1, this.pendingStart = !1, this.composing = 0;\n    for (let e of t.state.field(jn).active)\n      e.isPending && this.startQuery(e);\n  }\n  update(t) {\n    let e = t.state.field(jn), n = t.state.facet(gn);\n    if (!t.selectionSet && !t.docChanged && t.startState.field(jn) == e)\n      return;\n    let r = t.transactions.some((s) => {\n      let a = TS(s, n);\n      return a & 8 || (s.selection || s.docChanged) && !(a & 3);\n    });\n    for (let s = 0; s < this.running.length; s++) {\n      let a = this.running[s];\n      if (r || a.context.abortOnDocChange && t.docChanged || a.updates.length + t.transactions.length > jQ && Date.now() - a.time > RQ) {\n        for (let o of a.context.abortListeners)\n          try {\n            o();\n          } catch (l) {\n            qn(this.view.state, l);\n          }\n        a.context.abortListeners = null, this.running.splice(s--, 1);\n      } else\n        a.updates.push(...t.transactions);\n    }\n    this.debounceUpdate > -1 && clearTimeout(this.debounceUpdate), t.transactions.some((s) => s.effects.some((a) => a.is($u))) && (this.pendingStart = !0);\n    let i = this.pendingStart ? 50 : n.activateOnTypingDelay;\n    if (this.debounceUpdate = e.active.some((s) => s.isPending && !this.running.some((a) => a.active.source == s.source)) ? setTimeout(() => this.startUpdate(), i) : -1, this.composing != 0)\n      for (let s of t.transactions)\n        s.isUserEvent("input.type") ? this.composing = 2 : this.composing == 2 && s.selection && (this.composing = 3);\n  }\n  startUpdate() {\n    this.debounceUpdate = -1, this.pendingStart = !1;\n    let { state: t } = this.view, e = t.field(jn);\n    for (let n of e.active)\n      n.isPending && !this.running.some((r) => r.active.source == n.source) && this.startQuery(n);\n    this.running.length && e.open && e.open.disabled && (this.debounceAccept = setTimeout(() => this.accept(), this.view.state.facet(gn).updateSyncTime));\n  }\n  startQuery(t) {\n    let { state: e } = this.view, n = Ps(e), r = new BS(e, n, t.explicit, this.view), i = new TQ(t, r);\n    this.running.push(i), Promise.resolve(t.source(r)).then((s) => {\n      i.context.aborted || (i.done = s || null, this.scheduleAccept());\n    }, (s) => {\n      this.view.dispatch({ effects: Bo.of(null) }), qn(this.view.state, s);\n    });\n  }\n  scheduleAccept() {\n    this.running.every((t) => t.done !== void 0) ? this.accept() : this.debounceAccept < 0 && (this.debounceAccept = setTimeout(() => this.accept(), this.view.state.facet(gn).updateSyncTime));\n  }\n  // For each finished query in this.running, try to create a result\n  // or, if appropriate, restart the query.\n  accept() {\n    var t;\n    this.debounceAccept > -1 && clearTimeout(this.debounceAccept), this.debounceAccept = -1;\n    let e = [], n = this.view.state.facet(gn), r = this.view.state.field(jn);\n    for (let i = 0; i < this.running.length; i++) {\n      let s = this.running[i];\n      if (s.done === void 0)\n        continue;\n      if (this.running.splice(i--, 1), s.done) {\n        let o = Ps(s.updates.length ? s.updates[0].startState : this.view.state), l = Math.min(o, s.done.from + (s.active.explicit ? 0 : 1)), c = new oa(s.active.source, s.active.explicit, l, s.done, s.done.from, (t = s.done.to) !== null && t !== void 0 ? t : o);\n        for (let h of s.updates)\n          c = c.update(h, n);\n        if (c.hasResult()) {\n          e.push(c);\n          continue;\n        }\n      }\n      let a = r.active.find((o) => o.source == s.active.source);\n      if (a && a.isPending)\n        if (s.done == null) {\n          let o = new Dr(\n            s.active.source,\n            0\n            /* State.Inactive */\n          );\n          for (let l of s.updates)\n            o = o.update(l, n);\n          o.isPending || e.push(o);\n        } else\n          this.startQuery(a);\n    }\n    (e.length || r.open && r.open.disabled) && this.view.dispatch({ effects: rm.of(e) });\n  }\n}, {\n  eventHandlers: {\n    blur(t) {\n      let e = this.view.state.field(jn, !1);\n      if (e && e.tooltip && this.view.state.facet(gn).closeOnBlur) {\n        let n = e.open && JC(this.view, e.open.tooltip);\n        (!n || !n.dom.contains(t.relatedTarget)) && setTimeout(() => this.view.dispatch({ effects: Bo.of(null) }), 10);\n      }\n    },\n    compositionstart() {\n      this.composing = 1;\n    },\n    compositionend() {\n      this.composing == 3 && setTimeout(() => this.view.dispatch({ effects: $u.of(!1) }), 20), this.composing = 0;\n    }\n  }\n}), ZQ = typeof navigator == "object" && /* @__PURE__ */ /Win/.test(navigator.platform), $Q = /* @__PURE__ */ jr.highest(/* @__PURE__ */ be.domEventHandlers({\n  keydown(t, e) {\n    let n = e.state.field(jn, !1);\n    if (!n || !n.open || n.open.disabled || n.open.selected < 0 || t.key.length > 1 || t.ctrlKey && !(ZQ && t.altKey) || t.metaKey)\n      return !1;\n    let r = n.open.options[n.open.selected], i = n.active.find((a) => a.source == r.source), s = r.completion.commitCharacters || i.result.commitCharacters;\n    return s && s.indexOf(t.key) > -1 && im(e, r), !1;\n  }\n})), _S = /* @__PURE__ */ be.baseTheme({\n  ".cm-tooltip.cm-tooltip-autocomplete": {\n    "& > ul": {\n      fontFamily: "monospace",\n      whiteSpace: "nowrap",\n      overflow: "hidden auto",\n      maxWidth_fallback: "700px",\n      maxWidth: "min(700px, 95vw)",\n      minWidth: "250px",\n      maxHeight: "10em",\n      height: "100%",\n      listStyle: "none",\n      margin: 0,\n      padding: 0,\n      "& > li, & > completion-section": {\n        padding: "1px 3px",\n        lineHeight: 1.2\n      },\n      "& > li": {\n        overflowX: "hidden",\n        textOverflow: "ellipsis",\n        cursor: "pointer"\n      },\n      "& > completion-section": {\n        display: "list-item",\n        borderBottom: "1px solid silver",\n        paddingLeft: "0.5em",\n        opacity: 0.7\n      }\n    }\n  },\n  "&light .cm-tooltip-autocomplete ul li[aria-selected]": {\n    background: "#17c",\n    color: "white"\n  },\n  "&light .cm-tooltip-autocomplete-disabled ul li[aria-selected]": {\n    background: "#777"\n  },\n  "&dark .cm-tooltip-autocomplete ul li[aria-selected]": {\n    background: "#347",\n    color: "white"\n  },\n  "&dark .cm-tooltip-autocomplete-disabled ul li[aria-selected]": {\n    background: "#444"\n  },\n  ".cm-completionListIncompleteTop:before, .cm-completionListIncompleteBottom:after": {\n    content: \'"···"\',\n    opacity: 0.5,\n    display: "block",\n    textAlign: "center"\n  },\n  ".cm-tooltip.cm-completionInfo": {\n    position: "absolute",\n    padding: "3px 9px",\n    width: "max-content",\n    maxWidth: "400px",\n    boxSizing: "border-box",\n    whiteSpace: "pre-line"\n  },\n  ".cm-completionInfo.cm-completionInfo-left": { right: "100%" },\n  ".cm-completionInfo.cm-completionInfo-right": { left: "100%" },\n  ".cm-completionInfo.cm-completionInfo-left-narrow": { right: "30px" },\n  ".cm-completionInfo.cm-completionInfo-right-narrow": { left: "30px" },\n  "&light .cm-snippetField": { backgroundColor: "#00000022" },\n  "&dark .cm-snippetField": { backgroundColor: "#ffffff22" },\n  ".cm-snippetFieldPosition": {\n    verticalAlign: "text-top",\n    width: 0,\n    height: "1.15em",\n    display: "inline-block",\n    margin: "0 -0.7px -.7em",\n    borderLeft: "1.4px dotted #888"\n  },\n  ".cm-completionMatchedText": {\n    textDecoration: "underline"\n  },\n  ".cm-completionDetail": {\n    marginLeft: "0.5em",\n    fontStyle: "italic"\n  },\n  ".cm-completionIcon": {\n    fontSize: "90%",\n    width: ".8em",\n    display: "inline-block",\n    textAlign: "center",\n    paddingRight: ".6em",\n    opacity: "0.6",\n    boxSizing: "content-box"\n  },\n  ".cm-completionIcon-function, .cm-completionIcon-method": {\n    "&:after": { content: "\'ƒ\'" }\n  },\n  ".cm-completionIcon-class": {\n    "&:after": { content: "\'○\'" }\n  },\n  ".cm-completionIcon-interface": {\n    "&:after": { content: "\'◌\'" }\n  },\n  ".cm-completionIcon-variable": {\n    "&:after": { content: "\'𝑥\'" }\n  },\n  ".cm-completionIcon-constant": {\n    "&:after": { content: "\'𝐶\'" }\n  },\n  ".cm-completionIcon-type": {\n    "&:after": { content: "\'𝑡\'" }\n  },\n  ".cm-completionIcon-enum": {\n    "&:after": { content: "\'∪\'" }\n  },\n  ".cm-completionIcon-property": {\n    "&:after": { content: "\'□\'" }\n  },\n  ".cm-completionIcon-keyword": {\n    "&:after": { content: "\'🔑︎\'" }\n    // Disable emoji rendering\n  },\n  ".cm-completionIcon-namespace": {\n    "&:after": { content: "\'▢\'" }\n  },\n  ".cm-completionIcon-text": {\n    "&:after": { content: "\'abc\'", fontSize: "50%", verticalAlign: "middle" }\n  }\n});\nclass LQ {\n  constructor(e, n, r, i) {\n    this.field = e, this.line = n, this.from = r, this.to = i;\n  }\n}\nclass sm {\n  constructor(e, n, r) {\n    this.field = e, this.from = n, this.to = r;\n  }\n  map(e) {\n    let n = e.mapPos(this.from, -1, nn.TrackDel), r = e.mapPos(this.to, 1, nn.TrackDel);\n    return n == null || r == null ? null : new sm(this.field, n, r);\n  }\n}\nclass am {\n  constructor(e, n) {\n    this.lines = e, this.fieldPositions = n;\n  }\n  instantiate(e, n) {\n    let r = [], i = [n], s = e.doc.lineAt(n), a = /^\\s*/.exec(s.text)[0];\n    for (let l of this.lines) {\n      if (r.length) {\n        let c = a, h = /^\\t*/.exec(l)[0].length;\n        for (let f = 0; f < h; f++)\n          c += e.facet(Ca);\n        i.push(n + c.length - h), l = c + l.slice(h);\n      }\n      r.push(l), n += l.length + 1;\n    }\n    let o = this.fieldPositions.map((l) => new sm(l.field, i[l.line] + l.from, i[l.line] + l.to));\n    return { text: r, ranges: o };\n  }\n  static parse(e) {\n    let n = [], r = [], i = [], s;\n    for (let a of e.split(/\\r\\n?|\\n/)) {\n      for (; s = /[#$]\\{(?:(\\d+)(?::([^}]*))?|((?:\\\\[{}]|[^}])*))\\}/.exec(a); ) {\n        let o = s[1] ? +s[1] : null, l = s[2] || s[3] || "", c = -1, h = l.replace(/\\\\[{}]/g, (f) => f[1]);\n        for (let f = 0; f < n.length; f++)\n          (o != null ? n[f].seq == o : h && n[f].name == h) && (c = f);\n        if (c < 0) {\n          let f = 0;\n          for (; f < n.length && (o == null || n[f].seq != null && n[f].seq < o); )\n            f++;\n          n.splice(f, 0, { seq: o, name: h }), c = f;\n          for (let m of i)\n            m.field >= c && m.field++;\n        }\n        i.push(new LQ(c, r.length, s.index, s.index + h.length)), a = a.slice(0, s.index) + l + a.slice(s.index + s[0].length);\n      }\n      a = a.replace(/\\\\([{}])/g, (o, l, c) => {\n        for (let h of i)\n          h.line == r.length && h.from > c && (h.from--, h.to--);\n        return l;\n      }), r.push(a);\n    }\n    return new am(r, i);\n  }\n}\nlet IQ = /* @__PURE__ */ Te.widget({ widget: /* @__PURE__ */ new class extends Zi {\n  toDOM() {\n    let t = document.createElement("span");\n    return t.className = "cm-snippetFieldPosition", t;\n  }\n  ignoreEvent() {\n    return !1;\n  }\n}() }), NQ = /* @__PURE__ */ Te.mark({ class: "cm-snippetField" });\nclass Ta {\n  constructor(e, n) {\n    this.ranges = e, this.active = n, this.deco = Te.set(e.map((r) => (r.from == r.to ? IQ : NQ).range(r.from, r.to)));\n  }\n  map(e) {\n    let n = [];\n    for (let r of this.ranges) {\n      let i = r.map(e);\n      if (!i)\n        return null;\n      n.push(i);\n    }\n    return new Ta(n, this.active);\n  }\n  selectionInsideField(e) {\n    return e.ranges.every((n) => this.ranges.some((r) => r.field == this.active && r.from <= n.from && r.to >= n.to));\n  }\n}\nconst Ko = /* @__PURE__ */ Ie.define({\n  map(t, e) {\n    return t && t.map(e);\n  }\n}), VQ = /* @__PURE__ */ Ie.define(), Mo = /* @__PURE__ */ Vt.define({\n  create() {\n    return null;\n  },\n  update(t, e) {\n    for (let n of e.effects) {\n      if (n.is(Ko))\n        return n.value;\n      if (n.is(VQ) && t)\n        return new Ta(t.ranges, n.value);\n    }\n    return t && e.docChanged && (t = t.map(e.changes)), t && e.selection && !t.selectionInsideField(e.selection) && (t = null), t;\n  },\n  provide: (t) => be.decorations.from(t, (e) => e ? e.deco : Te.none)\n});\nfunction om(t, e) {\n  return ne.create(t.filter((n) => n.field == e).map((n) => ne.range(n.from, n.to)));\n}\nfunction XQ(t) {\n  let e = am.parse(t);\n  return (n, r, i, s) => {\n    let { text: a, ranges: o } = e.instantiate(n.state, i), { main: l } = n.state.selection, c = {\n      changes: { from: i, to: s == l.from ? l.to : s, insert: ht.of(a) },\n      scrollIntoView: !0,\n      annotations: r ? [nm.of(r), rn.userEvent.of("input.complete")] : void 0\n    };\n    if (o.length && (c.selection = om(o, 0)), o.some((h) => h.field > 0)) {\n      let h = new Ta(o, 0), f = c.effects = [Ko.of(h)];\n      n.state.field(Mo, !1) === void 0 && f.push(Ie.appendConfig.of([Mo, zQ, HQ, _S]));\n    }\n    n.dispatch(n.state.update(c));\n  };\n}\nfunction ZS(t) {\n  return ({ state: e, dispatch: n }) => {\n    let r = e.field(Mo, !1);\n    if (!r || t < 0 && r.active == 0)\n      return !1;\n    let i = r.active + t, s = t > 0 && !r.ranges.some((a) => a.field == i + t);\n    return n(e.update({\n      selection: om(r.ranges, i),\n      effects: Ko.of(s ? null : new Ta(r.ranges, i)),\n      scrollIntoView: !0\n    })), !0;\n  };\n}\nconst WQ = ({ state: t, dispatch: e }) => t.field(Mo, !1) ? (e(t.update({ effects: Ko.of(null) })), !0) : !1, UQ = /* @__PURE__ */ ZS(1), qQ = /* @__PURE__ */ ZS(-1), GQ = [\n  { key: "Tab", run: UQ, shift: qQ },\n  { key: "Escape", run: WQ }\n], R0 = /* @__PURE__ */ Ae.define({\n  combine(t) {\n    return t.length ? t[0] : GQ;\n  }\n}), zQ = /* @__PURE__ */ jr.highest(/* @__PURE__ */ Rs.compute([R0], (t) => t.facet(R0)));\nfunction Nn(t, e) {\n  return Object.assign(Object.assign({}, e), { apply: XQ(t) });\n}\nconst HQ = /* @__PURE__ */ be.domEventHandlers({\n  mousedown(t, e) {\n    let n = e.state.field(Mo, !1), r;\n    if (!n || (r = e.posAtCoords({ x: t.clientX, y: t.clientY })) == null)\n      return !1;\n    let i = n.ranges.find((s) => s.from <= r && s.to >= r);\n    return !i || i.field == n.active ? !1 : (e.dispatch({\n      selection: om(n.ranges, i.field),\n      effects: Ko.of(n.ranges.some((s) => s.field > i.field) ? new Ta(n.ranges, i.field) : null),\n      scrollIntoView: !0\n    }), !0);\n  }\n}), Qo = {\n  brackets: ["(", "[", "{", "\'", \'"\'],\n  before: ")]}:;>",\n  stringPrefixes: []\n}, Cs = /* @__PURE__ */ Ie.define({\n  map(t, e) {\n    let n = e.mapPos(t, -1, nn.TrackAfter);\n    return n ?? void 0;\n  }\n}), lm = /* @__PURE__ */ new class extends Ms {\n}();\nlm.startSide = 1;\nlm.endSide = -1;\nconst $S = /* @__PURE__ */ Vt.define({\n  create() {\n    return mt.empty;\n  },\n  update(t, e) {\n    if (t = t.map(e.changes), e.selection) {\n      let n = e.state.doc.lineAt(e.selection.main.head);\n      t = t.update({ filter: (r) => r >= n.from && r <= n.to });\n    }\n    for (let n of e.effects)\n      n.is(Cs) && (t = t.update({ add: [lm.range(n.value, n.value + 1)] }));\n    return t;\n  }\n});\nfunction YQ() {\n  return [JQ, $S];\n}\nconst np = "()[]{}<>";\nfunction LS(t) {\n  for (let e = 0; e < np.length; e += 2)\n    if (np.charCodeAt(e) == t)\n      return np.charAt(e + 1);\n  return Qd(t < 128 ? t : t + 1);\n}\nfunction IS(t, e) {\n  return t.languageDataAt("closeBrackets", e)[0] || Qo;\n}\nconst KQ = typeof navigator == "object" && /* @__PURE__ */ /Android\\b/.test(navigator.userAgent), JQ = /* @__PURE__ */ be.inputHandler.of((t, e, n, r) => {\n  if ((KQ ? t.composing : t.compositionStarted) || t.state.readOnly)\n    return !1;\n  let i = t.state.selection.main;\n  if (r.length > 2 || r.length == 2 && hi(hr(r, 0)) == 1 || e != i.from || n != i.to)\n    return !1;\n  let s = t7(t.state, r);\n  return s ? (t.dispatch(s), !0) : !1;\n}), e7 = ({ state: t, dispatch: e }) => {\n  if (t.readOnly)\n    return !1;\n  let r = IS(t, t.selection.main.head).brackets || Qo.brackets, i = null, s = t.changeByRange((a) => {\n    if (a.empty) {\n      let o = n7(t.doc, a.head);\n      for (let l of r)\n        if (l == o && Zc(t.doc, a.head) == LS(hr(l, 0)))\n          return {\n            changes: { from: a.head - l.length, to: a.head + l.length },\n            range: ne.cursor(a.head - l.length)\n          };\n    }\n    return { range: i = a };\n  });\n  return i || e(t.update(s, { scrollIntoView: !0, userEvent: "delete.backward" })), !i;\n};\nfunction t7(t, e) {\n  let n = IS(t, t.selection.main.head), r = n.brackets || Qo.brackets;\n  for (let i of r) {\n    let s = LS(hr(i, 0));\n    if (e == i)\n      return s == i ? s7(t, i, r.indexOf(i + i + i) > -1, n) : r7(t, i, s, n.before || Qo.before);\n    if (e == s && NS(t, t.selection.main.from))\n      return i7(t, i, s);\n  }\n  return null;\n}\nfunction NS(t, e) {\n  let n = !1;\n  return t.field($S).between(0, t.doc.length, (r) => {\n    r == e && (n = !0);\n  }), n;\n}\nfunction Zc(t, e) {\n  let n = t.sliceString(e, e + 2);\n  return n.slice(0, hi(hr(n, 0)));\n}\nfunction n7(t, e) {\n  let n = t.sliceString(e - 2, e);\n  return hi(hr(n, 0)) == n.length ? n : n.slice(1);\n}\nfunction r7(t, e, n, r) {\n  let i = null, s = t.changeByRange((a) => {\n    if (!a.empty)\n      return {\n        changes: [{ insert: e, from: a.from }, { insert: n, from: a.to }],\n        effects: Cs.of(a.to + e.length),\n        range: ne.range(a.anchor + e.length, a.head + e.length)\n      };\n    let o = Zc(t.doc, a.head);\n    return !o || /\\s/.test(o) || r.indexOf(o) > -1 ? {\n      changes: { insert: e + n, from: a.head },\n      effects: Cs.of(a.head + e.length),\n      range: ne.cursor(a.head + e.length)\n    } : { range: i = a };\n  });\n  return i ? null : t.update(s, {\n    scrollIntoView: !0,\n    userEvent: "input.type"\n  });\n}\nfunction i7(t, e, n) {\n  let r = null, i = t.changeByRange((s) => s.empty && Zc(t.doc, s.head) == n ? {\n    changes: { from: s.head, to: s.head + n.length, insert: n },\n    range: ne.cursor(s.head + n.length)\n  } : r = { range: s });\n  return r ? null : t.update(i, {\n    scrollIntoView: !0,\n    userEvent: "input.type"\n  });\n}\nfunction s7(t, e, n, r) {\n  let i = r.stringPrefixes || Qo.stringPrefixes, s = null, a = t.changeByRange((o) => {\n    if (!o.empty)\n      return {\n        changes: [{ insert: e, from: o.from }, { insert: e, from: o.to }],\n        effects: Cs.of(o.to + e.length),\n        range: ne.range(o.anchor + e.length, o.head + e.length)\n      };\n    let l = o.head, c = Zc(t.doc, l), h;\n    if (c == e) {\n      if (_0(t, l))\n        return {\n          changes: { insert: e + e, from: l },\n          effects: Cs.of(l + e.length),\n          range: ne.cursor(l + e.length)\n        };\n      if (NS(t, l)) {\n        let m = n && t.sliceDoc(l, l + e.length * 3) == e + e + e ? e + e + e : e;\n        return {\n          changes: { from: l, to: l + m.length, insert: m },\n          range: ne.cursor(l + m.length)\n        };\n      }\n    } else {\n      if (n && t.sliceDoc(l - 2 * e.length, l) == e + e && (h = Z0(t, l - 2 * e.length, i)) > -1 && _0(t, h))\n        return {\n          changes: { insert: e + e + e + e, from: l },\n          effects: Cs.of(l + e.length),\n          range: ne.cursor(l + e.length)\n        };\n      if (t.charCategorizer(l)(c) != sn.Word && Z0(t, l, i) > -1 && !a7(t, l, e, i))\n        return {\n          changes: { insert: e + e, from: l },\n          effects: Cs.of(l + e.length),\n          range: ne.cursor(l + e.length)\n        };\n    }\n    return { range: s = o };\n  });\n  return s ? null : t.update(a, {\n    scrollIntoView: !0,\n    userEvent: "input.type"\n  });\n}\nfunction _0(t, e) {\n  let n = wn(t).resolveInner(e + 1);\n  return n.parent && n.from == e;\n}\nfunction a7(t, e, n, r) {\n  let i = wn(t).resolveInner(e, -1), s = r.reduce((a, o) => Math.max(a, o.length), 0);\n  for (let a = 0; a < 5; a++) {\n    let o = t.sliceDoc(i.from, Math.min(i.to, i.from + n.length + s)), l = o.indexOf(n);\n    if (!l || l > -1 && r.indexOf(o.slice(0, l)) > -1) {\n      let h = i.firstChild;\n      for (; h && h.from == i.from && h.to - h.from > n.length + l; ) {\n        if (t.sliceDoc(h.to - n.length, h.to) == n)\n          return !1;\n        h = h.firstChild;\n      }\n      return !0;\n    }\n    let c = i.to == e && i.parent;\n    if (!c)\n      break;\n    i = c;\n  }\n  return !1;\n}\nfunction Z0(t, e, n) {\n  let r = t.charCategorizer(e);\n  if (r(t.sliceDoc(e - 1, e)) != sn.Word)\n    return e;\n  for (let i of n) {\n    let s = e - i.length;\n    if (t.sliceDoc(s, e) == i && r(t.sliceDoc(s - 1, s)) != sn.Word)\n      return s;\n  }\n  return -1;\n}\nfunction o7(t = {}) {\n  return [\n    $Q,\n    jn,\n    gn.of(t),\n    _Q,\n    u7,\n    _S\n  ];\n}\nconst l7 = [\n  { key: "Ctrl-Space", run: bf },\n  { mac: "Alt-`", run: bf },\n  { key: "Escape", run: RS },\n  { key: "ArrowDown", run: /* @__PURE__ */ Yi(!0) },\n  { key: "ArrowUp", run: /* @__PURE__ */ Yi(!1) },\n  { key: "PageDown", run: /* @__PURE__ */ Yi(!0, "page") },\n  { key: "PageUp", run: /* @__PURE__ */ Yi(!1, "page") },\n  { key: "Enter", run: gf }\n], u7 = /* @__PURE__ */ jr.highest(/* @__PURE__ */ Rs.computeN([gn], (t) => t.facet(gn).defaultKeymap ? [l7] : []));\nfunction c7(t) {\n  let e = t.field(jn, !1);\n  return e && e.active.some((n) => n.isPending) ? "pending" : e && e.active.some(\n    (n) => n.state != 0\n    /* State.Inactive */\n  ) ? "active" : null;\n}\nconst $c = (t) => {\n  let { state: e } = t, n = e.doc.lineAt(e.selection.main.from), r = cm(t.state, n.from);\n  return r.line ? VS(t) : r.block ? XS(t) : !1;\n};\nfunction Jo(t, e) {\n  return ({ state: n, dispatch: r }) => {\n    if (n.readOnly)\n      return !1;\n    let i = t(e, n);\n    return i ? (r(n.update(i)), !0) : !1;\n  };\n}\nconst VS = /* @__PURE__ */ Jo(\n  hm,\n  0\n  /* CommentOption.Toggle */\n), h7 = /* @__PURE__ */ Jo(\n  hm,\n  1\n  /* CommentOption.Comment */\n), p7 = /* @__PURE__ */ Jo(\n  hm,\n  2\n  /* CommentOption.Uncomment */\n), um = /* @__PURE__ */ Jo(\n  WS,\n  0\n  /* CommentOption.Toggle */\n), XS = /* @__PURE__ */ Jo(\n  (t, e) => WS(t, e, d7(e)),\n  0\n  /* CommentOption.Toggle */\n);\nfunction cm(t, e) {\n  let n = t.languageDataAt("commentTokens", e);\n  return n.length ? n[0] : {};\n}\nconst no = 50;\nfunction f7(t, { open: e, close: n }, r, i) {\n  let s = t.sliceDoc(r - no, r), a = t.sliceDoc(i, i + no), o = /\\s*$/.exec(s)[0].length, l = /^\\s*/.exec(a)[0].length, c = s.length - o;\n  if (s.slice(c - e.length, c) == e && a.slice(l, l + n.length) == n)\n    return {\n      open: { pos: r - o, margin: o && 1 },\n      close: { pos: i + l, margin: l && 1 }\n    };\n  let h, f;\n  i - r <= 2 * no ? h = f = t.sliceDoc(r, i) : (h = t.sliceDoc(r, r + no), f = t.sliceDoc(i - no, i));\n  let m = /^\\s*/.exec(h)[0].length, y = /\\s*$/.exec(f)[0].length, v = f.length - y - n.length;\n  return h.slice(m, m + e.length) == e && f.slice(v, v + n.length) == n ? {\n    open: {\n      pos: r + m + e.length,\n      margin: /\\s/.test(h.charAt(m + e.length)) ? 1 : 0\n    },\n    close: {\n      pos: i - y - n.length,\n      margin: /\\s/.test(f.charAt(v - 1)) ? 1 : 0\n    }\n  } : null;\n}\nfunction d7(t) {\n  let e = [];\n  for (let n of t.selection.ranges) {\n    let r = t.doc.lineAt(n.from), i = n.to <= r.to ? r : t.doc.lineAt(n.to);\n    i.from > r.from && i.from == n.to && (i = n.to == r.to + 1 ? r : t.doc.lineAt(n.to - 1));\n    let s = e.length - 1;\n    s >= 0 && e[s].to > r.from ? e[s].to = i.to : e.push({ from: r.from + /^\\s*/.exec(r.text)[0].length, to: i.to });\n  }\n  return e;\n}\nfunction WS(t, e, n = e.selection.ranges) {\n  let r = n.map((s) => cm(e, s.from).block);\n  if (!r.every((s) => s))\n    return null;\n  let i = n.map((s, a) => f7(e, r[a], s.from, s.to));\n  if (t != 2 && !i.every((s) => s))\n    return { changes: e.changes(n.map((s, a) => i[a] ? [] : [{ from: s.from, insert: r[a].open + " " }, { from: s.to, insert: " " + r[a].close }])) };\n  if (t != 1 && i.some((s) => s)) {\n    let s = [];\n    for (let a = 0, o; a < i.length; a++)\n      if (o = i[a]) {\n        let l = r[a], { open: c, close: h } = o;\n        s.push({ from: c.pos - l.open.length, to: c.pos + c.margin }, { from: h.pos - h.margin, to: h.pos + l.close.length });\n      }\n    return { changes: s };\n  }\n  return null;\n}\nfunction hm(t, e, n = e.selection.ranges) {\n  let r = [], i = -1;\n  for (let { from: s, to: a } of n) {\n    let o = r.length, l = 1e9, c = cm(e, s).line;\n    if (c) {\n      for (let h = s; h <= a; ) {\n        let f = e.doc.lineAt(h);\n        if (f.from > i && (s == a || a > f.from)) {\n          i = f.from;\n          let m = /^\\s*/.exec(f.text)[0].length, y = m == f.length, v = f.text.slice(m, m + c.length) == c ? m : -1;\n          m < f.text.length && m < l && (l = m), r.push({ line: f, comment: v, token: c, indent: m, empty: y, single: !1 });\n        }\n        h = f.to + 1;\n      }\n      if (l < 1e9)\n        for (let h = o; h < r.length; h++)\n          r[h].indent < r[h].line.text.length && (r[h].indent = l);\n      r.length == o + 1 && (r[o].single = !0);\n    }\n  }\n  if (t != 2 && r.some((s) => s.comment < 0 && (!s.empty || s.single))) {\n    let s = [];\n    for (let { line: o, token: l, indent: c, empty: h, single: f } of r)\n      (f || !h) && s.push({ from: o.from + c, insert: l + " " });\n    let a = e.changes(s);\n    return { changes: a, selection: e.selection.map(a, 1) };\n  } else if (t != 1 && r.some((s) => s.comment >= 0)) {\n    let s = [];\n    for (let { line: a, comment: o, token: l } of r)\n      if (o >= 0) {\n        let c = a.from + o, h = c + l.length;\n        a.text[h - a.from] == " " && h++, s.push({ from: c, to: h });\n      }\n    return { changes: s };\n  }\n  return null;\n}\nconst yf = /* @__PURE__ */ _i.define(), m7 = /* @__PURE__ */ _i.define(), g7 = /* @__PURE__ */ Ae.define(), US = /* @__PURE__ */ Ae.define({\n  combine(t) {\n    return ls(t, {\n      minDepth: 100,\n      newGroupDelay: 500,\n      joinToEvent: (e, n) => n\n    }, {\n      minDepth: Math.max,\n      newGroupDelay: Math.min,\n      joinToEvent: (e, n) => (r, i) => e(r, i) || n(r, i)\n    });\n  }\n}), qS = /* @__PURE__ */ Vt.define({\n  create() {\n    return di.empty;\n  },\n  update(t, e) {\n    let n = e.state.facet(US), r = e.annotation(yf);\n    if (r) {\n      let l = Gn.fromTransaction(e, r.selection), c = r.side, h = c == 0 ? t.undone : t.done;\n      return l ? h = Iu(h, h.length, n.minDepth, l) : h = HS(h, e.startState.selection), new di(c == 0 ? r.rest : h, c == 0 ? h : r.rest);\n    }\n    let i = e.annotation(m7);\n    if ((i == "full" || i == "before") && (t = t.isolate()), e.annotation(rn.addToHistory) === !1)\n      return e.changes.empty ? t : t.addMapping(e.changes.desc);\n    let s = Gn.fromTransaction(e), a = e.annotation(rn.time), o = e.annotation(rn.userEvent);\n    return s ? t = t.addChanges(s, a, o, n, e) : e.selection && (t = t.addSelection(e.startState.selection, a, o, n.newGroupDelay)), (i == "full" || i == "after") && (t = t.isolate()), t;\n  },\n  toJSON(t) {\n    return { done: t.done.map((e) => e.toJSON()), undone: t.undone.map((e) => e.toJSON()) };\n  },\n  fromJSON(t) {\n    return new di(t.done.map(Gn.fromJSON), t.undone.map(Gn.fromJSON));\n  }\n});\nfunction b7(t = {}) {\n  return [\n    qS,\n    US.of(t),\n    be.domEventHandlers({\n      beforeinput(e, n) {\n        let r = e.inputType == "historyUndo" ? Ic : e.inputType == "historyRedo" ? Sa : null;\n        return r ? (e.preventDefault(), r(n)) : !1;\n      }\n    })\n  ];\n}\nfunction Lc(t, e) {\n  return function({ state: n, dispatch: r }) {\n    if (!e && n.readOnly)\n      return !1;\n    let i = n.field(qS, !1);\n    if (!i)\n      return !1;\n    let s = i.pop(t, n, e);\n    return s ? (r(s), !0) : !1;\n  };\n}\nconst Ic = /* @__PURE__ */ Lc(0, !1), Sa = /* @__PURE__ */ Lc(1, !1), GS = /* @__PURE__ */ Lc(0, !0), y7 = /* @__PURE__ */ Lc(1, !0);\nclass Gn {\n  constructor(e, n, r, i, s) {\n    this.changes = e, this.effects = n, this.mapped = r, this.startSelection = i, this.selectionsAfter = s;\n  }\n  setSelAfter(e) {\n    return new Gn(this.changes, this.effects, this.mapped, this.startSelection, e);\n  }\n  toJSON() {\n    var e, n, r;\n    return {\n      changes: (e = this.changes) === null || e === void 0 ? void 0 : e.toJSON(),\n      mapped: (n = this.mapped) === null || n === void 0 ? void 0 : n.toJSON(),\n      startSelection: (r = this.startSelection) === null || r === void 0 ? void 0 : r.toJSON(),\n      selectionsAfter: this.selectionsAfter.map((i) => i.toJSON())\n    };\n  }\n  static fromJSON(e) {\n    return new Gn(e.changes && ln.fromJSON(e.changes), [], e.mapped && mi.fromJSON(e.mapped), e.startSelection && ne.fromJSON(e.startSelection), e.selectionsAfter.map(ne.fromJSON));\n  }\n  // This does not check `addToHistory` and such, it assumes the\n  // transaction needs to be converted to an item. Returns null when\n  // there are no changes or effects in the transaction.\n  static fromTransaction(e, n) {\n    let r = Pr;\n    for (let i of e.startState.facet(g7)) {\n      let s = i(e);\n      s.length && (r = r.concat(s));\n    }\n    return !r.length && e.changes.empty ? null : new Gn(e.changes.invert(e.startState.doc), r, void 0, n || e.startState.selection, Pr);\n  }\n  static selection(e) {\n    return new Gn(void 0, Pr, void 0, void 0, e);\n  }\n}\nfunction Iu(t, e, n, r) {\n  let i = e + 1 > n + 20 ? e - n - 1 : 0, s = t.slice(i, e);\n  return s.push(r), s;\n}\nfunction O7(t, e) {\n  let n = [], r = !1;\n  return t.iterChangedRanges((i, s) => n.push(i, s)), e.iterChangedRanges((i, s, a, o) => {\n    for (let l = 0; l < n.length; ) {\n      let c = n[l++], h = n[l++];\n      o >= c && a <= h && (r = !0);\n    }\n  }), r;\n}\nfunction v7(t, e) {\n  return t.ranges.length == e.ranges.length && t.ranges.filter((n, r) => n.empty != e.ranges[r].empty).length === 0;\n}\nfunction zS(t, e) {\n  return t.length ? e.length ? t.concat(e) : t : e;\n}\nconst Pr = [], x7 = 200;\nfunction HS(t, e) {\n  if (t.length) {\n    let n = t[t.length - 1], r = n.selectionsAfter.slice(Math.max(0, n.selectionsAfter.length - x7));\n    return r.length && r[r.length - 1].eq(e) ? t : (r.push(e), Iu(t, t.length - 1, 1e9, n.setSelAfter(r)));\n  } else\n    return [Gn.selection([e])];\n}\nfunction k7(t) {\n  let e = t[t.length - 1], n = t.slice();\n  return n[t.length - 1] = e.setSelAfter(e.selectionsAfter.slice(0, e.selectionsAfter.length - 1)), n;\n}\nfunction rp(t, e) {\n  if (!t.length)\n    return t;\n  let n = t.length, r = Pr;\n  for (; n; ) {\n    let i = w7(t[n - 1], e, r);\n    if (i.changes && !i.changes.empty || i.effects.length) {\n      let s = t.slice(0, n);\n      return s[n - 1] = i, s;\n    } else\n      e = i.mapped, n--, r = i.selectionsAfter;\n  }\n  return r.length ? [Gn.selection(r)] : Pr;\n}\nfunction w7(t, e, n) {\n  let r = zS(t.selectionsAfter.length ? t.selectionsAfter.map((o) => o.map(e)) : Pr, n);\n  if (!t.changes)\n    return Gn.selection(r);\n  let i = t.changes.map(e), s = e.mapDesc(t.changes, !0), a = t.mapped ? t.mapped.composeDesc(s) : s;\n  return new Gn(i, Ie.mapEffects(t.effects, e), a, t.startSelection.map(s), r);\n}\nconst C7 = /^(input\\.type|delete)($|\\.)/;\nclass di {\n  constructor(e, n, r = 0, i = void 0) {\n    this.done = e, this.undone = n, this.prevTime = r, this.prevUserEvent = i;\n  }\n  isolate() {\n    return this.prevTime ? new di(this.done, this.undone) : this;\n  }\n  addChanges(e, n, r, i, s) {\n    let a = this.done, o = a[a.length - 1];\n    return o && o.changes && !o.changes.empty && e.changes && (!r || C7.test(r)) && (!o.selectionsAfter.length && n - this.prevTime < i.newGroupDelay && i.joinToEvent(s, O7(o.changes, e.changes)) || // For compose (but not compose.start) events, always join with previous event\n    r == "input.type.compose") ? a = Iu(a, a.length - 1, i.minDepth, new Gn(e.changes.compose(o.changes), zS(Ie.mapEffects(e.effects, o.changes), o.effects), o.mapped, o.startSelection, Pr)) : a = Iu(a, a.length, i.minDepth, e), new di(a, Pr, n, r);\n  }\n  addSelection(e, n, r, i) {\n    let s = this.done.length ? this.done[this.done.length - 1].selectionsAfter : Pr;\n    return s.length > 0 && n - this.prevTime < i && r == this.prevUserEvent && r && /^select($|\\.)/.test(r) && v7(s[s.length - 1], e) ? this : new di(HS(this.done, e), this.undone, n, r);\n  }\n  addMapping(e) {\n    return new di(rp(this.done, e), rp(this.undone, e), this.prevTime, this.prevUserEvent);\n  }\n  pop(e, n, r) {\n    let i = e == 0 ? this.done : this.undone;\n    if (i.length == 0)\n      return null;\n    let s = i[i.length - 1], a = s.selectionsAfter[0] || n.selection;\n    if (r && s.selectionsAfter.length)\n      return n.update({\n        selection: s.selectionsAfter[s.selectionsAfter.length - 1],\n        annotations: yf.of({ side: e, rest: k7(i), selection: a }),\n        userEvent: e == 0 ? "select.undo" : "select.redo",\n        scrollIntoView: !0\n      });\n    if (s.changes) {\n      let o = i.length == 1 ? Pr : i.slice(0, i.length - 1);\n      return s.mapped && (o = rp(o, s.mapped)), n.update({\n        changes: s.changes,\n        selection: s.startSelection,\n        effects: s.effects,\n        annotations: yf.of({ side: e, rest: o, selection: a }),\n        filter: !1,\n        userEvent: e == 0 ? "undo" : "redo",\n        scrollIntoView: !0\n      });\n    } else\n      return null;\n  }\n}\ndi.empty = /* @__PURE__ */ new di(Pr, Pr);\nconst S7 = [\n  { key: "Mod-z", run: Ic, preventDefault: !0 },\n  { key: "Mod-y", mac: "Mod-Shift-z", run: Sa, preventDefault: !0 },\n  { linux: "Ctrl-Shift-z", run: Sa, preventDefault: !0 },\n  { key: "Mod-u", run: GS, preventDefault: !0 },\n  { key: "Alt-u", mac: "Mod-Shift-u", run: y7, preventDefault: !0 }\n];\nfunction ja(t, e) {\n  return ne.create(t.ranges.map(e), t.mainIndex);\n}\nfunction vi(t, e) {\n  return t.update({ selection: e, scrollIntoView: !0, userEvent: "select" });\n}\nfunction Hr({ state: t, dispatch: e }, n) {\n  let r = ja(t.selection, n);\n  return r.eq(t.selection, !0) ? !1 : (e(vi(t, r)), !0);\n}\nfunction Nc(t, e) {\n  return ne.cursor(e ? t.to : t.from);\n}\nfunction pm(t, e) {\n  return Hr(t, (n) => n.empty ? t.moveByChar(n, e) : Nc(n, e));\n}\nfunction Fn(t) {\n  return t.textDirectionAt(t.state.selection.main.head) == Dt.LTR;\n}\nconst To = (t) => pm(t, !Fn(t)), Nu = (t) => pm(t, Fn(t)), A7 = (t) => pm(t, !1);\nfunction YS(t, e) {\n  return Hr(t, (n) => n.empty ? t.moveByGroup(n, e) : Nc(n, e));\n}\nconst KS = (t) => YS(t, !Fn(t)), JS = (t) => YS(t, Fn(t));\nfunction D7(t, e, n) {\n  if (e.type.prop(n))\n    return !0;\n  let r = e.to - e.from;\n  return r && (r > 2 || /[^\\s,.;:]/.test(t.sliceDoc(e.from, e.to))) || e.firstChild;\n}\nfunction Vc(t, e, n) {\n  let r = wn(t).resolveInner(e.head), i = n ? nt.closedBy : nt.openedBy;\n  for (let l = e.head; ; ) {\n    let c = n ? r.childAfter(l) : r.childBefore(l);\n    if (!c)\n      break;\n    D7(t, c, i) ? r = c : l = n ? c.to : c.from;\n  }\n  let s = r.type.prop(i), a, o;\n  return s && (a = n ? Ar(t, r.from, 1) : Ar(t, r.to, -1)) && a.matched ? o = n ? a.end.to : a.end.from : o = n ? r.to : r.from, ne.cursor(o, n ? -1 : 1);\n}\nconst P7 = (t) => Hr(t, (e) => Vc(t.state, e, !Fn(t))), E7 = (t) => Hr(t, (e) => Vc(t.state, e, Fn(t)));\nfunction eA(t, e) {\n  return Hr(t, (n) => {\n    if (!n.empty)\n      return Nc(n, e);\n    let r = t.moveVertically(n, e);\n    return r.head != n.head ? r : t.moveToLineBoundary(n, e);\n  });\n}\nconst Vu = (t) => eA(t, !1), Xu = (t) => eA(t, !0);\nfunction tA(t) {\n  let e = t.scrollDOM.clientHeight < t.scrollDOM.scrollHeight - 2, n = 0, r = 0, i;\n  if (e) {\n    for (let s of t.state.facet(be.scrollMargins)) {\n      let a = s(t);\n      a?.top && (n = Math.max(a?.top, n)), a?.bottom && (r = Math.max(a?.bottom, r));\n    }\n    i = t.scrollDOM.clientHeight - n - r;\n  } else\n    i = (t.dom.ownerDocument.defaultView || window).innerHeight;\n  return {\n    marginTop: n,\n    marginBottom: r,\n    selfScroll: e,\n    height: Math.max(t.defaultLineHeight, i - 5)\n  };\n}\nfunction nA(t, e) {\n  let n = tA(t), { state: r } = t, i = ja(r.selection, (a) => a.empty ? t.moveVertically(a, e, n.height) : Nc(a, e));\n  if (i.eq(r.selection))\n    return !1;\n  let s;\n  if (n.selfScroll) {\n    let a = t.coordsAtPos(r.selection.main.head), o = t.scrollDOM.getBoundingClientRect(), l = o.top + n.marginTop, c = o.bottom - n.marginBottom;\n    a && a.top > l && a.bottom < c && (s = be.scrollIntoView(i.main.head, { y: "start", yMargin: a.top - l }));\n  }\n  return t.dispatch(vi(r, i), { effects: s }), !0;\n}\nconst go = (t) => nA(t, !1), la = (t) => nA(t, !0);\nfunction us(t, e, n) {\n  let r = t.lineBlockAt(e.head), i = t.moveToLineBoundary(e, n);\n  if (i.head == e.head && i.head != (n ? r.to : r.from) && (i = t.moveToLineBoundary(e, n, !1)), !n && i.head == r.from && r.length) {\n    let s = /^\\s*/.exec(t.state.sliceDoc(r.from, Math.min(r.from + 100, r.to)))[0].length;\n    s && e.head != r.from + s && (i = ne.cursor(r.from + s));\n  }\n  return i;\n}\nconst Wu = (t) => Hr(t, (e) => us(t, e, !0)), Uu = (t) => Hr(t, (e) => us(t, e, !1)), F7 = (t) => Hr(t, (e) => us(t, e, !Fn(t))), B7 = (t) => Hr(t, (e) => us(t, e, Fn(t))), rA = (t) => Hr(t, (e) => ne.cursor(t.lineBlockAt(e.head).from, 1)), iA = (t) => Hr(t, (e) => ne.cursor(t.lineBlockAt(e.head).to, -1));\nfunction M7(t, e, n) {\n  let r = !1, i = ja(t.selection, (s) => {\n    let a = Ar(t, s.head, -1) || Ar(t, s.head, 1) || s.head > 0 && Ar(t, s.head - 1, 1) || s.head < t.doc.length && Ar(t, s.head + 1, -1);\n    if (!a || !a.end)\n      return s;\n    r = !0;\n    let o = a.start.from == s.head ? a.end.to : a.end.from;\n    return ne.cursor(o);\n  });\n  return r ? (e(vi(t, i)), !0) : !1;\n}\nconst sA = ({ state: t, dispatch: e }) => M7(t, e);\nfunction Rr(t, e) {\n  let n = ja(t.state.selection, (r) => {\n    let i = e(r);\n    return ne.range(r.anchor, i.head, i.goalColumn, i.bidiLevel || void 0);\n  });\n  return n.eq(t.state.selection) ? !1 : (t.dispatch(vi(t.state, n)), !0);\n}\nfunction aA(t, e) {\n  return Rr(t, (n) => t.moveByChar(n, e));\n}\nconst qu = (t) => aA(t, !Fn(t)), Gu = (t) => aA(t, Fn(t));\nfunction oA(t, e) {\n  return Rr(t, (n) => t.moveByGroup(n, e));\n}\nconst lA = (t) => oA(t, !Fn(t)), uA = (t) => oA(t, Fn(t)), Q7 = (t) => Rr(t, (e) => Vc(t.state, e, !Fn(t))), T7 = (t) => Rr(t, (e) => Vc(t.state, e, Fn(t)));\nfunction cA(t, e) {\n  return Rr(t, (n) => t.moveVertically(n, e));\n}\nconst zu = (t) => cA(t, !1), Hu = (t) => cA(t, !0);\nfunction hA(t, e) {\n  return Rr(t, (n) => t.moveVertically(n, e, tA(t).height));\n}\nconst Yu = (t) => hA(t, !1), Ku = (t) => hA(t, !0), Of = (t) => Rr(t, (e) => us(t, e, !0)), vf = (t) => Rr(t, (e) => us(t, e, !1)), j7 = (t) => Rr(t, (e) => us(t, e, !Fn(t))), R7 = (t) => Rr(t, (e) => us(t, e, Fn(t))), pA = (t) => Rr(t, (e) => ne.cursor(t.lineBlockAt(e.head).from)), fA = (t) => Rr(t, (e) => ne.cursor(t.lineBlockAt(e.head).to)), Ju = ({ state: t, dispatch: e }) => (e(vi(t, { anchor: 0 })), !0), ec = ({ state: t, dispatch: e }) => (e(vi(t, { anchor: t.doc.length })), !0), tc = ({ state: t, dispatch: e }) => (e(vi(t, { anchor: t.selection.main.anchor, head: 0 })), !0), nc = ({ state: t, dispatch: e }) => (e(vi(t, { anchor: t.selection.main.anchor, head: t.doc.length })), !0), dA = ({ state: t, dispatch: e }) => (e(t.update({ selection: { anchor: 0, head: t.doc.length }, userEvent: "select" })), !0), mA = ({ state: t, dispatch: e }) => {\n  let n = Xc(t).map(({ from: r, to: i }) => ne.range(r, Math.min(i + 1, t.doc.length)));\n  return e(t.update({ selection: ne.create(n), userEvent: "select" })), !0;\n}, _7 = ({ state: t, dispatch: e }) => {\n  let n = ja(t.selection, (r) => {\n    let i = wn(t), s = i.resolveStack(r.from, 1);\n    if (r.empty) {\n      let a = i.resolveStack(r.from, -1);\n      a.node.from >= s.node.from && a.node.to <= s.node.to && (s = a);\n    }\n    for (let a = s; a; a = a.next) {\n      let { node: o } = a;\n      if ((o.from < r.from && o.to >= r.to || o.to > r.to && o.from <= r.from) && a.next)\n        return ne.range(o.to, o.from);\n    }\n    return r;\n  });\n  return n.eq(t.selection) ? !1 : (e(vi(t, n)), !0);\n}, Z7 = ({ state: t, dispatch: e }) => {\n  let n = t.selection, r = null;\n  return n.ranges.length > 1 ? r = ne.create([n.main]) : n.main.empty || (r = ne.create([ne.cursor(n.main.head)])), r ? (e(vi(t, r)), !0) : !1;\n};\nfunction Ra(t, e) {\n  if (t.state.readOnly)\n    return !1;\n  let n = "delete.selection", { state: r } = t, i = r.changeByRange((s) => {\n    let { from: a, to: o } = s;\n    if (a == o) {\n      let l = e(s);\n      l < a ? (n = "delete.backward", l = ql(t, l, !1)) : l > a && (n = "delete.forward", l = ql(t, l, !0)), a = Math.min(a, l), o = Math.max(o, l);\n    } else\n      a = ql(t, a, !1), o = ql(t, o, !0);\n    return a == o ? { range: s } : { changes: { from: a, to: o }, range: ne.cursor(a, a < s.head ? -1 : 1) };\n  });\n  return i.changes.empty ? !1 : (t.dispatch(r.update(i, {\n    scrollIntoView: !0,\n    userEvent: n,\n    effects: n == "delete.selection" ? be.announce.of(r.phrase("Selection deleted")) : void 0\n  })), !0);\n}\nfunction ql(t, e, n) {\n  if (t instanceof be)\n    for (let r of t.state.facet(be.atomicRanges).map((i) => i(t)))\n      r.between(e, e, (i, s) => {\n        i < e && s > e && (e = n ? s : i);\n      });\n  return e;\n}\nconst gA = (t, e, n) => Ra(t, (r) => {\n  let i = r.from, { state: s } = t, a = s.doc.lineAt(i), o, l;\n  if (n && !e && i > a.from && i < a.from + 200 && !/[^ \\t]/.test(o = a.text.slice(0, i - a.from))) {\n    if (o[o.length - 1] == "\t")\n      return i - 1;\n    let c = Bc(o, s.tabSize), h = c % _u(s) || _u(s);\n    for (let f = 0; f < h && o[o.length - 1 - f] == " "; f++)\n      i--;\n    l = i;\n  } else\n    l = kn(a.text, i - a.from, e, e) + a.from, l == i && a.number != (e ? s.doc.lines : 1) ? l += e ? 1 : -1 : !e && /[\\ufe00-\\ufe0f]/.test(a.text.slice(l - a.from, i - a.from)) && (l = kn(a.text, l - a.from, !1, !1) + a.from);\n  return l;\n}), ua = (t) => gA(t, !1, !0), rc = (t) => gA(t, !0, !1), bA = (t, e) => Ra(t, (n) => {\n  let r = n.head, { state: i } = t, s = i.doc.lineAt(r), a = i.charCategorizer(r);\n  for (let o = null; ; ) {\n    if (r == (e ? s.to : s.from)) {\n      r == n.head && s.number != (e ? i.doc.lines : 1) && (r += e ? 1 : -1);\n      break;\n    }\n    let l = kn(s.text, r - s.from, e) + s.from, c = s.text.slice(Math.min(r, l) - s.from, Math.max(r, l) - s.from), h = a(c);\n    if (o != null && h != o)\n      break;\n    (c != " " || r != n.head) && (o = h), r = l;\n  }\n  return r;\n}), ic = (t) => bA(t, !1), yA = (t) => bA(t, !0), xf = (t) => Ra(t, (e) => {\n  let n = t.lineBlockAt(e.head).to;\n  return e.head < n ? n : Math.min(t.state.doc.length, e.head + 1);\n}), $7 = (t) => Ra(t, (e) => {\n  let n = t.lineBlockAt(e.head).from;\n  return e.head > n ? n : Math.max(0, e.head - 1);\n}), L7 = (t) => Ra(t, (e) => {\n  let n = t.moveToLineBoundary(e, !1).head;\n  return e.head > n ? n : Math.max(0, e.head - 1);\n}), I7 = (t) => Ra(t, (e) => {\n  let n = t.moveToLineBoundary(e, !0).head;\n  return e.head < n ? n : Math.min(t.state.doc.length, e.head + 1);\n}), fm = ({ state: t, dispatch: e }) => {\n  if (t.readOnly)\n    return !1;\n  let n = t.changeByRange((r) => ({\n    changes: { from: r.from, to: r.to, insert: ht.of(["", ""]) },\n    range: ne.cursor(r.from)\n  }));\n  return e(t.update(n, { scrollIntoView: !0, userEvent: "input" })), !0;\n}, OA = ({ state: t, dispatch: e }) => {\n  if (t.readOnly)\n    return !1;\n  let n = t.changeByRange((r) => {\n    if (!r.empty || r.from == 0 || r.from == t.doc.length)\n      return { range: r };\n    let i = r.from, s = t.doc.lineAt(i), a = i == s.from ? i - 1 : kn(s.text, i - s.from, !1) + s.from, o = i == s.to ? i + 1 : kn(s.text, i - s.from, !0) + s.from;\n    return {\n      changes: { from: a, to: o, insert: t.doc.slice(i, o).append(t.doc.slice(a, i)) },\n      range: ne.cursor(o)\n    };\n  });\n  return n.changes.empty ? !1 : (e(t.update(n, { scrollIntoView: !0, userEvent: "move.character" })), !0);\n};\nfunction Xc(t) {\n  let e = [], n = -1;\n  for (let r of t.selection.ranges) {\n    let i = t.doc.lineAt(r.from), s = t.doc.lineAt(r.to);\n    if (!r.empty && r.to == s.from && (s = t.doc.lineAt(r.to - 1)), n >= i.number) {\n      let a = e[e.length - 1];\n      a.to = s.to, a.ranges.push(r);\n    } else\n      e.push({ from: i.from, to: s.to, ranges: [r] });\n    n = s.number + 1;\n  }\n  return e;\n}\nfunction vA(t, e, n) {\n  if (t.readOnly)\n    return !1;\n  let r = [], i = [];\n  for (let s of Xc(t)) {\n    if (n ? s.to == t.doc.length : s.from == 0)\n      continue;\n    let a = t.doc.lineAt(n ? s.to + 1 : s.from - 1), o = a.length + 1;\n    if (n) {\n      r.push({ from: s.to, to: a.to }, { from: s.from, insert: a.text + t.lineBreak });\n      for (let l of s.ranges)\n        i.push(ne.range(Math.min(t.doc.length, l.anchor + o), Math.min(t.doc.length, l.head + o)));\n    } else {\n      r.push({ from: a.from, to: s.from }, { from: s.to, insert: t.lineBreak + a.text });\n      for (let l of s.ranges)\n        i.push(ne.range(l.anchor - o, l.head - o));\n    }\n  }\n  return r.length ? (e(t.update({\n    changes: r,\n    scrollIntoView: !0,\n    selection: ne.create(i, t.selection.mainIndex),\n    userEvent: "move.line"\n  })), !0) : !1;\n}\nconst xA = ({ state: t, dispatch: e }) => vA(t, e, !1), kA = ({ state: t, dispatch: e }) => vA(t, e, !0);\nfunction wA(t, e, n) {\n  if (t.readOnly)\n    return !1;\n  let r = [];\n  for (let i of Xc(t))\n    n ? r.push({ from: i.from, insert: t.doc.slice(i.from, i.to) + t.lineBreak }) : r.push({ from: i.to, insert: t.lineBreak + t.doc.slice(i.from, i.to) });\n  return e(t.update({ changes: r, scrollIntoView: !0, userEvent: "input.copyline" })), !0;\n}\nconst CA = ({ state: t, dispatch: e }) => wA(t, e, !1), SA = ({ state: t, dispatch: e }) => wA(t, e, !0), AA = (t) => {\n  if (t.state.readOnly)\n    return !1;\n  let { state: e } = t, n = e.changes(Xc(e).map(({ from: i, to: s }) => (i > 0 ? i-- : s < e.doc.length && s++, { from: i, to: s }))), r = ja(e.selection, (i) => {\n    let s;\n    if (t.lineWrapping) {\n      let a = t.lineBlockAt(i.head), o = t.coordsAtPos(i.head, i.assoc || 1);\n      o && (s = a.bottom + t.documentTop - o.bottom + t.defaultLineHeight / 2);\n    }\n    return t.moveVertically(i, !0, s);\n  }).map(n);\n  return t.dispatch({ changes: n, selection: r, scrollIntoView: !0, userEvent: "delete.line" }), !0;\n};\nfunction N7(t, e) {\n  if (/\\(\\)|\\[\\]|\\{\\}/.test(t.sliceDoc(e - 1, e + 1)))\n    return { from: e, to: e };\n  let n = wn(t).resolveInner(e), r = n.childBefore(e), i = n.childAfter(e), s;\n  return r && i && r.to <= e && i.from >= e && (s = r.type.prop(nt.closedBy)) && s.indexOf(i.name) > -1 && t.doc.lineAt(r.to).from == t.doc.lineAt(i.from).from && !/\\S/.test(t.sliceDoc(r.to, i.from)) ? { from: r.to, to: i.from } : null;\n}\nconst jo = /* @__PURE__ */ DA(!1), V7 = /* @__PURE__ */ DA(!0);\nfunction DA(t) {\n  return ({ state: e, dispatch: n }) => {\n    if (e.readOnly)\n      return !1;\n    let r = e.changeByRange((i) => {\n      let { from: s, to: a } = i, o = e.doc.lineAt(s), l = !t && s == a && N7(e, s);\n      t && (s = a = (a <= o.to ? o : e.doc.lineAt(a)).to);\n      let c = new Rc(e, { simulateBreak: s, simulateDoubleBreak: !!l }), h = fS(c, s);\n      for (h == null && (h = Bc(/^\\s*/.exec(e.doc.lineAt(s).text)[0], e.tabSize)); a < o.to && /\\s/.test(o.text[a - o.from]); )\n        a++;\n      l ? { from: s, to: a } = l : s > o.from && s < o.from + 100 && !/\\S/.test(o.text.slice(0, s)) && (s = o.from);\n      let f = ["", Zu(e, h)];\n      return l && f.push(Zu(e, c.lineIndent(o.from, -1))), {\n        changes: { from: s, to: a, insert: ht.of(f) },\n        range: ne.cursor(s + 1 + f[1].length)\n      };\n    });\n    return n(e.update(r, { scrollIntoView: !0, userEvent: "input" })), !0;\n  };\n}\nfunction dm(t, e) {\n  let n = -1;\n  return t.changeByRange((r) => {\n    let i = [];\n    for (let a = r.from; a <= r.to; ) {\n      let o = t.doc.lineAt(a);\n      o.number > n && (r.empty || r.to > o.from) && (e(o, i, r), n = o.number), a = o.to + 1;\n    }\n    let s = t.changes(i);\n    return {\n      changes: i,\n      range: ne.range(s.mapPos(r.anchor, 1), s.mapPos(r.head, 1))\n    };\n  });\n}\nconst PA = ({ state: t, dispatch: e }) => {\n  if (t.readOnly)\n    return !1;\n  let n = /* @__PURE__ */ Object.create(null), r = new Rc(t, { overrideIndentation: (s) => {\n    let a = n[s];\n    return a ?? -1;\n  } }), i = dm(t, (s, a, o) => {\n    let l = fS(r, s.from);\n    if (l == null)\n      return;\n    /\\S/.test(s.text) || (l = 0);\n    let c = /^\\s*/.exec(s.text)[0], h = Zu(t, l);\n    (c != h || o.from < s.from + c.length) && (n[s.from] = l, a.push({ from: s.from, to: s.from + c.length, insert: h }));\n  });\n  return i.changes.empty || e(t.update(i, { userEvent: "indent" })), !0;\n}, sc = ({ state: t, dispatch: e }) => t.readOnly ? !1 : (e(t.update(dm(t, (n, r) => {\n  r.push({ from: n.from, insert: t.facet(Ca) });\n}), { userEvent: "input.indent" })), !0), ac = ({ state: t, dispatch: e }) => t.readOnly ? !1 : (e(t.update(dm(t, (n, r) => {\n  let i = /^\\s*/.exec(n.text)[0];\n  if (!i)\n    return;\n  let s = Bc(i, t.tabSize), a = 0, o = Zu(t, Math.max(0, s - _u(t)));\n  for (; a < i.length && a < o.length && i.charCodeAt(a) == o.charCodeAt(a); )\n    a++;\n  r.push({ from: n.from + a, to: n.from + i.length, insert: o.slice(a) });\n}), { userEvent: "delete.dedent" })), !0), X7 = (t) => (t.setTabFocusMode(), !0), W7 = [\n  { key: "Ctrl-b", run: To, shift: qu, preventDefault: !0 },\n  { key: "Ctrl-f", run: Nu, shift: Gu },\n  { key: "Ctrl-p", run: Vu, shift: zu },\n  { key: "Ctrl-n", run: Xu, shift: Hu },\n  { key: "Ctrl-a", run: rA, shift: pA },\n  { key: "Ctrl-e", run: iA, shift: fA },\n  { key: "Ctrl-d", run: rc },\n  { key: "Ctrl-h", run: ua },\n  { key: "Ctrl-k", run: xf },\n  { key: "Ctrl-Alt-h", run: ic },\n  { key: "Ctrl-o", run: fm },\n  { key: "Ctrl-t", run: OA },\n  { key: "Ctrl-v", run: la }\n], U7 = /* @__PURE__ */ [\n  { key: "ArrowLeft", run: To, shift: qu, preventDefault: !0 },\n  { key: "Mod-ArrowLeft", mac: "Alt-ArrowLeft", run: KS, shift: lA, preventDefault: !0 },\n  { mac: "Cmd-ArrowLeft", run: F7, shift: j7, preventDefault: !0 },\n  { key: "ArrowRight", run: Nu, shift: Gu, preventDefault: !0 },\n  { key: "Mod-ArrowRight", mac: "Alt-ArrowRight", run: JS, shift: uA, preventDefault: !0 },\n  { mac: "Cmd-ArrowRight", run: B7, shift: R7, preventDefault: !0 },\n  { key: "ArrowUp", run: Vu, shift: zu, preventDefault: !0 },\n  { mac: "Cmd-ArrowUp", run: Ju, shift: tc },\n  { mac: "Ctrl-ArrowUp", run: go, shift: Yu },\n  { key: "ArrowDown", run: Xu, shift: Hu, preventDefault: !0 },\n  { mac: "Cmd-ArrowDown", run: ec, shift: nc },\n  { mac: "Ctrl-ArrowDown", run: la, shift: Ku },\n  { key: "PageUp", run: go, shift: Yu },\n  { key: "PageDown", run: la, shift: Ku },\n  { key: "Home", run: Uu, shift: vf, preventDefault: !0 },\n  { key: "Mod-Home", run: Ju, shift: tc },\n  { key: "End", run: Wu, shift: Of, preventDefault: !0 },\n  { key: "Mod-End", run: ec, shift: nc },\n  { key: "Enter", run: jo, shift: jo },\n  { key: "Mod-a", run: dA },\n  { key: "Backspace", run: ua, shift: ua },\n  { key: "Delete", run: rc },\n  { key: "Mod-Backspace", mac: "Alt-Backspace", run: ic },\n  { key: "Mod-Delete", mac: "Alt-Delete", run: yA },\n  { mac: "Mod-Backspace", run: L7 },\n  { mac: "Mod-Delete", run: I7 }\n].concat(/* @__PURE__ */ W7.map((t) => ({ mac: t.key, run: t.run, shift: t.shift }))), q7 = /* @__PURE__ */ [\n  { key: "Alt-ArrowLeft", mac: "Ctrl-ArrowLeft", run: P7, shift: Q7 },\n  { key: "Alt-ArrowRight", mac: "Ctrl-ArrowRight", run: E7, shift: T7 },\n  { key: "Alt-ArrowUp", run: xA },\n  { key: "Shift-Alt-ArrowUp", run: CA },\n  { key: "Alt-ArrowDown", run: kA },\n  { key: "Shift-Alt-ArrowDown", run: SA },\n  { key: "Escape", run: Z7 },\n  { key: "Mod-Enter", run: V7 },\n  { key: "Alt-l", mac: "Ctrl-l", run: mA },\n  { key: "Mod-i", run: _7, preventDefault: !0 },\n  { key: "Mod-[", run: ac },\n  { key: "Mod-]", run: sc },\n  { key: "Mod-Alt-\\\\", run: PA },\n  { key: "Shift-Mod-k", run: AA },\n  { key: "Shift-Mod-\\\\", run: sA },\n  { key: "Mod-/", run: $c },\n  { key: "Alt-A", run: um },\n  { key: "Ctrl-m", mac: "Shift-Alt-m", run: X7 }\n].concat(U7);\nclass oc {\n  /**\n  @internal\n  */\n  constructor(e, n, r, i, s, a, o, l, c, h = 0, f) {\n    this.p = e, this.stack = n, this.state = r, this.reducePos = i, this.pos = s, this.score = a, this.buffer = o, this.bufferBase = l, this.curContext = c, this.lookAhead = h, this.parent = f;\n  }\n  /**\n  @internal\n  */\n  toString() {\n    return `[${this.stack.filter((e, n) => n % 3 == 0).concat(this.state)}]@${this.pos}${this.score ? "!" + this.score : ""}`;\n  }\n  // Start an empty stack\n  /**\n  @internal\n  */\n  static start(e, n, r = 0) {\n    let i = e.parser.context;\n    return new oc(e, [], n, r, r, 0, [], 0, i ? new $0(i, i.start) : null, 0, null);\n  }\n  /**\n  The stack\'s current [context](#lr.ContextTracker) value, if\n  any. Its type will depend on the context tracker\'s type\n  parameter, or it will be `null` if there is no context\n  tracker.\n  */\n  get context() {\n    return this.curContext ? this.curContext.context : null;\n  }\n  // Push a state onto the stack, tracking its start position as well\n  // as the buffer base at that point.\n  /**\n  @internal\n  */\n  pushState(e, n) {\n    this.stack.push(this.state, n, this.bufferBase + this.buffer.length), this.state = e;\n  }\n  // Apply a reduce action\n  /**\n  @internal\n  */\n  reduce(e) {\n    var n;\n    let r = e >> 19, i = e & 65535, { parser: s } = this.p, a = this.reducePos < this.pos - 25;\n    a && this.setLookAhead(this.pos);\n    let o = s.dynamicPrecedence(i);\n    if (o && (this.score += o), r == 0) {\n      this.pushState(s.getGoto(this.state, i, !0), this.reducePos), i < s.minRepeatTerm && this.storeNode(i, this.reducePos, this.reducePos, a ? 8 : 4, !0), this.reduceContext(i, this.reducePos);\n      return;\n    }\n    let l = this.stack.length - (r - 1) * 3 - (e & 262144 ? 6 : 0), c = l ? this.stack[l - 2] : this.p.ranges[0].from, h = this.reducePos - c;\n    h >= 2e3 && !(!((n = this.p.parser.nodeSet.types[i]) === null || n === void 0) && n.isAnonymous) && (c == this.p.lastBigReductionStart ? (this.p.bigReductionCount++, this.p.lastBigReductionSize = h) : this.p.lastBigReductionSize < h && (this.p.bigReductionCount = 1, this.p.lastBigReductionStart = c, this.p.lastBigReductionSize = h));\n    let f = l ? this.stack[l - 1] : 0, m = this.bufferBase + this.buffer.length - f;\n    if (i < s.minRepeatTerm || e & 131072) {\n      let y = s.stateFlag(\n        this.state,\n        1\n        /* StateFlag.Skipped */\n      ) ? this.pos : this.reducePos;\n      this.storeNode(i, c, y, m + 4, !0);\n    }\n    if (e & 262144)\n      this.state = this.stack[l];\n    else {\n      let y = this.stack[l - 3];\n      this.state = s.getGoto(y, i, !0);\n    }\n    for (; this.stack.length > l; )\n      this.stack.pop();\n    this.reduceContext(i, c);\n  }\n  // Shift a value into the buffer\n  /**\n  @internal\n  */\n  storeNode(e, n, r, i = 4, s = !1) {\n    if (e == 0 && (!this.stack.length || this.stack[this.stack.length - 1] < this.buffer.length + this.bufferBase)) {\n      let a = this, o = this.buffer.length;\n      if (o == 0 && a.parent && (o = a.bufferBase - a.parent.bufferBase, a = a.parent), o > 0 && a.buffer[o - 4] == 0 && a.buffer[o - 1] > -1) {\n        if (n == r)\n          return;\n        if (a.buffer[o - 2] >= n) {\n          a.buffer[o - 2] = r;\n          return;\n        }\n      }\n    }\n    if (!s || this.pos == r)\n      this.buffer.push(e, n, r, i);\n    else {\n      let a = this.buffer.length;\n      if (a > 0 && this.buffer[a - 4] != 0) {\n        let o = !1;\n        for (let l = a; l > 0 && this.buffer[l - 2] > r; l -= 4)\n          if (this.buffer[l - 1] >= 0) {\n            o = !0;\n            break;\n          }\n        if (o)\n          for (; a > 0 && this.buffer[a - 2] > r; )\n            this.buffer[a] = this.buffer[a - 4], this.buffer[a + 1] = this.buffer[a - 3], this.buffer[a + 2] = this.buffer[a - 2], this.buffer[a + 3] = this.buffer[a - 1], a -= 4, i > 4 && (i -= 4);\n      }\n      this.buffer[a] = e, this.buffer[a + 1] = n, this.buffer[a + 2] = r, this.buffer[a + 3] = i;\n    }\n  }\n  // Apply a shift action\n  /**\n  @internal\n  */\n  shift(e, n, r, i) {\n    if (e & 131072)\n      this.pushState(e & 65535, this.pos);\n    else if (e & 262144)\n      this.pos = i, this.shiftContext(n, r), n <= this.p.parser.maxNode && this.buffer.push(n, r, i, 4);\n    else {\n      let s = e, { parser: a } = this.p;\n      (i > this.pos || n <= a.maxNode) && (this.pos = i, a.stateFlag(\n        s,\n        1\n        /* StateFlag.Skipped */\n      ) || (this.reducePos = i)), this.pushState(s, r), this.shiftContext(n, r), n <= a.maxNode && this.buffer.push(n, r, i, 4);\n    }\n  }\n  // Apply an action\n  /**\n  @internal\n  */\n  apply(e, n, r, i) {\n    e & 65536 ? this.reduce(e) : this.shift(e, n, r, i);\n  }\n  // Add a prebuilt (reused) node into the buffer.\n  /**\n  @internal\n  */\n  useNode(e, n) {\n    let r = this.p.reused.length - 1;\n    (r < 0 || this.p.reused[r] != e) && (this.p.reused.push(e), r++);\n    let i = this.pos;\n    this.reducePos = this.pos = i + e.length, this.pushState(n, i), this.buffer.push(\n      r,\n      i,\n      this.reducePos,\n      -1\n      /* size == -1 means this is a reused value */\n    ), this.curContext && this.updateContext(this.curContext.tracker.reuse(this.curContext.context, e, this, this.p.stream.reset(this.pos - e.length)));\n  }\n  // Split the stack. Due to the buffer sharing and the fact\n  // that `this.stack` tends to stay quite shallow, this isn\'t very\n  // expensive.\n  /**\n  @internal\n  */\n  split() {\n    let e = this, n = e.buffer.length;\n    for (; n > 0 && e.buffer[n - 2] > e.reducePos; )\n      n -= 4;\n    let r = e.buffer.slice(n), i = e.bufferBase + n;\n    for (; e && i == e.bufferBase; )\n      e = e.parent;\n    return new oc(this.p, this.stack.slice(), this.state, this.reducePos, this.pos, this.score, r, i, this.curContext, this.lookAhead, e);\n  }\n  // Try to recover from an error by \'deleting\' (ignoring) one token.\n  /**\n  @internal\n  */\n  recoverByDelete(e, n) {\n    let r = e <= this.p.parser.maxNode;\n    r && this.storeNode(e, this.pos, n, 4), this.storeNode(0, this.pos, n, r ? 8 : 4), this.pos = this.reducePos = n, this.score -= 190;\n  }\n  /**\n  Check if the given term would be able to be shifted (optionally\n  after some reductions) on this stack. This can be useful for\n  external tokenizers that want to make sure they only provide a\n  given token when it applies.\n  */\n  canShift(e) {\n    for (let n = new G7(this); ; ) {\n      let r = this.p.parser.stateSlot(\n        n.state,\n        4\n        /* ParseState.DefaultReduce */\n      ) || this.p.parser.hasAction(n.state, e);\n      if (r == 0)\n        return !1;\n      if (!(r & 65536))\n        return !0;\n      n.reduce(r);\n    }\n  }\n  // Apply up to Recover.MaxNext recovery actions that conceptually\n  // inserts some missing token or rule.\n  /**\n  @internal\n  */\n  recoverByInsert(e) {\n    if (this.stack.length >= 300)\n      return [];\n    let n = this.p.parser.nextStates(this.state);\n    if (n.length > 8 || this.stack.length >= 120) {\n      let i = [];\n      for (let s = 0, a; s < n.length; s += 2)\n        (a = n[s + 1]) != this.state && this.p.parser.hasAction(a, e) && i.push(n[s], a);\n      if (this.stack.length < 120)\n        for (let s = 0; i.length < 8 && s < n.length; s += 2) {\n          let a = n[s + 1];\n          i.some((o, l) => l & 1 && o == a) || i.push(n[s], a);\n        }\n      n = i;\n    }\n    let r = [];\n    for (let i = 0; i < n.length && r.length < 4; i += 2) {\n      let s = n[i + 1];\n      if (s == this.state)\n        continue;\n      let a = this.split();\n      a.pushState(s, this.pos), a.storeNode(0, a.pos, a.pos, 4, !0), a.shiftContext(n[i], this.pos), a.reducePos = this.pos, a.score -= 200, r.push(a);\n    }\n    return r;\n  }\n  // Force a reduce, if possible. Return false if that can\'t\n  // be done.\n  /**\n  @internal\n  */\n  forceReduce() {\n    let { parser: e } = this.p, n = e.stateSlot(\n      this.state,\n      5\n      /* ParseState.ForcedReduce */\n    );\n    if (!(n & 65536))\n      return !1;\n    if (!e.validAction(this.state, n)) {\n      let r = n >> 19, i = n & 65535, s = this.stack.length - r * 3;\n      if (s < 0 || e.getGoto(this.stack[s], i, !1) < 0) {\n        let a = this.findForcedReduction();\n        if (a == null)\n          return !1;\n        n = a;\n      }\n      this.storeNode(0, this.pos, this.pos, 4, !0), this.score -= 100;\n    }\n    return this.reducePos = this.pos, this.reduce(n), !0;\n  }\n  /**\n  Try to scan through the automaton to find some kind of reduction\n  that can be applied. Used when the regular ForcedReduce field\n  isn\'t a valid action. @internal\n  */\n  findForcedReduction() {\n    let { parser: e } = this.p, n = [], r = (i, s) => {\n      if (!n.includes(i))\n        return n.push(i), e.allActions(i, (a) => {\n          if (!(a & 393216)) if (a & 65536) {\n            let o = (a >> 19) - s;\n            if (o > 1) {\n              let l = a & 65535, c = this.stack.length - o * 3;\n              if (c >= 0 && e.getGoto(this.stack[c], l, !1) >= 0)\n                return o << 19 | 65536 | l;\n            }\n          } else {\n            let o = r(a, s + 1);\n            if (o != null)\n              return o;\n          }\n        });\n    };\n    return r(this.state, 0);\n  }\n  /**\n  @internal\n  */\n  forceAll() {\n    for (; !this.p.parser.stateFlag(\n      this.state,\n      2\n      /* StateFlag.Accepting */\n    ); )\n      if (!this.forceReduce()) {\n        this.storeNode(0, this.pos, this.pos, 4, !0);\n        break;\n      }\n    return this;\n  }\n  /**\n  Check whether this state has no further actions (assumed to be a direct descendant of the\n  top state, since any other states must be able to continue\n  somehow). @internal\n  */\n  get deadEnd() {\n    if (this.stack.length != 3)\n      return !1;\n    let { parser: e } = this.p;\n    return e.data[e.stateSlot(\n      this.state,\n      1\n      /* ParseState.Actions */\n    )] == 65535 && !e.stateSlot(\n      this.state,\n      4\n      /* ParseState.DefaultReduce */\n    );\n  }\n  /**\n  Restart the stack (put it back in its start state). Only safe\n  when this.stack.length == 3 (state is directly below the top\n  state). @internal\n  */\n  restart() {\n    this.storeNode(0, this.pos, this.pos, 4, !0), this.state = this.stack[0], this.stack.length = 0;\n  }\n  /**\n  @internal\n  */\n  sameState(e) {\n    if (this.state != e.state || this.stack.length != e.stack.length)\n      return !1;\n    for (let n = 0; n < this.stack.length; n += 3)\n      if (this.stack[n] != e.stack[n])\n        return !1;\n    return !0;\n  }\n  /**\n  Get the parser used by this stack.\n  */\n  get parser() {\n    return this.p.parser;\n  }\n  /**\n  Test whether a given dialect (by numeric ID, as exported from\n  the terms file) is enabled.\n  */\n  dialectEnabled(e) {\n    return this.p.parser.dialect.flags[e];\n  }\n  shiftContext(e, n) {\n    this.curContext && this.updateContext(this.curContext.tracker.shift(this.curContext.context, e, this, this.p.stream.reset(n)));\n  }\n  reduceContext(e, n) {\n    this.curContext && this.updateContext(this.curContext.tracker.reduce(this.curContext.context, e, this, this.p.stream.reset(n)));\n  }\n  /**\n  @internal\n  */\n  emitContext() {\n    let e = this.buffer.length - 1;\n    (e < 0 || this.buffer[e] != -3) && this.buffer.push(this.curContext.hash, this.pos, this.pos, -3);\n  }\n  /**\n  @internal\n  */\n  emitLookAhead() {\n    let e = this.buffer.length - 1;\n    (e < 0 || this.buffer[e] != -4) && this.buffer.push(this.lookAhead, this.pos, this.pos, -4);\n  }\n  updateContext(e) {\n    if (e != this.curContext.context) {\n      let n = new $0(this.curContext.tracker, e);\n      n.hash != this.curContext.hash && this.emitContext(), this.curContext = n;\n    }\n  }\n  /**\n  @internal\n  */\n  setLookAhead(e) {\n    e > this.lookAhead && (this.emitLookAhead(), this.lookAhead = e);\n  }\n  /**\n  @internal\n  */\n  close() {\n    this.curContext && this.curContext.tracker.strict && this.emitContext(), this.lookAhead > 0 && this.emitLookAhead();\n  }\n}\nclass $0 {\n  constructor(e, n) {\n    this.tracker = e, this.context = n, this.hash = e.strict ? e.hash(n) : 0;\n  }\n}\nclass G7 {\n  constructor(e) {\n    this.start = e, this.state = e.state, this.stack = e.stack, this.base = this.stack.length;\n  }\n  reduce(e) {\n    let n = e & 65535, r = e >> 19;\n    r == 0 ? (this.stack == this.start.stack && (this.stack = this.stack.slice()), this.stack.push(this.state, 0, 0), this.base += 3) : this.base -= (r - 1) * 3;\n    let i = this.start.p.parser.getGoto(this.stack[this.base - 3], n, !0);\n    this.state = i;\n  }\n}\nclass lc {\n  constructor(e, n, r) {\n    this.stack = e, this.pos = n, this.index = r, this.buffer = e.buffer, this.index == 0 && this.maybeNext();\n  }\n  static create(e, n = e.bufferBase + e.buffer.length) {\n    return new lc(e, n, n - e.bufferBase);\n  }\n  maybeNext() {\n    let e = this.stack.parent;\n    e != null && (this.index = this.stack.bufferBase - e.bufferBase, this.stack = e, this.buffer = e.buffer);\n  }\n  get id() {\n    return this.buffer[this.index - 4];\n  }\n  get start() {\n    return this.buffer[this.index - 3];\n  }\n  get end() {\n    return this.buffer[this.index - 2];\n  }\n  get size() {\n    return this.buffer[this.index - 1];\n  }\n  next() {\n    this.index -= 4, this.pos -= 4, this.index == 0 && this.maybeNext();\n  }\n  fork() {\n    return new lc(this.stack, this.pos, this.index);\n  }\n}\nfunction lo(t, e = Uint16Array) {\n  if (typeof t != "string")\n    return t;\n  let n = null;\n  for (let r = 0, i = 0; r < t.length; ) {\n    let s = 0;\n    for (; ; ) {\n      let a = t.charCodeAt(r++), o = !1;\n      if (a == 126) {\n        s = 65535;\n        break;\n      }\n      a >= 92 && a--, a >= 34 && a--;\n      let l = a - 32;\n      if (l >= 46 && (l -= 46, o = !0), s += l, o)\n        break;\n      s *= 46;\n    }\n    n ? n[i++] = s : n = new e(s);\n  }\n  return n;\n}\nclass pu {\n  constructor() {\n    this.start = -1, this.value = -1, this.end = -1, this.extended = -1, this.lookAhead = 0, this.mask = 0, this.context = 0;\n  }\n}\nconst L0 = new pu();\nclass z7 {\n  /**\n  @internal\n  */\n  constructor(e, n) {\n    this.input = e, this.ranges = n, this.chunk = "", this.chunkOff = 0, this.chunk2 = "", this.chunk2Pos = 0, this.next = -1, this.token = L0, this.rangeIndex = 0, this.pos = this.chunkPos = n[0].from, this.range = n[0], this.end = n[n.length - 1].to, this.readNext();\n  }\n  /**\n  @internal\n  */\n  resolveOffset(e, n) {\n    let r = this.range, i = this.rangeIndex, s = this.pos + e;\n    for (; s < r.from; ) {\n      if (!i)\n        return null;\n      let a = this.ranges[--i];\n      s -= r.from - a.to, r = a;\n    }\n    for (; n < 0 ? s > r.to : s >= r.to; ) {\n      if (i == this.ranges.length - 1)\n        return null;\n      let a = this.ranges[++i];\n      s += a.from - r.to, r = a;\n    }\n    return s;\n  }\n  /**\n  @internal\n  */\n  clipPos(e) {\n    if (e >= this.range.from && e < this.range.to)\n      return e;\n    for (let n of this.ranges)\n      if (n.to > e)\n        return Math.max(e, n.from);\n    return this.end;\n  }\n  /**\n  Look at a code unit near the stream position. `.peek(0)` equals\n  `.next`, `.peek(-1)` gives you the previous character, and so\n  on.\n  \n  Note that looking around during tokenizing creates dependencies\n  on potentially far-away content, which may reduce the\n  effectiveness incremental parsing—when looking forward—or even\n  cause invalid reparses when looking backward more than 25 code\n  units, since the library does not track lookbehind.\n  */\n  peek(e) {\n    let n = this.chunkOff + e, r, i;\n    if (n >= 0 && n < this.chunk.length)\n      r = this.pos + e, i = this.chunk.charCodeAt(n);\n    else {\n      let s = this.resolveOffset(e, 1);\n      if (s == null)\n        return -1;\n      if (r = s, r >= this.chunk2Pos && r < this.chunk2Pos + this.chunk2.length)\n        i = this.chunk2.charCodeAt(r - this.chunk2Pos);\n      else {\n        let a = this.rangeIndex, o = this.range;\n        for (; o.to <= r; )\n          o = this.ranges[++a];\n        this.chunk2 = this.input.chunk(this.chunk2Pos = r), r + this.chunk2.length > o.to && (this.chunk2 = this.chunk2.slice(0, o.to - r)), i = this.chunk2.charCodeAt(0);\n      }\n    }\n    return r >= this.token.lookAhead && (this.token.lookAhead = r + 1), i;\n  }\n  /**\n  Accept a token. By default, the end of the token is set to the\n  current stream position, but you can pass an offset (relative to\n  the stream position) to change that.\n  */\n  acceptToken(e, n = 0) {\n    let r = n ? this.resolveOffset(n, -1) : this.pos;\n    if (r == null || r < this.token.start)\n      throw new RangeError("Token end out of bounds");\n    this.token.value = e, this.token.end = r;\n  }\n  /**\n  Accept a token ending at a specific given position.\n  */\n  acceptTokenTo(e, n) {\n    this.token.value = e, this.token.end = n;\n  }\n  getChunk() {\n    if (this.pos >= this.chunk2Pos && this.pos < this.chunk2Pos + this.chunk2.length) {\n      let { chunk: e, chunkPos: n } = this;\n      this.chunk = this.chunk2, this.chunkPos = this.chunk2Pos, this.chunk2 = e, this.chunk2Pos = n, this.chunkOff = this.pos - this.chunkPos;\n    } else {\n      this.chunk2 = this.chunk, this.chunk2Pos = this.chunkPos;\n      let e = this.input.chunk(this.pos), n = this.pos + e.length;\n      this.chunk = n > this.range.to ? e.slice(0, this.range.to - this.pos) : e, this.chunkPos = this.pos, this.chunkOff = 0;\n    }\n  }\n  readNext() {\n    return this.chunkOff >= this.chunk.length && (this.getChunk(), this.chunkOff == this.chunk.length) ? this.next = -1 : this.next = this.chunk.charCodeAt(this.chunkOff);\n  }\n  /**\n  Move the stream forward N (defaults to 1) code units. Returns\n  the new value of [`next`](#lr.InputStream.next).\n  */\n  advance(e = 1) {\n    for (this.chunkOff += e; this.pos + e >= this.range.to; ) {\n      if (this.rangeIndex == this.ranges.length - 1)\n        return this.setDone();\n      e -= this.range.to - this.pos, this.range = this.ranges[++this.rangeIndex], this.pos = this.range.from;\n    }\n    return this.pos += e, this.pos >= this.token.lookAhead && (this.token.lookAhead = this.pos + 1), this.readNext();\n  }\n  setDone() {\n    return this.pos = this.chunkPos = this.end, this.range = this.ranges[this.rangeIndex = this.ranges.length - 1], this.chunk = "", this.next = -1;\n  }\n  /**\n  @internal\n  */\n  reset(e, n) {\n    if (n ? (this.token = n, n.start = e, n.lookAhead = e + 1, n.value = n.extended = -1) : this.token = L0, this.pos != e) {\n      if (this.pos = e, e == this.end)\n        return this.setDone(), this;\n      for (; e < this.range.from; )\n        this.range = this.ranges[--this.rangeIndex];\n      for (; e >= this.range.to; )\n        this.range = this.ranges[++this.rangeIndex];\n      e >= this.chunkPos && e < this.chunkPos + this.chunk.length ? this.chunkOff = e - this.chunkPos : (this.chunk = "", this.chunkOff = 0), this.readNext();\n    }\n    return this;\n  }\n  /**\n  @internal\n  */\n  read(e, n) {\n    if (e >= this.chunkPos && n <= this.chunkPos + this.chunk.length)\n      return this.chunk.slice(e - this.chunkPos, n - this.chunkPos);\n    if (e >= this.chunk2Pos && n <= this.chunk2Pos + this.chunk2.length)\n      return this.chunk2.slice(e - this.chunk2Pos, n - this.chunk2Pos);\n    if (e >= this.range.from && n <= this.range.to)\n      return this.input.read(e, n);\n    let r = "";\n    for (let i of this.ranges) {\n      if (i.from >= n)\n        break;\n      i.to > e && (r += this.input.read(Math.max(i.from, e), Math.min(i.to, n)));\n    }\n    return r;\n  }\n}\nclass ca {\n  constructor(e, n) {\n    this.data = e, this.id = n;\n  }\n  token(e, n) {\n    let { parser: r } = n.p;\n    EA(this.data, e, n, this.id, r.data, r.tokenPrecTable);\n  }\n}\nca.prototype.contextual = ca.prototype.fallback = ca.prototype.extend = !1;\nclass kf {\n  constructor(e, n, r) {\n    this.precTable = n, this.elseToken = r, this.data = typeof e == "string" ? lo(e) : e;\n  }\n  token(e, n) {\n    let r = e.pos, i = 0;\n    for (; ; ) {\n      let s = e.next < 0, a = e.resolveOffset(1, 1);\n      if (EA(this.data, e, n, 0, this.data, this.precTable), e.token.value > -1)\n        break;\n      if (this.elseToken == null)\n        return;\n      if (s || i++, a == null)\n        break;\n      e.reset(a, e.token);\n    }\n    i && (e.reset(r, e.token), e.acceptToken(this.elseToken, i));\n  }\n}\nkf.prototype.contextual = ca.prototype.fallback = ca.prototype.extend = !1;\nclass el {\n  /**\n  Create a tokenizer. The first argument is the function that,\n  given an input stream, scans for the types of tokens it\n  recognizes at the stream\'s position, and calls\n  [`acceptToken`](#lr.InputStream.acceptToken) when it finds\n  one.\n  */\n  constructor(e, n = {}) {\n    this.token = e, this.contextual = !!n.contextual, this.fallback = !!n.fallback, this.extend = !!n.extend;\n  }\n}\nfunction EA(t, e, n, r, i, s) {\n  let a = 0, o = 1 << r, { dialect: l } = n.p.parser;\n  e: for (; o & t[a]; ) {\n    let c = t[a + 1];\n    for (let y = a + 3; y < c; y += 2)\n      if ((t[y + 1] & o) > 0) {\n        let v = t[y];\n        if (l.allows(v) && (e.token.value == -1 || e.token.value == v || H7(v, e.token.value, i, s))) {\n          e.acceptToken(v);\n          break;\n        }\n      }\n    let h = e.next, f = 0, m = t[a + 2];\n    if (e.next < 0 && m > f && t[c + m * 3 - 3] == 65535) {\n      a = t[c + m * 3 - 1];\n      continue e;\n    }\n    for (; f < m; ) {\n      let y = f + m >> 1, v = c + y + (y << 1), C = t[v], S = t[v + 1] || 65536;\n      if (h < C)\n        m = y;\n      else if (h >= S)\n        f = y + 1;\n      else {\n        a = t[v + 2], e.advance();\n        continue e;\n      }\n    }\n    break;\n  }\n}\nfunction I0(t, e, n) {\n  for (let r = e, i; (i = t[r]) != 65535; r++)\n    if (i == n)\n      return r - e;\n  return -1;\n}\nfunction H7(t, e, n, r) {\n  let i = I0(n, r, e);\n  return i < 0 || I0(n, r, t) < i;\n}\nconst sr = typeof process < "u" && process.env && /\\bparse\\b/.test(process.env.LOG);\nlet ip = null;\nfunction N0(t, e, n) {\n  let r = t.cursor(un.IncludeAnonymous);\n  for (r.moveTo(e); ; )\n    if (!(n < 0 ? r.childBefore(e) : r.childAfter(e)))\n      for (; ; ) {\n        if ((n < 0 ? r.to < e : r.from > e) && !r.type.isError)\n          return n < 0 ? Math.max(0, Math.min(\n            r.to - 1,\n            e - 25\n            /* Lookahead.Margin */\n          )) : Math.min(t.length, Math.max(\n            r.from + 1,\n            e + 25\n            /* Lookahead.Margin */\n          ));\n        if (n < 0 ? r.prevSibling() : r.nextSibling())\n          break;\n        if (!r.parent())\n          return n < 0 ? 0 : t.length;\n      }\n}\nclass Y7 {\n  constructor(e, n) {\n    this.fragments = e, this.nodeSet = n, this.i = 0, this.fragment = null, this.safeFrom = -1, this.safeTo = -1, this.trees = [], this.start = [], this.index = [], this.nextFragment();\n  }\n  nextFragment() {\n    let e = this.fragment = this.i == this.fragments.length ? null : this.fragments[this.i++];\n    if (e) {\n      for (this.safeFrom = e.openStart ? N0(e.tree, e.from + e.offset, 1) - e.offset : e.from, this.safeTo = e.openEnd ? N0(e.tree, e.to + e.offset, -1) - e.offset : e.to; this.trees.length; )\n        this.trees.pop(), this.start.pop(), this.index.pop();\n      this.trees.push(e.tree), this.start.push(-e.offset), this.index.push(0), this.nextStart = this.safeFrom;\n    } else\n      this.nextStart = 1e9;\n  }\n  // `pos` must be >= any previously given `pos` for this cursor\n  nodeAt(e) {\n    if (e < this.nextStart)\n      return null;\n    for (; this.fragment && this.safeTo <= e; )\n      this.nextFragment();\n    if (!this.fragment)\n      return null;\n    for (; ; ) {\n      let n = this.trees.length - 1;\n      if (n < 0)\n        return this.nextFragment(), null;\n      let r = this.trees[n], i = this.index[n];\n      if (i == r.children.length) {\n        this.trees.pop(), this.start.pop(), this.index.pop();\n        continue;\n      }\n      let s = r.children[i], a = this.start[n] + r.positions[i];\n      if (a > e)\n        return this.nextStart = a, null;\n      if (s instanceof an) {\n        if (a == e) {\n          if (a < this.safeFrom)\n            return null;\n          let o = a + s.length;\n          if (o <= this.safeTo) {\n            let l = s.prop(nt.lookAhead);\n            if (!l || o + l < this.fragment.to)\n              return s;\n          }\n        }\n        this.index[n]++, a + s.length >= Math.max(this.safeFrom, e) && (this.trees.push(s), this.start.push(a), this.index.push(0));\n      } else\n        this.index[n]++, this.nextStart = a + s.length;\n    }\n  }\n}\nclass K7 {\n  constructor(e, n) {\n    this.stream = n, this.tokens = [], this.mainToken = null, this.actions = [], this.tokens = e.tokenizers.map((r) => new pu());\n  }\n  getActions(e) {\n    let n = 0, r = null, { parser: i } = e.p, { tokenizers: s } = i, a = i.stateSlot(\n      e.state,\n      3\n      /* ParseState.TokenizerMask */\n    ), o = e.curContext ? e.curContext.hash : 0, l = 0;\n    for (let c = 0; c < s.length; c++) {\n      if (!(1 << c & a))\n        continue;\n      let h = s[c], f = this.tokens[c];\n      if (!(r && !h.fallback) && ((h.contextual || f.start != e.pos || f.mask != a || f.context != o) && (this.updateCachedToken(f, h, e), f.mask = a, f.context = o), f.lookAhead > f.end + 25 && (l = Math.max(f.lookAhead, l)), f.value != 0)) {\n        let m = n;\n        if (f.extended > -1 && (n = this.addActions(e, f.extended, f.end, n)), n = this.addActions(e, f.value, f.end, n), !h.extend && (r = f, n > m))\n          break;\n      }\n    }\n    for (; this.actions.length > n; )\n      this.actions.pop();\n    return l && e.setLookAhead(l), !r && e.pos == this.stream.end && (r = new pu(), r.value = e.p.parser.eofTerm, r.start = r.end = e.pos, n = this.addActions(e, r.value, r.end, n)), this.mainToken = r, this.actions;\n  }\n  getMainToken(e) {\n    if (this.mainToken)\n      return this.mainToken;\n    let n = new pu(), { pos: r, p: i } = e;\n    return n.start = r, n.end = Math.min(r + 1, i.stream.end), n.value = r == i.stream.end ? i.parser.eofTerm : 0, n;\n  }\n  updateCachedToken(e, n, r) {\n    let i = this.stream.clipPos(r.pos);\n    if (n.token(this.stream.reset(i, e), r), e.value > -1) {\n      let { parser: s } = r.p;\n      for (let a = 0; a < s.specialized.length; a++)\n        if (s.specialized[a] == e.value) {\n          let o = s.specializers[a](this.stream.read(e.start, e.end), r);\n          if (o >= 0 && r.p.parser.dialect.allows(o >> 1)) {\n            o & 1 ? e.extended = o >> 1 : e.value = o >> 1;\n            break;\n          }\n        }\n    } else\n      e.value = 0, e.end = this.stream.clipPos(i + 1);\n  }\n  putAction(e, n, r, i) {\n    for (let s = 0; s < i; s += 3)\n      if (this.actions[s] == e)\n        return i;\n    return this.actions[i++] = e, this.actions[i++] = n, this.actions[i++] = r, i;\n  }\n  addActions(e, n, r, i) {\n    let { state: s } = e, { parser: a } = e.p, { data: o } = a;\n    for (let l = 0; l < 2; l++)\n      for (let c = a.stateSlot(\n        s,\n        l ? 2 : 1\n        /* ParseState.Actions */\n      ); ; c += 3) {\n        if (o[c] == 65535)\n          if (o[c + 1] == 1)\n            c = Ci(o, c + 2);\n          else {\n            i == 0 && o[c + 1] == 2 && (i = this.putAction(Ci(o, c + 2), n, r, i));\n            break;\n          }\n        o[c] == n && (i = this.putAction(Ci(o, c + 1), n, r, i));\n      }\n    return i;\n  }\n}\nclass J7 {\n  constructor(e, n, r, i) {\n    this.parser = e, this.input = n, this.ranges = i, this.recovering = 0, this.nextStackID = 9812, this.minStackPos = 0, this.reused = [], this.stoppedAt = null, this.lastBigReductionStart = -1, this.lastBigReductionSize = 0, this.bigReductionCount = 0, this.stream = new z7(n, i), this.tokens = new K7(e, this.stream), this.topTerm = e.top[1];\n    let { from: s } = i[0];\n    this.stacks = [oc.start(this, e.top[0], s)], this.fragments = r.length && this.stream.end - s > e.bufferLength * 4 ? new Y7(r, e.nodeSet) : null;\n  }\n  get parsedPos() {\n    return this.minStackPos;\n  }\n  // Move the parser forward. This will process all parse stacks at\n  // `this.pos` and try to advance them to a further position. If no\n  // stack for such a position is found, it\'ll start error-recovery.\n  //\n  // When the parse is finished, this will return a syntax tree. When\n  // not, it returns `null`.\n  advance() {\n    let e = this.stacks, n = this.minStackPos, r = this.stacks = [], i, s;\n    if (this.bigReductionCount > 300 && e.length == 1) {\n      let [a] = e;\n      for (; a.forceReduce() && a.stack.length && a.stack[a.stack.length - 2] >= this.lastBigReductionStart; )\n        ;\n      this.bigReductionCount = this.lastBigReductionSize = 0;\n    }\n    for (let a = 0; a < e.length; a++) {\n      let o = e[a];\n      for (; ; ) {\n        if (this.tokens.mainToken = null, o.pos > n)\n          r.push(o);\n        else {\n          if (this.advanceStack(o, r, e))\n            continue;\n          {\n            i || (i = [], s = []), i.push(o);\n            let l = this.tokens.getMainToken(o);\n            s.push(l.value, l.end);\n          }\n        }\n        break;\n      }\n    }\n    if (!r.length) {\n      let a = i && nT(i);\n      if (a)\n        return sr && console.log("Finish with " + this.stackID(a)), this.stackToTree(a);\n      if (this.parser.strict)\n        throw sr && i && console.log("Stuck with token " + (this.tokens.mainToken ? this.parser.getName(this.tokens.mainToken.value) : "none")), new SyntaxError("No parse at " + n);\n      this.recovering || (this.recovering = 5);\n    }\n    if (this.recovering && i) {\n      let a = this.stoppedAt != null && i[0].pos > this.stoppedAt ? i[0] : this.runRecovery(i, s, r);\n      if (a)\n        return sr && console.log("Force-finish " + this.stackID(a)), this.stackToTree(a.forceAll());\n    }\n    if (this.recovering) {\n      let a = this.recovering == 1 ? 1 : this.recovering * 3;\n      if (r.length > a)\n        for (r.sort((o, l) => l.score - o.score); r.length > a; )\n          r.pop();\n      r.some((o) => o.reducePos > n) && this.recovering--;\n    } else if (r.length > 1) {\n      e: for (let a = 0; a < r.length - 1; a++) {\n        let o = r[a];\n        for (let l = a + 1; l < r.length; l++) {\n          let c = r[l];\n          if (o.sameState(c) || o.buffer.length > 500 && c.buffer.length > 500)\n            if ((o.score - c.score || o.buffer.length - c.buffer.length) > 0)\n              r.splice(l--, 1);\n            else {\n              r.splice(a--, 1);\n              continue e;\n            }\n        }\n      }\n      r.length > 12 && r.splice(\n        12,\n        r.length - 12\n        /* Rec.MaxStackCount */\n      );\n    }\n    this.minStackPos = r[0].pos;\n    for (let a = 1; a < r.length; a++)\n      r[a].pos < this.minStackPos && (this.minStackPos = r[a].pos);\n    return null;\n  }\n  stopAt(e) {\n    if (this.stoppedAt != null && this.stoppedAt < e)\n      throw new RangeError("Can\'t move stoppedAt forward");\n    this.stoppedAt = e;\n  }\n  // Returns an updated version of the given stack, or null if the\n  // stack can\'t advance normally. When `split` and `stacks` are\n  // given, stacks split off by ambiguous operations will be pushed to\n  // `split`, or added to `stacks` if they move `pos` forward.\n  advanceStack(e, n, r) {\n    let i = e.pos, { parser: s } = this, a = sr ? this.stackID(e) + " -> " : "";\n    if (this.stoppedAt != null && i > this.stoppedAt)\n      return e.forceReduce() ? e : null;\n    if (this.fragments) {\n      let c = e.curContext && e.curContext.tracker.strict, h = c ? e.curContext.hash : 0;\n      for (let f = this.fragments.nodeAt(i); f; ) {\n        let m = this.parser.nodeSet.types[f.type.id] == f.type ? s.getGoto(e.state, f.type.id) : -1;\n        if (m > -1 && f.length && (!c || (f.prop(nt.contextHash) || 0) == h))\n          return e.useNode(f, m), sr && console.log(a + this.stackID(e) + ` (via reuse of ${s.getName(f.type.id)})`), !0;\n        if (!(f instanceof an) || f.children.length == 0 || f.positions[0] > 0)\n          break;\n        let y = f.children[0];\n        if (y instanceof an && f.positions[0] == 0)\n          f = y;\n        else\n          break;\n      }\n    }\n    let o = s.stateSlot(\n      e.state,\n      4\n      /* ParseState.DefaultReduce */\n    );\n    if (o > 0)\n      return e.reduce(o), sr && console.log(a + this.stackID(e) + ` (via always-reduce ${s.getName(\n        o & 65535\n        /* Action.ValueMask */\n      )})`), !0;\n    if (e.stack.length >= 8400)\n      for (; e.stack.length > 6e3 && e.forceReduce(); )\n        ;\n    let l = this.tokens.getActions(e);\n    for (let c = 0; c < l.length; ) {\n      let h = l[c++], f = l[c++], m = l[c++], y = c == l.length || !r, v = y ? e : e.split(), C = this.tokens.mainToken;\n      if (v.apply(h, f, C ? C.start : v.pos, m), sr && console.log(a + this.stackID(v) + ` (via ${h & 65536 ? `reduce of ${s.getName(\n        h & 65535\n        /* Action.ValueMask */\n      )}` : "shift"} for ${s.getName(f)} @ ${i}${v == e ? "" : ", split"})`), y)\n        return !0;\n      v.pos > i ? n.push(v) : r.push(v);\n    }\n    return !1;\n  }\n  // Advance a given stack forward as far as it will go. Returns the\n  // (possibly updated) stack if it got stuck, or null if it moved\n  // forward and was given to `pushStackDedup`.\n  advanceFully(e, n) {\n    let r = e.pos;\n    for (; ; ) {\n      if (!this.advanceStack(e, null, null))\n        return !1;\n      if (e.pos > r)\n        return V0(e, n), !0;\n    }\n  }\n  runRecovery(e, n, r) {\n    let i = null, s = !1;\n    for (let a = 0; a < e.length; a++) {\n      let o = e[a], l = n[a << 1], c = n[(a << 1) + 1], h = sr ? this.stackID(o) + " -> " : "";\n      if (o.deadEnd && (s || (s = !0, o.restart(), sr && console.log(h + this.stackID(o) + " (restarted)"), this.advanceFully(o, r))))\n        continue;\n      let f = o.split(), m = h;\n      for (let y = 0; f.forceReduce() && y < 10 && (sr && console.log(m + this.stackID(f) + " (via force-reduce)"), !this.advanceFully(f, r)); y++)\n        sr && (m = this.stackID(f) + " -> ");\n      for (let y of o.recoverByInsert(l))\n        sr && console.log(h + this.stackID(y) + " (via recover-insert)"), this.advanceFully(y, r);\n      this.stream.end > o.pos ? (c == o.pos && (c++, l = 0), o.recoverByDelete(l, c), sr && console.log(h + this.stackID(o) + ` (via recover-delete ${this.parser.getName(l)})`), V0(o, r)) : (!i || i.score < o.score) && (i = o);\n    }\n    return i;\n  }\n  // Convert the stack\'s buffer to a syntax tree.\n  stackToTree(e) {\n    return e.close(), an.build({\n      buffer: lc.create(e),\n      nodeSet: this.parser.nodeSet,\n      topID: this.topTerm,\n      maxBufferLength: this.parser.bufferLength,\n      reused: this.reused,\n      start: this.ranges[0].from,\n      length: e.pos - this.ranges[0].from,\n      minRepeatType: this.parser.minRepeatTerm\n    });\n  }\n  stackID(e) {\n    let n = (ip || (ip = /* @__PURE__ */ new WeakMap())).get(e);\n    return n || ip.set(e, n = String.fromCodePoint(this.nextStackID++)), n + e;\n  }\n}\nfunction V0(t, e) {\n  for (let n = 0; n < e.length; n++) {\n    let r = e[n];\n    if (r.pos == t.pos && r.sameState(t)) {\n      e[n].score < t.score && (e[n] = t);\n      return;\n    }\n  }\n  e.push(t);\n}\nclass eT {\n  constructor(e, n, r) {\n    this.source = e, this.flags = n, this.disabled = r;\n  }\n  allows(e) {\n    return !this.disabled || this.disabled[e] == 0;\n  }\n}\nconst sp = (t) => t;\nclass tT {\n  /**\n  Define a context tracker.\n  */\n  constructor(e) {\n    this.start = e.start, this.shift = e.shift || sp, this.reduce = e.reduce || sp, this.reuse = e.reuse || sp, this.hash = e.hash || (() => 0), this.strict = e.strict !== !1;\n  }\n}\nclass uc extends aS {\n  /**\n  @internal\n  */\n  constructor(e) {\n    if (super(), this.wrappers = [], e.version != 14)\n      throw new RangeError(`Parser version (${e.version}) doesn\'t match runtime version (14)`);\n    let n = e.nodeNames.split(" ");\n    this.minRepeatTerm = n.length;\n    for (let o = 0; o < e.repeatNodeCount; o++)\n      n.push("");\n    let r = Object.keys(e.topRules).map((o) => e.topRules[o][1]), i = [];\n    for (let o = 0; o < n.length; o++)\n      i.push([]);\n    function s(o, l, c) {\n      i[o].push([l, l.deserialize(String(c))]);\n    }\n    if (e.nodeProps)\n      for (let o of e.nodeProps) {\n        let l = o[0];\n        typeof l == "string" && (l = nt[l]);\n        for (let c = 1; c < o.length; ) {\n          let h = o[c++];\n          if (h >= 0)\n            s(h, l, o[c++]);\n          else {\n            let f = o[c + -h];\n            for (let m = -h; m > 0; m--)\n              s(o[c++], l, f);\n            c++;\n          }\n        }\n      }\n    this.nodeSet = new zd(n.map((o, l) => Kn.define({\n      name: l >= this.minRepeatTerm ? void 0 : o,\n      id: l,\n      props: i[l],\n      top: r.indexOf(l) > -1,\n      error: l == 0,\n      skipped: e.skippedNodes && e.skippedNodes.indexOf(l) > -1\n    }))), e.propSources && (this.nodeSet = this.nodeSet.extend(...e.propSources)), this.strict = !1, this.bufferLength = nS;\n    let a = lo(e.tokenData);\n    this.context = e.context, this.specializerSpecs = e.specialized || [], this.specialized = new Uint16Array(this.specializerSpecs.length);\n    for (let o = 0; o < this.specializerSpecs.length; o++)\n      this.specialized[o] = this.specializerSpecs[o].term;\n    this.specializers = this.specializerSpecs.map(X0), this.states = lo(e.states, Uint32Array), this.data = lo(e.stateData), this.goto = lo(e.goto), this.maxTerm = e.maxTerm, this.tokenizers = e.tokenizers.map((o) => typeof o == "number" ? new ca(a, o) : o), this.topRules = e.topRules, this.dialects = e.dialects || {}, this.dynamicPrecedences = e.dynamicPrecedences || null, this.tokenPrecTable = e.tokenPrec, this.termNames = e.termNames || null, this.maxNode = this.nodeSet.types.length - 1, this.dialect = this.parseDialect(), this.top = this.topRules[Object.keys(this.topRules)[0]];\n  }\n  createParse(e, n, r) {\n    let i = new J7(this, e, n, r);\n    for (let s of this.wrappers)\n      i = s(i, e, n, r);\n    return i;\n  }\n  /**\n  Get a goto table entry @internal\n  */\n  getGoto(e, n, r = !1) {\n    let i = this.goto;\n    if (n >= i[0])\n      return -1;\n    for (let s = i[n + 1]; ; ) {\n      let a = i[s++], o = a & 1, l = i[s++];\n      if (o && r)\n        return l;\n      for (let c = s + (a >> 1); s < c; s++)\n        if (i[s] == e)\n          return l;\n      if (o)\n        return -1;\n    }\n  }\n  /**\n  Check if this state has an action for a given terminal @internal\n  */\n  hasAction(e, n) {\n    let r = this.data;\n    for (let i = 0; i < 2; i++)\n      for (let s = this.stateSlot(\n        e,\n        i ? 2 : 1\n        /* ParseState.Actions */\n      ), a; ; s += 3) {\n        if ((a = r[s]) == 65535)\n          if (r[s + 1] == 1)\n            a = r[s = Ci(r, s + 2)];\n          else {\n            if (r[s + 1] == 2)\n              return Ci(r, s + 2);\n            break;\n          }\n        if (a == n || a == 0)\n          return Ci(r, s + 1);\n      }\n    return 0;\n  }\n  /**\n  @internal\n  */\n  stateSlot(e, n) {\n    return this.states[e * 6 + n];\n  }\n  /**\n  @internal\n  */\n  stateFlag(e, n) {\n    return (this.stateSlot(\n      e,\n      0\n      /* ParseState.Flags */\n    ) & n) > 0;\n  }\n  /**\n  @internal\n  */\n  validAction(e, n) {\n    return !!this.allActions(e, (r) => r == n ? !0 : null);\n  }\n  /**\n  @internal\n  */\n  allActions(e, n) {\n    let r = this.stateSlot(\n      e,\n      4\n      /* ParseState.DefaultReduce */\n    ), i = r ? n(r) : void 0;\n    for (let s = this.stateSlot(\n      e,\n      1\n      /* ParseState.Actions */\n    ); i == null; s += 3) {\n      if (this.data[s] == 65535)\n        if (this.data[s + 1] == 1)\n          s = Ci(this.data, s + 2);\n        else\n          break;\n      i = n(Ci(this.data, s + 1));\n    }\n    return i;\n  }\n  /**\n  Get the states that can follow this one through shift actions or\n  goto jumps. @internal\n  */\n  nextStates(e) {\n    let n = [];\n    for (let r = this.stateSlot(\n      e,\n      1\n      /* ParseState.Actions */\n    ); ; r += 3) {\n      if (this.data[r] == 65535)\n        if (this.data[r + 1] == 1)\n          r = Ci(this.data, r + 2);\n        else\n          break;\n      if (!(this.data[r + 2] & 1)) {\n        let i = this.data[r + 1];\n        n.some((s, a) => a & 1 && s == i) || n.push(this.data[r], i);\n      }\n    }\n    return n;\n  }\n  /**\n  Configure the parser. Returns a new parser instance that has the\n  given settings modified. Settings not provided in `config` are\n  kept from the original parser.\n  */\n  configure(e) {\n    let n = Object.assign(Object.create(uc.prototype), this);\n    if (e.props && (n.nodeSet = this.nodeSet.extend(...e.props)), e.top) {\n      let r = this.topRules[e.top];\n      if (!r)\n        throw new RangeError(`Invalid top rule name ${e.top}`);\n      n.top = r;\n    }\n    return e.tokenizers && (n.tokenizers = this.tokenizers.map((r) => {\n      let i = e.tokenizers.find((s) => s.from == r);\n      return i ? i.to : r;\n    })), e.specializers && (n.specializers = this.specializers.slice(), n.specializerSpecs = this.specializerSpecs.map((r, i) => {\n      let s = e.specializers.find((o) => o.from == r.external);\n      if (!s)\n        return r;\n      let a = Object.assign(Object.assign({}, r), { external: s.to });\n      return n.specializers[i] = X0(a), a;\n    })), e.contextTracker && (n.context = e.contextTracker), e.dialect && (n.dialect = this.parseDialect(e.dialect)), e.strict != null && (n.strict = e.strict), e.wrap && (n.wrappers = n.wrappers.concat(e.wrap)), e.bufferLength != null && (n.bufferLength = e.bufferLength), n;\n  }\n  /**\n  Tells you whether any [parse wrappers](#lr.ParserConfig.wrap)\n  are registered for this parser.\n  */\n  hasWrappers() {\n    return this.wrappers.length > 0;\n  }\n  /**\n  Returns the name associated with a given term. This will only\n  work for all terms when the parser was generated with the\n  `--names` option. By default, only the names of tagged terms are\n  stored.\n  */\n  getName(e) {\n    return this.termNames ? this.termNames[e] : String(e <= this.maxNode && this.nodeSet.types[e].name || e);\n  }\n  /**\n  The eof term id is always allocated directly after the node\n  types. @internal\n  */\n  get eofTerm() {\n    return this.maxNode + 1;\n  }\n  /**\n  The type of top node produced by the parser.\n  */\n  get topNode() {\n    return this.nodeSet.types[this.top[1]];\n  }\n  /**\n  @internal\n  */\n  dynamicPrecedence(e) {\n    let n = this.dynamicPrecedences;\n    return n == null ? 0 : n[e] || 0;\n  }\n  /**\n  @internal\n  */\n  parseDialect(e) {\n    let n = Object.keys(this.dialects), r = n.map(() => !1);\n    if (e)\n      for (let s of e.split(" ")) {\n        let a = n.indexOf(s);\n        a >= 0 && (r[a] = !0);\n      }\n    let i = null;\n    for (let s = 0; s < n.length; s++)\n      if (!r[s])\n        for (let a = this.dialects[n[s]], o; (o = this.data[a++]) != 65535; )\n          (i || (i = new Uint8Array(this.maxTerm + 1)))[o] = 1;\n    return new eT(e, r, i);\n  }\n  /**\n  Used by the output of the parser generator. Not available to\n  user code. @hide\n  */\n  static deserialize(e) {\n    return new uc(e);\n  }\n}\nfunction Ci(t, e) {\n  return t[e] | t[e + 1] << 16;\n}\nfunction nT(t) {\n  let e = null;\n  for (let n of t) {\n    let r = n.p.stoppedAt;\n    (n.pos == n.p.stream.end || r != null && n.pos > r) && n.p.parser.stateFlag(\n      n.state,\n      2\n      /* StateFlag.Accepting */\n    ) && (!e || e.score < n.score) && (e = n);\n  }\n  return e;\n}\nfunction X0(t) {\n  if (t.external) {\n    let e = t.extend ? 1 : 0;\n    return (n, r) => t.external(n, r) << 1 | e;\n  }\n  return t.get;\n}\nconst rT = 314, iT = 315, W0 = 1, sT = 2, aT = 3, oT = 4, lT = 316, uT = 318, cT = 319, hT = 5, pT = 6, fT = 0, wf = [\n  9,\n  10,\n  11,\n  12,\n  13,\n  32,\n  133,\n  160,\n  5760,\n  8192,\n  8193,\n  8194,\n  8195,\n  8196,\n  8197,\n  8198,\n  8199,\n  8200,\n  8201,\n  8202,\n  8232,\n  8233,\n  8239,\n  8287,\n  12288\n], FA = 125, dT = 59, Cf = 47, mT = 42, gT = 43, bT = 45, yT = 60, OT = 44, vT = 63, xT = 46, kT = 91, wT = new tT({\n  start: !1,\n  shift(t, e) {\n    return e == hT || e == pT || e == uT ? t : e == cT;\n  },\n  strict: !1\n}), CT = new el((t, e) => {\n  let { next: n } = t;\n  (n == FA || n == -1 || e.context) && t.acceptToken(lT);\n}, { contextual: !0, fallback: !0 }), ST = new el((t, e) => {\n  let { next: n } = t, r;\n  wf.indexOf(n) > -1 || n == Cf && ((r = t.peek(1)) == Cf || r == mT) || n != FA && n != dT && n != -1 && !e.context && t.acceptToken(rT);\n}, { contextual: !0 }), AT = new el((t, e) => {\n  t.next == kT && !e.context && t.acceptToken(iT);\n}, { contextual: !0 }), DT = new el((t, e) => {\n  let { next: n } = t;\n  if (n == gT || n == bT) {\n    if (t.advance(), n == t.next) {\n      t.advance();\n      let r = !e.context && e.canShift(W0);\n      t.acceptToken(r ? W0 : sT);\n    }\n  } else n == vT && t.peek(1) == xT && (t.advance(), t.advance(), (t.next < 48 || t.next > 57) && t.acceptToken(aT));\n}, { contextual: !0 });\nfunction ap(t, e) {\n  return t >= 65 && t <= 90 || t >= 97 && t <= 122 || t == 95 || t >= 192 || !e && t >= 48 && t <= 57;\n}\nconst PT = new el((t, e) => {\n  if (t.next != yT || !e.dialectEnabled(fT) || (t.advance(), t.next == Cf)) return;\n  let n = 0;\n  for (; wf.indexOf(t.next) > -1; )\n    t.advance(), n++;\n  if (ap(t.next, !0)) {\n    for (t.advance(), n++; ap(t.next, !1); )\n      t.advance(), n++;\n    for (; wf.indexOf(t.next) > -1; )\n      t.advance(), n++;\n    if (t.next == OT) return;\n    for (let r = 0; ; r++) {\n      if (r == 7) {\n        if (!ap(t.next, !0)) return;\n        break;\n      }\n      if (t.next != "extends".charCodeAt(r)) break;\n      t.advance(), n++;\n    }\n  }\n  t.acceptToken(oT, -n);\n}), ET = oS({\n  "get set async static": u.modifier,\n  "for while do if else switch try catch finally return throw break continue default case": u.controlKeyword,\n  "in of await yield void typeof delete instanceof": u.operatorKeyword,\n  "let var const using function class extends": u.definitionKeyword,\n  "import export from": u.moduleKeyword,\n  "with debugger as new": u.keyword,\n  TemplateString: u.special(u.string),\n  super: u.atom,\n  BooleanLiteral: u.bool,\n  this: u.self,\n  null: u.null,\n  Star: u.modifier,\n  VariableName: u.variableName,\n  "CallExpression/VariableName TaggedTemplateExpression/VariableName": u.function(u.variableName),\n  VariableDefinition: u.definition(u.variableName),\n  Label: u.labelName,\n  PropertyName: u.propertyName,\n  PrivatePropertyName: u.special(u.propertyName),\n  "CallExpression/MemberExpression/PropertyName": u.function(u.propertyName),\n  "FunctionDeclaration/VariableDefinition": u.function(u.definition(u.variableName)),\n  "ClassDeclaration/VariableDefinition": u.definition(u.className),\n  "NewExpression/VariableName": u.className,\n  PropertyDefinition: u.definition(u.propertyName),\n  PrivatePropertyDefinition: u.definition(u.special(u.propertyName)),\n  UpdateOp: u.updateOperator,\n  "LineComment Hashbang": u.lineComment,\n  BlockComment: u.blockComment,\n  Number: u.number,\n  String: u.string,\n  Escape: u.escape,\n  ArithOp: u.arithmeticOperator,\n  LogicOp: u.logicOperator,\n  BitOp: u.bitwiseOperator,\n  CompareOp: u.compareOperator,\n  RegExp: u.regexp,\n  Equals: u.definitionOperator,\n  Arrow: u.function(u.punctuation),\n  ": Spread": u.punctuation,\n  "( )": u.paren,\n  "[ ]": u.squareBracket,\n  "{ }": u.brace,\n  "InterpolationStart InterpolationEnd": u.special(u.brace),\n  ".": u.derefOperator,\n  ", ;": u.separator,\n  "@": u.meta,\n  TypeName: u.typeName,\n  TypeDefinition: u.definition(u.typeName),\n  "type enum interface implements namespace module declare": u.definitionKeyword,\n  "abstract global Privacy readonly override": u.modifier,\n  "is keyof unique infer asserts": u.operatorKeyword,\n  JSXAttributeValue: u.attributeValue,\n  JSXText: u.content,\n  "JSXStartTag JSXStartCloseTag JSXSelfCloseEndTag JSXEndTag": u.angleBracket,\n  "JSXIdentifier JSXNameSpacedName": u.tagName,\n  "JSXAttribute/JSXIdentifier JSXAttribute/JSXNameSpacedName": u.attributeName,\n  "JSXBuiltin/JSXIdentifier": u.standard(u.tagName)\n}), FT = { __proto__: null, export: 20, as: 25, from: 33, default: 36, async: 41, function: 42, const: 52, extends: 56, this: 60, true: 68, false: 68, null: 80, void: 84, typeof: 88, super: 104, new: 138, delete: 150, yield: 159, await: 163, class: 168, public: 231, private: 231, protected: 231, readonly: 233, instanceof: 252, satisfies: 255, in: 256, import: 290, keyof: 347, unique: 351, infer: 357, asserts: 393, is: 395, abstract: 415, implements: 417, type: 419, let: 422, var: 424, using: 427, interface: 433, enum: 437, namespace: 443, module: 445, declare: 449, global: 453, for: 472, of: 481, while: 484, with: 488, do: 492, if: 496, else: 498, switch: 502, case: 508, try: 514, catch: 518, finally: 522, return: 526, throw: 530, break: 534, continue: 538, debugger: 542 }, BT = { __proto__: null, async: 125, get: 127, set: 129, declare: 191, public: 193, private: 193, protected: 193, static: 195, abstract: 197, override: 199, readonly: 205, accessor: 207, new: 399 }, MT = { __proto__: null, "<": 189 }, QT = uc.deserialize({\n  version: 14,\n  states: "$EOQ%TQlOOO%[QlOOO\'_QpOOP(lO`OOO*zQ!0MxO\'#CiO+RO#tO\'#CjO+aO&jO\'#CjO+oO#@ItO\'#D_O.QQlO\'#DeO.bQlO\'#DpO%[QlO\'#DxO0fQlO\'#EQOOQ!0Lf\'#EY\'#EYO1PQ`O\'#EVOOQO\'#En\'#EnOOQO\'#Ij\'#IjO1XQ`O\'#GrO1dQ`O\'#EmO1iQ`O\'#EmO3hQ!0MxO\'#JpO6[Q!0MxO\'#JqO6uQ`O\'#F[O6zQ,UO\'#FsOOQ!0Lf\'#Fe\'#FeO7VO7dO\'#FeO7eQMhO\'#F{O9UQ`O\'#FzOOQ!0Lf\'#Jq\'#JqOOQ!0Lb\'#Jp\'#JpO9ZQ`O\'#GvOOQ[\'#K]\'#K]O9fQ`O\'#IWO9kQ!0LrO\'#IXOOQ[\'#J^\'#J^OOQ[\'#I]\'#I]Q`QlOOQ`QlOOO9sQ!L^O\'#DtO9zQlO\'#D|O:RQlO\'#EOO9aQ`O\'#GrO:YQMhO\'#CoO:hQ`O\'#ElO:sQ`O\'#EwO:xQMhO\'#FdO;gQ`O\'#GrOOQO\'#K^\'#K^O;lQ`O\'#K^O;zQ`O\'#GzO;zQ`O\'#G{O;zQ`O\'#G}O9aQ`O\'#HQO<qQ`O\'#HTO>YQ`O\'#CeO>jQ`O\'#HaO>rQ`O\'#HgO>rQ`O\'#HiO`QlO\'#HkO>rQ`O\'#HmO>rQ`O\'#HpO>wQ`O\'#HvO>|Q!0LsO\'#H|O%[QlO\'#IOO?XQ!0LsO\'#IQO?dQ!0LsO\'#ISO9kQ!0LrO\'#IUO?oQ!0MxO\'#CiO@qQpO\'#DjQOQ`OOO%[QlO\'#EOOAXQ`O\'#ERO:YQMhO\'#ElOAdQ`O\'#ElOAoQ!bO\'#FdOOQ[\'#Cg\'#CgOOQ!0Lb\'#Do\'#DoOOQ!0Lb\'#Jt\'#JtO%[QlO\'#JtOOQO\'#Jw\'#JwOOQO\'#If\'#IfOBoQpO\'#EeOOQ!0Lb\'#Ed\'#EdOOQ!0Lb\'#J{\'#J{OCkQ!0MSO\'#EeOCuQpO\'#EUOOQO\'#Jv\'#JvODZQpO\'#JwOEhQpO\'#EUOCuQpO\'#EePEuO&2DjO\'#CbPOOO)CD{)CD{OOOO\'#I^\'#I^OFQO#tO,59UOOQ!0Lh,59U,59UOOOO\'#I_\'#I_OF`O&jO,59UOFnQ!L^O\'#DaOOOO\'#Ia\'#IaOFuO#@ItO,59yOOQ!0Lf,59y,59yOGTQlO\'#IbOGhQ`O\'#JrOIgQ!fO\'#JrO+}QlO\'#JrOInQ`O,5:POJUQ`O\'#EnOJcQ`O\'#KROJnQ`O\'#KQOJnQ`O\'#KQOJvQ`O,5;[OJ{Q`O\'#KPOOQ!0Ln,5:[,5:[OKSQlO,5:[OMQQ!0MxO,5:dOMqQ`O,5:lON[Q!0LrO\'#KOONcQ`O\'#J}O9ZQ`O\'#J}ONwQ`O\'#J}O! PQ`O,5;ZO! UQ`O\'#J}O!#ZQ!fO\'#JqOOQ!0Lh\'#Ci\'#CiO%[QlO\'#EQO!#yQ!fO,5:qOOQS\'#Jx\'#JxOOQO-E<h-E<hO9aQ`O,5=^O!$aQ`O,5=^O!$fQlO,5;XO!&iQMhO\'#EiO!(SQ`O,5;XO!(XQlO\'#DwO!(cQpO,5;bO!(kQpO,5;bO%[QlO,5;bOOQ[\'#FS\'#FSOOQ[\'#FU\'#FUO%[QlO,5;cO%[QlO,5;cO%[QlO,5;cO%[QlO,5;cO%[QlO,5;cO%[QlO,5;cO%[QlO,5;cO%[QlO,5;cO%[QlO,5;cO%[QlO,5;cOOQ[\'#FY\'#FYO!(yQlO,5;sOOQ!0Lf,5;x,5;xOOQ!0Lf,5;y,5;yOOQ!0Lf,5;{,5;{O%[QlO\'#InO!*|Q!0LrO,5<hO%[QlO,5;cO!&iQMhO,5;cO!+kQMhO,5;cO!-]QMhO\'#E[O%[QlO,5;vOOQ!0Lf,5;z,5;zO!-dQ,UO\'#FiO!.aQ,UO\'#KVO!-{Q,UO\'#KVO!.hQ,UO\'#KVOOQO\'#KV\'#KVO!.|Q,UO,5<ROOOW,5<_,5<_O!/_QlO\'#FuOOOW\'#Im\'#ImO7VO7dO,5<PO!/fQ,UO\'#FwOOQ!0Lf,5<P,5<PO!0VQ$IUO\'#CwOOQ!0Lh\'#C{\'#C{O!0jO#@ItO\'#DPO!1WQMjO,5<dO!1_Q`O,5<gO!2zQ(CWO\'#GWO!3XQ`O\'#GXO!3^Q`O\'#GXO!4|Q(CWO\'#G]O!6RQpO\'#GaOOQO\'#Gm\'#GmO!+rQMhO\'#GlOOQO\'#Go\'#GoO!+rQMhO\'#GnO!6tQ$IUO\'#JjOOQ!0Lh\'#Jj\'#JjO!7OQ`O\'#JiO!7^Q`O\'#JhO!7fQ`O\'#CuOOQ!0Lh\'#Cy\'#CyO!7qQ`O\'#C{OOQ!0Lh\'#DT\'#DTOOQ!0Lh\'#DV\'#DVO1SQ`O\'#DXO!+rQMhO\'#GOO!+rQMhO\'#GQO!7vQ`O\'#GSO!7{Q`O\'#GTO!3^Q`O\'#GZO!+rQMhO\'#G`O;zQ`O\'#JiO!8QQ`O\'#EoO!8oQ`O,5<fOOQ!0Lb\'#Cr\'#CrO!8wQ`O\'#EpO!9qQpO\'#EqOOQ!0Lb\'#KP\'#KPO!9xQ!0LrO\'#K_O9kQ!0LrO,5=bO`QlO,5>rOOQ[\'#Jf\'#JfOOQ[,5>s,5>sOOQ[-E<Z-E<ZO!;wQ!0MxO,5:`O!9lQpO,5:^O!>bQ!0MxO,5:hO%[QlO,5:hO!@xQ!0MxO,5:jOOQO,5@x,5@xO!AiQMhO,5=^O!AwQ!0LrO\'#JgO9UQ`O\'#JgO!BYQ!0LrO,59ZO!BeQpO,59ZO!BmQMhO,59ZO:YQMhO,59ZO!BxQ`O,5;XO!CQQ`O\'#H`O!CfQ`O\'#KbO%[QlO,5;|O!9lQpO,5<OO!CnQ`O,5=yO!CsQ`O,5=yO!CxQ`O,5=yO9kQ!0LrO,5=yO;zQ`O,5=iOOQO\'#Cw\'#CwO!DWQpO,5=fO!D`QMhO,5=gO!DkQ`O,5=iO!DpQ!bO,5=lO!DxQ`O\'#K^O>wQ`O\'#HVO9aQ`O\'#HXO!D}Q`O\'#HXO:YQMhO\'#HZO!ESQ`O\'#HZOOQ[,5=o,5=oO!EXQ`O\'#H[O!EjQ`O\'#CoO!EoQ`O,59PO!EyQ`O,59PO!HOQlO,59POOQ[,59P,59PO!H`Q!0LrO,59PO%[QlO,59PO!JkQlO\'#HcOOQ[\'#Hd\'#HdOOQ[\'#He\'#HeO`QlO,5={O!KRQ`O,5={O`QlO,5>RO`QlO,5>TO!KWQ`O,5>VO`QlO,5>XO!K]Q`O,5>[O!KbQlO,5>bOOQ[,5>h,5>hO%[QlO,5>hO9kQ!0LrO,5>jOOQ[,5>l,5>lO# lQ`O,5>lOOQ[,5>n,5>nO# lQ`O,5>nOOQ[,5>p,5>pO#!YQpO\'#D]O%[QlO\'#JtO#!{QpO\'#JtO##VQpO\'#DkO##hQpO\'#DkO#%yQlO\'#DkO#&QQ`O\'#JsO#&YQ`O,5:UO#&_Q`O\'#ErO#&mQ`O\'#KSO#&uQ`O,5;]O#&zQpO\'#DkO#\'XQpO\'#ETOOQ!0Lf,5:m,5:mO%[QlO,5:mO#\'`Q`O,5:mO>wQ`O,5;WO!BeQpO,5;WO!BmQMhO,5;WO:YQMhO,5;WO#\'hQ`O,5@`O#\'mQ07dO,5:qOOQO-E<d-E<dO#(sQ!0MSO,5;POCuQpO,5:pO#(}QpO,5:pOCuQpO,5;PO!BYQ!0LrO,5:pOOQ!0Lb\'#Eh\'#EhOOQO,5;P,5;PO%[QlO,5;PO#)[Q!0LrO,5;PO#)gQ!0LrO,5;PO!BeQpO,5:pOOQO,5;V,5;VO#)uQ!0LrO,5;PPOOO\'#I[\'#I[P#*ZO&2DjO,58|POOO,58|,58|OOOO-E<[-E<[OOQ!0Lh1G.p1G.pOOOO-E<]-E<]OOOO,59{,59{O#*fQ!bO,59{OOOO-E<_-E<_OOQ!0Lf1G/e1G/eO#*kQ!fO,5>|O+}QlO,5>|OOQO,5?S,5?SO#*uQlO\'#IbOOQO-E<`-E<`O#+SQ`O,5@^O#+[Q!fO,5@^O#+cQ`O,5@lOOQ!0Lf1G/k1G/kO%[QlO,5@mO#+kQ`O\'#IhOOQO-E<f-E<fO#+cQ`O,5@lOOQ!0Lb1G0v1G0vOOQ!0Ln1G/v1G/vOOQ!0Ln1G0W1G0WO%[QlO,5@jO#,PQ!0LrO,5@jO#,bQ!0LrO,5@jO#,iQ`O,5@iO9ZQ`O,5@iO#,qQ`O,5@iO#-PQ`O\'#IkO#,iQ`O,5@iOOQ!0Lb1G0u1G0uO!(cQpO,5:sO!(nQpO,5:sOOQS,5:u,5:uO#-qQdO,5:uO#-yQMhO1G2xO9aQ`O1G2xOOQ!0Lf1G0s1G0sO#.XQ!0MxO1G0sO#/^Q!0MvO,5;TOOQ!0Lh\'#GV\'#GVO#/zQ!0MzO\'#JjO!$fQlO1G0sO#2VQ!fO\'#JuO%[QlO\'#JuO#2aQ`O,5:cOOQ!0Lh\'#D]\'#D]OOQ!0Lf1G0|1G0|O%[QlO1G0|OOQ!0Lf1G1e1G1eO#2fQ`O1G0|O#4zQ!0MxO1G0}O#5RQ!0MxO1G0}O#7iQ!0MxO1G0}O#7pQ!0MxO1G0}O#:WQ!0MxO1G0}O#<nQ!0MxO1G0}O#<uQ!0MxO1G0}O#<|Q!0MxO1G0}O#?dQ!0MxO1G0}O#?kQ!0MxO1G0}O#AxQ?MtO\'#CiO#CsQ?MtO1G1_O#CzQ?MtO\'#JqO#D_Q!0MxO,5?YOOQ!0Lb-E<l-E<lO#FlQ!0MxO1G0}O#GiQ!0MzO1G0}OOQ!0Lf1G0}1G0}O#HlQMjO\'#JzO#HvQ`O,5:vO#H{Q!0MxO1G1bO#IoQ,UO,5<VO#IwQ,UO,5<WO#JPQ,UO\'#FnO#JhQ`O\'#FmOOQO\'#KW\'#KWOOQO\'#Il\'#IlO#JmQ,UO1G1mOOQ!0Lf1G1m1G1mOOOW1G1x1G1xO#KOQ?MtO\'#JpO#KYQ`O,5<aO!(yQlO,5<aOOOW-E<k-E<kOOQ!0Lf1G1k1G1kO#K_QpO\'#KVOOQ!0Lf,5<c,5<cO#KgQpO,5<cO#KlQMhO\'#DROOOO\'#I`\'#I`O#KsO#@ItO,59kOOQ!0Lh,59k,59kO%[QlO1G2OO!7{Q`O\'#IpO#LOQ`O,5<yOOQ!0Lh,5<v,5<vO!+rQMhO\'#IsO#LlQMjO,5=WO!+rQMhO\'#IuO#M_QMjO,5=YO!&iQMhO,5=[OOQO1G2R1G2RO#MiQ!dO\'#CrO#M|Q(CWO\'#EpO$ RQpO\'#GaO$ iQ!dO,5<rO$ pQ`O\'#KYO9ZQ`O\'#KYO$!OQ`O,5<tO!+rQMhO,5<sO$!TQ`O\'#GYO$!fQ`O,5<sO$!kQ!dO\'#GVO$!xQ!dO\'#KZO$#SQ`O\'#KZO!&iQMhO\'#KZO$#XQ`O,5<wO$#^QlO\'#JtO$#hQpO\'#GbO##hQpO\'#GbO$#yQ`O\'#GfO!3^Q`O\'#GjO$$OQ!0LrO\'#IrO$$ZQpO,5<{OOQ!0Lp,5<{,5<{O$$bQpO\'#GbO$$oQpO\'#GcO$%QQpO\'#GcO$%VQMjO,5=WO$%gQMjO,5=YOOQ!0Lh,5=],5=]O!+rQMhO,5@TO!+rQMhO,5@TO$%wQ`O\'#IwO$&VQ`O,5@SO$&_Q`O,59aOOQ!0Lh,59g,59gO$\'UQ$IYO,59sOOQ!0Lh\'#Jn\'#JnO$\'wQMjO,5<jO$(jQMjO,5<lO@iQ`O,5<nOOQ!0Lh,5<o,5<oO$(tQ`O,5<uO$(yQMjO,5<zO$)ZQ`O,5@TO$)iQ`O\'#J}O!$fQlO1G2QO$)nQ`O1G2QO9ZQ`O\'#KQO9ZQ`O\'#ErO%[QlO\'#ErO9ZQ`O\'#IyO$)sQ!0LrO,5@yOOQ[1G2|1G2|OOQ[1G4^1G4^OOQ!0Lf1G/z1G/zOOQ!0Lf1G/x1G/xO$+uQ!0MxO1G0SOOQ[1G2x1G2xO!&iQMhO1G2xO%[QlO1G2xO#-|Q`O1G2xO$-yQMhO\'#EiOOQ!0Lb,5@R,5@RO$.WQ!0LrO,5@ROOQ[1G.u1G.uO!BYQ!0LrO1G.uO!BeQpO1G.uO!BmQMhO1G.uO$.iQ`O1G0sO$.nQ`O\'#CiO$.yQ`O\'#KcO$/RQ`O,5=zO$/WQ`O\'#KcO$/]Q`O\'#KcO$/kQ`O\'#JPO$/yQ`O,5@|O$0RQ!fO1G1hOOQ!0Lf1G1j1G1jO9aQ`O1G3eO@iQ`O1G3eO$0YQ`O1G3eO$0_Q`O1G3eOOQ[1G3e1G3eO!DkQ`O1G3TO!&iQMhO1G3QO$0dQ`O1G3QOOQ[1G3R1G3RO!&iQMhO1G3RO$0iQ`O1G3RO$0qQpO\'#HPOOQ[1G3T1G3TO!5|QpO\'#I{O!DpQ!bO1G3WOOQ[1G3W1G3WOOQ[,5=q,5=qO$0yQMhO,5=sO9aQ`O,5=sO$#yQ`O,5=uO9UQ`O,5=uO!BeQpO,5=uO!BmQMhO,5=uO:YQMhO,5=uO$1XQ`O\'#KaO$1dQ`O,5=vOOQ[1G.k1G.kO$1iQ!0LrO1G.kO@iQ`O1G.kO$1tQ`O1G.kO9kQ!0LrO1G.kO$3|Q!fO,5AOO$4ZQ`O,5AOO9ZQ`O,5AOO$4fQlO,5=}O$4mQ`O,5=}OOQ[1G3g1G3gO`QlO1G3gOOQ[1G3m1G3mOOQ[1G3o1G3oO>rQ`O1G3qO$4rQlO1G3sO$8vQlO\'#HrOOQ[1G3v1G3vO$9TQ`O\'#HxO>wQ`O\'#HzOOQ[1G3|1G3|O$9]QlO1G3|O9kQ!0LrO1G4SOOQ[1G4U1G4UOOQ!0Lb\'#G^\'#G^O9kQ!0LrO1G4WO9kQ!0LrO1G4YO$=dQ`O,5@`O!(yQlO,5;^O9ZQ`O,5;^O>wQ`O,5:VO!(yQlO,5:VO!BeQpO,5:VO$=iQ?MtO,5:VOOQO,5;^,5;^O$=sQpO\'#IcO$>ZQ`O,5@_OOQ!0Lf1G/p1G/pO$>cQpO\'#IiO$>mQ`O,5@nOOQ!0Lb1G0w1G0wO##hQpO,5:VOOQO\'#Ie\'#IeO$>uQpO,5:oOOQ!0Ln,5:o,5:oO#\'cQ`O1G0XOOQ!0Lf1G0X1G0XO%[QlO1G0XOOQ!0Lf1G0r1G0rO>wQ`O1G0rO!BeQpO1G0rO!BmQMhO1G0rOOQ!0Lb1G5z1G5zO!BYQ!0LrO1G0[OOQO1G0k1G0kO%[QlO1G0kO$>|Q!0LrO1G0kO$?XQ!0LrO1G0kO!BeQpO1G0[OCuQpO1G0[O$?gQ!0LrO1G0kOOQO1G0[1G0[O$?{Q!0MxO1G0kPOOO-E<Y-E<YPOOO1G.h1G.hOOOO1G/g1G/gO$@VQ!bO,5<hO$@_Q!fO1G4hOOQO1G4n1G4nO%[QlO,5>|O$@iQ`O1G5xO$@qQ`O1G6WO$@yQ!fO1G6XO9ZQ`O,5?SO$ATQ!0MxO1G6UO%[QlO1G6UO$AeQ!0LrO1G6UO$AvQ`O1G6TO$AvQ`O1G6TO9ZQ`O1G6TO$BOQ`O,5?VO9ZQ`O,5?VOOQO,5?V,5?VO$BdQ`O,5?VO$)iQ`O,5?VOOQO-E<i-E<iOOQS1G0_1G0_OOQS1G0a1G0aO#-tQ`O1G0aOOQ[7+(d7+(dO!&iQMhO7+(dO%[QlO7+(dO$BrQ`O7+(dO$B}QMhO7+(dO$C]Q!0MzO,5=WO$EhQ!0MzO,5=YO$GsQ!0MzO,5=WO$JUQ!0MzO,5=YO$LgQ!0MzO,59sO$NlQ!0MzO,5<jO%!wQ!0MzO,5<lO%%SQ!0MzO,5<zOOQ!0Lf7+&_7+&_O%\'eQ!0MxO7+&_O%(XQlO\'#IdO%(fQ`O,5@aO%(nQ!fO,5@aOOQ!0Lf1G/}1G/}O%(xQ`O7+&hOOQ!0Lf7+&h7+&hO%(}Q?MtO,5:dO%[QlO7+&yO%)XQ?MtO,5:`O%)fQ?MtO,5:hO%)pQ?MtO,5:jO%)zQMhO\'#IgO%*UQ`O,5@fOOQ!0Lh1G0b1G0bOOQO1G1q1G1qOOQO1G1r1G1rO%*^Q!jO,5<YO!(yQlO,5<XOOQO-E<j-E<jOOQ!0Lf7+\'X7+\'XOOOW7+\'d7+\'dOOOW1G1{1G1{O%*iQ`O1G1{OOQ!0Lf1G1}1G1}OOOO,59m,59mO%*nQ!dO,59mOOOO-E<^-E<^OOQ!0Lh1G/V1G/VO%*uQ!0MxO7+\'jOOQ!0Lh,5?[,5?[O%+iQMhO1G2eP%+pQ`O\'#IpPOQ!0Lh-E<n-E<nO%,^QMjO,5?_OOQ!0Lh-E<q-E<qO%-PQMjO,5?aOOQ!0Lh-E<s-E<sO%-ZQ!dO1G2vO%-bQ!dO\'#CrO%-xQMhO\'#KQO$#^QlO\'#JtOOQ!0Lh1G2^1G2^O%.PQ`O\'#IoO%.eQ`O,5@tO%.eQ`O,5@tO%.mQ`O,5@tO%.xQ`O,5@tOOQO1G2`1G2`O%/WQMjO1G2_O!+rQMhO1G2_O%/hQ(CWO\'#IqO%/uQ`O,5@uO!&iQMhO,5@uO%/}Q!dO,5@uOOQ!0Lh1G2c1G2cO%2_Q!fO\'#CiO%2iQ`O,5=OOOQ!0Lb,5<|,5<|O%2qQpO,5<|OOQ!0Lb,5<},5<}OCfQ`O,5<|O%2|QpO,5<|OOQ!0Lb,5=Q,5=QO$)iQ`O,5=UOOQO,5?^,5?^OOQO-E<p-E<pOOQ!0Lp1G2g1G2gO##hQpO,5<|O$#^QlO,5=OO%3[Q`O,5<}O%3gQpO,5<}O!+rQMhO\'#IsO%4aQMjO1G2rO!+rQMhO\'#IuO%5SQMjO1G2tO%5^QMjO1G5oO%5hQMjO1G5oOOQO,5?c,5?cOOQO-E<u-E<uOOQO1G.{1G.{O!9lQpO,59uO%[QlO,59uOOQ!0Lh,5<i,5<iO%5uQ`O1G2YO!+rQMhO1G2aO!+rQMhO1G5oO!+rQMhO1G5oO%5zQ!0MxO7+\'lOOQ!0Lf7+\'l7+\'lO!$fQlO7+\'lO%6nQ`O,5;^OOQ!0Lb,5?e,5?eOOQ!0Lb-E<w-E<wO%6sQ!dO\'#K[O#\'cQ`O7+(dO4UQ!fO7+(dO$BuQ`O7+(dO%6}Q!0MvO\'#CiO%7nQ!0LrO,5=RO%8PQ!0MvO,5=RO%8dQ`O,5=ROOQ!0Lb1G5m1G5mOOQ[7+$a7+$aO!BYQ!0LrO7+$aO!BeQpO7+$aO!$fQlO7+&_O%8lQ`O\'#JOO%9TQ`O,5@}OOQO1G3f1G3fO9aQ`O,5@}O%9TQ`O,5@}O%9]Q`O,5@}OOQO,5?k,5?kOOQO-E<}-E<}OOQ!0Lf7+\'S7+\'SO%9bQ`O7+)PO9kQ!0LrO7+)PO9aQ`O7+)PO@iQ`O7+)POOQ[7+(o7+(oO%9gQ!0MvO7+(lO!&iQMhO7+(lO!DfQ`O7+(mOOQ[7+(m7+(mO!&iQMhO7+(mO%9qQ`O\'#K`O%9|Q`O,5=kOOQO,5?g,5?gOOQO-E<y-E<yOOQ[7+(r7+(rO%;`QpO\'#HYOOQ[1G3_1G3_O!&iQMhO1G3_O%[QlO1G3_O%;gQ`O1G3_O%;rQMhO1G3_O9kQ!0LrO1G3aO$#yQ`O1G3aO9UQ`O1G3aO!BeQpO1G3aO!BmQMhO1G3aO%<QQ`O\'#I}O%<fQ`O,5@{O%<nQpO,5@{OOQ!0Lb1G3b1G3bOOQ[7+$V7+$VO@iQ`O7+$VO9kQ!0LrO7+$VO%<yQ`O7+$VO%[QlO1G6jO%[QlO1G6kO%=OQ!0LrO1G6jO%=YQlO1G3iO%=aQ`O1G3iO%=fQlO1G3iOOQ[7+)R7+)RO9kQ!0LrO7+)]O`QlO7+)_OOQ[\'#Kf\'#KfOOQ[\'#JQ\'#JQO%=mQlO,5>^OOQ[,5>^,5>^O%[QlO\'#HsO%=zQ`O\'#HuOOQ[,5>d,5>dO9ZQ`O,5>dOOQ[,5>f,5>fOOQ[7+)h7+)hOOQ[7+)n7+)nOOQ[7+)r7+)rOOQ[7+)t7+)tO%>PQpO1G5zO%>kQ?MtO1G0xO%>uQ`O1G0xOOQO1G/q1G/qO%?QQ?MtO1G/qO>wQ`O1G/qO!(yQlO\'#DkOOQO,5>},5>}OOQO-E<a-E<aOOQO,5?T,5?TOOQO-E<g-E<gO!BeQpO1G/qOOQO-E<c-E<cOOQ!0Ln1G0Z1G0ZOOQ!0Lf7+%s7+%sO#\'cQ`O7+%sOOQ!0Lf7+&^7+&^O>wQ`O7+&^O!BeQpO7+&^OOQO7+%v7+%vO$?{Q!0MxO7+&VOOQO7+&V7+&VO%[QlO7+&VO%?[Q!0LrO7+&VO!BYQ!0LrO7+%vO!BeQpO7+%vO%?gQ!0LrO7+&VO%?uQ!0MxO7++pO%[QlO7++pO%@VQ`O7++oO%@VQ`O7++oOOQO1G4q1G4qO9ZQ`O1G4qO%@_Q`O1G4qOOQS7+%{7+%{O#\'cQ`O<<LOO4UQ!fO<<LOO%@mQ`O<<LOOOQ[<<LO<<LOO!&iQMhO<<LOO%[QlO<<LOO%@uQ`O<<LOO%AQQ!0MzO,5?_O%C]Q!0MzO,5?aO%EhQ!0MzO1G2_O%GyQ!0MzO1G2rO%JUQ!0MzO1G2tO%LaQ!fO,5?OO%[QlO,5?OOOQO-E<b-E<bO%LkQ`O1G5{OOQ!0Lf<<JS<<JSO%LsQ?MtO1G0sO%NzQ?MtO1G0}O& RQ?MtO1G0}O&#SQ?MtO1G0}O&#ZQ?MtO1G0}O&%[Q?MtO1G0}O&\']Q?MtO1G0}O&\'dQ?MtO1G0}O&\'kQ?MtO1G0}O&)lQ?MtO1G0}O&)sQ?MtO1G0}O&)zQ!0MxO<<JeO&+rQ?MtO1G0}O&,oQ?MvO1G0}O&-rQ?MvO\'#JjO&/xQ?MtO1G1bO&0VQ?MtO1G0SO&0aQMjO,5?ROOQO-E<e-E<eO!(yQlO\'#FpOOQO\'#KX\'#KXOOQO1G1t1G1tO&0kQ`O1G1sO&0pQ?MtO,5?YOOOW7+\'g7+\'gOOOO1G/X1G/XO&0zQ!dO1G4vOOQ!0Lh7+(P7+(PP!&iQMhO,5?[O!+rQMhO7+(bO&1RQ`O,5?ZO9ZQ`O,5?ZOOQO-E<m-E<mO&1aQ`O1G6`O&1aQ`O1G6`O&1iQ`O1G6`O&1tQMjO7+\'yO&2UQ!dO,5?]O&2`Q`O,5?]O!&iQMhO,5?]OOQO-E<o-E<oO&2eQ!dO1G6aO&2oQ`O1G6aO&2wQ`O1G2jO!&iQMhO1G2jOOQ!0Lb1G2h1G2hOOQ!0Lb1G2i1G2iO%2qQpO1G2hO!BeQpO1G2hOCfQ`O1G2hOOQ!0Lb1G2p1G2pO&2|QpO1G2hO&3[Q`O1G2jO$)iQ`O1G2iOCfQ`O1G2iO$#^QlO1G2jO&3dQ`O1G2iO&4WQMjO,5?_OOQ!0Lh-E<r-E<rO&4yQMjO,5?aOOQ!0Lh-E<t-E<tO!+rQMhO7++ZOOQ!0Lh1G/a1G/aO&5TQ`O1G/aOOQ!0Lh7+\'t7+\'tO&5YQMjO7+\'{O&5jQMjO7++ZO&5tQMjO7++ZO&6RQ!0MxO<<KWOOQ!0Lf<<KW<<KWO&6uQ`O1G0xO!&iQMhO\'#IxO&6zQ`O,5@vO&8|Q!fO<<LOO!&iQMhO1G2mO&9TQ!0LrO1G2mOOQ[<<G{<<G{O!BYQ!0LrO<<G{O&9fQ!0MxO<<IyOOQ!0Lf<<Iy<<IyOOQO,5?j,5?jO&:YQ`O,5?jO&:_Q`O,5?jOOQO-E<|-E<|O&:mQ`O1G6iO&:mQ`O1G6iO9aQ`O1G6iO@iQ`O<<LkOOQ[<<Lk<<LkO&:uQ`O<<LkO9kQ!0LrO<<LkOOQ[<<LW<<LWO%9gQ!0MvO<<LWOOQ[<<LX<<LXO!DfQ`O<<LXO&:zQpO\'#IzO&;VQ`O,5@zO!(yQlO,5@zOOQ[1G3V1G3VOOQO\'#I|\'#I|O9kQ!0LrO\'#I|O&;_QpO,5=tOOQ[,5=t,5=tO&;fQpO\'#EeO&;mQpO\'#GdO&;rQ`O7+(yO&;wQ`O7+(yOOQ[7+(y7+(yO!&iQMhO7+(yO%[QlO7+(yO&<PQ`O7+(yOOQ[7+({7+({O9kQ!0LrO7+({O$#yQ`O7+({O9UQ`O7+({O!BeQpO7+({O&<[Q`O,5?iOOQO-E<{-E<{OOQO\'#H]\'#H]O&<gQ`O1G6gO9kQ!0LrO<<GqOOQ[<<Gq<<GqO@iQ`O<<GqO&<oQ`O7+,UO&<tQ`O7+,VO%[QlO7+,UO%[QlO7+,VOOQ[7+)T7+)TO&<yQ`O7+)TO&=OQlO7+)TO&=VQ`O7+)TOOQ[<<Lw<<LwOOQ[<<Ly<<LyOOQ[-E=O-E=OOOQ[1G3x1G3xO&=[Q`O,5>_OOQ[,5>a,5>aO&=aQ`O1G4OO9ZQ`O7+&dO!(yQlO7+&dOOQO7+%]7+%]O&=fQ?MtO1G6XO>wQ`O7+%]OOQ!0Lf<<I_<<I_OOQ!0Lf<<Ix<<IxO>wQ`O<<IxOOQO<<Iq<<IqO$?{Q!0MxO<<IqO%[QlO<<IqOOQO<<Ib<<IbO!BYQ!0LrO<<IbO&=pQ!0LrO<<IqO&={Q!0MxO<= [O&>]Q`O<= ZOOQO7+*]7+*]O9ZQ`O7+*]OOQ[ANAjANAjO&>eQ!fOANAjO!&iQMhOANAjO#\'cQ`OANAjO4UQ!fOANAjO&>lQ`OANAjO%[QlOANAjO&>tQ!0MzO7+\'yO&AVQ!0MzO,5?_O&CbQ!0MzO,5?aO&EmQ!0MzO7+\'{O&HOQ!fO1G4jO&HYQ?MtO7+&_O&J^Q?MvO,5=WO&LeQ?MvO,5=YO&LuQ?MvO,5=WO&MVQ?MvO,5=YO&MgQ?MvO,59sO\' mQ?MvO,5<jO\'#pQ?MvO,5<lO\'&UQ?MvO,5<zO\'\'zQ?MtO7+\'jO\'(XQ?MtO7+\'lO\'(fQ`O,5<[OOQO7+\'_7+\'_OOQ!0Lh7+*b7+*bO\'(kQMjO<<K|OOQO1G4u1G4uO\'(rQ`O1G4uO\'(}Q`O1G4uO\')]Q`O7++zO\')]Q`O7++zO!&iQMhO1G4wO\')eQ!dO1G4wO\')oQ`O7++{O\')wQ`O7+(UO\'*SQ!dO7+(UOOQ!0Lb7+(S7+(SOOQ!0Lb7+(T7+(TO!BeQpO7+(SOCfQ`O7+(SO\'*^Q`O7+(UO!&iQMhO7+(UO$)iQ`O7+(TO\'*cQ`O7+(UOCfQ`O7+(TO\'*kQMjO<<NuOOQ!0Lh7+${7+${O!+rQMhO<<NuO\'*uQ!dO,5?dOOQO-E<v-E<vO\'+PQ!0MvO7+(XO!&iQMhO7+(XOOQ[AN=gAN=gO9aQ`O1G5UOOQO1G5U1G5UO\'+aQ`O1G5UO\'+fQ`O7+,TO\'+fQ`O7+,TO9kQ!0LrOANBVO@iQ`OANBVOOQ[ANBVANBVOOQ[ANArANArOOQ[ANAsANAsO\'+nQ`O,5?fOOQO-E<x-E<xO\'+yQ?MtO1G6fOOQO,5?h,5?hOOQO-E<z-E<zOOQ[1G3`1G3`O\',TQ`O,5=OOOQ[<<Le<<LeO!&iQMhO<<LeO&;rQ`O<<LeO\',YQ`O<<LeO%[QlO<<LeOOQ[<<Lg<<LgO9kQ!0LrO<<LgO$#yQ`O<<LgO9UQ`O<<LgO\',bQpO1G5TO\',mQ`O7+,ROOQ[AN=]AN=]O9kQ!0LrOAN=]OOQ[<= p<= pOOQ[<= q<= qO\',uQ`O<= pO\',zQ`O<= qOOQ[<<Lo<<LoO\'-PQ`O<<LoO\'-UQlO<<LoOOQ[1G3y1G3yO>wQ`O7+)jO\'-]Q`O<<JOO\'-hQ?MtO<<JOOOQO<<Hw<<HwOOQ!0LfAN?dAN?dOOQOAN?]AN?]O$?{Q!0MxOAN?]OOQOAN>|AN>|O%[QlOAN?]OOQO<<Mw<<MwOOQ[G27UG27UO!&iQMhOG27UO#\'cQ`OG27UO\'-rQ!fOG27UO4UQ!fOG27UO\'-yQ`OG27UO\'.RQ?MtO<<JeO\'.`Q?MvO1G2_O\'0UQ?MvO,5?_O\'2XQ?MvO,5?aO\'4[Q?MvO1G2rO\'6_Q?MvO1G2tO\'8bQ?MtO<<KWO\'8oQ?MtO<<IyOOQO1G1v1G1vO!+rQMhOANAhOOQO7+*a7+*aO\'8|Q`O7+*aO\'9XQ`O<= fO\'9aQ!dO7+*cOOQ!0Lb<<Kp<<KpO$)iQ`O<<KpOCfQ`O<<KpO\'9kQ`O<<KpO!&iQMhO<<KpOOQ!0Lb<<Kn<<KnO!BeQpO<<KnO\'9vQ!dO<<KpOOQ!0Lb<<Ko<<KoO\':QQ`O<<KpO!&iQMhO<<KpO$)iQ`O<<KoO\':VQMjOANDaO\':aQ!0MvO<<KsOOQO7+*p7+*pO9aQ`O7+*pO\':qQ`O<= oOOQ[G27qG27qO9kQ!0LrOG27qO!(yQlO1G5QO\':yQ`O7+,QO\';RQ`O1G2jO&;rQ`OANBPOOQ[ANBPANBPO!&iQMhOANBPO\';WQ`OANBPOOQ[ANBRANBRO9kQ!0LrOANBRO$#yQ`OANBROOQO\'#H^\'#H^OOQO7+*o7+*oOOQ[G22wG22wOOQ[ANE[ANE[OOQ[ANE]ANE]OOQ[ANBZANBZO\';`Q`OANBZOOQ[<<MU<<MUO!(yQlOAN?jOOQOG24wG24wO$?{Q!0MxOG24wO#\'cQ`OLD,pOOQ[LD,pLD,pO!&iQMhOLD,pO\';eQ!fOLD,pO\';lQ?MvO7+\'yO\'=bQ?MvO,5?_O\'?eQ?MvO,5?aO\'AhQ?MvO7+\'{O\'C^QMjOG27SOOQO<<M{<<M{OOQ!0LbANA[ANA[O$)iQ`OANA[OCfQ`OANA[O\'CnQ!dOANA[OOQ!0LbANAYANAYO\'CuQ`OANA[O!&iQMhOANA[O\'DQQ!dOANA[OOQ!0LbANAZANAZOOQO<<N[<<N[OOQ[LD-]LD-]O\'D[Q?MtO7+*lOOQO\'#Ge\'#GeOOQ[G27kG27kO&;rQ`OG27kO!&iQMhOG27kOOQ[G27mG27mO9kQ!0LrOG27mOOQ[G27uG27uO\'DfQ?MtOG25UOOQOLD*cLD*cOOQ[!$(![!$(![O#\'cQ`O!$(![O!&iQMhO!$(![O\'DpQ!0MzOG27SOOQ!0LbG26vG26vO$)iQ`OG26vO\'GRQ`OG26vOCfQ`OG26vO\'G^Q!dOG26vO!&iQMhOG26vOOQ[LD-VLD-VO&;rQ`OLD-VOOQ[LD-XLD-XOOQ[!)9Ev!)9EvO#\'cQ`O!)9EvOOQ!0LbLD,bLD,bO$)iQ`OLD,bOCfQ`OLD,bO\'GeQ`OLD,bO\'GpQ!dOLD,bOOQ[!$(!q!$(!qOOQ[!.K;b!.K;bO\'GwQ?MvOG27SOOQ!0Lb!$( |!$( |O$)iQ`O!$( |OCfQ`O!$( |O\'ImQ`O!$( |OOQ!0Lb!)9Eh!)9EhO$)iQ`O!)9EhOCfQ`O!)9EhOOQ!0Lb!.K;S!.K;SO$)iQ`O!.K;SOOQ!0Lb!4/0n!4/0nO!(yQlO\'#DxO1PQ`O\'#EVO\'IxQ!fO\'#JpO\'JPQ!L^O\'#DtO\'JWQlO\'#D|O\'J_Q!fO\'#CiO\'LuQ!fO\'#CiO!(yQlO\'#EOO\'MVQlO,5;XO!(yQlO,5;cO!(yQlO,5;cO!(yQlO,5;cO!(yQlO,5;cO!(yQlO,5;cO!(yQlO,5;cO!(yQlO,5;cO!(yQlO,5;cO!(yQlO,5;cO!(yQlO,5;cO!(yQlO\'#InO( YQ`O,5<hO!(yQlO,5;cO( bQMhO,5;cO(!{QMhO,5;cO!(yQlO,5;vO!&iQMhO\'#GlO( bQMhO\'#GlO!&iQMhO\'#GnO( bQMhO\'#GnO1SQ`O\'#DXO1SQ`O\'#DXO!&iQMhO\'#GOO( bQMhO\'#GOO!&iQMhO\'#GQO( bQMhO\'#GQO!&iQMhO\'#G`O( bQMhO\'#G`O!(yQlO,5:hO(#SQpO\'#D]O(#^QpO\'#JtO!(yQlO,5@mO\'MVQlO1G0sO(#hQ?MtO\'#CiO!(yQlO1G2OO!&iQMhO\'#IsO( bQMhO\'#IsO!&iQMhO\'#IuO( bQMhO\'#IuO(#rQ!dO\'#CrO!&iQMhO,5<sO( bQMhO,5<sO\'MVQlO1G2QO!(yQlO7+&yO!&iQMhO1G2_O( bQMhO1G2_O!&iQMhO\'#IsO( bQMhO\'#IsO!&iQMhO\'#IuO( bQMhO\'#IuO!&iQMhO1G2aO( bQMhO1G2aO\'MVQlO7+\'lO\'MVQlO7+&_O!&iQMhOANAhO( bQMhOANAhO($VQ`O\'#EmO($[Q`O\'#EmO($dQ`O\'#F[O($iQ`O\'#EwO($nQ`O\'#KRO($yQ`O\'#KPO(%UQ`O,5;XO(%ZQMjO,5<dO(%bQ`O\'#GXO(%gQ`O\'#GXO(%lQ`O,5<fO(%tQ`O,5;XO(%|Q?MtO1G1_O(&TQ`O,5<sO(&YQ`O,5<sO(&_Q`O,5<uO(&dQ`O,5<uO(&iQ`O1G2QO(&nQ`O1G0sO(&sQMjO<<K|O(&zQMjO<<K|O7eQMhO\'#F{O9UQ`O\'#FzOAdQ`O\'#ElO!(yQlO,5;sO!3^Q`O\'#GXO!3^Q`O\'#GXO!3^Q`O\'#GZO!3^Q`O\'#GZO!+rQMhO7+(bO!+rQMhO7+(bO%-ZQ!dO1G2vO%-ZQ!dO1G2vO!&iQMhO,5=[O!&iQMhO,5=[",\n  stateData: "((P~O\'zOS\'{OSTOS\'|RQ~OPYOQYOSfOY!VOaqOdzOeyOj!POnkOpYOqkOrkOxkOzYO|YO!QWO!UkO!VkO!]XO!guO!jZO!mYO!nYO!oYO!qvO!swO!vxO!z]O$V|O$miO%g}O%i!QO%k!OO%l!OO%m!OO%p!RO%r!SO%u!TO%v!TO%x!UO&U!WO&[!XO&^!YO&`!ZO&b![O&e!]O&k!^O&q!_O&s!`O&u!aO&w!bO&y!cO(RSO(TTO(WUO(_VO(m[O~OWtO~P`OPYOQYOSfOd!jOe!iOnkOpYOqkOrkOxkOzYO|YO!QWO!UkO!VkO!]!eO!guO!jZO!mYO!nYO!oYO!qvO!s!gO!v!hO$V!kO$miO(R!dO(TTO(WUO(_VO(m[O~Oa!wOq!nO!Q!oO!`!yO!a!vO!b!vO!z;wO#R!pO#S!pO#T!xO#U!pO#V!pO#Y!zO#Z!zO(S!lO(TTO(WUO(c!mO(m!sO~O\'|!{O~OP]XR]X[]Xa]Xp]X!O]X!Q]X!Z]X!j]X!n]X#P]X#Q]X#^]X#ifX#l]X#m]X#n]X#o]X#p]X#q]X#r]X#s]X#t]X#u]X#w]X#y]X#z]X$P]X\'x]X(_]X(p]X(w]X(x]X~O!e%QX~P(qO_!}O(T#PO(U!}O(V#PO~O_#QO(V#PO(W#PO(X#QO~Ov#SO!S#TO(`#TO(a#VO~OPYOQYOSfOd!jOe!iOnkOpYOqkOrkOxkOzYO|YO!QWO!UkO!VkO!]!eO!guO!jZO!mYO!nYO!oYO!qvO!s!gO!v!hO$V!kO$miO(R;{O(TTO(WUO(_VO(m[O~O!Y#ZO!Z#WO!W(fP!W(tP~P+}O![#cO~P`OPYOQYOSfOd!jOe!iOpYOqkOrkOxkOzYO|YO!QWO!UkO!VkO!]!eO!guO!jZO!mYO!nYO!oYO!qvO!s!gO!v!hO$V!kO$miO(TTO(WUO(_VO(m[O~On#mO!Y#iO!z]O#g#lO#h#iO(R;|O!i(qP~P.iO!j#oO(R#nO~O!v#sO!z]O%g#tO~O#i#uO~O!e#vO#i#uO~OP$[OR#zO[$cOp$aO!O#yO!Q#{O!Z$_O!j#xO!n$[O#P$RO#l$OO#m$PO#n$PO#o$PO#p$QO#q$RO#r$RO#s$bO#t$RO#u$SO#w$UO#y$WO#z$XO(_VO(p$YO(w#|O(x#}O~Oa(dX\'x(dX\'u(dX!i(dX!W(dX!](dX%h(dX!e(dX~P1qO#Q$dO#^$eO$P$eOP(eXR(eX[(eXp(eX!O(eX!Q(eX!Z(eX!j(eX!n(eX#P(eX#l(eX#m(eX#n(eX#o(eX#p(eX#q(eX#r(eX#s(eX#t(eX#u(eX#w(eX#y(eX#z(eX(_(eX(p(eX(w(eX(x(eX!](eX%h(eX~Oa(eX\'x(eX\'u(eX!W(eX!i(eXt(eX!e(eX~P4UO#^$eO~O$[$hO$^$gO$e$mO~OSfO!]$nO$h$oO$j$qO~Oh%VOj%cOn%WOp%XOq$tOr$tOx%YOz%ZO|%[O!Q${O!]$|O!g%aO!j$xO#h%bO$V%_O$s%]O$u%^O$x%`O(R$sO(TTO(WUO(_$uO(w$}O(x%POg([P~O!j%dO~O!Q%gO!]%hO(R%fO~O!e%lO~Oa%mO\'x%mO~O!O%qO~P%[O(S!lO~P%[O%m%uO~P%[Oh%VO!j%dO(R%fO(S!lO~Oe%|O!j%dO(R%fO~O#t$RO~O!O&RO!]&OO!j&QO%i&UO(R%fO(S!lO(TTO(WUO`)UP~O!v#sO~O%r&WO!Q)QX!])QX(R)QX~O(R&XO~Oj!PO!s&^O%i!QO%k!OO%l!OO%m!OO%p!RO%r!SO%u!TO%v!TO~Od&cOe&bO!v&`O%g&aO%z&_O~P<POd&fOeyOj!PO!]&eO!s&^O!vxO!z]O%g}O%k!OO%l!OO%m!OO%p!RO%r!SO%u!TO%v!TO%x!UO~Ob&iO#^&lO%i&gO(S!lO~P=UO!j&mO!s&qO~O!j#oO~O!]XO~Oa%mO\'v&yO\'x%mO~Oa%mO\'v&|O\'x%mO~Oa%mO\'v\'OO\'x%mO~O\'u]X!W]Xt]X!i]X&Y]X!]]X%h]X!e]X~P(qO!`\']O!a\'UO!b\'UO(S!lO(TTO(WUO~Oq\'SO!Q\'RO!Y\'VO(c\'QO![(gP![(vP~P@]Ol\'`O!]\'^O(R%fO~Oe\'eO!j%dO(R%fO~O!O&RO!j&QO~Oq!nO!Q!oO!z;wO#R!pO#S!pO#U!pO#V!pO(S!lO(TTO(WUO(c!mO(m!sO~O!`\'kO!a\'jO!b\'jO#T!pO#Y\'lO#Z\'lO~PAwOa%mOh%VO!e#vO!j%dO\'x%mO(p\'nO~O!n\'rO#^\'pO~PCVOq!nO!Q!oO(TTO(WUO(c!mO(m!sO~O!]XOq(kX!Q(kX!`(kX!a(kX!b(kX!z(kX#R(kX#S(kX#T(kX#U(kX#V(kX#Y(kX#Z(kX(S(kX(T(kX(W(kX(c(kX(m(kX~O!a\'jO!b\'jO(S!lO~PCuO\'}\'vO(O\'vO(P\'xO~O_!}O(T\'zO(U!}O(V\'zO~O_#QO(V\'zO(W\'zO(X#QO~Ot\'|O~P%[Ov#SO!S#TO(`#TO(a(PO~O!Y(RO!W\'UX!W\'[X!Z\'UX!Z\'[X~P+}O!Z(TO!W(fX~OP$[OR#zO[$cOp$aO!O#yO!Q#{O!Z(TO!j#xO!n$[O#P$RO#l$OO#m$PO#n$PO#o$PO#p$QO#q$RO#r$RO#s$bO#t$RO#u$SO#w$UO#y$WO#z$XO(_VO(p$YO(w#|O(x#}O~O!W(fX~PGpO!W(YO~O!W(sX!Z(sX!e(sX!i(sX(p(sX~O#^(sX#i#bX![(sX~PIsO#^(ZO!W(uX!Z(uX~O!Z([O!W(tX~O!W(_O~O#^$eO~PIsO![(`O~P`OR#zO!O#yO!Q#{O!j#xO(_VOP!la[!lap!la!Z!la!n!la#P!la#l!la#m!la#n!la#o!la#p!la#q!la#r!la#s!la#t!la#u!la#w!la#y!la#z!la(p!la(w!la(x!la~Oa!la\'x!la\'u!la!W!la!i!lat!la!]!la%h!la!e!la~PKZO!i(aO~O!e#vO#^(bO(p\'nO!Z(rXa(rX\'x(rX~O!i(rX~PMvO!Q%gO!]%hO!z]O#g(gO#h(fO(R%fO~O!Z(hO!i(qX~O!i(jO~O!Q%gO!]%hO#h(fO(R%fO~OP(eXR(eX[(eXp(eX!O(eX!Q(eX!Z(eX!j(eX!n(eX#P(eX#l(eX#m(eX#n(eX#o(eX#p(eX#q(eX#r(eX#s(eX#t(eX#u(eX#w(eX#y(eX#z(eX(_(eX(p(eX(w(eX(x(eX~O!e#vO!i(eX~P! dOR(lO!O(kO!j#xO#Q$dO!z!ya!Q!ya~O!v!ya%g!ya!]!ya#g!ya#h!ya(R!ya~P!#eO!v(pO~OPYOQYOSfOd!jOe!iOnkOpYOqkOrkOxkOzYO|YO!QWO!UkO!VkO!]XO!guO!jZO!mYO!nYO!oYO!qvO!s!gO!v!hO$V!kO$miO(R!dO(TTO(WUO(_VO(m[O~Oh%VOn%WOp%XOq$tOr$tOx%YOz%ZO|<eO!Q${O!]$|O!g=vO!j$xO#h<kO$V%_O$s<gO$u<iO$x%`O(R(tO(TTO(WUO(_$uO(w$}O(x%PO~O#i(vO~O!Y(xO!i(iP~P%[O(c(zO(m[O~O!Q(|O!j#xO(c(zO(m[O~OP;vOQ;vOSfOd=rOe!iOnkOp;vOqkOrkOxkOz;vO|;vO!QWO!UkO!VkO!]!eO!g;yO!jZO!m;vO!n;vO!o;vO!q;zO!s;}O!v!hO$V!kO$m=pO(R)ZO(TTO(WUO(_VO(m[O~O!Z$_Oa$pa\'x$pa\'u$pa!i$pa!W$pa!]$pa%h$pa!e$pa~Oj)bO~P!&iOh%VOn%WOp%XOq$tOr$tOx%YOz%ZO|%[O!Q${O!]$|O!g%aO!j$xO#h%bO$V%_O$s%]O$u%^O$x%`O(R(tO(TTO(WUO(_$uO(w$}O(x%PO~Og(nP~P!+rO!O)gO!e)fO!]$]X$Y$]X$[$]X$^$]X$e$]X~O!e)fO!](yX$Y(yX$[(yX$^(yX$e(yX~O!O)gO~P!-{O!O)gO!](yX$Y(yX$[(yX$^(yX$e(yX~O!])iO$Y)mO$[)hO$^)hO$e)nO~O!Y)qO~P!(yO$[$hO$^$gO$e)uO~Ol$yX!O$yX#Q$yX\'w$yX(w$yX(x$yX~OgkXg$yXlkX!ZkX#^kX~P!/qOv)wO(`)xO(a)zO~Ol*TO!O)|O\'w)}O(w$}O(x%PO~Og){O~P!0uOg*UO~Oh%VOn%WOp%XOq$tOr$tOx%YOz%ZO|<eO!Q*WO!]*XO!g=vO!j$xO#h<kO$V%_O$s<gO$u<iO$x%`O(TTO(WUO(_$uO(w$}O(x%PO~O!Y*[O(R*VO!i(|P~P!1dO#i*^O~O!j*_O~Oh%VOn%WOp%XOq$tOr$tOx%YOz%ZO|<eO!Q${O!]$|O!g=vO!j$xO#h<kO$V%_O$s<gO$u<iO$x%`O(R*aO(TTO(WUO(_$uO(w$}O(x%PO~O!Y*dO!W(}P~P!3cOp*pOq!nO!Q*fO!`*nO!a*hO!b*hO!j*_O#Y*oO%_*jO(S!lO(TTO(WUO(c!mO~O![*mO~P!5WO#Q$dOl(^X!O(^X\'w(^X(w(^X(x(^X!Z(^X#^(^X~Og(^X#}(^X~P!6YOl*uO#^*tOg(]X!Z(]X~O!Z*vOg([X~Oj%cO(R&XOg([P~Oq*yO~O!j+OO~O(R(tO~On+TO!Q%gO!Y#iO!]%hO!z]O#g#lO#h#iO(R%fO!i(qP~O!e#vO#i+UO~O!Q%gO!Y+WO!Z([O!]%hO(R%fO!W(tP~Oq\'YO!Q+YO!Y+XO(TTO(WUO(c(zO~O![(vP~P!9]O!Z+ZOa)RX\'x)RX~OP$[OR#zO[$cOp$aO!O#yO!Q#{O!j#xO!n$[O#P$RO#l$OO#m$PO#n$PO#o$PO#p$QO#q$RO#r$RO#s$bO#t$RO#u$SO#w$UO#y$WO#z$XO(_VO(p$YO(w#|O(x#}O~Oa!ha!Z!ha\'x!ha\'u!ha!W!ha!i!hat!ha!]!ha%h!ha!e!ha~P!:TOR#zO!O#yO!Q#{O!j#xO(_VOP!pa[!pap!pa!Z!pa!n!pa#P!pa#l!pa#m!pa#n!pa#o!pa#p!pa#q!pa#r!pa#s!pa#t!pa#u!pa#w!pa#y!pa#z!pa(p!pa(w!pa(x!pa~Oa!pa\'x!pa\'u!pa!W!pa!i!pat!pa!]!pa%h!pa!e!pa~P!<kOR#zO!O#yO!Q#{O!j#xO(_VOP!ra[!rap!ra!Z!ra!n!ra#P!ra#l!ra#m!ra#n!ra#o!ra#p!ra#q!ra#r!ra#s!ra#t!ra#u!ra#w!ra#y!ra#z!ra(p!ra(w!ra(x!ra~Oa!ra\'x!ra\'u!ra!W!ra!i!rat!ra!]!ra%h!ra!e!ra~P!?ROh%VOl+dO!]\'^O%h+cO~O!e+fOa(ZX!](ZX\'x(ZX!Z(ZX~Oa%mO!]XO\'x%mO~Oh%VO!j%dO~Oh%VO!j%dO(R%fO~O!e#vO#i(vO~Ob+qO%i+rO(R+nO(TTO(WUO![)VP~O!Z+sO`)UX~O[+wO~O`+xO~O!]&OO(R%fO(S!lO`)UP~Oh%VO#^+}O~Oh%VOl,QO!]$|O~O!],SO~O!O,UO!]XO~O%m%uO~O!v,ZO~Oe,`O~Ob,aO(R#nO(TTO(WUO![)TP~Oe%|O~O%i!QO(R&XO~P=UO[,fO`,eO~OPYOQYOSfOdzOeyOnkOpYOqkOrkOxkOzYO|YO!QWO!UkO!VkO!guO!jZO!mYO!nYO!oYO!qvO!vxO!z]O$miO%g}O(TTO(WUO(_VO(m[O~O!]!eO!s!gO$V!kO(R!dO~P!FRO`,eOa%mO\'x%mO~OPYOQYOSfOd!jOe!iOnkOpYOqkOrkOxkOzYO|YO!QWO!UkO!VkO!]!eO!guO!jZO!mYO!nYO!oYO!qvO!v!hO$V!kO$miO(R!dO(TTO(WUO(_VO(m[O~Oa,kOj!OO!swO%k!OO%l!OO%m!OO~P!HkO!j&mO~O&[,qO~O!],sO~O&m,uO&o,vOP&jaQ&jaS&jaY&jaa&jad&jae&jaj&jan&jap&jaq&jar&jax&jaz&ja|&ja!Q&ja!U&ja!V&ja!]&ja!g&ja!j&ja!m&ja!n&ja!o&ja!q&ja!s&ja!v&ja!z&ja$V&ja$m&ja%g&ja%i&ja%k&ja%l&ja%m&ja%p&ja%r&ja%u&ja%v&ja%x&ja&U&ja&[&ja&^&ja&`&ja&b&ja&e&ja&k&ja&q&ja&s&ja&u&ja&w&ja&y&ja\'u&ja(R&ja(T&ja(W&ja(_&ja(m&ja![&ja&c&jab&ja&h&ja~O(R,{O~Oh!cX!Z!PX![!PX!e!PX!e!cX!j!cX#^!PX~O!Z!cX![!cX~P# qO!e-QO#^-POh(hX!Z#fX![#fX!e(hX!j(hX~O!Z(hX![(hX~P#!dOh%VO!e-SO!j%dO!Z!_X![!_X~Oq!nO!Q!oO(TTO(WUO(c!mO~OP;vOQ;vOSfOd=rOe!iOnkOp;vOqkOrkOxkOz;vO|;vO!QWO!UkO!VkO!]!eO!g;yO!jZO!m;vO!n;vO!o;vO!q;zO!s;}O!v!hO$V!kO$m=pO(TTO(WUO(_VO(m[O~O(R<rO~P##yO!Z-WO![(gX~O![-YO~O!e-QO#^-PO!Z#fX![#fX~O!Z-ZO![(vX~O![-]O~O!a-^O!b-^O(S!lO~P##hO![-aO~P\'_Ol-dO!]\'^O~O!W-iO~Oq!ya!`!ya!a!ya!b!ya#R!ya#S!ya#T!ya#U!ya#V!ya#Y!ya#Z!ya(S!ya(T!ya(W!ya(c!ya(m!ya~P!#eO!n-nO#^-lO~PCVO!a-pO!b-pO(S!lO~PCuOa%mO#^-lO\'x%mO~Oa%mO!e#vO#^-lO\'x%mO~Oa%mO!e#vO!n-nO#^-lO\'x%mO(p\'nO~O\'}\'vO(O\'vO(P-uO~Ot-vO~O!W\'Ua!Z\'Ua~P!:TO!Y-zO!W\'UX!Z\'UX~P%[O!Z(TO!W(fa~O!W(fa~PGpO!Z([O!W(ta~O!Q%gO!Y.OO!]%hO(R%fO!W\'[X!Z\'[X~O#^.QO!Z(ra!i(raa(ra\'x(ra~O!e#vO~P#,PO!Z(hO!i(qa~O!Q%gO!]%hO#h.UO(R%fO~On.ZO!Q%gO!Y.WO!]%hO!z]O#g.YO#h.WO(R%fO!Z\'_X!i\'_X~OR._O!j#xO~Oh%VOl.bO!]\'^O%h.aO~Oa#ai!Z#ai\'x#ai\'u#ai!W#ai!i#ait#ai!]#ai%h#ai!e#ai~P!:TOl=|O!O)|O\'w)}O(w$}O(x%PO~O#i#]aa#]a#^#]a\'x#]a!Z#]a!i#]a!]#]a!W#]a~P#.{O#i(^XP(^XR(^X[(^Xa(^Xp(^X!Q(^X!j(^X!n(^X#P(^X#l(^X#m(^X#n(^X#o(^X#p(^X#q(^X#r(^X#s(^X#t(^X#u(^X#w(^X#y(^X#z(^X\'x(^X(_(^X(p(^X!i(^X!W(^X\'u(^Xt(^X!](^X%h(^X!e(^X~P!6YO!Z.oO!i(iX~P!:TO!i.rO~O!W.tO~OP$[OR#zO!O#yO!Q#{O!j#xO!n$[O(_VO[#kia#kip#ki!Z#ki#P#ki#m#ki#n#ki#o#ki#p#ki#q#ki#r#ki#s#ki#t#ki#u#ki#w#ki#y#ki#z#ki\'x#ki(p#ki(w#ki(x#ki\'u#ki!W#ki!i#kit#ki!]#ki%h#ki!e#ki~O#l#ki~P#2kO#l$OO~P#2kOP$[OR#zOp$aO!O#yO!Q#{O!j#xO!n$[O#l$OO#m$PO#n$PO#o$PO(_VO[#kia#ki!Z#ki#P#ki#q#ki#r#ki#s#ki#t#ki#u#ki#w#ki#y#ki#z#ki\'x#ki(p#ki(w#ki(x#ki\'u#ki!W#ki!i#kit#ki!]#ki%h#ki!e#ki~O#p#ki~P#5YO#p$QO~P#5YOP$[OR#zO[$cOp$aO!O#yO!Q#{O!j#xO!n$[O#P$RO#l$OO#m$PO#n$PO#o$PO#p$QO#q$RO#r$RO#s$bO#t$RO(_VOa#ki!Z#ki#w#ki#y#ki#z#ki\'x#ki(p#ki(w#ki(x#ki\'u#ki!W#ki!i#kit#ki!]#ki%h#ki!e#ki~O#u#ki~P#7wOP$[OR#zO[$cOp$aO!O#yO!Q#{O!j#xO!n$[O#P$RO#l$OO#m$PO#n$PO#o$PO#p$QO#q$RO#r$RO#s$bO#t$RO#u$SO(_VO(x#}Oa#ki!Z#ki#y#ki#z#ki\'x#ki(p#ki(w#ki\'u#ki!W#ki!i#kit#ki!]#ki%h#ki!e#ki~O#w$UO~P#:_O#w#ki~P#:_O#u$SO~P#7wOP$[OR#zO[$cOp$aO!O#yO!Q#{O!j#xO!n$[O#P$RO#l$OO#m$PO#n$PO#o$PO#p$QO#q$RO#r$RO#s$bO#t$RO#u$SO#w$UO(_VO(w#|O(x#}Oa#ki!Z#ki#z#ki\'x#ki(p#ki\'u#ki!W#ki!i#kit#ki!]#ki%h#ki!e#ki~O#y#ki~P#=TO#y$WO~P#=TOP]XR]X[]Xp]X!O]X!Q]X!j]X!n]X#P]X#Q]X#^]X#ifX#l]X#m]X#n]X#o]X#p]X#q]X#r]X#s]X#t]X#u]X#w]X#y]X#z]X$P]X(_]X(p]X(w]X(x]X!Z]X![]X~O#}]X~P#?rOP$[OR#zO[<_Op<]O!O#yO!Q#{O!j#xO!n$[O#P<SO#l<PO#m<QO#n<QO#o<QO#p<RO#q<SO#r<SO#s<^O#t<SO#u<TO#w<VO#y<XO#z<YO(_VO(p$YO(w#|O(x#}O~O#}.vO~P#BPO#Q$dO#^<`O$P<`O#}(eX![(eX~P! dOa\'ba!Z\'ba\'x\'ba\'u\'ba!i\'ba!W\'bat\'ba!]\'ba%h\'ba!e\'ba~P!:TO[#kia#kip#ki!Z#ki#P#ki#p#ki#q#ki#r#ki#s#ki#t#ki#u#ki#w#ki#y#ki#z#ki\'x#ki(p#ki\'u#ki!W#ki!i#kit#ki!]#ki%h#ki!e#ki~OP$[OR#zO!O#yO!Q#{O!j#xO!n$[O#l$OO#m$PO#n$PO#o$PO(_VO(w#ki(x#ki~P#EROl=|O!O)|O\'w)}O(w$}O(x%POP#kiR#ki!Q#ki!j#ki!n#ki#l#ki#m#ki#n#ki#o#ki(_#ki~P#ERO!Z.zOg(nX~P!0uOg.|O~Oa$Oi!Z$Oi\'x$Oi\'u$Oi!W$Oi!i$Oit$Oi!]$Oi%h$Oi!e$Oi~P!:TO$[.}O$^.}O~O$[/OO$^/OO~O!e)fO#^/PO!]$bX$Y$bX$[$bX$^$bX$e$bX~O!Y/QO~O!])iO$Y/SO$[)hO$^)hO$e/TO~O!Z<ZO![(dX~P#BPO![/UO~O!e)fO$e(yX~O$e/WO~Ot/XO~P!&iOv)wO(`)xO(a/[O~O!Q/_O~O(w$}Ol%`a!O%`a\'w%`a(x%`a!Z%`a#^%`a~Og%`a#}%`a~P#LTO(x%POl%ba!O%ba\'w%ba(w%ba!Z%ba#^%ba~Og%ba#}%ba~P#LvO!ZfX!efX!ifX!i$yX(pfX~P!/qO!Y/hO!Z([O(R/gO!W(tP!W(}P~P!1dOp*pO!`*nO!a*hO!b*hO!j*_O#Y*oO%_*jO(S!lO(TTO(WUO~Oq<oO!Q/iO!Y+XO![*mO(c<nO![(vP~P#NaO!i/jO~P#.{O!Z/kO!e#vO(p\'nO!i(|X~O!i/pO~O!Q%gO!Y*[O!]%hO(R%fO!i(|P~O#i/rO~O!W$yX!Z$yX!e%QX~P!/qO!Z/sO!W(}X~P#.{O!e/uO~O!W/wO~OnkO(R/xO~P.iOh%VOp/}O!e#vO!j%dO(p\'nO~O!e+fO~Oa%mO!Z0RO\'x%mO~O![0TO~P!5WO!a0UO!b0UO(S!lO~P##hOq!nO!Q0VO(TTO(WUO(c!mO~O#Y0XO~Og%`a!Z%`a#^%`a#}%`a~P!0uOg%ba!Z%ba#^%ba#}%ba~P!0uOj%cO(R&XOg\'kX!Z\'kX~O!Z*vOg([a~Og0bO~OR0cO!O0cO!Q0dO#Q$dOl{a\'w{a(w{a(x{a!Z{a#^{a~Og{a#}{a~P$&dO!O)|O\'w)}Ol$ra(w$ra(x$ra!Z$ra#^$ra~Og$ra#}$ra~P$\'`O!O)|O\'w)}Ol$ta(w$ta(x$ta!Z$ta#^$ta~Og$ta#}$ta~P$(RO#i0gO~Og%Sa!Z%Sa#^%Sa#}%Sa~P!0uOl0iO#^0hOg(]a!Z(]a~O!e#vO~O#i0lO~O!Z+ZOa)Ra\'x)Ra~OR#zO!O#yO!Q#{O!j#xO(_VOP!pi[!pip!pi!Z!pi!n!pi#P!pi#l!pi#m!pi#n!pi#o!pi#p!pi#q!pi#r!pi#s!pi#t!pi#u!pi#w!pi#y!pi#z!pi(p!pi(w!pi(x!pi~Oa!pi\'x!pi\'u!pi!W!pi!i!pit!pi!]!pi%h!pi!e!pi~P$*OOh%VOp%XOq$tOr$tOx%YOz%ZO|<eO!Q${O!]$|O!g=vO!j$xO#h<kO$V%_O$s<gO$u<iO$x%`O(TTO(WUO(_$uO(w$}O(x%PO~On0vO%[0wO(R0tO~P$,fO!e+fOa(Za!](Za\'x(Za!Z(Za~O#i0|O~O[]X!ZfX![fX~O!Z0}O![)VX~O![1PO~O[1QO~Ob1SO(R+nO(TTO(WUO~O!]&OO(R%fO`\'sX!Z\'sX~O!Z+sO`)Ua~O!i1VO~P!:TO[1YO~O`1ZO~O#^1^O~Ol1aO!]$|O~O(c(zO![)SP~Oh%VOl1jO!]1gO%h1iO~O[1tO!Z1rO![)TX~O![1uO~O`1wOa%mO\'x%mO~O(R#nO(TTO(WUO~O#Q$dO#^$eO$P$eOP(eXR(eX[(eXp(eX!O(eX!Q(eX!Z(eX!j(eX!n(eX#P(eX#l(eX#m(eX#n(eX#o(eX#p(eX#q(eX#r(eX#s(eX#u(eX#w(eX#y(eX#z(eX(_(eX(p(eX(w(eX(x(eX~O#t1zO&Y1{Oa(eX~P$2PO#^$eO#t1zO&Y1{O~Oa1}O~P%[Oa2PO~O&c2SOP&aiQ&aiS&aiY&aia&aid&aie&aij&ain&aip&aiq&air&aix&aiz&ai|&ai!Q&ai!U&ai!V&ai!]&ai!g&ai!j&ai!m&ai!n&ai!o&ai!q&ai!s&ai!v&ai!z&ai$V&ai$m&ai%g&ai%i&ai%k&ai%l&ai%m&ai%p&ai%r&ai%u&ai%v&ai%x&ai&U&ai&[&ai&^&ai&`&ai&b&ai&e&ai&k&ai&q&ai&s&ai&u&ai&w&ai&y&ai\'u&ai(R&ai(T&ai(W&ai(_&ai(m&ai![&aib&ai&h&ai~Ob2YO![2WO&h2XO~P`O!]XO!j2[O~O&o,vOP&jiQ&jiS&jiY&jia&jid&jie&jij&jin&jip&jiq&jir&jix&jiz&ji|&ji!Q&ji!U&ji!V&ji!]&ji!g&ji!j&ji!m&ji!n&ji!o&ji!q&ji!s&ji!v&ji!z&ji$V&ji$m&ji%g&ji%i&ji%k&ji%l&ji%m&ji%p&ji%r&ji%u&ji%v&ji%x&ji&U&ji&[&ji&^&ji&`&ji&b&ji&e&ji&k&ji&q&ji&s&ji&u&ji&w&ji&y&ji\'u&ji(R&ji(T&ji(W&ji(_&ji(m&ji![&ji&c&jib&ji&h&ji~O!W2bO~O!Z!_a![!_a~P#BPOq!nO!Q!oO!Y2hO(c!mO!Z\'VX![\'VX~P@]O!Z-WO![(ga~O!Z\']X![\']X~P!9]O!Z-ZO![(va~O![2oO~P\'_Oa%mO#^2xO\'x%mO~Oa%mO!e#vO#^2xO\'x%mO~Oa%mO!e#vO!n2|O#^2xO\'x%mO(p\'nO~Oa%mO\'x%mO~P!:TO!Z$_Ot$pa~O!W\'Ui!Z\'Ui~P!:TO!Z(TO!W(fi~O!Z([O!W(ti~O!W(ui!Z(ui~P!:TO!Z(ri!i(ria(ri\'x(ri~P!:TO#^3OO!Z(ri!i(ria(ri\'x(ri~O!Z(hO!i(qi~O!Q%gO!]%hO!z]O#g3TO#h3SO(R%fO~O!Q%gO!]%hO#h3SO(R%fO~Ol3[O!]\'^O%h3ZO~Oh%VOl3[O!]\'^O%h3ZO~O#i%`aP%`aR%`a[%`aa%`ap%`a!Q%`a!j%`a!n%`a#P%`a#l%`a#m%`a#n%`a#o%`a#p%`a#q%`a#r%`a#s%`a#t%`a#u%`a#w%`a#y%`a#z%`a\'x%`a(_%`a(p%`a!i%`a!W%`a\'u%`at%`a!]%`a%h%`a!e%`a~P#LTO#i%baP%baR%ba[%baa%bap%ba!Q%ba!j%ba!n%ba#P%ba#l%ba#m%ba#n%ba#o%ba#p%ba#q%ba#r%ba#s%ba#t%ba#u%ba#w%ba#y%ba#z%ba\'x%ba(_%ba(p%ba!i%ba!W%ba\'u%bat%ba!]%ba%h%ba!e%ba~P#LvO#i%`aP%`aR%`a[%`aa%`ap%`a!Q%`a!Z%`a!j%`a!n%`a#P%`a#l%`a#m%`a#n%`a#o%`a#p%`a#q%`a#r%`a#s%`a#t%`a#u%`a#w%`a#y%`a#z%`a\'x%`a(_%`a(p%`a!i%`a!W%`a\'u%`a#^%`at%`a!]%`a%h%`a!e%`a~P#.{O#i%baP%baR%ba[%baa%bap%ba!Q%ba!Z%ba!j%ba!n%ba#P%ba#l%ba#m%ba#n%ba#o%ba#p%ba#q%ba#r%ba#s%ba#t%ba#u%ba#w%ba#y%ba#z%ba\'x%ba(_%ba(p%ba!i%ba!W%ba\'u%ba#^%bat%ba!]%ba%h%ba!e%ba~P#.{O#i{aP{a[{aa{ap{a!j{a!n{a#P{a#l{a#m{a#n{a#o{a#p{a#q{a#r{a#s{a#t{a#u{a#w{a#y{a#z{a\'x{a(_{a(p{a!i{a!W{a\'u{at{a!]{a%h{a!e{a~P$&dO#i$raP$raR$ra[$raa$rap$ra!Q$ra!j$ra!n$ra#P$ra#l$ra#m$ra#n$ra#o$ra#p$ra#q$ra#r$ra#s$ra#t$ra#u$ra#w$ra#y$ra#z$ra\'x$ra(_$ra(p$ra!i$ra!W$ra\'u$rat$ra!]$ra%h$ra!e$ra~P$\'`O#i$taP$taR$ta[$taa$tap$ta!Q$ta!j$ta!n$ta#P$ta#l$ta#m$ta#n$ta#o$ta#p$ta#q$ta#r$ta#s$ta#t$ta#u$ta#w$ta#y$ta#z$ta\'x$ta(_$ta(p$ta!i$ta!W$ta\'u$tat$ta!]$ta%h$ta!e$ta~P$(RO#i%SaP%SaR%Sa[%Saa%Sap%Sa!Q%Sa!Z%Sa!j%Sa!n%Sa#P%Sa#l%Sa#m%Sa#n%Sa#o%Sa#p%Sa#q%Sa#r%Sa#s%Sa#t%Sa#u%Sa#w%Sa#y%Sa#z%Sa\'x%Sa(_%Sa(p%Sa!i%Sa!W%Sa\'u%Sa#^%Sat%Sa!]%Sa%h%Sa!e%Sa~P#.{Oa#aq!Z#aq\'x#aq\'u#aq!W#aq!i#aqt#aq!]#aq%h#aq!e#aq~P!:TO!Y3dO!Z\'WX!i\'WX~P%[O!Z.oO!i(ia~O!Z.oO!i(ia~P!:TO!W3gO~O#}!la![!la~PKZO#}!ha!Z!ha![!ha~P#BPO#}!pa![!pa~P!<kO#}!ra![!ra~P!?ROg\'ZX!Z\'ZX~P!+rO!Z.zOg(na~OSfO!]3{O$c3|O~O![4QO~Ot4RO~P#.{Oa$lq!Z$lq\'x$lq\'u$lq!W$lq!i$lqt$lq!]$lq%h$lq!e$lq~P!:TO!W4TO~P!&iO!Q4UO~O!O)|O\'w)}O(x%POl\'ga(w\'ga!Z\'ga#^\'ga~Og\'ga#}\'ga~P%+uO!O)|O\'w)}Ol\'ia(w\'ia(x\'ia!Z\'ia#^\'ia~Og\'ia#}\'ia~P%,hO(p$YO~P#.{O!WfX!W$yX!ZfX!Z$yX!e%QX#^fX~P!/qO(R<xO~P!1dO!Q%gO!Y4XO!]%hO(R%fO!Z\'cX!i\'cX~O!Z/kO!i(|a~O!Z/kO!e#vO!i(|a~O!Z/kO!e#vO(p\'nO!i(|a~Og${i!Z${i#^${i#}${i~P!0uO!Y4aO!W\'eX!Z\'eX~P!3cO!Z/sO!W(}a~O!Z/sO!W(}a~P#.{OP]XR]X[]Xp]X!O]X!Q]X!W]X!Z]X!j]X!n]X#P]X#Q]X#^]X#ifX#l]X#m]X#n]X#o]X#p]X#q]X#r]X#s]X#t]X#u]X#w]X#y]X#z]X$P]X(_]X(p]X(w]X(x]X~O!e%XX#t%XX~P%0XO!e#vO#t4fO~Oh%VO!e#vO!j%dO~Oh%VOp4kO!j%dO(p\'nO~Op4pO!e#vO(p\'nO~Oq!nO!Q4qO(TTO(WUO(c!mO~O(w$}Ol%`i!O%`i\'w%`i(x%`i!Z%`i#^%`i~Og%`i#}%`i~P%3xO(x%POl%bi!O%bi\'w%bi(w%bi!Z%bi#^%bi~Og%bi#}%bi~P%4kOg(]i!Z(]i~P!0uO#^4wOg(]i!Z(]i~P!0uO!i4zO~Oa$nq!Z$nq\'x$nq\'u$nq!W$nq!i$nqt$nq!]$nq%h$nq!e$nq~P!:TO!W5QO~O!Z5RO!])OX~P#.{Oa]Xa$yX!]]X!]$yX%]]X\'x]X\'x$yX!Z]X!Z$yX~P!/qO%]5UOa%Za!]%Za\'x%Za!Z%Za~OlmX!OmX\'wmX(wmX(xmX~P%7nOn5VO(R#nO~Ob5]O%i5^O(R+nO(TTO(WUO!Z\'rX![\'rX~O!Z0}O![)Va~O[5bO~O`5cO~Oa%mO\'x%mO~P#.{O!Z5kO#^5mO![)SX~O![5nO~Op5tOq!nO!Q*fO!`!yO!a!vO!b!vO!z;wO#R!pO#S!pO#T!pO#U!pO#V!pO#Y5sO#Z!zO(S!lO(TTO(WUO(c!mO(m!sO~O![5rO~P%:ROl5yO!]1gO%h5xO~Oh%VOl5yO!]1gO%h5xO~Ob6QO(R#nO(TTO(WUO!Z\'qX![\'qX~O!Z1rO![)Ta~O(TTO(WUO(c6SO~O`6WO~O#t6ZO&Y6[O~PMvO!i6]O~P%[Oa6_O~Oa6_O~P%[Ob2YO![6dO&h2XO~P`O!e6fO~O!e6hOh(hi!Z(hi![(hi!e(hi!j(hip(hi(p(hi~O!Z#fi![#fi~P#BPO#^6iO!Z#fi![#fi~O!Z!_i![!_i~P#BPOa%mO#^6rO\'x%mO~Oa%mO!e#vO#^6rO\'x%mO~O!Z(rq!i(rqa(rq\'x(rq~P!:TO!Z(hO!i(qq~O!Q%gO!]%hO#h6yO(R%fO~O!]\'^O%h6|O~Ol7QO!]\'^O%h6|O~O#i\'gaP\'gaR\'ga[\'gaa\'gap\'ga!Q\'ga!j\'ga!n\'ga#P\'ga#l\'ga#m\'ga#n\'ga#o\'ga#p\'ga#q\'ga#r\'ga#s\'ga#t\'ga#u\'ga#w\'ga#y\'ga#z\'ga\'x\'ga(_\'ga(p\'ga!i\'ga!W\'ga\'u\'gat\'ga!]\'ga%h\'ga!e\'ga~P%+uO#i\'iaP\'iaR\'ia[\'iaa\'iap\'ia!Q\'ia!j\'ia!n\'ia#P\'ia#l\'ia#m\'ia#n\'ia#o\'ia#p\'ia#q\'ia#r\'ia#s\'ia#t\'ia#u\'ia#w\'ia#y\'ia#z\'ia\'x\'ia(_\'ia(p\'ia!i\'ia!W\'ia\'u\'iat\'ia!]\'ia%h\'ia!e\'ia~P%,hO#i${iP${iR${i[${ia${ip${i!Q${i!Z${i!j${i!n${i#P${i#l${i#m${i#n${i#o${i#p${i#q${i#r${i#s${i#t${i#u${i#w${i#y${i#z${i\'x${i(_${i(p${i!i${i!W${i\'u${i#^${it${i!]${i%h${i!e${i~P#.{O#i%`iP%`iR%`i[%`ia%`ip%`i!Q%`i!j%`i!n%`i#P%`i#l%`i#m%`i#n%`i#o%`i#p%`i#q%`i#r%`i#s%`i#t%`i#u%`i#w%`i#y%`i#z%`i\'x%`i(_%`i(p%`i!i%`i!W%`i\'u%`it%`i!]%`i%h%`i!e%`i~P%3xO#i%biP%biR%bi[%bia%bip%bi!Q%bi!j%bi!n%bi#P%bi#l%bi#m%bi#n%bi#o%bi#p%bi#q%bi#r%bi#s%bi#t%bi#u%bi#w%bi#y%bi#z%bi\'x%bi(_%bi(p%bi!i%bi!W%bi\'u%bit%bi!]%bi%h%bi!e%bi~P%4kO!Z\'Wa!i\'Wa~P!:TO!Z.oO!i(ii~O#}#ai!Z#ai![#ai~P#BPOP$[OR#zO!O#yO!Q#{O!j#xO!n$[O(_VO[#kip#ki#P#ki#m#ki#n#ki#o#ki#p#ki#q#ki#r#ki#s#ki#t#ki#u#ki#w#ki#y#ki#z#ki#}#ki(p#ki(w#ki(x#ki!Z#ki![#ki~O#l#ki~P%MQO#l<PO~P%MQOP$[OR#zOp<]O!O#yO!Q#{O!j#xO!n$[O#l<PO#m<QO#n<QO#o<QO(_VO[#ki#P#ki#q#ki#r#ki#s#ki#t#ki#u#ki#w#ki#y#ki#z#ki#}#ki(p#ki(w#ki(x#ki!Z#ki![#ki~O#p#ki~P& YO#p<RO~P& YOP$[OR#zO[<_Op<]O!O#yO!Q#{O!j#xO!n$[O#P<SO#l<PO#m<QO#n<QO#o<QO#p<RO#q<SO#r<SO#s<^O#t<SO(_VO#w#ki#y#ki#z#ki#}#ki(p#ki(w#ki(x#ki!Z#ki![#ki~O#u#ki~P&#bOP$[OR#zO[<_Op<]O!O#yO!Q#{O!j#xO!n$[O#P<SO#l<PO#m<QO#n<QO#o<QO#p<RO#q<SO#r<SO#s<^O#t<SO#u<TO(_VO(x#}O#y#ki#z#ki#}#ki(p#ki(w#ki!Z#ki![#ki~O#w<VO~P&%cO#w#ki~P&%cO#u<TO~P&#bOP$[OR#zO[<_Op<]O!O#yO!Q#{O!j#xO!n$[O#P<SO#l<PO#m<QO#n<QO#o<QO#p<RO#q<SO#r<SO#s<^O#t<SO#u<TO#w<VO(_VO(w#|O(x#}O#z#ki#}#ki(p#ki!Z#ki![#ki~O#y#ki~P&\'rO#y<XO~P&\'rOa#{y!Z#{y\'x#{y\'u#{y!W#{y!i#{yt#{y!]#{y%h#{y!e#{y~P!:TO[#kip#ki#P#ki#p#ki#q#ki#r#ki#s#ki#t#ki#u#ki#w#ki#y#ki#z#ki#}#ki(p#ki!Z#ki![#ki~OP$[OR#zO!O#yO!Q#{O!j#xO!n$[O#l<PO#m<QO#n<QO#o<QO(_VO(w#ki(x#ki~P&*nOl=}O!O)|O\'w)}O(w$}O(x%POP#kiR#ki!Q#ki!j#ki!n#ki#l#ki#m#ki#n#ki#o#ki(_#ki~P&*nO#Q$dOP(^XR(^X[(^Xl(^Xp(^X!O(^X!Q(^X!j(^X!n(^X#P(^X#l(^X#m(^X#n(^X#o(^X#p(^X#q(^X#r(^X#s(^X#t(^X#u(^X#w(^X#y(^X#z(^X#}(^X\'w(^X(_(^X(p(^X(w(^X(x(^X!Z(^X![(^X~O#}$Oi!Z$Oi![$Oi~P#BPO#}!pi![!pi~P$*OOg\'Za!Z\'Za~P!0uO![7dO~O!Z\'ba![\'ba~P#BPO!W7eO~P#.{O!e#vO(p\'nO!Z\'ca!i\'ca~O!Z/kO!i(|i~O!Z/kO!e#vO!i(|i~Og${q!Z${q#^${q#}${q~P!0uO!W\'ea!Z\'ea~P#.{O!e7lO~O!Z/sO!W(}i~P#.{O!Z/sO!W(}i~O!W7oO~Oh%VOp7tO!j%dO(p\'nO~O!e#vO#t7vO~Op7yO!e#vO(p\'nO~O!O)|O\'w)}O(x%POl\'ha(w\'ha!Z\'ha#^\'ha~Og\'ha#}\'ha~P&3oO!O)|O\'w)}Ol\'ja(w\'ja(x\'ja!Z\'ja#^\'ja~Og\'ja#}\'ja~P&4bO!W7{O~Og$}q!Z$}q#^$}q#}$}q~P!0uOg(]q!Z(]q~P!0uO#^7|Og(]q!Z(]q~P!0uOa$ny!Z$ny\'x$ny\'u$ny!W$ny!i$nyt$ny!]$ny%h$ny!e$ny~P!:TO!e6hO~O!Z5RO!])Oa~O!]\'^OP$SaR$Sa[$Sap$Sa!O$Sa!Q$Sa!Z$Sa!j$Sa!n$Sa#P$Sa#l$Sa#m$Sa#n$Sa#o$Sa#p$Sa#q$Sa#r$Sa#s$Sa#t$Sa#u$Sa#w$Sa#y$Sa#z$Sa(_$Sa(p$Sa(w$Sa(x$Sa~O%h6|O~P&7SO%]8QOa%Zi!]%Zi\'x%Zi!Z%Zi~Oa#ay!Z#ay\'x#ay\'u#ay!W#ay!i#ayt#ay!]#ay%h#ay!e#ay~P!:TO[8SO~Ob8UO(R+nO(TTO(WUO~O!Z0}O![)Vi~O`8YO~O(c(zO!Z\'nX![\'nX~O!Z5kO![)Sa~O![8cO~P%:RO(m!sO~P$$oO#Y8dO~O!]1gO~O!]1gO%h8fO~Ol8iO!]1gO%h8fO~O[8nO!Z\'qa![\'qa~O!Z1rO![)Ti~O!i8rO~O!i8sO~O!i8vO~O!i8vO~P%[Oa8xO~O!e8yO~O!i8zO~O!Z(ui![(ui~P#BPOa%mO#^9SO\'x%mO~O!Z(ry!i(rya(ry\'x(ry~P!:TO!Z(hO!i(qy~O%h9VO~P&7SO!]\'^O%h9VO~O#i${qP${qR${q[${qa${qp${q!Q${q!Z${q!j${q!n${q#P${q#l${q#m${q#n${q#o${q#p${q#q${q#r${q#s${q#t${q#u${q#w${q#y${q#z${q\'x${q(_${q(p${q!i${q!W${q\'u${q#^${qt${q!]${q%h${q!e${q~P#.{O#i\'haP\'haR\'ha[\'haa\'hap\'ha!Q\'ha!j\'ha!n\'ha#P\'ha#l\'ha#m\'ha#n\'ha#o\'ha#p\'ha#q\'ha#r\'ha#s\'ha#t\'ha#u\'ha#w\'ha#y\'ha#z\'ha\'x\'ha(_\'ha(p\'ha!i\'ha!W\'ha\'u\'hat\'ha!]\'ha%h\'ha!e\'ha~P&3oO#i\'jaP\'jaR\'ja[\'jaa\'jap\'ja!Q\'ja!j\'ja!n\'ja#P\'ja#l\'ja#m\'ja#n\'ja#o\'ja#p\'ja#q\'ja#r\'ja#s\'ja#t\'ja#u\'ja#w\'ja#y\'ja#z\'ja\'x\'ja(_\'ja(p\'ja!i\'ja!W\'ja\'u\'jat\'ja!]\'ja%h\'ja!e\'ja~P&4bO#i$}qP$}qR$}q[$}qa$}qp$}q!Q$}q!Z$}q!j$}q!n$}q#P$}q#l$}q#m$}q#n$}q#o$}q#p$}q#q$}q#r$}q#s$}q#t$}q#u$}q#w$}q#y$}q#z$}q\'x$}q(_$}q(p$}q!i$}q!W$}q\'u$}q#^$}qt$}q!]$}q%h$}q!e$}q~P#.{O!Z\'Wi!i\'Wi~P!:TO#}#aq!Z#aq![#aq~P#BPO(w$}OP%`aR%`a[%`ap%`a!Q%`a!j%`a!n%`a#P%`a#l%`a#m%`a#n%`a#o%`a#p%`a#q%`a#r%`a#s%`a#t%`a#u%`a#w%`a#y%`a#z%`a#}%`a(_%`a(p%`a!Z%`a![%`a~Ol%`a!O%`a\'w%`a(x%`a~P&HgO(x%POP%baR%ba[%bap%ba!Q%ba!j%ba!n%ba#P%ba#l%ba#m%ba#n%ba#o%ba#p%ba#q%ba#r%ba#s%ba#t%ba#u%ba#w%ba#y%ba#z%ba#}%ba(_%ba(p%ba!Z%ba![%ba~Ol%ba!O%ba\'w%ba(w%ba~P&JnOl=}O!O)|O\'w)}O(x%PO~P&HgOl=}O!O)|O\'w)}O(w$}O~P&JnOR0cO!O0cO!Q0dO#Q$dOP{a[{al{ap{a!j{a!n{a#P{a#l{a#m{a#n{a#o{a#p{a#q{a#r{a#s{a#t{a#u{a#w{a#y{a#z{a#}{a\'w{a(_{a(p{a(w{a(x{a!Z{a![{a~O!O)|O\'w)}OP$raR$ra[$ral$rap$ra!Q$ra!j$ra!n$ra#P$ra#l$ra#m$ra#n$ra#o$ra#p$ra#q$ra#r$ra#s$ra#t$ra#u$ra#w$ra#y$ra#z$ra#}$ra(_$ra(p$ra(w$ra(x$ra!Z$ra![$ra~O!O)|O\'w)}OP$taR$ta[$tal$tap$ta!Q$ta!j$ta!n$ta#P$ta#l$ta#m$ta#n$ta#o$ta#p$ta#q$ta#r$ta#s$ta#t$ta#u$ta#w$ta#y$ta#z$ta#}$ta(_$ta(p$ta(w$ta(x$ta!Z$ta![$ta~Ol=}O!O)|O\'w)}O(w$}O(x%PO~OP%SaR%Sa[%Sap%Sa!Q%Sa!j%Sa!n%Sa#P%Sa#l%Sa#m%Sa#n%Sa#o%Sa#p%Sa#q%Sa#r%Sa#s%Sa#t%Sa#u%Sa#w%Sa#y%Sa#z%Sa#}%Sa(_%Sa(p%Sa!Z%Sa![%Sa~P\'%sO#}$lq!Z$lq![$lq~P#BPO#}$nq!Z$nq![$nq~P#BPO![9dO~O#}9eO~P!0uO!e#vO!Z\'ci!i\'ci~O!e#vO(p\'nO!Z\'ci!i\'ci~O!Z/kO!i(|q~O!W\'ei!Z\'ei~P#.{O!Z/sO!W(}q~Op9lO!e#vO(p\'nO~O[9nO!W9mO~P#.{O!W9mO~O!e#vO#t9tO~Og(]y!Z(]y~P!0uO!Z\'la!]\'la~P#.{Oa%Zq!]%Zq\'x%Zq!Z%Zq~P#.{O[9yO~O!Z0}O![)Vq~O#^9}O!Z\'na![\'na~O!Z5kO![)Si~P#BPO!Q:PO~O!]1gO%h:SO~O(TTO(WUO(c:XO~O!Z1rO![)Tq~O!i:[O~O!i:]O~O!i:^O~O!i:^O~P%[O#^:aO!Z#fy![#fy~O!Z#fy![#fy~P#BPO%h:fO~P&7SO!]\'^O%h:fO~O#}#{y!Z#{y![#{y~P#BPOP${iR${i[${ip${i!Q${i!j${i!n${i#P${i#l${i#m${i#n${i#o${i#p${i#q${i#r${i#s${i#t${i#u${i#w${i#y${i#z${i#}${i(_${i(p${i!Z${i![${i~P\'%sO!O)|O\'w)}O(x%POP\'gaR\'ga[\'gal\'gap\'ga!Q\'ga!j\'ga!n\'ga#P\'ga#l\'ga#m\'ga#n\'ga#o\'ga#p\'ga#q\'ga#r\'ga#s\'ga#t\'ga#u\'ga#w\'ga#y\'ga#z\'ga#}\'ga(_\'ga(p\'ga(w\'ga!Z\'ga![\'ga~O!O)|O\'w)}OP\'iaR\'ia[\'ial\'iap\'ia!Q\'ia!j\'ia!n\'ia#P\'ia#l\'ia#m\'ia#n\'ia#o\'ia#p\'ia#q\'ia#r\'ia#s\'ia#t\'ia#u\'ia#w\'ia#y\'ia#z\'ia#}\'ia(_\'ia(p\'ia(w\'ia(x\'ia!Z\'ia![\'ia~O(w$}OP%`iR%`i[%`il%`ip%`i!O%`i!Q%`i!j%`i!n%`i#P%`i#l%`i#m%`i#n%`i#o%`i#p%`i#q%`i#r%`i#s%`i#t%`i#u%`i#w%`i#y%`i#z%`i#}%`i\'w%`i(_%`i(p%`i(x%`i!Z%`i![%`i~O(x%POP%biR%bi[%bil%bip%bi!O%bi!Q%bi!j%bi!n%bi#P%bi#l%bi#m%bi#n%bi#o%bi#p%bi#q%bi#r%bi#s%bi#t%bi#u%bi#w%bi#y%bi#z%bi#}%bi\'w%bi(_%bi(p%bi(w%bi!Z%bi![%bi~O#}$ny!Z$ny![$ny~P#BPO#}#ay!Z#ay![#ay~P#BPO!e#vO!Z\'cq!i\'cq~O!Z/kO!i(|y~O!W\'eq!Z\'eq~P#.{Op:pO!e#vO(p\'nO~O[:tO!W:sO~P#.{O!W:sO~Og(]!R!Z(]!R~P!0uOa%Zy!]%Zy\'x%Zy!Z%Zy~P#.{O!Z0}O![)Vy~O!Z5kO![)Sq~O(R:zO~O!]1gO%h:}O~O!i;QO~O%h;VO~P&7SOP${qR${q[${qp${q!Q${q!j${q!n${q#P${q#l${q#m${q#n${q#o${q#p${q#q${q#r${q#s${q#t${q#u${q#w${q#y${q#z${q#}${q(_${q(p${q!Z${q![${q~P\'%sO!O)|O\'w)}O(x%POP\'haR\'ha[\'hal\'hap\'ha!Q\'ha!j\'ha!n\'ha#P\'ha#l\'ha#m\'ha#n\'ha#o\'ha#p\'ha#q\'ha#r\'ha#s\'ha#t\'ha#u\'ha#w\'ha#y\'ha#z\'ha#}\'ha(_\'ha(p\'ha(w\'ha!Z\'ha![\'ha~O!O)|O\'w)}OP\'jaR\'ja[\'jal\'jap\'ja!Q\'ja!j\'ja!n\'ja#P\'ja#l\'ja#m\'ja#n\'ja#o\'ja#p\'ja#q\'ja#r\'ja#s\'ja#t\'ja#u\'ja#w\'ja#y\'ja#z\'ja#}\'ja(_\'ja(p\'ja(w\'ja(x\'ja!Z\'ja![\'ja~OP$}qR$}q[$}qp$}q!Q$}q!j$}q!n$}q#P$}q#l$}q#m$}q#n$}q#o$}q#p$}q#q$}q#r$}q#s$}q#t$}q#u$}q#w$}q#y$}q#z$}q#}$}q(_$}q(p$}q!Z$}q![$}q~P\'%sOg%d!Z!Z%d!Z#^%d!Z#}%d!Z~P!0uO!W;ZO~P#.{Op;[O!e#vO(p\'nO~O[;^O!W;ZO~P#.{O!Z\'nq![\'nq~P#BPO!Z#f!Z![#f!Z~P#BPO#i%d!ZP%d!ZR%d!Z[%d!Za%d!Zp%d!Z!Q%d!Z!Z%d!Z!j%d!Z!n%d!Z#P%d!Z#l%d!Z#m%d!Z#n%d!Z#o%d!Z#p%d!Z#q%d!Z#r%d!Z#s%d!Z#t%d!Z#u%d!Z#w%d!Z#y%d!Z#z%d!Z\'x%d!Z(_%d!Z(p%d!Z!i%d!Z!W%d!Z\'u%d!Z#^%d!Zt%d!Z!]%d!Z%h%d!Z!e%d!Z~P#.{Op;fO!e#vO(p\'nO~O!W;gO~P#.{Op;nO!e#vO(p\'nO~O!W;oO~P#.{OP%d!ZR%d!Z[%d!Zp%d!Z!Q%d!Z!j%d!Z!n%d!Z#P%d!Z#l%d!Z#m%d!Z#n%d!Z#o%d!Z#p%d!Z#q%d!Z#r%d!Z#s%d!Z#t%d!Z#u%d!Z#w%d!Z#y%d!Z#z%d!Z#}%d!Z(_%d!Z(p%d!Z!Z%d!Z![%d!Z~P\'%sOp;rO!e#vO(p\'nO~Ot(dX~P1qO!O%qO~P!(yO(S!lO~P!(yO!WfX!ZfX#^fX~P%0XOP]XR]X[]Xp]X!O]X!Q]X!Z]X!ZfX!j]X!n]X#P]X#Q]X#^]X#^fX#ifX#l]X#m]X#n]X#o]X#p]X#q]X#r]X#s]X#t]X#u]X#w]X#y]X#z]X$P]X(_]X(p]X(w]X(x]X~O!efX!i]X!ifX(pfX~P\'JlOP;vOQ;vOSfOd=rOe!iOnkOp;vOqkOrkOxkOz;vO|;vO!QWO!UkO!VkO!]XO!g;yO!jZO!m;vO!n;vO!o;vO!q;zO!s;}O!v!hO$V!kO$m=pO(R)ZO(TTO(WUO(_VO(m[O~O!Z<ZO![$pa~Oh%VOn%WOp%XOq$tOr$tOx%YOz%ZO|<fO!Q${O!]$|O!g=wO!j$xO#h<lO$V%_O$s<hO$u<jO$x%`O(R(tO(TTO(WUO(_$uO(w$}O(x%PO~Oj)bO~P( bOp!cX(p!cX~P# qOp(hX(p(hX~P#!dO![]X![fX~P\'JlO!WfX!W$yX!ZfX!Z$yX#^fX~P!/qO#i<OO~O!e#vO#i<OO~O#^<`O~O#t<SO~O#^<pO!Z(uX![(uX~O#^<`O!Z(sX![(sX~O#i<qO~Og<sO~P!0uO#i<yO~O#i<zO~O!e#vO#i<{O~O!e#vO#i<qO~O#}<|O~P#BPO#i<}O~O#i=OO~O#i=TO~O#i=UO~O#i=VO~O#i=WO~O#}=XO~P!0uO#}=YO~P!0uO#Q#R#S#U#V#Y#g#h#s$m$s$u$x%[%]%g%h%i%p%r%u%v%x%z~\'|T#m!V\'z(S#nq#l#op!O\'{$[\'{(R$^(c~",\n  goto: "$8f)ZPPPPPP)[PP)_P)pP+Q/VPPPP6aPP6wPP<oP@cP@yP@yPPP@yPCRP@yP@yP@yPCVPC[PCyPHsPPPHwPPPPHwKzPPPLQLrPHwPHwPP! QHwPPPHwPHwP!#XHwP!&o!\'t!\'}P!(q!(u!(q!,SPPPPPPP!,s!\'tPP!-T!.uP!2RHwHw!2W!5d!:Q!:Q!>PPPP!>XHwPPPPPPPPPP!AhP!BuPPHw!DWPHwPHwHwHwHwHwPHw!EjP!HtP!KzP!LO!LY!L^!L^P!HqP!Lb!LbP# hP# lHwPHw# r#$wCV@yP@yP@y@yP#&U@y@y#(h@y#+`@y#-l@y@y#.[#0p#0p#0u#1O#0p#1ZPP#0pP@y#1s@y#5r@y@y6aPPP#9wPPP#:b#:bP#:bP#:x#:bPP#;OP#:uP#:u#;c#:u#;}#<T#<W)_#<Z)_P#<b#<b#<bP)_P)_P)_P)_PP)_P#<h#<kP#<k)_P#<oP#<rP)_P)_P)_P)_P)_P)_)_PP#<x#=O#=Z#=a#=g#=m#=s#>R#>X#>c#>i#>s#>y#?Z#?a#@R#@e#@k#@q#AP#Af#CZ#Ci#Cp#E[#Ej#G[#Gj#Gp#Gv#G|#HW#H^#Hd#Hn#IQ#IWPPPPPPPPPPP#I^PPPPPPP#JR#MY#Nr#Ny$ RPPP$&mP$&v$)o$0Y$0]$0`$1_$1b$1i$1qP$1w$1zP$2h$2l$3d$4r$4w$5_PP$5d$5j$5n$5q$5u$5y$6u$7^$7u$7y$7|$8P$8V$8Y$8^$8bR!|RoqOXst!Z#d%l&p&r&s&u,n,s2S2VY!vQ\'^-`1g5qQ%svQ%{yQ&S|Q&h!VS\'U!e-WQ\'d!iS\'j!r!yU*h$|*X*lQ+l%|Q+y&UQ,_&bQ-^\']Q-h\'eQ-p\'kQ0U*nQ1q,`R<m;z%SdOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$_$a$e%l%s&Q&i&l&p&r&s&u&y\'R\'`\'p(R(T(Z(b(v(x(|){*f+U+Y,k,n,s-d-l-z.Q.o.v/i0V0d0l0|1j1z1{1}2P2S2V2X2x3O3d4q5y6Z6[6_6r8i8x9SS#q];w!r)]$Z$n\'V)q-P-S/Q2h3{5m6i9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sU*{%[<e<fQ+q&OQ,a&eQ,h&mQ0r+dQ0u+fQ1S+rQ1y,fQ3W.bQ5V0wQ5]0}Q6Q1rQ7O3[Q8U5^R9Y7Q\'QkOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n%l%s&Q&i&l&m&p&r&s&u&y\'R\'V\'`\'p(R(T(Z(b(v(x(|)q){*f+U+Y+d,k,n,s-P-S-d-l-z.Q.b.o.v/Q/i0V0d0l0|1j1z1{1}2P2S2V2X2h2x3O3[3d3{4q5m5y6Z6[6_6i6r7Q8i8x9S9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=s!S!nQ!r!v!y!z$|\'U\']\'^\'j\'k\'l*h*l*n*o-W-^-`-p0U0X1g5q5s%[$ti#v$b$c$d$x${%O%Q%]%^%b)w*P*R*T*W*^*d*t*u+c+f+},Q.a.z/_/h/r/s/u0Y0[0g0h0i1^1a1i3Z4U4V4a4f4w5R5U5x6|7l7v7|8Q8f9V9e9n9t:S:f:t:};V;^<^<_<a<b<c<d<g<h<i<j<k<l<t<u<v<w<y<z<}=O=P=Q=R=S=T=U=X=Y=p=x=y=|=}Q&V|Q\'S!eS\'Y%h-ZQ+q&OQ,a&eQ0f+OQ1S+rQ1X+xQ1x,eQ1y,fQ5]0}Q5f1ZQ6Q1rQ6T1tQ6U1wQ8U5^Q8X5cQ8q6WQ9|8YQ:Y8nR<o*XrnOXst!V!Z#d%l&g&p&r&s&u,n,s2S2VR,c&i&z^OPXYstuvwz!Z!`!g!j!o#S#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n%l%s&Q&i&l&m&p&r&s&u&y\'R\'`\'p(T(Z(b(v(x(|)q){*f+U+Y+d,k,n,s-P-S-d-l-z.Q.b.o.v/Q/i0V0d0l0|1j1z1{1}2P2S2V2X2h2x3O3[3d3{4q5m5y6Z6[6_6i6r7Q8i8x9S9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=r=s[#]WZ#W#Z\'V(R!b%im#h#i#l$x%d%g([(f(g(h*W*[*_+W+X+Z,j-Q.O.U.V.W.Y/h/k2[3S3T4X6h6yQ%vxQ%zyS&P|&UQ&]!TQ\'a!hQ\'c!iQ(o#sS+k%{%|Q+o&OQ,Y&`Q,^&bS-g\'d\'eQ.d(pQ0{+lQ1R+rQ1T+sQ1W+wQ1l,ZS1p,_,`Q2t-hQ5[0}Q5`1QQ5e1YQ6P1qQ8T5^Q8W5bQ9x8SR:w9y!U$zi$d%O%Q%]%^%b*P*R*^*t*u.z/r0Y0[0g0h0i4V4w7|9e=p=x=y!^%xy!i!u%z%{%|\'T\'c\'d\'e\'i\'s*g+k+l-T-g-h-o/{0O0{2m2t2{4i4j4m7s9pQ+e%vQ,O&YQ,R&ZQ,]&bQ.c(oQ1k,YU1o,^,_,`Q3].dQ5z1lS6O1p1qQ8m6P#f=t#v$b$c$x${)w*T*W*d+c+f+},Q.a/_/h/s/u1^1a1i3Z4U4a4f5R5U5x6|7l7v8Q8f9V9n9t:S:f:t:};V;^<a<c<g<i<k<t<v<y<}=P=R=T=X=|=}o=u<^<_<b<d<h<j<l<u<w<z=O=Q=S=U=YW%Ti%V*v=pS&Y!Q&gQ&Z!RQ&[!SQ+S%cR+|&W%]%Si#v$b$c$d$x${%O%Q%]%^%b)w*P*R*T*W*^*d*t*u+c+f+},Q.a.z/_/h/r/s/u0Y0[0g0h0i1^1a1i3Z4U4V4a4f4w5R5U5x6|7l7v7|8Q8f9V9e9n9t:S:f:t:};V;^<^<_<a<b<c<d<g<h<i<j<k<l<t<u<v<w<y<z<}=O=P=Q=R=S=T=U=X=Y=p=x=y=|=}T)x$u)yV*{%[<e<fW\'Y!e%h*X-ZS({#y#zQ+`%qQ+v&RS.](k(lQ1b,SQ4x0cR8^5k\'QkOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n%l%s&Q&i&l&m&p&r&s&u&y\'R\'V\'`\'p(R(T(Z(b(v(x(|)q){*f+U+Y+d,k,n,s-P-S-d-l-z.Q.b.o.v/Q/i0V0d0l0|1j1z1{1}2P2S2V2X2h2x3O3[3d3{4q5m5y6Z6[6_6i6r7Q8i8x9S9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=s$i$^c#Y#e%p%r%t(Q(W(r(w)P)Q)R)S)T)U)V)W)X)Y)[)^)`)e)o+a+u-U-s-x-}.P.n.q.u.w.x.y/]0j2c2f2v2}3c3h3i3j3k3l3m3n3o3p3q3r3s3t3w3x4P5O5Y6k6q6v7V7W7a7b8`8|9Q9[9b9c:c:y;R;x=gT#TV#U\'RkOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n%l%s&Q&i&l&m&p&r&s&u&y\'R\'V\'`\'p(R(T(Z(b(v(x(|)q){*f+U+Y+d,k,n,s-P-S-d-l-z.Q.b.o.v/Q/i0V0d0l0|1j1z1{1}2P2S2V2X2h2x3O3[3d3{4q5m5y6Z6[6_6i6r7Q8i8x9S9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sQ\'W!eR2i-W!W!nQ!e!r!v!y!z$|\'U\']\'^\'j\'k\'l*X*h*l*n*o-W-^-`-p0U0X1g5q5sR1d,UnqOXst!Z#d%l&p&r&s&u,n,s2S2VQ&w!^Q\'t!xS(q#u<OQ+i%yQ,W&]Q,X&_Q-e\'bQ-r\'mS.m(v<qS0k+U<{Q0y+jQ1f,VQ2Z,uQ2],vQ2e-RQ2r-fQ2u-jS5P0l=VQ5W0zS5Z0|=WQ6j2gQ6n2sQ6s2zQ8R5XQ8}6lQ9O6oQ9R6tR:`8z$d$]c#Y#e%r%t(Q(W(r(w)P)Q)R)S)T)U)V)W)X)Y)[)^)`)e)o+a+u-U-s-x-}.P.n.q.u.x.y/]0j2c2f2v2}3c3h3i3j3k3l3m3n3o3p3q3r3s3t3w3x4P5O5Y6k6q6v7V7W7a7b8`8|9Q9[9b9c:c:y;R;x=gS(m#p\'gQ(}#zS+_%p.wS.^(l(nR3U._\'QkOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n%l%s&Q&i&l&m&p&r&s&u&y\'R\'V\'`\'p(R(T(Z(b(v(x(|)q){*f+U+Y+d,k,n,s-P-S-d-l-z.Q.b.o.v/Q/i0V0d0l0|1j1z1{1}2P2S2V2X2h2x3O3[3d3{4q5m5y6Z6[6_6i6r7Q8i8x9S9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sS#q];wQ&r!XQ&s!YQ&u![Q&v!]R2R,qQ\'_!hQ+b%vQ-c\'aS.`(o+eQ2p-bW3Y.c.d0q0sQ6m2qW6z3V3X3]5TU9U6{6}7PU:e9W9X9ZS;T:d:gQ;b;UR;j;cU!wQ\'^-`T5o1g5q!Q_OXZ`st!V!Z#d#h%d%l&g&i&p&r&s&u(h,n,s.V2S2V]!pQ!r\'^-`1g5qT#q];w%^{OPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$_$a$e%l%s&Q&i&l&m&p&r&s&u&y\'R\'`\'p(R(T(Z(b(v(x(|){*f+U+Y+d,k,n,s-d-l-z.Q.b.o.v/i0V0d0l0|1j1z1{1}2P2S2V2X2x3O3[3d4q5y6Z6[6_6r7Q8i8x9SS({#y#zS.](k(l!s=^$Z$n\'V)q-P-S/Q2h3{5m6i9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sU$fd)],hS(n#p\'gU*s%R(u3vU0e*z.i7]Q5T0rQ6{3WQ9X7OR:g9Ym!tQ!r!v!y!z\'^\'j\'k\'l-`-p1g5q5sQ\'r!uS(d#g1|S-n\'i\'uQ/n*ZQ/{*gQ2|-qQ4]/oQ4i/}Q4j0OQ4o0WQ7h4WS7s4k4mS7w4p4rQ9g7iQ9k7oQ9p7tQ9u7yS:o9l9mS;Y:p:sS;e;Z;[S;m;f;gS;q;n;oR;t;rQ#wbQ\'q!uS(c#g1|S(e#m+TQ+V%eQ+g%wQ+m%}U-m\'i\'r\'uQ.R(dQ/m*ZQ/|*gQ0P*iQ0x+hQ1m,[S2y-n-qQ3R.ZS4[/n/oQ4e/yS4h/{0WQ4l0QQ5|1nQ6u2|Q7g4WQ7k4]U7r4i4o4rQ7u4nQ8k5}S9f7h7iQ9j7oQ9r7wQ9s7xQ:V8lQ:m9gS:n9k9mQ:v9uQ;P:WS;X:o:sS;d;Y;ZS;l;e;gS;p;m;oQ;s;qQ;u;tQ=a=[Q=l=eR=m=fV!wQ\'^-`%^aOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$_$a$e%l%s&Q&i&l&m&p&r&s&u&y\'R\'`\'p(R(T(Z(b(v(x(|){*f+U+Y+d,k,n,s-d-l-z.Q.b.o.v/i0V0d0l0|1j1z1{1}2P2S2V2X2x3O3[3d4q5y6Z6[6_6r7Q8i8x9SS#wz!j!r=Z$Z$n\'V)q-P-S/Q2h3{5m6i9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sR=a=r%^bOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$_$a$e%l%s&Q&i&l&m&p&r&s&u&y\'R\'`\'p(R(T(Z(b(v(x(|){*f+U+Y+d,k,n,s-d-l-z.Q.b.o.v/i0V0d0l0|1j1z1{1}2P2S2V2X2x3O3[3d4q5y6Z6[6_6r7Q8i8x9SQ%ej!^%wy!i!u%z%{%|\'T\'c\'d\'e\'i\'s*g+k+l-T-g-h-o/{0O0{2m2t2{4i4j4m7s9pS%}z!jQ+h%xQ,[&bW1n,],^,_,`U5}1o1p1qS8l6O6PQ:W8m!r=[$Z$n\'V)q-P-S/Q2h3{5m6i9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sQ=e=qR=f=r%QeOPXYstuvw!Z!`!g!o#S#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$_$a$e%l%s&Q&i&l&p&r&s&u&y\'R\'`\'p(T(Z(b(v(x(|){*f+U+Y+d,k,n,s-d-l-z.Q.b.o.v/i0V0d0l0|1j1z1{1}2P2S2V2X2x3O3[3d4q5y6Z6[6_6r7Q8i8x9SY#bWZ#W#Z(R!b%im#h#i#l$x%d%g([(f(g(h*W*[*_+W+X+Z,j-Q.O.U.V.W.Y/h/k2[3S3T4X6h6yQ,i&m!p=]$Z$n)q-P-S/Q2h3{5m6i9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sR=`\'VU\'Z!e%h*XR2k-Z%SdOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$_$a$e%l%s&Q&i&l&p&r&s&u&y\'R\'`\'p(R(T(Z(b(v(x(|){*f+U+Y,k,n,s-d-l-z.Q.o.v/i0V0d0l0|1j1z1{1}2P2S2V2X2x3O3d4q5y6Z6[6_6r8i8x9S!r)]$Z$n\'V)q-P-S/Q2h3{5m6i9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sQ,h&mQ0r+dQ3W.bQ7O3[R9Y7Q!b$Tc#Y%p(Q(W(r(w)X)Y)^)e+u-s-x-}.P.n.q/]0j2v2}3c3s5O5Y6q6v7V9Q:c;x!P<U)[)o-U.w2c2f3h3q3r3w4P6k7W7a7b8`8|9[9b9c:y;R=g!f$Vc#Y%p(Q(W(r(w)U)V)X)Y)^)e+u-s-x-}.P.n.q/]0j2v2}3c3s5O5Y6q6v7V9Q:c;x!T<W)[)o-U.w2c2f3h3n3o3q3r3w4P6k7W7a7b8`8|9[9b9c:y;R=g!^$Zc#Y%p(Q(W(r(w)^)e+u-s-x-}.P.n.q/]0j2v2}3c3s5O5Y6q6v7V9Q:c;xQ4V/fz=s)[)o-U.w2c2f3h3w4P6k7W7a7b8`8|9[9b9c:y;R=gQ=x=zR=y={\'QkOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n%l%s&Q&i&l&m&p&r&s&u&y\'R\'V\'`\'p(R(T(Z(b(v(x(|)q){*f+U+Y+d,k,n,s-P-S-d-l-z.Q.b.o.v/Q/i0V0d0l0|1j1z1{1}2P2S2V2X2h2x3O3[3d3{4q5m5y6Z6[6_6i6r7Q8i8x9S9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sS$oh$pR3|/P\'XgOPWXYZhstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n$p%l%s&Q&i&l&m&p&r&s&u&y\'R\'V\'`\'p(R(T(Z(b(v(x(|)q){*f+U+Y+d,k,n,s-P-S-d-l-z.Q.b.o.v/P/Q/i0V0d0l0|1j1z1{1}2P2S2V2X2h2x3O3[3d3{4q5m5y6Z6[6_6i6r7Q8i8x9S9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sT$kf$qQ$ifS)h$l)lR)t$qT$jf$qT)j$l)l\'XhOPWXYZhstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n$p%l%s&Q&i&l&m&p&r&s&u&y\'R\'V\'`\'p(R(T(Z(b(v(x(|)q){*f+U+Y+d,k,n,s-P-S-d-l-z.Q.b.o.v/P/Q/i0V0d0l0|1j1z1{1}2P2S2V2X2h2x3O3[3d3{4q5m5y6Z6[6_6i6r7Q8i8x9S9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sT$oh$pQ$rhR)s$p%^jOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$_$a$e%l%s&Q&i&l&m&p&r&s&u&y\'R\'`\'p(R(T(Z(b(v(x(|){*f+U+Y+d,k,n,s-d-l-z.Q.b.o.v/i0V0d0l0|1j1z1{1}2P2S2V2X2x3O3[3d4q5y6Z6[6_6r7Q8i8x9S!s=q$Z$n\'V)q-P-S/Q2h3{5m6i9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=s#glOPXZst!Z!`!o#S#d#o#{$n%l&i&l&m&p&r&s&u&y\'R\'`(|)q*f+Y+d,k,n,s-d.b/Q/i0V0d1j1z1{1}2P2S2V2X3[3{4q5y6Z6[6_7Q8i8x!U%Ri$d%O%Q%]%^%b*P*R*^*t*u.z/r0Y0[0g0h0i4V4w7|9e=p=x=y#f(u#v$b$c$x${)w*T*W*d+c+f+},Q.a/_/h/s/u1^1a1i3Z4U4a4f5R5U5x6|7l7v8Q8f9V9n9t:S:f:t:};V;^<a<c<g<i<k<t<v<y<}=P=R=T=X=|=}Q+P%`Q/^)|o3v<^<_<b<d<h<j<l<u<w<z=O=Q=S=U=Y!U$yi$d%O%Q%]%^%b*P*R*^*t*u.z/r0Y0[0g0h0i4V4w7|9e=p=x=yQ*`$zU*i$|*X*lQ+Q%aQ0Q*j#f=c#v$b$c$x${)w*T*W*d+c+f+},Q.a/_/h/s/u1^1a1i3Z4U4a4f5R5U5x6|7l7v8Q8f9V9n9t:S:f:t:};V;^<a<c<g<i<k<t<v<y<}=P=R=T=X=|=}n=d<^<_<b<d<h<j<l<u<w<z=O=Q=S=U=YQ=h=tQ=i=uQ=j=vR=k=w!U%Ri$d%O%Q%]%^%b*P*R*^*t*u.z/r0Y0[0g0h0i4V4w7|9e=p=x=y#f(u#v$b$c$x${)w*T*W*d+c+f+},Q.a/_/h/s/u1^1a1i3Z4U4a4f5R5U5x6|7l7v8Q8f9V9n9t:S:f:t:};V;^<a<c<g<i<k<t<v<y<}=P=R=T=X=|=}o3v<^<_<b<d<h<j<l<u<w<z=O=Q=S=U=YnoOXst!Z#d%l&p&r&s&u,n,s2S2VS*c${*WQ,|&|Q,}\'OR4`/s%[%Si#v$b$c$d$x${%O%Q%]%^%b)w*P*R*T*W*^*d*t*u+c+f+},Q.a.z/_/h/r/s/u0Y0[0g0h0i1^1a1i3Z4U4V4a4f4w5R5U5x6|7l7v7|8Q8f9V9e9n9t:S:f:t:};V;^<^<_<a<b<c<d<g<h<i<j<k<l<t<u<v<w<y<z<}=O=P=Q=R=S=T=U=X=Y=p=x=y=|=}Q,P&ZQ1`,RQ5i1_R8]5jV*k$|*X*lU*k$|*X*lT5p1g5qS/y*f/iQ4n0VT7x4q:PQ+g%wQ0P*iQ0x+hQ1m,[Q5|1nQ8k5}Q:V8lR;P:W!U%Oi$d%O%Q%]%^%b*P*R*^*t*u.z/r0Y0[0g0h0i4V4w7|9e=p=x=yx*P$v)c*Q*r+R/q0^0_3y4^4{4|4}7f7z9v:l=b=n=oS0Y*q0Z#f<a#v$b$c$x${)w*T*W*d+c+f+},Q.a/_/h/s/u1^1a1i3Z4U4a4f5R5U5x6|7l7v8Q8f9V9n9t:S:f:t:};V;^<a<c<g<i<k<t<v<y<}=P=R=T=X=|=}n<b<^<_<b<d<h<j<l<u<w<z=O=Q=S=U=Y!d<t(s)a*Y*b.e.h.l/Y/f/v0p1]3`4S4_4c5h7R7U7m7p7}8P9i9q9w:q:u;W;];h=z={`<u3u7X7[7`9]:h:k;kS=P.g3aT=Q7Z9`!U%Qi$d%O%Q%]%^%b*P*R*^*t*u.z/r0Y0[0g0h0i4V4w7|9e=p=x=y|*R$v)c*S*q+R/b/q0^0_3y4^4s4{4|4}7f7z9v:l=b=n=oS0[*r0]#f<c#v$b$c$x${)w*T*W*d+c+f+},Q.a/_/h/s/u1^1a1i3Z4U4a4f5R5U5x6|7l7v8Q8f9V9n9t:S:f:t:};V;^<a<c<g<i<k<t<v<y<}=P=R=T=X=|=}n<d<^<_<b<d<h<j<l<u<w<z=O=Q=S=U=Y!h<v(s)a*Y*b.f.g.l/Y/f/v0p1]3^3`4S4_4c5h7R7S7U7m7p7}8P9i9q9w:q:u;W;];h=z={d<w3u7Y7Z7`9]9^:h:i:k;kS=R.h3bT=S7[9arnOXst!V!Z#d%l&g&p&r&s&u,n,s2S2VQ&d!UR,k&mrnOXst!V!Z#d%l&g&p&r&s&u,n,s2S2VR&d!UQ,T&[R1[+|snOXst!V!Z#d%l&g&p&r&s&u,n,s2S2VQ1h,YS5w1k1lU8e5u5v5zS:R8g8hS:{:Q:TQ;_:|R;i;`Q&k!VR,d&gR6T1tR:Y8nS&P|&UR1T+sQ&p!WR,n&qR,t&vT2T,s2VR,x&wQ,w&wR2^,xQ\'w!{R-t\'wSsOtQ#dXT%os#dQ#OTR\'y#OQ#RUR\'{#RQ)y$uR/Z)yQ#UVR(O#UQ#XWU(U#X(V-{Q(V#YR-{(WQ-X\'WR2j-XQ.p(wS3e.p3fR3f.qQ-`\'^R2n-`Y!rQ\'^-`1g5qR\'h!rQ.{)cR3z.{U#_W%g*WU(]#_(^-|Q(^#`R-|(XQ-[\'ZR2l-[t`OXst!V!Z#d%l&g&i&p&r&s&u,n,s2S2VS#hZ%dU#r`#h.VR.V(hQ(i#jQ.S(eW.[(i.S3P6wQ3P.TR6w3QQ)l$lR/R)lQ$phR)r$pQ$`cU)_$`-w<[Q-w;xR<[)oQ/l*ZW4Y/l4Z7j9hU4Z/m/n/oS7j4[4]R9h7k$e*O$v(s)a)c*Y*b*q*r*|*}+R.g.h.j.k.l/Y/b/d/f/q/v0^0_0p1]3^3_3`3u3y4S4^4_4c4s4u4{4|4}5h7R7S7T7U7Z7[7^7_7`7f7m7p7z7}8P9]9^9_9i9q9v9w:h:i:j:k:l:q:u;W;];h;k=b=n=o=z={Q/t*bU4b/t4d7nQ4d/vR7n4cS*l$|*XR0S*lx*Q$v)c*q*r+R/q0^0_3y4^4{4|4}7f7z9v:l=b=n=o!d.e(s)a*Y*b.g.h.l/Y/f/v0p1]3`4S4_4c5h7R7U7m7p7}8P9i9q9w:q:u;W;];h=z={U/c*Q.e7Xa7X3u7Z7[7`9]:h:k;kQ0Z*qQ3a.gU4t0Z3a9`R9`7Z|*S$v)c*q*r+R/b/q0^0_3y4^4s4{4|4}7f7z9v:l=b=n=o!h.f(s)a*Y*b.g.h.l/Y/f/v0p1]3^3`4S4_4c5h7R7S7U7m7p7}8P9i9q9w:q:u;W;];h=z={U/e*S.f7Ye7Y3u7Z7[7`9]9^:h:i:k;kQ0]*rQ3b.hU4v0]3b9aR9a7[Q*w%UR0a*wQ5S0pR8O5SQ+[%jR0o+[Q5l1bS8_5l:OR:O8`Q,V&]R1e,VQ5q1gR8b5qQ1s,aS6R1s8oR8o6TQ1O+oW5_1O5a8V9zQ5a1RQ8V5`R9z8WQ+t&PR1U+tQ2V,sR6c2VYrOXst#dQ&t!ZQ+^%lQ,m&pQ,o&rQ,p&sQ,r&uQ2Q,nS2T,s2VR6b2SQ%npQ&x!_Q&{!aQ&}!bQ\'P!cQ\'o!uQ+]%kQ+i%yQ+{&VQ,c&kQ,z&zW-k\'i\'q\'r\'uQ-r\'mQ0R*kQ0y+jS1v,d,gQ2_,yQ2`,|Q2a,}Q2u-jW2w-m-n-q-sQ5W0zQ5d1XQ5g1]Q5{1mQ6V1xQ6a2RU6p2v2y2|Q6s2zQ8R5XQ8Z5fQ8[5hQ8a5pQ8j5|Q8p6US9P6q6uQ9R6tQ9{8XQ:U8kQ:Z8qQ:b9QQ:x9|Q;O:VQ;S:cR;a;PQ%yyQ\'b!iQ\'m!uU+j%z%{%|Q-R\'TU-f\'c\'d\'eS-j\'i\'sQ/z*gS0z+k+lQ2g-TS2s-g-hQ2z-oS4g/{0OQ5X0{Q6l2mQ6o2tQ6t2{U7q4i4j4mQ9o7sR:r9pS$wi=pR*x%VU%Ui%V=pR0`*vQ$viS(s#v+fS)a$b$cQ)c$dQ*Y$xS*b${*WQ*q%OQ*r%QQ*|%]Q*}%^Q+R%bQ.g<aQ.h<cQ.j<gQ.k<iQ.l<kQ/Y)wQ/b*PQ/d*RQ/f*TQ/q*^S/v*d/hQ0^*tQ0_*ul0p+c,Q.a1a1i3Z5x6|8f9V:S:f:};VQ1]+}Q3^<tQ3_<vQ3`<yS3u<^<_Q3y.zS4S/_4UQ4^/rQ4_/sQ4c/uQ4s0YQ4u0[Q4{0gQ4|0hQ4}0iQ5h1^Q7R<}Q7S=PQ7T=RQ7U=TQ7Z<bQ7[<dQ7^<hQ7_<jQ7`<lQ7f4VQ7m4aQ7p4fQ7z4wQ7}5RQ8P5UQ9]<zQ9^<uQ9_<wQ9i7lQ9q7vQ9v7|Q9w8QQ:h=OQ:i=QQ:j=SQ:k=UQ:l9eQ:q9nQ:u9tQ;W=XQ;]:tQ;h;^Q;k=YQ=b=pQ=n=xQ=o=yQ=z=|R={=}Q*z%[Q.i<eR7]<fnpOXst!Z#d%l&p&r&s&u,n,s2S2VQ!fPS#fZ#oQ&z!`W\'f!o*f0V4qQ\'}#SQ)O#{Q)p$nS,g&i&lQ,l&mQ,y&yS-O\'R/iQ-b\'`Q.s(|Q/V)qQ0m+YQ0s+dQ2O,kQ2q-dQ3X.bQ4O/QQ4y0dQ5v1jQ6X1zQ6Y1{Q6^1}Q6`2PQ6e2XQ7P3[Q7c3{Q8h5yQ8t6ZQ8u6[Q8w6_Q9Z7QQ:T8iR:_8x#[cOPXZst!Z!`!o#d#o#{%l&i&l&m&p&r&s&u&y\'R\'`(|*f+Y+d,k,n,s-d.b/i0V0d1j1z1{1}2P2S2V2X3[4q5y6Z6[6_7Q8i8xQ#YWQ#eYQ%puQ%rvS%tw!gS(Q#W(TQ(W#ZQ(r#uQ(w#xQ)P$OQ)Q$PQ)R$QQ)S$RQ)T$SQ)U$TQ)V$UQ)W$VQ)X$WQ)Y$XQ)[$ZQ)^$_Q)`$aQ)e$eW)o$n)q/Q3{Q+a%sQ+u&QS-U\'V2hQ-s\'pS-x(R-zQ-}(ZQ.P(bQ.n(vQ.q(xQ.u;vQ.w;yQ.x;zQ.y;}Q/]){Q0j+UQ2c-PQ2f-SQ2v-lQ2}.QQ3c.oQ3h<OQ3i<PQ3j<QQ3k<RQ3l<SQ3m<TQ3n<UQ3o<VQ3p<WQ3q<XQ3r<YQ3s.vQ3t<]Q3w<`Q3x<mQ4P<ZQ5O0lQ5Y0|Q6k<pQ6q2xQ6v3OQ7V3dQ7W<qQ7a<sQ7b<{Q8`5mQ8|6iQ9Q6rQ9[<|Q9b=VQ9c=WQ:c9SQ:y9}Q;R:aQ;x#SR=g=sR#[WR\'X!el!tQ!r!v!y!z\'^\'j\'k\'l-`-p1g5q5sS\'T!e-WU*g$|*X*lS-T\'U\']S0O*h*nQ0W*oQ2m-^Q4m0UR4r0XR(y#xQ!fQT-_\'^-`]!qQ!r\'^-`1g5qQ#p]R\'g;wR)d$dY!uQ\'^-`1g5qQ\'i!rS\'s!v!yS\'u!z5sS-o\'j\'kQ-q\'lR2{-pT#kZ%dS#jZ%dS%jm,jU(e#h#i#lS.T(f(gQ.X(hQ0n+ZQ3Q.UU3R.V.W.YS6x3S3TR9T6yd#^W#W#Z%g(R([*W+W.O/hr#gZm#h#i#l%d(f(g(h+Z.U.V.W.Y3S3T6yS*Z$x*_Q/o*[Q1|,jQ2d-QQ4W/kQ6g2[Q7i4XQ8{6hT=_\'V+XV#aW%g*WU#`W%g*WS(S#W([U(X#Z+W/hS-V\'V+XT-y(R.OV\'[!e%h*XQ$lfR)v$qT)k$l)lR3}/PT*]$x*_T*e${*WQ0q+cQ1_,QQ3V.aQ5j1aQ5u1iQ6}3ZQ8g5xQ9W6|Q:Q8fQ:d9VQ:|:SQ;U:fQ;`:}R;c;VnqOXst!Z#d%l&p&r&s&u,n,s2S2VQ&j!VR,c&gtmOXst!U!V!Z#d%l&g&p&r&s&u,n,s2S2VR,j&mT%km,jR1c,SR,b&eQ&T|R+z&UR+p&OT&n!W&qT&o!W&qT2U,s2V",\n  nodeNames: "⚠ ArithOp ArithOp ?. JSXStartTag LineComment BlockComment Script Hashbang ExportDeclaration export Star as VariableName String Escape from ; default FunctionDeclaration async function VariableDefinition > < TypeParamList const TypeDefinition extends ThisType this LiteralType ArithOp Number BooleanLiteral TemplateType InterpolationEnd Interpolation InterpolationStart NullType null VoidType void TypeofType typeof MemberExpression . PropertyName [ TemplateString Escape Interpolation super RegExp ] ArrayExpression Spread , } { ObjectExpression Property async get set PropertyDefinition Block : NewTarget new NewExpression ) ( ArgList UnaryExpression delete LogicOp BitOp YieldExpression yield AwaitExpression await ParenthesizedExpression ClassExpression class ClassBody MethodDeclaration Decorator @ MemberExpression PrivatePropertyName CallExpression TypeArgList CompareOp < declare Privacy static abstract override PrivatePropertyDefinition PropertyDeclaration readonly accessor Optional TypeAnnotation Equals StaticBlock FunctionExpression ArrowFunction ParamList ParamList ArrayPattern ObjectPattern PatternProperty Privacy readonly Arrow MemberExpression BinaryExpression ArithOp ArithOp ArithOp ArithOp BitOp CompareOp instanceof satisfies in CompareOp BitOp BitOp BitOp LogicOp LogicOp ConditionalExpression LogicOp LogicOp AssignmentExpression UpdateOp PostfixExpression CallExpression InstantiationExpression TaggedTemplateExpression DynamicImport import ImportMeta JSXElement JSXSelfCloseEndTag JSXSelfClosingTag JSXIdentifier JSXBuiltin JSXIdentifier JSXNamespacedName JSXMemberExpression JSXSpreadAttribute JSXAttribute JSXAttributeValue JSXEscape JSXEndTag JSXOpenTag JSXFragmentTag JSXText JSXEscape JSXStartCloseTag JSXCloseTag PrefixCast < ArrowFunction TypeParamList SequenceExpression InstantiationExpression KeyofType keyof UniqueType unique ImportType InferredType infer TypeName ParenthesizedType FunctionSignature ParamList NewSignature IndexedType TupleType Label ArrayType ReadonlyType ObjectType MethodType PropertyType IndexSignature PropertyDefinition CallSignature TypePredicate asserts is NewSignature new UnionType LogicOp IntersectionType LogicOp ConditionalType ParameterizedType ClassDeclaration abstract implements type VariableDeclaration let var using TypeAliasDeclaration InterfaceDeclaration interface EnumDeclaration enum EnumBody NamespaceDeclaration namespace module AmbientDeclaration declare GlobalDeclaration global ClassDeclaration ClassBody AmbientFunctionDeclaration ExportGroup VariableName VariableName ImportDeclaration ImportGroup ForStatement for ForSpec ForInSpec ForOfSpec of WhileStatement while WithStatement with DoStatement do IfStatement if else SwitchStatement switch SwitchBody CaseLabel case DefaultLabel TryStatement try CatchClause catch FinallyClause finally ReturnStatement return ThrowStatement throw BreakStatement break ContinueStatement continue DebuggerStatement debugger LabeledStatement ExpressionStatement SingleExpression SingleClassItem",\n  maxTerm: 378,\n  context: wT,\n  nodeProps: [\n    ["isolate", -8, 5, 6, 14, 35, 37, 49, 51, 53, ""],\n    ["group", -26, 9, 17, 19, 66, 206, 210, 214, 215, 217, 220, 223, 233, 235, 241, 243, 245, 247, 250, 256, 262, 264, 266, 268, 270, 272, 273, "Statement", -34, 13, 14, 30, 33, 34, 40, 49, 52, 53, 55, 60, 68, 70, 74, 78, 80, 82, 83, 108, 109, 118, 119, 135, 138, 140, 141, 142, 143, 144, 146, 147, 166, 168, 170, "Expression", -23, 29, 31, 35, 39, 41, 43, 172, 174, 176, 177, 179, 180, 181, 183, 184, 185, 187, 188, 189, 200, 202, 204, 205, "Type", -3, 86, 101, 107, "ClassItem"],\n    ["openedBy", 23, "<", 36, "InterpolationStart", 54, "[", 58, "{", 71, "(", 159, "JSXStartCloseTag"],\n    ["closedBy", -2, 24, 167, ">", 38, "InterpolationEnd", 48, "]", 59, "}", 72, ")", 164, "JSXEndTag"]\n  ],\n  propSources: [ET],\n  skippedNodes: [0, 5, 6, 276],\n  repeatNodeCount: 37,\n  tokenData: "$Fq07[R!bOX%ZXY+gYZ-yZ[+g[]%Z]^.c^p%Zpq+gqr/mrs3cst:_tuEruvJSvwLkwx! Yxy!\'iyz!(sz{!)}{|!,q|}!.O}!O!,q!O!P!/Y!P!Q!9j!Q!R#:O!R![#<_![!]#I_!]!^#Jk!^!_#Ku!_!`$![!`!a$$v!a!b$*T!b!c$,r!c!}Er!}#O$-|#O#P$/W#P#Q$4o#Q#R$5y#R#SEr#S#T$7W#T#o$8b#o#p$<r#p#q$=h#q#r$>x#r#s$@U#s$f%Z$f$g+g$g#BYEr#BY#BZ$A`#BZ$ISEr$IS$I_$A`$I_$I|Er$I|$I}$Dk$I}$JO$Dk$JO$JTEr$JT$JU$A`$JU$KVEr$KV$KW$A`$KW&FUEr&FU&FV$A`&FV;\'SEr;\'S;=`I|<%l?HTEr?HT?HU$A`?HUOEr(n%d_$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z&j&hT$h&jO!^&c!_#o&c#p;\'S&c;\'S;=`&w<%lO&c&j&zP;=`<%l&c\'|\'U]$h&j(X!bOY&}YZ&cZw&}wx&cx!^&}!^!_\'}!_#O&}#O#P&c#P#o&}#o#p\'}#p;\'S&};\'S;=`(l<%lO&}!b(SU(X!bOY\'}Zw\'}x#O\'}#P;\'S\'};\'S;=`(f<%lO\'}!b(iP;=`<%l\'}\'|(oP;=`<%l&}\'[(y]$h&j(UpOY(rYZ&cZr(rrs&cs!^(r!^!_)r!_#O(r#O#P&c#P#o(r#o#p)r#p;\'S(r;\'S;=`*a<%lO(rp)wU(UpOY)rZr)rs#O)r#P;\'S)r;\'S;=`*Z<%lO)rp*^P;=`<%l)r\'[*dP;=`<%l(r#S*nX(Up(X!bOY*gZr*grs\'}sw*gwx)rx#O*g#P;\'S*g;\'S;=`+Z<%lO*g#S+^P;=`<%l*g(n+dP;=`<%l%Z07[+rq$h&j(Up(X!b\'z0/lOX%ZXY+gYZ&cZ[+g[p%Zpq+gqr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p$f%Z$f$g+g$g#BY%Z#BY#BZ+g#BZ$IS%Z$IS$I_+g$I_$JT%Z$JT$JU+g$JU$KV%Z$KV$KW+g$KW&FU%Z&FU&FV+g&FV;\'S%Z;\'S;=`+a<%l?HT%Z?HT?HU+g?HUO%Z07[.ST(V#S$h&j\'{0/lO!^&c!_#o&c#p;\'S&c;\'S;=`&w<%lO&c07[.n_$h&j(Up(X!b\'{0/lOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z)3p/x`$h&j!n),Q(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`0z!`#O%Z#O#P&c#P#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z(KW1V`#u(Ch$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`2X!`#O%Z#O#P&c#P#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z(KW2d_#u(Ch$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z\'At3l_(T\':f$h&j(X!bOY4kYZ5qZr4krs7nsw4kwx5qx!^4k!^!_8p!_#O4k#O#P5q#P#o4k#o#p8p#p;\'S4k;\'S;=`:X<%lO4k(^4r_$h&j(X!bOY4kYZ5qZr4krs7nsw4kwx5qx!^4k!^!_8p!_#O4k#O#P5q#P#o4k#o#p8p#p;\'S4k;\'S;=`:X<%lO4k&z5vX$h&jOr5qrs6cs!^5q!^!_6y!_#o5q#o#p6y#p;\'S5q;\'S;=`7h<%lO5q&z6jT$c`$h&jO!^&c!_#o&c#p;\'S&c;\'S;=`&w<%lO&c`6|TOr6yrs7]s;\'S6y;\'S;=`7b<%lO6y`7bO$c``7eP;=`<%l6y&z7kP;=`<%l5q(^7w]$c`$h&j(X!bOY&}YZ&cZw&}wx&cx!^&}!^!_\'}!_#O&}#O#P&c#P#o&}#o#p\'}#p;\'S&};\'S;=`(l<%lO&}!r8uZ(X!bOY8pYZ6yZr8prs9hsw8pwx6yx#O8p#O#P6y#P;\'S8p;\'S;=`:R<%lO8p!r9oU$c`(X!bOY\'}Zw\'}x#O\'}#P;\'S\'};\'S;=`(f<%lO\'}!r:UP;=`<%l8p(^:[P;=`<%l4k%9[:hh$h&j(Up(X!bOY%ZYZ&cZq%Zqr<Srs&}st%ZtuCruw%Zwx(rx!^%Z!^!_*g!_!c%Z!c!}Cr!}#O%Z#O#P&c#P#R%Z#R#SCr#S#T%Z#T#oCr#o#p*g#p$g%Z$g;\'SCr;\'S;=`El<%lOCr(r<__WS$h&j(Up(X!bOY<SYZ&cZr<Srs=^sw<Swx@nx!^<S!^!_Bm!_#O<S#O#P>`#P#o<S#o#pBm#p;\'S<S;\'S;=`Cl<%lO<S(Q=g]WS$h&j(X!bOY=^YZ&cZw=^wx>`x!^=^!^!_?q!_#O=^#O#P>`#P#o=^#o#p?q#p;\'S=^;\'S;=`@h<%lO=^&n>gXWS$h&jOY>`YZ&cZ!^>`!^!_?S!_#o>`#o#p?S#p;\'S>`;\'S;=`?k<%lO>`S?XSWSOY?SZ;\'S?S;\'S;=`?e<%lO?SS?hP;=`<%l?S&n?nP;=`<%l>`!f?xWWS(X!bOY?qZw?qwx?Sx#O?q#O#P?S#P;\'S?q;\'S;=`@b<%lO?q!f@eP;=`<%l?q(Q@kP;=`<%l=^\'`@w]WS$h&j(UpOY@nYZ&cZr@nrs>`s!^@n!^!_Ap!_#O@n#O#P>`#P#o@n#o#pAp#p;\'S@n;\'S;=`Bg<%lO@ntAwWWS(UpOYApZrAprs?Ss#OAp#O#P?S#P;\'SAp;\'S;=`Ba<%lOAptBdP;=`<%lAp\'`BjP;=`<%l@n#WBvYWS(Up(X!bOYBmZrBmrs?qswBmwxApx#OBm#O#P?S#P;\'SBm;\'S;=`Cf<%lOBm#WCiP;=`<%lBm(rCoP;=`<%l<S%9[C}i$h&j(m%1l(Up(X!bOY%ZYZ&cZr%Zrs&}st%ZtuCruw%Zwx(rx!Q%Z!Q![Cr![!^%Z!^!_*g!_!c%Z!c!}Cr!}#O%Z#O#P&c#P#R%Z#R#SCr#S#T%Z#T#oCr#o#p*g#p$g%Z$g;\'SCr;\'S;=`El<%lOCr%9[EoP;=`<%lCr07[FRk$h&j(Up(X!b$[#t(R,2j(c$I[OY%ZYZ&cZr%Zrs&}st%ZtuEruw%Zwx(rx}%Z}!OGv!O!Q%Z!Q![Er![!^%Z!^!_*g!_!c%Z!c!}Er!}#O%Z#O#P&c#P#R%Z#R#SEr#S#T%Z#T#oEr#o#p*g#p$g%Z$g;\'SEr;\'S;=`I|<%lOEr+dHRk$h&j(Up(X!b$[#tOY%ZYZ&cZr%Zrs&}st%ZtuGvuw%Zwx(rx}%Z}!OGv!O!Q%Z!Q![Gv![!^%Z!^!_*g!_!c%Z!c!}Gv!}#O%Z#O#P&c#P#R%Z#R#SGv#S#T%Z#T#oGv#o#p*g#p$g%Z$g;\'SGv;\'S;=`Iv<%lOGv+dIyP;=`<%lGv07[JPP;=`<%lEr(KWJ_`$h&j(Up(X!b#n(ChOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z(KWKl_$h&j$P(Ch(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z,#xLva(x+JY$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sv%ZvwM{wx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z(KWNW`$h&j#y(Ch(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z\'At! c_(W\';W$h&j(UpOY!!bYZ!#hZr!!brs!#hsw!!bwx!$xx!^!!b!^!_!%z!_#O!!b#O#P!#h#P#o!!b#o#p!%z#p;\'S!!b;\'S;=`!\'c<%lO!!b\'l!!i_$h&j(UpOY!!bYZ!#hZr!!brs!#hsw!!bwx!$xx!^!!b!^!_!%z!_#O!!b#O#P!#h#P#o!!b#o#p!%z#p;\'S!!b;\'S;=`!\'c<%lO!!b&z!#mX$h&jOw!#hwx6cx!^!#h!^!_!$Y!_#o!#h#o#p!$Y#p;\'S!#h;\'S;=`!$r<%lO!#h`!$]TOw!$Ywx7]x;\'S!$Y;\'S;=`!$l<%lO!$Y`!$oP;=`<%l!$Y&z!$uP;=`<%l!#h\'l!%R]$c`$h&j(UpOY(rYZ&cZr(rrs&cs!^(r!^!_)r!_#O(r#O#P&c#P#o(r#o#p)r#p;\'S(r;\'S;=`*a<%lO(r!Q!&PZ(UpOY!%zYZ!$YZr!%zrs!$Ysw!%zwx!&rx#O!%z#O#P!$Y#P;\'S!%z;\'S;=`!\']<%lO!%z!Q!&yU$c`(UpOY)rZr)rs#O)r#P;\'S)r;\'S;=`*Z<%lO)r!Q!\'`P;=`<%l!%z\'l!\'fP;=`<%l!!b/5|!\'t_!j/.^$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z#&U!)O_!i!Lf$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z-!n!*[b$h&j(Up(X!b(S%&f#o(ChOY%ZYZ&cZr%Zrs&}sw%Zwx(rxz%Zz{!+d{!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z(KW!+o`$h&j(Up(X!b#l(ChOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z+;x!,|`$h&j(Up(X!bp+4YOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z,$U!.Z_!Z+Jf$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z07[!/ec$h&j(Up(X!b!O.2^OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!0p!P!Q%Z!Q![!3Y![!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z#%|!0ya$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!2O!P!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z#%|!2Z_!Y!L^$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z\'Ad!3eg$h&j(Up(X!bq\'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![!3Y![!^%Z!^!_*g!_!g%Z!g!h!4|!h#O%Z#O#P&c#P#R%Z#R#S!3Y#S#X%Z#X#Y!4|#Y#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z\'Ad!5Vg$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx{%Z{|!6n|}%Z}!O!6n!O!Q%Z!Q![!8S![!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S!8S#S#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z\'Ad!6wc$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![!8S![!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S!8S#S#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z\'Ad!8_c$h&j(Up(X!bq\'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![!8S![!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S!8S#S#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z07[!9uf$h&j(Up(X!b#m(ChOY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Lcxz!;Zz{#-}{!P!;Z!P!Q#/d!Q!^!;Z!^!_#(i!_!`#7S!`!a#8i!a!}!;Z!}#O#,f#O#P!Dy#P#o!;Z#o#p#(i#p;\'S!;Z;\'S;=`#-w<%lO!;Z?O!;fb$h&j(Up(X!b!V7`OY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Lcx!P!;Z!P!Q#&`!Q!^!;Z!^!_#(i!_!}!;Z!}#O#,f#O#P!Dy#P#o!;Z#o#p#(i#p;\'S!;Z;\'S;=`#-w<%lO!;Z>^!<w`$h&j(X!b!V7`OY!<nYZ&cZw!<nwx!=yx!P!<n!P!Q!Eq!Q!^!<n!^!_!Gr!_!}!<n!}#O!KS#O#P!Dy#P#o!<n#o#p!Gr#p;\'S!<n;\'S;=`!L]<%lO!<n<z!>Q^$h&j!V7`OY!=yYZ&cZ!P!=y!P!Q!>|!Q!^!=y!^!_!@c!_!}!=y!}#O!CW#O#P!Dy#P#o!=y#o#p!@c#p;\'S!=y;\'S;=`!Ek<%lO!=y<z!?Td$h&j!V7`O!^&c!_#W&c#W#X!>|#X#Z&c#Z#[!>|#[#]&c#]#^!>|#^#a&c#a#b!>|#b#g&c#g#h!>|#h#i&c#i#j!>|#j#k!>|#k#m&c#m#n!>|#n#o&c#p;\'S&c;\'S;=`&w<%lO&c7`!@hX!V7`OY!@cZ!P!@c!P!Q!AT!Q!}!@c!}#O!Ar#O#P!Bq#P;\'S!@c;\'S;=`!CQ<%lO!@c7`!AYW!V7`#W#X!AT#Z#[!AT#]#^!AT#a#b!AT#g#h!AT#i#j!AT#j#k!AT#m#n!AT7`!AuVOY!ArZ#O!Ar#O#P!B[#P#Q!@c#Q;\'S!Ar;\'S;=`!Bk<%lO!Ar7`!B_SOY!ArZ;\'S!Ar;\'S;=`!Bk<%lO!Ar7`!BnP;=`<%l!Ar7`!BtSOY!@cZ;\'S!@c;\'S;=`!CQ<%lO!@c7`!CTP;=`<%l!@c<z!C][$h&jOY!CWYZ&cZ!^!CW!^!_!Ar!_#O!CW#O#P!DR#P#Q!=y#Q#o!CW#o#p!Ar#p;\'S!CW;\'S;=`!Ds<%lO!CW<z!DWX$h&jOY!CWYZ&cZ!^!CW!^!_!Ar!_#o!CW#o#p!Ar#p;\'S!CW;\'S;=`!Ds<%lO!CW<z!DvP;=`<%l!CW<z!EOX$h&jOY!=yYZ&cZ!^!=y!^!_!@c!_#o!=y#o#p!@c#p;\'S!=y;\'S;=`!Ek<%lO!=y<z!EnP;=`<%l!=y>^!Ezl$h&j(X!b!V7`OY&}YZ&cZw&}wx&cx!^&}!^!_\'}!_#O&}#O#P&c#P#W&}#W#X!Eq#X#Z&}#Z#[!Eq#[#]&}#]#^!Eq#^#a&}#a#b!Eq#b#g&}#g#h!Eq#h#i&}#i#j!Eq#j#k!Eq#k#m&}#m#n!Eq#n#o&}#o#p\'}#p;\'S&};\'S;=`(l<%lO&}8r!GyZ(X!b!V7`OY!GrZw!Grwx!@cx!P!Gr!P!Q!Hl!Q!}!Gr!}#O!JU#O#P!Bq#P;\'S!Gr;\'S;=`!J|<%lO!Gr8r!Hse(X!b!V7`OY\'}Zw\'}x#O\'}#P#W\'}#W#X!Hl#X#Z\'}#Z#[!Hl#[#]\'}#]#^!Hl#^#a\'}#a#b!Hl#b#g\'}#g#h!Hl#h#i\'}#i#j!Hl#j#k!Hl#k#m\'}#m#n!Hl#n;\'S\'};\'S;=`(f<%lO\'}8r!JZX(X!bOY!JUZw!JUwx!Arx#O!JU#O#P!B[#P#Q!Gr#Q;\'S!JU;\'S;=`!Jv<%lO!JU8r!JyP;=`<%l!JU8r!KPP;=`<%l!Gr>^!KZ^$h&j(X!bOY!KSYZ&cZw!KSwx!CWx!^!KS!^!_!JU!_#O!KS#O#P!DR#P#Q!<n#Q#o!KS#o#p!JU#p;\'S!KS;\'S;=`!LV<%lO!KS>^!LYP;=`<%l!KS>^!L`P;=`<%l!<n=l!Ll`$h&j(Up!V7`OY!LcYZ&cZr!Lcrs!=ys!P!Lc!P!Q!Mn!Q!^!Lc!^!_# o!_!}!Lc!}#O#%P#O#P!Dy#P#o!Lc#o#p# o#p;\'S!Lc;\'S;=`#&Y<%lO!Lc=l!Mwl$h&j(Up!V7`OY(rYZ&cZr(rrs&cs!^(r!^!_)r!_#O(r#O#P&c#P#W(r#W#X!Mn#X#Z(r#Z#[!Mn#[#](r#]#^!Mn#^#a(r#a#b!Mn#b#g(r#g#h!Mn#h#i(r#i#j!Mn#j#k!Mn#k#m(r#m#n!Mn#n#o(r#o#p)r#p;\'S(r;\'S;=`*a<%lO(r8Q# vZ(Up!V7`OY# oZr# ors!@cs!P# o!P!Q#!i!Q!}# o!}#O#$R#O#P!Bq#P;\'S# o;\'S;=`#$y<%lO# o8Q#!pe(Up!V7`OY)rZr)rs#O)r#P#W)r#W#X#!i#X#Z)r#Z#[#!i#[#])r#]#^#!i#^#a)r#a#b#!i#b#g)r#g#h#!i#h#i)r#i#j#!i#j#k#!i#k#m)r#m#n#!i#n;\'S)r;\'S;=`*Z<%lO)r8Q#$WX(UpOY#$RZr#$Rrs!Ars#O#$R#O#P!B[#P#Q# o#Q;\'S#$R;\'S;=`#$s<%lO#$R8Q#$vP;=`<%l#$R8Q#$|P;=`<%l# o=l#%W^$h&j(UpOY#%PYZ&cZr#%Prs!CWs!^#%P!^!_#$R!_#O#%P#O#P!DR#P#Q!Lc#Q#o#%P#o#p#$R#p;\'S#%P;\'S;=`#&S<%lO#%P=l#&VP;=`<%l#%P=l#&]P;=`<%l!Lc?O#&kn$h&j(Up(X!b!V7`OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#W%Z#W#X#&`#X#Z%Z#Z#[#&`#[#]%Z#]#^#&`#^#a%Z#a#b#&`#b#g%Z#g#h#&`#h#i%Z#i#j#&`#j#k#&`#k#m%Z#m#n#&`#n#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z9d#(r](Up(X!b!V7`OY#(iZr#(irs!Grsw#(iwx# ox!P#(i!P!Q#)k!Q!}#(i!}#O#+`#O#P!Bq#P;\'S#(i;\'S;=`#,`<%lO#(i9d#)th(Up(X!b!V7`OY*gZr*grs\'}sw*gwx)rx#O*g#P#W*g#W#X#)k#X#Z*g#Z#[#)k#[#]*g#]#^#)k#^#a*g#a#b#)k#b#g*g#g#h#)k#h#i*g#i#j#)k#j#k#)k#k#m*g#m#n#)k#n;\'S*g;\'S;=`+Z<%lO*g9d#+gZ(Up(X!bOY#+`Zr#+`rs!JUsw#+`wx#$Rx#O#+`#O#P!B[#P#Q#(i#Q;\'S#+`;\'S;=`#,Y<%lO#+`9d#,]P;=`<%l#+`9d#,cP;=`<%l#(i?O#,o`$h&j(Up(X!bOY#,fYZ&cZr#,frs!KSsw#,fwx#%Px!^#,f!^!_#+`!_#O#,f#O#P!DR#P#Q!;Z#Q#o#,f#o#p#+`#p;\'S#,f;\'S;=`#-q<%lO#,f?O#-tP;=`<%l#,f?O#-zP;=`<%l!;Z07[#.[b$h&j(Up(X!b\'|0/l!V7`OY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Lcx!P!;Z!P!Q#&`!Q!^!;Z!^!_#(i!_!}!;Z!}#O#,f#O#P!Dy#P#o!;Z#o#p#(i#p;\'S!;Z;\'S;=`#-w<%lO!;Z07[#/o_$h&j(Up(X!bT0/lOY#/dYZ&cZr#/drs#0nsw#/dwx#4Ox!^#/d!^!_#5}!_#O#/d#O#P#1p#P#o#/d#o#p#5}#p;\'S#/d;\'S;=`#6|<%lO#/d06j#0w]$h&j(X!bT0/lOY#0nYZ&cZw#0nwx#1px!^#0n!^!_#3R!_#O#0n#O#P#1p#P#o#0n#o#p#3R#p;\'S#0n;\'S;=`#3x<%lO#0n05W#1wX$h&jT0/lOY#1pYZ&cZ!^#1p!^!_#2d!_#o#1p#o#p#2d#p;\'S#1p;\'S;=`#2{<%lO#1p0/l#2iST0/lOY#2dZ;\'S#2d;\'S;=`#2u<%lO#2d0/l#2xP;=`<%l#2d05W#3OP;=`<%l#1p01O#3YW(X!bT0/lOY#3RZw#3Rwx#2dx#O#3R#O#P#2d#P;\'S#3R;\'S;=`#3r<%lO#3R01O#3uP;=`<%l#3R06j#3{P;=`<%l#0n05x#4X]$h&j(UpT0/lOY#4OYZ&cZr#4Ors#1ps!^#4O!^!_#5Q!_#O#4O#O#P#1p#P#o#4O#o#p#5Q#p;\'S#4O;\'S;=`#5w<%lO#4O00^#5XW(UpT0/lOY#5QZr#5Qrs#2ds#O#5Q#O#P#2d#P;\'S#5Q;\'S;=`#5q<%lO#5Q00^#5tP;=`<%l#5Q05x#5zP;=`<%l#4O01p#6WY(Up(X!bT0/lOY#5}Zr#5}rs#3Rsw#5}wx#5Qx#O#5}#O#P#2d#P;\'S#5};\'S;=`#6v<%lO#5}01p#6yP;=`<%l#5}07[#7PP;=`<%l#/d)3h#7ab$h&j$P(Ch(Up(X!b!V7`OY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Lcx!P!;Z!P!Q#&`!Q!^!;Z!^!_#(i!_!}!;Z!}#O#,f#O#P!Dy#P#o!;Z#o#p#(i#p;\'S!;Z;\'S;=`#-w<%lO!;ZAt#8vb$Y#t$h&j(Up(X!b!V7`OY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Lcx!P!;Z!P!Q#&`!Q!^!;Z!^!_#(i!_!}!;Z!}#O#,f#O#P!Dy#P#o!;Z#o#p#(i#p;\'S!;Z;\'S;=`#-w<%lO!;Z\'Ad#:Zp$h&j(Up(X!bq\'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!3Y!P!Q%Z!Q![#<_![!^%Z!^!_*g!_!g%Z!g!h!4|!h#O%Z#O#P&c#P#R%Z#R#S#<_#S#U%Z#U#V#?i#V#X%Z#X#Y!4|#Y#b%Z#b#c#>_#c#d#Bq#d#l%Z#l#m#Es#m#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z\'Ad#<jk$h&j(Up(X!bq\'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!3Y!P!Q%Z!Q![#<_![!^%Z!^!_*g!_!g%Z!g!h!4|!h#O%Z#O#P&c#P#R%Z#R#S#<_#S#X%Z#X#Y!4|#Y#b%Z#b#c#>_#c#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z\'Ad#>j_$h&j(Up(X!bq\'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z\'Ad#?rd$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!R#AQ!R!S#AQ!S!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#AQ#S#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z\'Ad#A]f$h&j(Up(X!bq\'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!R#AQ!R!S#AQ!S!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#AQ#S#b%Z#b#c#>_#c#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z\'Ad#Bzc$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!Y#DV!Y!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#DV#S#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z\'Ad#Dbe$h&j(Up(X!bq\'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!Y#DV!Y!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#DV#S#b%Z#b#c#>_#c#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z\'Ad#E|g$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![#Ge![!^%Z!^!_*g!_!c%Z!c!i#Ge!i#O%Z#O#P&c#P#R%Z#R#S#Ge#S#T%Z#T#Z#Ge#Z#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z\'Ad#Gpi$h&j(Up(X!bq\'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![#Ge![!^%Z!^!_*g!_!c%Z!c!i#Ge!i#O%Z#O#P&c#P#R%Z#R#S#Ge#S#T%Z#T#Z#Ge#Z#b%Z#b#c#>_#c#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z*)x#Il_!e$b$h&j#})Lv(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z)[#Jv_al$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z04f#LS^h#)`#P-<U(Up(X!b$m7`OY*gZr*grs\'}sw*gwx)rx!P*g!P!Q#MO!Q!^*g!^!_#Mt!_!`$ f!`#O*g#P;\'S*g;\'S;=`+Z<%lO*g(n#MXX$j&j(Up(X!bOY*gZr*grs\'}sw*gwx)rx#O*g#P;\'S*g;\'S;=`+Z<%lO*g(El#M}Z#p(Ch(Up(X!bOY*gZr*grs\'}sw*gwx)rx!_*g!_!`#Np!`#O*g#P;\'S*g;\'S;=`+Z<%lO*g(El#NyX$P(Ch(Up(X!bOY*gZr*grs\'}sw*gwx)rx#O*g#P;\'S*g;\'S;=`+Z<%lO*g(El$ oX#q(Ch(Up(X!bOY*gZr*grs\'}sw*gwx)rx#O*g#P;\'S*g;\'S;=`+Z<%lO*g*)x$!ga#^*!Y$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`0z!`!a$#l!a#O%Z#O#P&c#P#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z(K[$#w_#i(Cl$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z*)x$%Vag!*r#q(Ch$e#|$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`$&[!`!a$\'f!a#O%Z#O#P&c#P#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z(KW$&g_#q(Ch$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z(KW$\'qa#p(Ch$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`!a$(v!a#O%Z#O#P&c#P#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z(KW$)R`#p(Ch$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z(Kd$*`a(p(Ct$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!a%Z!a!b$+e!b#O%Z#O#P&c#P#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z(KW$+p`$h&j#z(Ch(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z%#`$,}_!z$Ip$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z04f$.X_!Q0,v$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z(n$/]Z$h&jO!^$0O!^!_$0f!_#i$0O#i#j$0k#j#l$0O#l#m$2^#m#o$0O#o#p$0f#p;\'S$0O;\'S;=`$4i<%lO$0O(n$0VT_#S$h&jO!^&c!_#o&c#p;\'S&c;\'S;=`&w<%lO&c#S$0kO_#S(n$0p[$h&jO!Q&c!Q![$1f![!^&c!_!c&c!c!i$1f!i#T&c#T#Z$1f#Z#o&c#o#p$3|#p;\'S&c;\'S;=`&w<%lO&c(n$1kZ$h&jO!Q&c!Q![$2^![!^&c!_!c&c!c!i$2^!i#T&c#T#Z$2^#Z#o&c#p;\'S&c;\'S;=`&w<%lO&c(n$2cZ$h&jO!Q&c!Q![$3U![!^&c!_!c&c!c!i$3U!i#T&c#T#Z$3U#Z#o&c#p;\'S&c;\'S;=`&w<%lO&c(n$3ZZ$h&jO!Q&c!Q![$0O![!^&c!_!c&c!c!i$0O!i#T&c#T#Z$0O#Z#o&c#p;\'S&c;\'S;=`&w<%lO&c#S$4PR!Q![$4Y!c!i$4Y#T#Z$4Y#S$4]S!Q![$4Y!c!i$4Y#T#Z$4Y#q#r$0f(n$4lP;=`<%l$0O#1[$4z_!W#)l$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z(KW$6U`#w(Ch$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z+;p$7c_$h&j(Up(X!b(_+4QOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z07[$8qk$h&j(Up(X!b(R,2j$^#t(c$I[OY%ZYZ&cZr%Zrs&}st%Ztu$8buw%Zwx(rx}%Z}!O$:f!O!Q%Z!Q![$8b![!^%Z!^!_*g!_!c%Z!c!}$8b!}#O%Z#O#P&c#P#R%Z#R#S$8b#S#T%Z#T#o$8b#o#p*g#p$g%Z$g;\'S$8b;\'S;=`$<l<%lO$8b+d$:qk$h&j(Up(X!b$^#tOY%ZYZ&cZr%Zrs&}st%Ztu$:fuw%Zwx(rx}%Z}!O$:f!O!Q%Z!Q![$:f![!^%Z!^!_*g!_!c%Z!c!}$:f!}#O%Z#O#P&c#P#R%Z#R#S$:f#S#T%Z#T#o$:f#o#p*g#p$g%Z$g;\'S$:f;\'S;=`$<f<%lO$:f+d$<iP;=`<%l$:f07[$<oP;=`<%l$8b#Jf$<{X!]#Hb(Up(X!bOY*gZr*grs\'}sw*gwx)rx#O*g#P;\'S*g;\'S;=`+Z<%lO*g,#x$=sa(w+JY$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p#q$+e#q;\'S%Z;\'S;=`+a<%lO%Z)>v$?V_![(CdtBr$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z?O$@a_!o7`$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;\'S%Z;\'S;=`+a<%lO%Z07[$Aq|$h&j(Up(X!b\'z0/l$[#t(R,2j(c$I[OX%ZXY+gYZ&cZ[+g[p%Zpq+gqr%Zrs&}st%ZtuEruw%Zwx(rx}%Z}!OGv!O!Q%Z!Q![Er![!^%Z!^!_*g!_!c%Z!c!}Er!}#O%Z#O#P&c#P#R%Z#R#SEr#S#T%Z#T#oEr#o#p*g#p$f%Z$f$g+g$g#BYEr#BY#BZ$A`#BZ$ISEr$IS$I_$A`$I_$JTEr$JT$JU$A`$JU$KVEr$KV$KW$A`$KW&FUEr&FU&FV$A`&FV;\'SEr;\'S;=`I|<%l?HTEr?HT?HU$A`?HUOEr07[$D|k$h&j(Up(X!b\'{0/l$[#t(R,2j(c$I[OY%ZYZ&cZr%Zrs&}st%ZtuEruw%Zwx(rx}%Z}!OGv!O!Q%Z!Q![Er![!^%Z!^!_*g!_!c%Z!c!}Er!}#O%Z#O#P&c#P#R%Z#R#SEr#S#T%Z#T#oEr#o#p*g#p$g%Z$g;\'SEr;\'S;=`I|<%lOEr",\n  tokenizers: [ST, AT, DT, PT, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, CT, new kf("$S~RRtu[#O#Pg#S#T#|~_P#o#pb~gOv~~jVO#i!P#i#j!U#j#l!P#l#m!q#m;\'S!P;\'S;=`#v<%lO!P~!UO!S~~!XS!Q![!e!c!i!e#T#Z!e#o#p#Z~!hR!Q![!q!c!i!q#T#Z!q~!tR!Q![!}!c!i!}#T#Z!}~#QR!Q![!P!c!i!P#T#Z!P~#^R!Q![#g!c!i#g#T#Z#g~#jS!Q![#g!c!i#g#T#Z#g#q#r!P~#yP;=`<%l!P~$RO(a~~", 141, 338), new kf("j~RQYZXz{^~^O(O~~aP!P!Qd~iO(P~~", 25, 321)],\n  topRules: { Script: [0, 7], SingleExpression: [1, 274], SingleClassItem: [2, 275] },\n  dialects: { jsx: 0, ts: 15091 },\n  dynamicPrecedences: { 78: 1, 80: 1, 92: 1, 168: 1, 198: 1 },\n  specialized: [{ term: 325, get: (t) => FT[t] || -1 }, { term: 341, get: (t) => BT[t] || -1 }, { term: 93, get: (t) => MT[t] || -1 }],\n  tokenPrec: 15116\n}), BA = [\n  /* @__PURE__ */ Nn("function ${name}(${params}) {\\n\t${}\\n}", {\n    label: "function",\n    detail: "definition",\n    type: "keyword"\n  }),\n  /* @__PURE__ */ Nn("for (let ${index} = 0; ${index} < ${bound}; ${index}++) {\\n\t${}\\n}", {\n    label: "for",\n    detail: "loop",\n    type: "keyword"\n  }),\n  /* @__PURE__ */ Nn("for (let ${name} of ${collection}) {\\n\t${}\\n}", {\n    label: "for",\n    detail: "of loop",\n    type: "keyword"\n  }),\n  /* @__PURE__ */ Nn("do {\\n\t${}\\n} while (${})", {\n    label: "do",\n    detail: "loop",\n    type: "keyword"\n  }),\n  /* @__PURE__ */ Nn("while (${}) {\\n\t${}\\n}", {\n    label: "while",\n    detail: "loop",\n    type: "keyword"\n  }),\n  /* @__PURE__ */ Nn(`try {\n\t\\${}\n} catch (\\${error}) {\n\t\\${}\n}`, {\n    label: "try",\n    detail: "/ catch block",\n    type: "keyword"\n  }),\n  /* @__PURE__ */ Nn("if (${}) {\\n\t${}\\n}", {\n    label: "if",\n    detail: "block",\n    type: "keyword"\n  }),\n  /* @__PURE__ */ Nn(`if (\\${}) {\n\t\\${}\n} else {\n\t\\${}\n}`, {\n    label: "if",\n    detail: "/ else block",\n    type: "keyword"\n  }),\n  /* @__PURE__ */ Nn(`class \\${name} {\n\tconstructor(\\${params}) {\n\t\t\\${}\n\t}\n}`, {\n    label: "class",\n    detail: "definition",\n    type: "keyword"\n  }),\n  /* @__PURE__ */ Nn(\'import {${names}} from "${module}"\\n${}\', {\n    label: "import",\n    detail: "named",\n    type: "keyword"\n  }),\n  /* @__PURE__ */ Nn(\'import ${name} from "${module}"\\n${}\', {\n    label: "import",\n    detail: "default",\n    type: "keyword"\n  })\n], TT = /* @__PURE__ */ BA.concat([\n  /* @__PURE__ */ Nn("interface ${name} {\\n\t${}\\n}", {\n    label: "interface",\n    detail: "definition",\n    type: "keyword"\n  }),\n  /* @__PURE__ */ Nn("type ${name} = ${type}", {\n    label: "type",\n    detail: "definition",\n    type: "keyword"\n  }),\n  /* @__PURE__ */ Nn("enum ${name} {\\n\t${}\\n}", {\n    label: "enum",\n    detail: "definition",\n    type: "keyword"\n  })\n]), U0 = /* @__PURE__ */ new yM(), MA = /* @__PURE__ */ new Set([\n  "Script",\n  "Block",\n  "FunctionExpression",\n  "FunctionDeclaration",\n  "ArrowFunction",\n  "MethodDeclaration",\n  "ForStatement"\n]);\nfunction ro(t) {\n  return (e, n) => {\n    let r = e.node.getChild("VariableDefinition");\n    return r && n(r, t), !0;\n  };\n}\nconst jT = ["FunctionDeclaration"], RT = {\n  FunctionDeclaration: /* @__PURE__ */ ro("function"),\n  ClassDeclaration: /* @__PURE__ */ ro("class"),\n  ClassExpression: () => !0,\n  EnumDeclaration: /* @__PURE__ */ ro("constant"),\n  TypeAliasDeclaration: /* @__PURE__ */ ro("type"),\n  NamespaceDeclaration: /* @__PURE__ */ ro("namespace"),\n  VariableDefinition(t, e) {\n    t.matchContext(jT) || e(t, "variable");\n  },\n  TypeDefinition(t, e) {\n    e(t, "type");\n  },\n  __proto__: null\n};\nfunction QA(t, e) {\n  let n = U0.get(e);\n  if (n)\n    return n;\n  let r = [], i = !0;\n  function s(a, o) {\n    let l = t.sliceString(a.from, a.to);\n    r.push({ label: l, type: o });\n  }\n  return e.cursor(un.IncludeAnonymous).iterate((a) => {\n    if (i)\n      i = !1;\n    else if (a.name) {\n      let o = RT[a.name];\n      if (o && o(a, s) || MA.has(a.name))\n        return !1;\n    } else if (a.to - a.from > 8192) {\n      for (let o of QA(t, a.node))\n        r.push(o);\n      return !1;\n    }\n  }), U0.set(e, r), r;\n}\nconst q0 = /^[\\w$\\xa1-\\uffff][\\w$\\d\\xa1-\\uffff]*$/, TA = [\n  "TemplateString",\n  "String",\n  "RegExp",\n  "LineComment",\n  "BlockComment",\n  "VariableDefinition",\n  "TypeDefinition",\n  "Label",\n  "PropertyDefinition",\n  "PropertyName",\n  "PrivatePropertyDefinition",\n  "PrivatePropertyName",\n  ".",\n  "?."\n];\nfunction _T(t) {\n  let e = wn(t.state).resolveInner(t.pos, -1);\n  if (TA.indexOf(e.name) > -1)\n    return null;\n  let n = e.name == "VariableName" || e.to - e.from < 20 && q0.test(t.state.sliceDoc(e.from, e.to));\n  if (!n && !t.explicit)\n    return null;\n  let r = [];\n  for (let i = e; i; i = i.parent)\n    MA.has(i.name) && (r = r.concat(QA(t.state.doc, i)));\n  return {\n    options: r,\n    from: n ? e.from : t.pos,\n    validFor: q0\n  };\n}\nconst Es = /* @__PURE__ */ ju.define({\n  name: "javascript",\n  parser: /* @__PURE__ */ QT.configure({\n    props: [\n      /* @__PURE__ */ dS.add({\n        IfStatement: /* @__PURE__ */ Kh({ except: /^\\s*({|else\\b)/ }),\n        TryStatement: /* @__PURE__ */ Kh({ except: /^\\s*({|catch\\b|finally\\b)/ }),\n        LabeledStatement: $M,\n        SwitchBody: (t) => {\n          let e = t.textAfter, n = /^\\s*\\}/.test(e), r = /^\\s*(case|default)\\b/.test(e);\n          return t.baseIndent + (n ? 0 : r ? 1 : 2) * t.unit;\n        },\n        Block: /* @__PURE__ */ ZM({ closing: "}" }),\n        ArrowFunction: (t) => t.baseIndent + t.unit,\n        "TemplateString BlockComment": () => null,\n        "Statement Property": /* @__PURE__ */ Kh({ except: /^{/ }),\n        JSXElement(t) {\n          let e = /^\\s*<\\//.test(t.textAfter);\n          return t.lineIndent(t.node.from) + (e ? 0 : t.unit);\n        },\n        JSXEscape(t) {\n          let e = /\\s*\\}/.test(t.textAfter);\n          return t.lineIndent(t.node.from) + (e ? 0 : t.unit);\n        },\n        "JSXOpenTag JSXSelfClosingTag"(t) {\n          return t.column(t.node.from) + t.unit;\n        }\n      }),\n      /* @__PURE__ */ bS.add({\n        "Block ClassBody SwitchBody EnumBody ObjectExpression ArrayExpression ObjectType": IM,\n        BlockComment(t) {\n          return { from: t.from + 2, to: t.to - 2 };\n        }\n      })\n    ]\n  }),\n  languageData: {\n    closeBrackets: { brackets: ["(", "[", "{", "\'", \'"\', "`"] },\n    commentTokens: { line: "//", block: { open: "/*", close: "*/" } },\n    indentOnInput: /^\\s*(?:case |default:|\\{|\\}|<\\/)$/,\n    wordChars: "$"\n  }\n}), jA = {\n  test: (t) => /^JSX/.test(t.name),\n  facet: /* @__PURE__ */ cS({ commentTokens: { block: { open: "{/*", close: "*/}" } } })\n}, ZT = /* @__PURE__ */ Es.configure({ dialect: "ts" }, "typescript"), $T = /* @__PURE__ */ Es.configure({\n  dialect: "jsx",\n  props: [/* @__PURE__ */ Jd.add((t) => t.isTop ? [jA] : void 0)]\n}), LT = /* @__PURE__ */ Es.configure({\n  dialect: "jsx ts",\n  props: [/* @__PURE__ */ Jd.add((t) => t.isTop ? [jA] : void 0)]\n}, "typescript");\nlet RA = (t) => ({ label: t, type: "keyword" });\nconst _A = /* @__PURE__ */ "break case const continue default delete export extends false finally in instanceof let new return static super switch this throw true typeof var yield".split(" ").map(RA), IT = /* @__PURE__ */ _A.concat(/* @__PURE__ */ ["declare", "implements", "private", "protected", "public"].map(RA));\nfunction NT(t = {}) {\n  let e = t.jsx ? t.typescript ? LT : $T : t.typescript ? ZT : Es, n = t.typescript ? TT.concat(IT) : BA.concat(_A);\n  return new FM(e, [\n    Es.data.of({\n      autocomplete: bQ(TA, MS(n))\n    }),\n    Es.data.of({\n      autocomplete: _T\n    }),\n    t.jsx ? WT : []\n  ]);\n}\nfunction VT(t) {\n  for (; ; ) {\n    if (t.name == "JSXOpenTag" || t.name == "JSXSelfClosingTag" || t.name == "JSXFragmentTag")\n      return t;\n    if (t.name == "JSXEscape" || !t.parent)\n      return null;\n    t = t.parent;\n  }\n}\nfunction G0(t, e, n = t.length) {\n  for (let r = e?.firstChild; r; r = r.nextSibling)\n    if (r.name == "JSXIdentifier" || r.name == "JSXBuiltin" || r.name == "JSXNamespacedName" || r.name == "JSXMemberExpression")\n      return t.sliceString(r.from, Math.min(r.to, n));\n  return "";\n}\nconst XT = typeof navigator == "object" && /* @__PURE__ */ /Android\\b/.test(navigator.userAgent), WT = /* @__PURE__ */ be.inputHandler.of((t, e, n, r, i) => {\n  if ((XT ? t.composing : t.compositionStarted) || t.state.readOnly || e != n || r != ">" && r != "/" || !Es.isActiveAt(t.state, e, -1))\n    return !1;\n  let s = i(), { state: a } = s, o = a.changeByRange((l) => {\n    var c;\n    let { head: h } = l, f = wn(a).resolveInner(h - 1, -1), m;\n    if (f.name == "JSXStartTag" && (f = f.parent), !(a.doc.sliceString(h - 1, h) != r || f.name == "JSXAttributeValue" && f.to > h)) {\n      if (r == ">" && f.name == "JSXFragmentTag")\n        return { range: l, changes: { from: h, insert: "</>" } };\n      if (r == "/" && f.name == "JSXStartCloseTag") {\n        let y = f.parent, v = y.parent;\n        if (v && y.from == h - 2 && ((m = G0(a.doc, v.firstChild, h)) || ((c = v.firstChild) === null || c === void 0 ? void 0 : c.name) == "JSXFragmentTag")) {\n          let C = `${m}>`;\n          return { range: ne.cursor(h + C.length, -1), changes: { from: h, insert: C } };\n        }\n      } else if (r == ">") {\n        let y = VT(f);\n        if (y && y.name == "JSXOpenTag" && !/^\\/?>|^<\\//.test(a.doc.sliceString(h, h + 2)) && (m = G0(a.doc, y, h)))\n          return { range: l, changes: { from: h, insert: `</${m}>` } };\n      }\n    }\n    return { range: l };\n  });\n  return o.changes.empty ? !1 : (t.dispatch([\n    s,\n    a.update(o, { userEvent: "input.complete", scrollIntoView: !0 })\n  ]), !0);\n}), UT = /* @__PURE__ */ JSON.parse(`[{"comment":"/**\\\\n * Overrides the css of highlighted events. Make sure to use single quotes!\\\\n * @name markcss\\\\n * @example\\\\n * note(\\\\"c a f e\\\\")\\\\n * .markcss(\'text-decoration:underline\')\\\\n */","meta":{"filename":"codemirror.mjs","lineno":364,"columnno":0,"path":"/Users/felix/projects/strudel/packages/codemirror","code":{}},"description":"<p>Overrides the css of highlighted events. Make sure to use single quotes!</p>","name":"markcss","examples":["note(\\\\"c a f e\\\\")\\\\n.markcss(\'text-decoration:underline\')"],"longname":"markcss","kind":"member","scope":"global"},{"comment":"/**\\\\n * Displays a slider widget to allow the user manipulate a value\\\\n *\\\\n * @name slider\\\\n * @param {number} value Initial value\\\\n * @param {number} min Minimum value - optional, defaults to 0\\\\n * @param {number} max Maximum value - optional, defaults to 1\\\\n * @param {number} step Step size - optional\\\\n */","meta":{"filename":"slider.mjs","lineno":116,"columnno":0,"path":"/Users/felix/projects/strudel/packages/codemirror","code":{}},"description":"<p>Displays a slider widget to allow the user manipulate a value</p>","name":"slider","params":[{"type":{"names":["number"]},"description":"<p>Initial value</p>","name":"value"},{"type":{"names":["number"]},"description":"<p>Minimum value - optional, defaults to 0</p>","name":"min"},{"type":{"names":["number"]},"description":"<p>Maximum value - optional, defaults to 1</p>","name":"max"},{"type":{"names":["number"]},"description":"<p>Step size - optional</p>","name":"step"}],"longname":"slider","kind":"member","scope":"global"},{"comment":"/**\\\\n * @name Cutie Pi\\\\n * by Switch Angel\\\\n */","meta":{"filename":"CutiePi.mjs","lineno":1,"columnno":0,"path":"/Users/felix/projects/strudel/packages/codemirror/themes","code":{}},"name":"Cutie Pi\\\\nby Switch Angel","longname":"Cutie Pi\\\\nby Switch Angel","kind":"member","scope":"global"},{"comment":"/**\\\\n * @name androidstudio\\\\n */","meta":{"filename":"androidstudio.mjs","lineno":1,"columnno":0,"path":"/Users/felix/projects/strudel/packages/codemirror/themes","code":{}},"name":"androidstudio","longname":"androidstudio","kind":"member","scope":"global"},{"comment":"/**\\\\n * @name Atom One\\\\n * Atom One dark syntax theme\\\\n *\\\\n * https://github.com/atom/one-dark-syntax\\\\n */","meta":{"filename":"atomone.mjs","lineno":1,"columnno":0,"path":"/Users/felix/projects/strudel/packages/codemirror/themes","code":{}},"name":"Atom One\\\\nAtom One dark syntax theme\\\\n\\\\nhttps://github.com/atom/one-dark-syntax","longname":"Atom One\\\\nAtom One dark syntax theme\\\\n\\\\nhttps://github.com/atom/one-dark-syntax","kind":"member","scope":"global"},{"comment":"/**\\\\n * @name darcula\\\\n * @author darcula\\\\n * Name: IntelliJ IDEA darcula theme\\\\n * From IntelliJ IDEA by JetBrains\\\\n */","meta":{"filename":"darcula.mjs","lineno":1,"columnno":0,"path":"/Users/felix/projects/strudel/packages/codemirror/themes","code":{}},"name":"darcula","author":["darcula\\\\nName: IntelliJ IDEA darcula theme\\\\nFrom IntelliJ IDEA by JetBrains"],"longname":"darcula","kind":"member","scope":"global"},{"comment":"/**\\\\n * @name dracula\\\\n * @author dracula\\\\n * Michael Kaminsky (http://github.com/mkaminsky11)\\\\n * Original dracula color scheme by Zeno Rocha (https://github.com/zenorocha/dracula-theme)\\\\n */","meta":{"filename":"dracula.mjs","lineno":1,"columnno":0,"path":"/Users/felix/projects/strudel/packages/codemirror/themes","code":{}},"name":"dracula","author":["dracula\\\\nMichael Kaminsky (http://github.com/mkaminsky11)\\\\nOriginal dracula color scheme by Zeno Rocha (https://github.com/zenorocha/dracula-theme)"],"longname":"dracula","kind":"member","scope":"global"},{"comment":"/**\\\\n * @name duotone\\\\n * @author Bram de Haan\\\\n * by Bram de Haan, adapted from DuoTone themes by Simurai (http://simurai.com/projects/2016/01/01/duotone-themes)\\\\n */","meta":{"filename":"duotoneDark.mjs","lineno":1,"columnno":0,"path":"/Users/felix/projects/strudel/packages/codemirror/themes","code":{}},"name":"duotone","author":["Bram de Haan\\\\nby Bram de Haan, adapted from DuoTone themes by Simurai (http://simurai.com/projects/2016/01/01/duotone-themes)"],"longname":"duotone","kind":"member","scope":"global"},{"comment":"/**\\\\n * @name duotone\\\\n * @author Bram de Haan\\\\n * by Bram de Haan, adapted from DuoTone themes by Simurai (http://simurai.com/projects/2016/01/01/duotone-themes)\\\\n */","meta":{"filename":"duotoneLight.mjs","lineno":1,"columnno":0,"path":"/Users/felix/projects/strudel/packages/codemirror/themes","code":{}},"name":"duotone","author":["Bram de Haan\\\\nby Bram de Haan, adapted from DuoTone themes by Simurai (http://simurai.com/projects/2016/01/01/duotone-themes)"],"longname":"duotone","kind":"member","scope":"global"},{"comment":"/**\\\\n * @name github\\\\n */","meta":{"filename":"githubDark.mjs","lineno":1,"columnno":0,"path":"/Users/felix/projects/strudel/packages/codemirror/themes","code":{}},"name":"github","longname":"github","kind":"member","scope":"global"},{"comment":"/**\\\\n * @name github\\\\n */","meta":{"filename":"githubLight.mjs","lineno":1,"columnno":0,"path":"/Users/felix/projects/strudel/packages/codemirror/themes","code":{}},"name":"github","longname":"github","kind":"member","scope":"global"},{"comment":"/**\\\\n * @name Atom One\\\\n * Atom One dark syntax theme\\\\n *\\\\n * https://github.com/atom/one-dark-syntax\\\\n */","meta":{"filename":"green-text.mjs","lineno":1,"columnno":0,"path":"/Users/felix/projects/strudel/packages/codemirror/themes","code":{}},"name":"Atom One\\\\nAtom One dark syntax theme\\\\n\\\\nhttps://github.com/atom/one-dark-syntax","longname":"Atom One\\\\nAtom One dark syntax theme\\\\n\\\\nhttps://github.com/atom/one-dark-syntax","kind":"member","scope":"global"},{"comment":"/**\\\\n * @name gruvbox-dark\\\\n * @author morhetz\\\\n * Name: Gruvbox\\\\n * From github.com/codemirror/codemirror5/blob/master/theme/gruvbox-dark.css\\\\n */","meta":{"filename":"gruvboxDark.mjs","lineno":1,"columnno":0,"path":"/Users/felix/projects/strudel/packages/codemirror/themes","code":{}},"name":"gruvbox-dark","author":["morhetz\\\\nName: Gruvbox\\\\nFrom github.com/codemirror/codemirror5/blob/master/theme/gruvbox-dark.css"],"longname":"gruvbox-dark","kind":"member","scope":"global"},{"comment":"/**\\\\n * @name gruvbox-light\\\\n * @author morhetz\\\\n * Name: Gruvbox\\\\n * From github.com/codemirror/codemirror5/blob/master/theme/gruvbox-light.css\\\\n */","meta":{"filename":"gruvboxLight.mjs","lineno":1,"columnno":0,"path":"/Users/felix/projects/strudel/packages/codemirror/themes","code":{}},"name":"gruvbox-light","author":["morhetz\\\\nName: Gruvbox\\\\nFrom github.com/codemirror/codemirror5/blob/master/theme/gruvbox-light.css"],"longname":"gruvbox-light","kind":"member","scope":"global"},{"comment":"/**\\\\n * @name Atom One\\\\n * Atom One dark syntax theme\\\\n *\\\\n * https://github.com/atom/one-dark-syntax\\\\n */","meta":{"filename":"red-text.mjs","lineno":1,"columnno":0,"path":"/Users/felix/projects/strudel/packages/codemirror/themes","code":{}},"name":"Atom One\\\\nAtom One dark syntax theme\\\\n\\\\nhttps://github.com/atom/one-dark-syntax","longname":"Atom One\\\\nAtom One dark syntax theme\\\\n\\\\nhttps://github.com/atom/one-dark-syntax","kind":"member","scope":"global"},{"comment":"/**\\\\n * @name Atom One\\\\n * Atom One dark syntax theme\\\\n *\\\\n * https://github.com/atom/one-dark-syntax\\\\n */","meta":{"filename":"sonic-pink.mjs","lineno":1,"columnno":0,"path":"/Users/felix/projects/strudel/packages/codemirror/themes","code":{}},"name":"Atom One\\\\nAtom One dark syntax theme\\\\n\\\\nhttps://github.com/atom/one-dark-syntax","longname":"Atom One\\\\nAtom One dark syntax theme\\\\n\\\\nhttps://github.com/atom/one-dark-syntax","kind":"member","scope":"global"},{"comment":"/**\\\\n * Select a sound / sample by name. When using mininotation, you can also optionally supply \'n\' and \'gain\' parameters\\\\n * separated by \':\'.\\\\n *\\\\n * @name s\\\\n * @param {string | Pattern} sound The sound / pattern of sounds to pick\\\\n * @synonyms sound\\\\n * @example\\\\n * s(\\\\"bd hh\\\\")\\\\n * @example\\\\n * s(\\\\"bd:0 bd:1 bd:0:0.3 bd:1:1.4\\\\")\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":75,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Select a sound / sample by name. When using mininotation, you can also optionally supply \'n\' and \'gain\' parameters\\\\nseparated by \':\'.</p>","name":"s","params":[{"type":{"names":["string","Pattern"]},"description":"<p>The sound / pattern of sounds to pick</p>","name":"sound"}],"synonyms_text":"sound","synonyms":["sound"],"examples":["s(\\\\"bd hh\\\\")","s(\\\\"bd:0 bd:1 bd:0:0.3 bd:1:1.4\\\\")"],"longname":"s","kind":"member","scope":"global"},{"comment":"/**\\\\n * Define a custom webaudio node to use as a sound source.\\\\n *\\\\n * @name source\\\\n * @param {function} getSource\\\\n * @synonyms src\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":90,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Define a custom webaudio node to use as a sound source.</p>","name":"source","params":[{"type":{"names":["function"]},"name":"getSource"}],"synonyms_text":"src","synonyms":["src"],"longname":"source","kind":"member","scope":"global"},{"comment":"/**\\\\n * Selects the given index from the sample map.\\\\n * Numbers too high will wrap around.\\\\n * \\`n\\` can also be used to play midi numbers, but it is recommended to use \\`note\\` instead.\\\\n *\\\\n * @name n\\\\n * @param {number | Pattern} value sample index starting from 0\\\\n * @example\\\\n * s(\\\\"bd sd [~ bd] sd,hh*6\\\\").n(\\\\"<0 1>\\\\")\\\\n */","meta":{"filename":"controls.mjs","lineno":99,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Selects the given index from the sample map.\\\\nNumbers too high will wrap around.\\\\n<code>n</code> can also be used to play midi numbers, but it is recommended to use <code>note</code> instead.</p>","name":"n","params":[{"type":{"names":["number","Pattern"]},"description":"<p>sample index starting from 0</p>","name":"value"}],"examples":["s(\\\\"bd sd [~ bd] sd,hh*6\\\\").n(\\\\"<0 1>\\\\")"],"longname":"n","kind":"member","scope":"global"},{"comment":"/**\\\\n * Plays the given note name or midi number. A note name consists of\\\\n *\\\\n * - a letter (a-g or A-G)\\\\n * - optional accidentals (b or #)\\\\n * - optional octave number (0-9). Defaults to 3\\\\n *\\\\n * Examples of valid note names: \\`c\\`, \\`bb\\`, \\`Bb\\`, \\`f#\\`, \\`c3\\`, \\`A4\\`, \\`Eb2\\`, \\`c#5\\`\\\\n *\\\\n * You can also use midi numbers instead of note names, where 69 is mapped to A4 440Hz in 12EDO.\\\\n *\\\\n * @name note\\\\n * @example\\\\n * note(\\\\"c a f e\\\\")\\\\n * @example\\\\n * note(\\\\"c4 a4 f4 e4\\\\")\\\\n * @example\\\\n * note(\\\\"60 69 65 64\\\\")\\\\n */","meta":{"filename":"controls.mjs","lineno":111,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Plays the given note name or midi number. A note name consists of</p>\\\\n<ul>\\\\n<li>a letter (a-g or A-G)</li>\\\\n<li>optional accidentals (b or #)</li>\\\\n<li>optional octave number (0-9). Defaults to 3</li>\\\\n</ul>\\\\n<p>Examples of valid note names: <code>c</code>, <code>bb</code>, <code>Bb</code>, <code>f#</code>, <code>c3</code>, <code>A4</code>, <code>Eb2</code>, <code>c#5</code></p>\\\\n<p>You can also use midi numbers instead of note names, where 69 is mapped to A4 440Hz in 12EDO.</p>","name":"note","examples":["note(\\\\"c a f e\\\\")","note(\\\\"c4 a4 f4 e4\\\\")","note(\\\\"60 69 65 64\\\\")"],"longname":"note","kind":"member","scope":"global"},{"comment":"/**\\\\n * A pattern of numbers that speed up (or slow down) samples while they play. Currently only supported by osc / superdirt.\\\\n *\\\\n * @name accelerate\\\\n * @param {number | Pattern} amount acceleration.\\\\n * @superdirtOnly\\\\n * @example\\\\n * s(\\\\"sax\\\\").accelerate(\\\\"<0 1 2 4 8 16>\\\\").slow(2).osc()\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":132,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>A pattern of numbers that speed up (or slow down) samples while they play. Currently only supported by osc / superdirt.</p>","name":"accelerate","params":[{"type":{"names":["number","Pattern"]},"description":"<p>acceleration.</p>","name":"amount"}],"tags":[{"originalTitle":"superdirtOnly","title":"superdirtonly","text":""}],"examples":["s(\\\\"sax\\\\").accelerate(\\\\"<0 1 2 4 8 16>\\\\").slow(2).osc()"],"longname":"accelerate","kind":"member","scope":"global"},{"comment":"/**\\\\n *\\\\n * Sets the velocity from 0 to 1. Is multiplied together with gain.\\\\n * @name velocity\\\\n * @example\\\\n * s(\\\\"hh*8\\\\")\\\\n * .gain(\\\\".4!2 1 .4!2 1 .4 1\\\\")\\\\n * .velocity(\\\\".4 1\\\\")\\\\n */","meta":{"filename":"controls.mjs","lineno":143,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the velocity from 0 to 1. Is multiplied together with gain.</p>","name":"velocity","examples":["s(\\\\"hh*8\\\\")\\\\n.gain(\\\\".4!2 1 .4!2 1 .4 1\\\\")\\\\n.velocity(\\\\".4 1\\\\")"],"longname":"velocity","kind":"member","scope":"global"},{"comment":"/**\\\\n * Controls the gain by an exponential amount.\\\\n *\\\\n * @name gain\\\\n * @param {number | Pattern} amount gain.\\\\n * @example\\\\n * s(\\\\"hh*8\\\\").gain(\\\\".4!2 1 .4!2 1 .4 1\\\\").fast(2)\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":153,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Controls the gain by an exponential amount.</p>","name":"gain","params":[{"type":{"names":["number","Pattern"]},"description":"<p>gain.</p>","name":"amount"}],"examples":["s(\\\\"hh*8\\\\").gain(\\\\".4!2 1 .4!2 1 .4 1\\\\").fast(2)"],"longname":"gain","kind":"member","scope":"global"},{"comment":"/**\\\\n * Gain applied after all effects have been processed.\\\\n *\\\\n * @name postgain\\\\n * @example\\\\n * s(\\\\"bd sd [~ bd] sd,hh*8\\\\")\\\\n * .compressor(\\\\"-20:20:10:.002:.02\\\\").postgain(1.5)\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":163,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Gain applied after all effects have been processed.</p>","name":"postgain","examples":["s(\\\\"bd sd [~ bd] sd,hh*8\\\\")\\\\n.compressor(\\\\"-20:20:10:.002:.02\\\\").postgain(1.5)"],"longname":"postgain","kind":"member","scope":"global"},{"comment":"/**\\\\n * Like \\`gain\\`, but linear.\\\\n *\\\\n * @name amp\\\\n * @param {number | Pattern} amount gain.\\\\n * @superdirtOnly\\\\n * @example\\\\n * s(\\\\"bd*8\\\\").amp(\\\\".1*2 .5 .1*2 .5 .1 .5\\\\").osc()\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":173,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Like <code>gain</code>, but linear.</p>","name":"amp","params":[{"type":{"names":["number","Pattern"]},"description":"<p>gain.</p>","name":"amount"}],"tags":[{"originalTitle":"superdirtOnly","title":"superdirtonly","text":""}],"examples":["s(\\\\"bd*8\\\\").amp(\\\\".1*2 .5 .1*2 .5 .1 .5\\\\").osc()"],"longname":"amp","kind":"member","scope":"global"},{"comment":"/**\\\\n * Amplitude envelope attack time: Specifies how long it takes for the sound to reach its peak value, relative to the onset.\\\\n *\\\\n * @name attack\\\\n * @param {number | Pattern} attack time in seconds.\\\\n * @synonyms att\\\\n * @example\\\\n * note(\\\\"c3 e3 f3 g3\\\\").attack(\\\\"<0 .1 .5>\\\\")\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":184,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Amplitude envelope attack time: Specifies how long it takes for the sound to reach its peak value, relative to the onset.</p>","name":"attack","params":[{"type":{"names":["number","Pattern"]},"description":"<p>time in seconds.</p>","name":"attack"}],"synonyms_text":"att","synonyms":["att"],"examples":["note(\\\\"c3 e3 f3 g3\\\\").attack(\\\\"<0 .1 .5>\\\\")"],"longname":"attack","kind":"member","scope":"global"},{"comment":"/**\\\\n * Sets the Frequency Modulation Harmonicity Ratio.\\\\n * Controls the timbre of the sound.\\\\n * Whole numbers and simple ratios sound more natural,\\\\n * while decimal numbers and complex ratios sound metallic.\\\\n *\\\\n * @name fmh\\\\n * @param {number | Pattern} harmonicity\\\\n * @example\\\\n * note(\\\\"c e g b g e\\\\")\\\\n * .fm(4)\\\\n * .fmh(\\\\"<1 2 1.5 1.61>\\\\")\\\\n * ._scope()\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":196,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the Frequency Modulation Harmonicity Ratio.\\\\nControls the timbre of the sound.\\\\nWhole numbers and simple ratios sound more natural,\\\\nwhile decimal numbers and complex ratios sound metallic.</p>","name":"fmh","params":[{"type":{"names":["number","Pattern"]},"name":"harmonicity"}],"examples":["note(\\\\"c e g b g e\\\\")\\\\n.fm(4)\\\\n.fmh(\\\\"<1 2 1.5 1.61>\\\\")\\\\n._scope()"],"longname":"fmh","kind":"member","scope":"global"},{"comment":"/**\\\\n * Sets the Frequency Modulation of the synth.\\\\n * Controls the modulation index, which defines the brightness of the sound.\\\\n *\\\\n * @name fm\\\\n * @param {number | Pattern} brightness modulation index\\\\n * @synonyms fmi\\\\n * @example\\\\n * note(\\\\"c e g b g e\\\\")\\\\n * .fm(\\\\"<0 1 2 8 32>\\\\")\\\\n * ._scope()\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":212,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the Frequency Modulation of the synth.\\\\nControls the modulation index, which defines the brightness of the sound.</p>","name":"fm","params":[{"type":{"names":["number","Pattern"]},"description":"<p>modulation index</p>","name":"brightness"}],"synonyms_text":"fmi","synonyms":["fmi"],"examples":["note(\\\\"c e g b g e\\\\")\\\\n.fm(\\\\"<0 1 2 8 32>\\\\")\\\\n._scope()"],"longname":"fm","kind":"member","scope":"global"},{"comment":"/**\\\\n * Ramp type of fm envelope. Exp might be a bit broken..\\\\n *\\\\n * @name fmenv\\\\n * @param {number | Pattern} type lin | exp\\\\n * @example\\\\n * note(\\\\"c e g b g e\\\\")\\\\n * .fm(4)\\\\n * .fmdecay(.2)\\\\n * .fmsustain(0)\\\\n * .fmenv(\\\\"<exp lin>\\\\")\\\\n * ._scope()\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":227,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Ramp type of fm envelope. Exp might be a bit broken..</p>","name":"fmenv","params":[{"type":{"names":["number","Pattern"]},"description":"<p>lin | exp</p>","name":"type"}],"examples":["note(\\\\"c e g b g e\\\\")\\\\n.fm(4)\\\\n.fmdecay(.2)\\\\n.fmsustain(0)\\\\n.fmenv(\\\\"<exp lin>\\\\")\\\\n._scope()"],"longname":"fmenv","kind":"member","scope":"global"},{"comment":"/**\\\\n * Attack time for the FM envelope: time it takes to reach maximum modulation\\\\n *\\\\n * @name fmattack\\\\n * @param {number | Pattern} time attack time\\\\n * @example\\\\n * note(\\\\"c e g b g e\\\\")\\\\n * .fm(4)\\\\n * .fmattack(\\\\"<0 .05 .1 .2>\\\\")\\\\n * ._scope()\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":242,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Attack time for the FM envelope: time it takes to reach maximum modulation</p>","name":"fmattack","params":[{"type":{"names":["number","Pattern"]},"description":"<p>attack time</p>","name":"time"}],"examples":["note(\\\\"c e g b g e\\\\")\\\\n.fm(4)\\\\n.fmattack(\\\\"<0 .05 .1 .2>\\\\")\\\\n._scope()"],"longname":"fmattack","kind":"member","scope":"global"},{"comment":"/**\\\\n * Decay time for the FM envelope: seconds until the sustain level is reached after the attack phase.\\\\n *\\\\n * @name fmdecay\\\\n * @param {number | Pattern} time decay time\\\\n * @example\\\\n * note(\\\\"c e g b g e\\\\")\\\\n * .fm(4)\\\\n * .fmdecay(\\\\"<.01 .05 .1 .2>\\\\")\\\\n * .fmsustain(.4)\\\\n * ._scope()\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":255,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Decay time for the FM envelope: seconds until the sustain level is reached after the attack phase.</p>","name":"fmdecay","params":[{"type":{"names":["number","Pattern"]},"description":"<p>decay time</p>","name":"time"}],"examples":["note(\\\\"c e g b g e\\\\")\\\\n.fm(4)\\\\n.fmdecay(\\\\"<.01 .05 .1 .2>\\\\")\\\\n.fmsustain(.4)\\\\n._scope()"],"longname":"fmdecay","kind":"member","scope":"global"},{"comment":"/**\\\\n * Sustain level for the FM envelope: how much modulation is applied after the decay phase\\\\n *\\\\n * @name fmsustain\\\\n * @param {number | Pattern} level sustain level\\\\n * @example\\\\n * note(\\\\"c e g b g e\\\\")\\\\n * .fm(4)\\\\n * .fmdecay(.1)\\\\n * .fmsustain(\\\\"<1 .75 .5 0>\\\\")\\\\n * ._scope()\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":269,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sustain level for the FM envelope: how much modulation is applied after the decay phase</p>","name":"fmsustain","params":[{"type":{"names":["number","Pattern"]},"description":"<p>sustain level</p>","name":"level"}],"examples":["note(\\\\"c e g b g e\\\\")\\\\n.fm(4)\\\\n.fmdecay(.1)\\\\n.fmsustain(\\\\"<1 .75 .5 0>\\\\")\\\\n._scope()"],"longname":"fmsustain","kind":"member","scope":"global"},{"comment":"/**\\\\n * Select the sound bank to use. To be used together with \\`s\\`. The bank name (+ \\\\"_\\\\") will be prepended to the value of \\`s\\`.\\\\n *\\\\n * @name bank\\\\n * @param {string | Pattern} bank the name of the bank\\\\n * @example\\\\n * s(\\\\"bd sd [~ bd] sd\\\\").bank(\'RolandTR909\') // = s(\\\\"RolandTR909_bd RolandTR909_sd\\\\")\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":287,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Select the sound bank to use. To be used together with <code>s</code>. The bank name (+ &quot;_&quot;) will be prepended to the value of <code>s</code>.</p>","name":"bank","params":[{"type":{"names":["string","Pattern"]},"description":"<p>the name of the bank</p>","name":"bank"}],"examples":["s(\\\\"bd sd [~ bd] sd\\\\").bank(\'RolandTR909\') // = s(\\\\"RolandTR909_bd RolandTR909_sd\\\\")"],"longname":"bank","kind":"member","scope":"global"},{"comment":"/**\\\\n * Amplitude envelope decay time: the time it takes after the attack time to reach the sustain level.\\\\n * Note that the decay is only audible if the sustain value is lower than 1.\\\\n *\\\\n * @name decay\\\\n * @param {number | Pattern} time decay time in seconds\\\\n * @example\\\\n * note(\\\\"c3 e3 f3 g3\\\\").decay(\\\\"<.1 .2 .3 .4>\\\\").sustain(0)\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":303,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Amplitude envelope decay time: the time it takes after the attack time to reach the sustain level.\\\\nNote that the decay is only audible if the sustain value is lower than 1.</p>","name":"decay","params":[{"type":{"names":["number","Pattern"]},"description":"<p>decay time in seconds</p>","name":"time"}],"examples":["note(\\\\"c3 e3 f3 g3\\\\").decay(\\\\"<.1 .2 .3 .4>\\\\").sustain(0)"],"longname":"decay","kind":"member","scope":"global"},{"comment":"/**\\\\n * Amplitude envelope sustain level: The level which is reached after attack / decay, being sustained until the offset.\\\\n *\\\\n * @name sustain\\\\n * @param {number | Pattern} gain sustain level between 0 and 1\\\\n * @synonyms sus\\\\n * @example\\\\n * note(\\\\"c3 e3 f3 g3\\\\").decay(.2).sustain(\\\\"<0 .1 .4 .6 1>\\\\")\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":314,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Amplitude envelope sustain level: The level which is reached after attack / decay, being sustained until the offset.</p>","name":"sustain","params":[{"type":{"names":["number","Pattern"]},"description":"<p>sustain level between 0 and 1</p>","name":"gain"}],"synonyms_text":"sus","synonyms":["sus"],"examples":["note(\\\\"c3 e3 f3 g3\\\\").decay(.2).sustain(\\\\"<0 .1 .4 .6 1>\\\\")"],"longname":"sustain","kind":"member","scope":"global"},{"comment":"/**\\\\n * Amplitude envelope release time: The time it takes after the offset to go from sustain level to zero.\\\\n *\\\\n * @name release\\\\n * @param {number | Pattern} time release time in seconds\\\\n * @synonyms rel\\\\n * @example\\\\n * note(\\\\"c3 e3 g3 c4\\\\").release(\\\\"<0 .1 .4 .6 1>/2\\\\")\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":325,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Amplitude envelope release time: The time it takes after the offset to go from sustain level to zero.</p>","name":"release","params":[{"type":{"names":["number","Pattern"]},"description":"<p>release time in seconds</p>","name":"time"}],"synonyms_text":"rel","synonyms":["rel"],"examples":["note(\\\\"c3 e3 g3 c4\\\\").release(\\\\"<0 .1 .4 .6 1>/2\\\\")"],"longname":"release","kind":"member","scope":"global"},{"comment":"/**\\\\n * Sets the center frequency of the **b**and-**p**ass **f**ilter. When using mininotation, you\\\\n * can also optionally supply the \'bpq\' parameter separated by \':\'.\\\\n *\\\\n * @name bpf\\\\n * @param {number | Pattern} frequency center frequency\\\\n * @synonyms bandf, bp\\\\n * @example\\\\n * s(\\\\"bd sd [~ bd] sd,hh*6\\\\").bpf(\\\\"<1000 2000 4000 8000>\\\\")\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":338,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the center frequency of the <strong>b</strong>and-<strong>p</strong>ass <strong>f</strong>ilter. When using mininotation, you\\\\ncan also optionally supply the \'bpq\' parameter separated by \':\'.</p>","name":"bpf","params":[{"type":{"names":["number","Pattern"]},"description":"<p>center frequency</p>","name":"frequency"}],"synonyms_text":"bandf, bp","synonyms":["bandf","bp"],"examples":["s(\\\\"bd sd [~ bd] sd,hh*6\\\\").bpf(\\\\"<1000 2000 4000 8000>\\\\")"],"longname":"bpf","kind":"member","scope":"global"},{"comment":"/**\\\\n * Sets the **b**and-**p**ass **q**-factor (resonance).\\\\n *\\\\n * @name bpq\\\\n * @param {number | Pattern} q q factor\\\\n * @synonyms bandq\\\\n * @example\\\\n * s(\\\\"bd sd [~ bd] sd\\\\").bpf(500).bpq(\\\\"<0 1 2 3>\\\\")\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":351,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the <strong>b</strong>and-<strong>p</strong>ass <strong>q</strong>-factor (resonance).</p>","name":"bpq","params":[{"type":{"names":["number","Pattern"]},"description":"<p>q factor</p>","name":"q"}],"synonyms_text":"bandq","synonyms":["bandq"],"examples":["s(\\\\"bd sd [~ bd] sd\\\\").bpf(500).bpq(\\\\"<0 1 2 3>\\\\")"],"longname":"bpq","kind":"member","scope":"global"},{"comment":"/**\\\\n * a pattern of numbers from 0 to 1. Skips the beginning of each sample, e.g. \\`0.25\\` to cut off the first quarter from each sample.\\\\n *\\\\n * @memberof Pattern\\\\n * @name begin\\\\n * @param {number | Pattern} amount between 0 and 1, where 1 is the length of the sample\\\\n * @example\\\\n * samples({ rave: \'rave/AREUREADY.wav\' }, \'github:tidalcycles/dirt-samples\')\\\\n * s(\\\\"rave\\\\").begin(\\\\"<0 .25 .5 .75>\\\\").fast(2)\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":364,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>a pattern of numbers from 0 to 1. Skips the beginning of each sample, e.g. <code>0.25</code> to cut off the first quarter from each sample.</p>","memberof":"Pattern","name":"begin","params":[{"type":{"names":["number","Pattern"]},"description":"<p>between 0 and 1, where 1 is the length of the sample</p>","name":"amount"}],"examples":["samples({ rave: \'rave/AREUREADY.wav\' }, \'github:tidalcycles/dirt-samples\')\\\\ns(\\\\"rave\\\\").begin(\\\\"<0 .25 .5 .75>\\\\").fast(2)"],"scope":"static","longname":"Pattern.begin","kind":"member"},{"comment":"/**\\\\n * The same as .begin, but cuts off the end off each sample.\\\\n *\\\\n * @memberof Pattern\\\\n * @name end\\\\n * @param {number | Pattern} length 1 = whole sample, .5 = half sample, .25 = quarter sample etc..\\\\n * @example\\\\n * s(\\\\"bd*2,oh*4\\\\").end(\\\\"<.1 .2 .5 1>\\\\").fast(2)\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":376,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>The same as .begin, but cuts off the end off each sample.</p>","memberof":"Pattern","name":"end","params":[{"type":{"names":["number","Pattern"]},"description":"<p>1 = whole sample, .5 = half sample, .25 = quarter sample etc..</p>","name":"length"}],"examples":["s(\\\\"bd*2,oh*4\\\\").end(\\\\"<.1 .2 .5 1>\\\\").fast(2)"],"scope":"static","longname":"Pattern.end","kind":"member"},{"comment":"/**\\\\n * Loops the sample.\\\\n * Note that the tempo of the loop is not synced with the cycle tempo.\\\\n * To change the loop region, use loopBegin / loopEnd.\\\\n *\\\\n * @name loop\\\\n * @param {number | Pattern} on If 1, the sample is looped\\\\n * @example\\\\n * s(\\\\"casio\\\\").loop(1)\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":387,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Loops the sample.\\\\nNote that the tempo of the loop is not synced with the cycle tempo.\\\\nTo change the loop region, use loopBegin / loopEnd.</p>","name":"loop","params":[{"type":{"names":["number","Pattern"]},"description":"<p>If 1, the sample is looped</p>","name":"on"}],"examples":["s(\\\\"casio\\\\").loop(1)"],"longname":"loop","kind":"member","scope":"global"},{"comment":"/**\\\\n * Begin to loop at a specific point in the sample (inbetween \\`begin\\` and \\`end\\`).\\\\n * Note that the loop point must be inbetween \\`begin\\` and \\`end\\`, and before \\`loopEnd\\`!\\\\n * Note: Samples starting with wt_ will automatically loop! (wt = wavetable)\\\\n *\\\\n * @name loopBegin\\\\n * @param {number | Pattern} time between 0 and 1, where 1 is the length of the sample\\\\n * @synonyms loopb\\\\n * @example\\\\n * s(\\\\"space\\\\").loop(1)\\\\n * .loopBegin(\\\\"<0 .125 .25>\\\\")._scope()\\\\n */","meta":{"filename":"controls.mjs","lineno":399,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Begin to loop at a specific point in the sample (inbetween <code>begin</code> and <code>end</code>).\\\\nNote that the loop point must be inbetween <code>begin</code> and <code>end</code>, and before <code>loopEnd</code>!\\\\nNote: Samples starting with wt_ will automatically loop! (wt = wavetable)</p>","name":"loopBegin","params":[{"type":{"names":["number","Pattern"]},"description":"<p>between 0 and 1, where 1 is the length of the sample</p>","name":"time"}],"synonyms_text":"loopb","synonyms":["loopb"],"examples":["s(\\\\"space\\\\").loop(1)\\\\n.loopBegin(\\\\"<0 .125 .25>\\\\")._scope()"],"longname":"loopBegin","kind":"member","scope":"global"},{"comment":"/**\\\\n *\\\\n * End the looping section at a specific point in the sample (inbetween \\`begin\\` and \\`end\\`).\\\\n * Note that the loop point must be inbetween \\`begin\\` and \\`end\\`, and after \\`loopBegin\\`!\\\\n *\\\\n * @name loopEnd\\\\n * @param {number | Pattern} time between 0 and 1, where 1 is the length of the sample\\\\n * @synonyms loope\\\\n * @example\\\\n * s(\\\\"space\\\\").loop(1)\\\\n * .loopEnd(\\\\"<1 .75 .5 .25>\\\\")._scope()\\\\n */","meta":{"filename":"controls.mjs","lineno":412,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>End the looping section at a specific point in the sample (inbetween <code>begin</code> and <code>end</code>).\\\\nNote that the loop point must be inbetween <code>begin</code> and <code>end</code>, and after <code>loopBegin</code>!</p>","name":"loopEnd","params":[{"type":{"names":["number","Pattern"]},"description":"<p>between 0 and 1, where 1 is the length of the sample</p>","name":"time"}],"synonyms_text":"loope","synonyms":["loope"],"examples":["s(\\\\"space\\\\").loop(1)\\\\n.loopEnd(\\\\"<1 .75 .5 .25>\\\\")._scope()"],"longname":"loopEnd","kind":"member","scope":"global"},{"comment":"/**\\\\n * bit crusher effect.\\\\n *\\\\n * @name crush\\\\n * @param {number | Pattern} depth between 1 (for drastic reduction in bit-depth) to 16 (for barely no reduction).\\\\n * @example\\\\n * s(\\\\"<bd sd>,hh*3\\\\").fast(2).crush(\\\\"<16 8 7 6 5 4 3 2>\\\\")\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":425,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>bit crusher effect.</p>","name":"crush","params":[{"type":{"names":["number","Pattern"]},"description":"<p>between 1 (for drastic reduction in bit-depth) to 16 (for barely no reduction).</p>","name":"depth"}],"examples":["s(\\\\"<bd sd>,hh*3\\\\").fast(2).crush(\\\\"<16 8 7 6 5 4 3 2>\\\\")"],"longname":"crush","kind":"member","scope":"global"},{"comment":"/**\\\\n * fake-resampling for lowering the sample rate. Caution: This effect seems to only work in chromium based browsers\\\\n *\\\\n * @name coarse\\\\n * @param {number | Pattern} factor 1 for original 2 for half, 3 for a third and so on.\\\\n * @example\\\\n * s(\\\\"bd sd [~ bd] sd,hh*8\\\\").coarse(\\\\"<1 4 8 16 32>\\\\")\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":436,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>fake-resampling for lowering the sample rate. Caution: This effect seems to only work in chromium based browsers</p>","name":"coarse","params":[{"type":{"names":["number","Pattern"]},"description":"<p>1 for original 2 for half, 3 for a third and so on.</p>","name":"factor"}],"examples":["s(\\\\"bd sd [~ bd] sd,hh*8\\\\").coarse(\\\\"<1 4 8 16 32>\\\\")"],"longname":"coarse","kind":"member","scope":"global"},{"comment":"/**\\\\n * filter overdrive for supported filter types\\\\n *\\\\n * @name drive\\\\n * @param {number | Pattern} amount\\\\n * @example\\\\n * note(\\\\"{f g g c d a a#}%16\\\\".sub(17)).s(\\\\"supersaw\\\\").lpenv(8).lpf(150).lpq(.8).ftype(\'ladder\').drive(\\\\"<.5 4>\\\\")\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":447,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>filter overdrive for supported filter types</p>","name":"drive","params":[{"type":{"names":["number","Pattern"]},"name":"amount"}],"examples":["note(\\\\"{f g g c d a a#}%16\\\\".sub(17)).s(\\\\"supersaw\\\\").lpenv(8).lpf(150).lpq(.8).ftype(\'ladder\').drive(\\\\"<.5 4>\\\\")"],"longname":"drive","kind":"member","scope":"global"},{"comment":"/**\\\\n * Allows you to set the output channels on the interface\\\\n *\\\\n * @name channels\\\\n * @synonyms ch\\\\n *\\\\n * @param {number | Pattern} channels pattern the output channels\\\\n * @example\\\\n * note(\\\\"e a d b g\\\\").channels(\\\\"3:4\\\\")\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":458,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Allows you to set the output channels on the interface</p>","name":"channels","synonyms_text":"ch","synonyms":["ch"],"params":[{"type":{"names":["number","Pattern"]},"description":"<p>pattern the output channels</p>","name":"channels"}],"examples":["note(\\\\"e a d b g\\\\").channels(\\\\"3:4\\\\")"],"longname":"channels","kind":"member","scope":"global"},{"comment":"/**\\\\n * Phaser audio effect that approximates popular guitar pedals.\\\\n *\\\\n * @name phaser\\\\n * @synonyms ph\\\\n * @param {number | Pattern} speed speed of modulation\\\\n * @example\\\\n * n(run(8)).scale(\\\\"D:pentatonic\\\\").s(\\\\"sawtooth\\\\").release(0.5)\\\\n * .phaser(\\\\"<1 2 4 8>\\\\")\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":471,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Phaser audio effect that approximates popular guitar pedals.</p>","name":"phaser","synonyms_text":"ph","synonyms":["ph"],"params":[{"type":{"names":["number","Pattern"]},"description":"<p>speed of modulation</p>","name":"speed"}],"examples":["n(run(8)).scale(\\\\"D:pentatonic\\\\").s(\\\\"sawtooth\\\\").release(0.5)\\\\n.phaser(\\\\"<1 2 4 8>\\\\")"],"longname":"phaser","kind":"member","scope":"global"},{"comment":"/**\\\\n * The frequency sweep range of the lfo for the phaser effect. Defaults to 2000\\\\n *\\\\n * @name phasersweep\\\\n * @synonyms phs\\\\n * @param {number | Pattern} phasersweep most useful values are between 0 and 4000\\\\n * @example\\\\n * n(run(8)).scale(\\\\"D:pentatonic\\\\").s(\\\\"sawtooth\\\\").release(0.5)\\\\n * .phaser(2).phasersweep(\\\\"<800 2000 4000>\\\\")\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":488,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>The frequency sweep range of the lfo for the phaser effect. Defaults to 2000</p>","name":"phasersweep","synonyms_text":"phs","synonyms":["phs"],"params":[{"type":{"names":["number","Pattern"]},"description":"<p>most useful values are between 0 and 4000</p>","name":"phasersweep"}],"examples":["n(run(8)).scale(\\\\"D:pentatonic\\\\").s(\\\\"sawtooth\\\\").release(0.5)\\\\n.phaser(2).phasersweep(\\\\"<800 2000 4000>\\\\")"],"longname":"phasersweep","kind":"member","scope":"global"},{"comment":"/**\\\\n *  The center frequency of the phaser in HZ. Defaults to 1000\\\\n *\\\\n * @name phasercenter\\\\n * @synonyms phc\\\\n * @param {number | Pattern} centerfrequency in HZ\\\\n * @example\\\\n * n(run(8)).scale(\\\\"D:pentatonic\\\\").s(\\\\"sawtooth\\\\").release(0.5)\\\\n * .phaser(2).phasercenter(\\\\"<800 2000 4000>\\\\")\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":501,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>The center frequency of the phaser in HZ. Defaults to 1000</p>","name":"phasercenter","synonyms_text":"phc","synonyms":["phc"],"params":[{"type":{"names":["number","Pattern"]},"description":"<p>in HZ</p>","name":"centerfrequency"}],"examples":["n(run(8)).scale(\\\\"D:pentatonic\\\\").s(\\\\"sawtooth\\\\").release(0.5)\\\\n.phaser(2).phasercenter(\\\\"<800 2000 4000>\\\\")"],"longname":"phasercenter","kind":"member","scope":"global"},{"comment":"/**\\\\n * The amount the signal is affected by the phaser effect. Defaults to 0.75\\\\n *\\\\n * @name phaserdepth\\\\n * @synonyms phd\\\\n * @param {number | Pattern} depth number between 0 and 1\\\\n * @example\\\\n * n(run(8)).scale(\\\\"D:pentatonic\\\\").s(\\\\"sawtooth\\\\").release(0.5)\\\\n * .phaser(2).phaserdepth(\\\\"<0 .5 .75 1>\\\\")\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":515,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>The amount the signal is affected by the phaser effect. Defaults to 0.75</p>","name":"phaserdepth","synonyms_text":"phd","synonyms":["phd"],"params":[{"type":{"names":["number","Pattern"]},"description":"<p>number between 0 and 1</p>","name":"depth"}],"examples":["n(run(8)).scale(\\\\"D:pentatonic\\\\").s(\\\\"sawtooth\\\\").release(0.5)\\\\n.phaser(2).phaserdepth(\\\\"<0 .5 .75 1>\\\\")"],"longname":"phaserdepth","kind":"member","scope":"global"},{"comment":"/**\\\\n * choose the channel the pattern is sent to in superdirt\\\\n *\\\\n * @name channel\\\\n * @param {number | Pattern} channel channel number\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":529,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>choose the channel the pattern is sent to in superdirt</p>","name":"channel","params":[{"type":{"names":["number","Pattern"]},"description":"<p>channel number</p>","name":"channel"}],"longname":"channel","kind":"member","scope":"global"},{"comment":"/**\\\\n * In the style of classic drum-machines, \\`cut\\` will stop a playing sample as soon as another samples with in same cutgroup is to be played. An example would be an open hi-hat followed by a closed one, essentially muting the open.\\\\n *\\\\n * @name cut\\\\n * @param {number | Pattern} group cut group number\\\\n * @example\\\\n * s(\\\\"[oh hh]*4\\\\").cut(1)\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":537,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>In the style of classic drum-machines, <code>cut</code> will stop a playing sample as soon as another samples with in same cutgroup is to be played. An example would be an open hi-hat followed by a closed one, essentially muting the open.</p>","name":"cut","params":[{"type":{"names":["number","Pattern"]},"description":"<p>cut group number</p>","name":"group"}],"examples":["s(\\\\"[oh hh]*4\\\\").cut(1)"],"longname":"cut","kind":"member","scope":"global"},{"comment":"/**\\\\n * Applies the cutoff frequency of the **l**ow-**p**ass **f**ilter.\\\\n *\\\\n * When using mininotation, you can also optionally add the \'lpq\' parameter, separated by \':\'.\\\\n *\\\\n * @name lpf\\\\n * @param {number | Pattern} frequency audible between 0 and 20000\\\\n * @synonyms cutoff, ctf, lp\\\\n * @example\\\\n * s(\\\\"bd sd [~ bd] sd,hh*6\\\\").lpf(\\\\"<4000 2000 1000 500 200 100>\\\\")\\\\n * @example\\\\n * s(\\\\"bd*16\\\\").lpf(\\\\"1000:0 1000:10 1000:20 1000:30\\\\")\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":547,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Applies the cutoff frequency of the <strong>l</strong>ow-<strong>p</strong>ass <strong>f</strong>ilter.</p>\\\\n<p>When using mininotation, you can also optionally add the \'lpq\' parameter, separated by \':\'.</p>","name":"lpf","params":[{"type":{"names":["number","Pattern"]},"description":"<p>audible between 0 and 20000</p>","name":"frequency"}],"synonyms_text":"cutoff, ctf, lp","synonyms":["cutoff","ctf","lp"],"examples":["s(\\\\"bd sd [~ bd] sd,hh*6\\\\").lpf(\\\\"<4000 2000 1000 500 200 100>\\\\")","s(\\\\"bd*16\\\\").lpf(\\\\"1000:0 1000:10 1000:20 1000:30\\\\")"],"longname":"lpf","kind":"member","scope":"global"},{"comment":"/**\\\\n * Sets the lowpass filter envelope modulation depth.\\\\n * @name lpenv\\\\n * @param {number | Pattern} modulation depth of the lowpass filter envelope between 0 and _n_\\\\n * @synonyms lpe\\\\n * @example\\\\n * note(\\\\"c2 e2 f2 g2\\\\")\\\\n * .sound(\'sawtooth\')\\\\n * .lpf(300)\\\\n * .lpa(.5)\\\\n * .lpenv(\\\\"<4 2 1 0 -1 -2 -4>/4\\\\")\\\\n */","meta":{"filename":"controls.mjs","lineno":563,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the lowpass filter envelope modulation depth.</p>","name":"lpenv","params":[{"type":{"names":["number","Pattern"]},"description":"<p>depth of the lowpass filter envelope between 0 and <em>n</em></p>","name":"modulation"}],"synonyms_text":"lpe","synonyms":["lpe"],"examples":["note(\\\\"c2 e2 f2 g2\\\\")\\\\n.sound(\'sawtooth\')\\\\n.lpf(300)\\\\n.lpa(.5)\\\\n.lpenv(\\\\"<4 2 1 0 -1 -2 -4>/4\\\\")"],"longname":"lpenv","kind":"member","scope":"global"},{"comment":"/**\\\\n * Sets the highpass filter envelope modulation depth.\\\\n * @name hpenv\\\\n * @param {number | Pattern} modulation depth of the highpass filter envelope between 0 and _n_\\\\n * @synonyms hpe\\\\n * @example\\\\n * note(\\\\"c2 e2 f2 g2\\\\")\\\\n * .sound(\'sawtooth\')\\\\n * .hpf(500)\\\\n * .hpa(.5)\\\\n * .hpenv(\\\\"<4 2 1 0 -1 -2 -4>/4\\\\")\\\\n */","meta":{"filename":"controls.mjs","lineno":576,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the highpass filter envelope modulation depth.</p>","name":"hpenv","params":[{"type":{"names":["number","Pattern"]},"description":"<p>depth of the highpass filter envelope between 0 and <em>n</em></p>","name":"modulation"}],"synonyms_text":"hpe","synonyms":["hpe"],"examples":["note(\\\\"c2 e2 f2 g2\\\\")\\\\n.sound(\'sawtooth\')\\\\n.hpf(500)\\\\n.hpa(.5)\\\\n.hpenv(\\\\"<4 2 1 0 -1 -2 -4>/4\\\\")"],"longname":"hpenv","kind":"member","scope":"global"},{"comment":"/**\\\\n * Sets the bandpass filter envelope modulation depth.\\\\n * @name bpenv\\\\n * @param {number | Pattern} modulation depth of the bandpass filter envelope between 0 and _n_\\\\n * @synonyms bpe\\\\n * @example\\\\n * note(\\\\"c2 e2 f2 g2\\\\")\\\\n * .sound(\'sawtooth\')\\\\n * .bpf(500)\\\\n * .bpa(.5)\\\\n * .bpenv(\\\\"<4 2 1 0 -1 -2 -4>/4\\\\")\\\\n */","meta":{"filename":"controls.mjs","lineno":589,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the bandpass filter envelope modulation depth.</p>","name":"bpenv","params":[{"type":{"names":["number","Pattern"]},"description":"<p>depth of the bandpass filter envelope between 0 and <em>n</em></p>","name":"modulation"}],"synonyms_text":"bpe","synonyms":["bpe"],"examples":["note(\\\\"c2 e2 f2 g2\\\\")\\\\n.sound(\'sawtooth\')\\\\n.bpf(500)\\\\n.bpa(.5)\\\\n.bpenv(\\\\"<4 2 1 0 -1 -2 -4>/4\\\\")"],"longname":"bpenv","kind":"member","scope":"global"},{"comment":"/**\\\\n * Sets the attack duration for the lowpass filter envelope.\\\\n * @name lpattack\\\\n * @param {number | Pattern} attack time of the filter envelope\\\\n * @synonyms lpa\\\\n * @example\\\\n * note(\\\\"c2 e2 f2 g2\\\\")\\\\n * .sound(\'sawtooth\')\\\\n * .lpf(300)\\\\n * .lpa(\\\\"<.5 .25 .1 .01>/4\\\\")\\\\n * .lpenv(4)\\\\n */","meta":{"filename":"controls.mjs","lineno":602,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the attack duration for the lowpass filter envelope.</p>","name":"lpattack","params":[{"type":{"names":["number","Pattern"]},"description":"<p>time of the filter envelope</p>","name":"attack"}],"synonyms_text":"lpa","synonyms":["lpa"],"examples":["note(\\\\"c2 e2 f2 g2\\\\")\\\\n.sound(\'sawtooth\')\\\\n.lpf(300)\\\\n.lpa(\\\\"<.5 .25 .1 .01>/4\\\\")\\\\n.lpenv(4)"],"longname":"lpattack","kind":"member","scope":"global"},{"comment":"/**\\\\n * Sets the attack duration for the highpass filter envelope.\\\\n * @name hpattack\\\\n * @param {number | Pattern} attack time of the highpass filter envelope\\\\n * @synonyms hpa\\\\n * @example\\\\n * note(\\\\"c2 e2 f2 g2\\\\")\\\\n * .sound(\'sawtooth\')\\\\n * .hpf(500)\\\\n * .hpa(\\\\"<.5 .25 .1 .01>/4\\\\")\\\\n * .hpenv(4)\\\\n */","meta":{"filename":"controls.mjs","lineno":615,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the attack duration for the highpass filter envelope.</p>","name":"hpattack","params":[{"type":{"names":["number","Pattern"]},"description":"<p>time of the highpass filter envelope</p>","name":"attack"}],"synonyms_text":"hpa","synonyms":["hpa"],"examples":["note(\\\\"c2 e2 f2 g2\\\\")\\\\n.sound(\'sawtooth\')\\\\n.hpf(500)\\\\n.hpa(\\\\"<.5 .25 .1 .01>/4\\\\")\\\\n.hpenv(4)"],"longname":"hpattack","kind":"member","scope":"global"},{"comment":"/**\\\\n * Sets the attack duration for the bandpass filter envelope.\\\\n * @name bpattack\\\\n * @param {number | Pattern} attack time of the bandpass filter envelope\\\\n * @synonyms bpa\\\\n * @example\\\\n * note(\\\\"c2 e2 f2 g2\\\\")\\\\n * .sound(\'sawtooth\')\\\\n * .bpf(500)\\\\n * .bpa(\\\\"<.5 .25 .1 .01>/4\\\\")\\\\n * .bpenv(4)\\\\n */","meta":{"filename":"controls.mjs","lineno":628,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the attack duration for the bandpass filter envelope.</p>","name":"bpattack","params":[{"type":{"names":["number","Pattern"]},"description":"<p>time of the bandpass filter envelope</p>","name":"attack"}],"synonyms_text":"bpa","synonyms":["bpa"],"examples":["note(\\\\"c2 e2 f2 g2\\\\")\\\\n.sound(\'sawtooth\')\\\\n.bpf(500)\\\\n.bpa(\\\\"<.5 .25 .1 .01>/4\\\\")\\\\n.bpenv(4)"],"longname":"bpattack","kind":"member","scope":"global"},{"comment":"/**\\\\n * Sets the decay duration for the lowpass filter envelope.\\\\n * @name lpdecay\\\\n * @param {number | Pattern} decay time of the filter envelope\\\\n * @synonyms lpd\\\\n * @example\\\\n * note(\\\\"c2 e2 f2 g2\\\\")\\\\n * .sound(\'sawtooth\')\\\\n * .lpf(300)\\\\n * .lpd(\\\\"<.5 .25 .1 0>/4\\\\")\\\\n * .lpenv(4)\\\\n */","meta":{"filename":"controls.mjs","lineno":641,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the decay duration for the lowpass filter envelope.</p>","name":"lpdecay","params":[{"type":{"names":["number","Pattern"]},"description":"<p>time of the filter envelope</p>","name":"decay"}],"synonyms_text":"lpd","synonyms":["lpd"],"examples":["note(\\\\"c2 e2 f2 g2\\\\")\\\\n.sound(\'sawtooth\')\\\\n.lpf(300)\\\\n.lpd(\\\\"<.5 .25 .1 0>/4\\\\")\\\\n.lpenv(4)"],"longname":"lpdecay","kind":"member","scope":"global"},{"comment":"/**\\\\n * Sets the decay duration for the highpass filter envelope.\\\\n * @name hpdecay\\\\n * @param {number | Pattern} decay time of the highpass filter envelope\\\\n * @synonyms hpd\\\\n * @example\\\\n * note(\\\\"c2 e2 f2 g2\\\\")\\\\n * .sound(\'sawtooth\')\\\\n * .hpf(500)\\\\n * .hpd(\\\\"<.5 .25 .1 0>/4\\\\")\\\\n * .hps(0.2)\\\\n * .hpenv(4)\\\\n */","meta":{"filename":"controls.mjs","lineno":654,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the decay duration for the highpass filter envelope.</p>","name":"hpdecay","params":[{"type":{"names":["number","Pattern"]},"description":"<p>time of the highpass filter envelope</p>","name":"decay"}],"synonyms_text":"hpd","synonyms":["hpd"],"examples":["note(\\\\"c2 e2 f2 g2\\\\")\\\\n.sound(\'sawtooth\')\\\\n.hpf(500)\\\\n.hpd(\\\\"<.5 .25 .1 0>/4\\\\")\\\\n.hps(0.2)\\\\n.hpenv(4)"],"longname":"hpdecay","kind":"member","scope":"global"},{"comment":"/**\\\\n * Sets the decay duration for the bandpass filter envelope.\\\\n * @name bpdecay\\\\n * @param {number | Pattern} decay time of the bandpass filter envelope\\\\n * @synonyms bpd\\\\n * @example\\\\n * note(\\\\"c2 e2 f2 g2\\\\")\\\\n * .sound(\'sawtooth\')\\\\n * .bpf(500)\\\\n * .bpd(\\\\"<.5 .25 .1 0>/4\\\\")\\\\n * .bps(0.2)\\\\n * .bpenv(4)\\\\n */","meta":{"filename":"controls.mjs","lineno":668,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the decay duration for the bandpass filter envelope.</p>","name":"bpdecay","params":[{"type":{"names":["number","Pattern"]},"description":"<p>time of the bandpass filter envelope</p>","name":"decay"}],"synonyms_text":"bpd","synonyms":["bpd"],"examples":["note(\\\\"c2 e2 f2 g2\\\\")\\\\n.sound(\'sawtooth\')\\\\n.bpf(500)\\\\n.bpd(\\\\"<.5 .25 .1 0>/4\\\\")\\\\n.bps(0.2)\\\\n.bpenv(4)"],"longname":"bpdecay","kind":"member","scope":"global"},{"comment":"/**\\\\n * Sets the sustain amplitude for the lowpass filter envelope.\\\\n * @name lpsustain\\\\n * @param {number | Pattern} sustain amplitude of the lowpass filter envelope\\\\n * @synonyms lps\\\\n * @example\\\\n * note(\\\\"c2 e2 f2 g2\\\\")\\\\n * .sound(\'sawtooth\')\\\\n * .lpf(300)\\\\n * .lpd(.5)\\\\n * .lps(\\\\"<0 .25 .5 1>/4\\\\")\\\\n * .lpenv(4)\\\\n */","meta":{"filename":"controls.mjs","lineno":682,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the sustain amplitude for the lowpass filter envelope.</p>","name":"lpsustain","params":[{"type":{"names":["number","Pattern"]},"description":"<p>amplitude of the lowpass filter envelope</p>","name":"sustain"}],"synonyms_text":"lps","synonyms":["lps"],"examples":["note(\\\\"c2 e2 f2 g2\\\\")\\\\n.sound(\'sawtooth\')\\\\n.lpf(300)\\\\n.lpd(.5)\\\\n.lps(\\\\"<0 .25 .5 1>/4\\\\")\\\\n.lpenv(4)"],"longname":"lpsustain","kind":"member","scope":"global"},{"comment":"/**\\\\n * Sets the sustain amplitude for the highpass filter envelope.\\\\n * @name hpsustain\\\\n * @param {number | Pattern} sustain amplitude of the highpass filter envelope\\\\n * @synonyms hps\\\\n * @example\\\\n * note(\\\\"c2 e2 f2 g2\\\\")\\\\n * .sound(\'sawtooth\')\\\\n * .hpf(500)\\\\n * .hpd(.5)\\\\n * .hps(\\\\"<0 .25 .5 1>/4\\\\")\\\\n * .hpenv(4)\\\\n */","meta":{"filename":"controls.mjs","lineno":696,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the sustain amplitude for the highpass filter envelope.</p>","name":"hpsustain","params":[{"type":{"names":["number","Pattern"]},"description":"<p>amplitude of the highpass filter envelope</p>","name":"sustain"}],"synonyms_text":"hps","synonyms":["hps"],"examples":["note(\\\\"c2 e2 f2 g2\\\\")\\\\n.sound(\'sawtooth\')\\\\n.hpf(500)\\\\n.hpd(.5)\\\\n.hps(\\\\"<0 .25 .5 1>/4\\\\")\\\\n.hpenv(4)"],"longname":"hpsustain","kind":"member","scope":"global"},{"comment":"/**\\\\n * Sets the sustain amplitude for the bandpass filter envelope.\\\\n * @name bpsustain\\\\n * @param {number | Pattern} sustain amplitude of the bandpass filter envelope\\\\n * @synonyms bps\\\\n * @example\\\\n * note(\\\\"c2 e2 f2 g2\\\\")\\\\n * .sound(\'sawtooth\')\\\\n * .bpf(500)\\\\n * .bpd(.5)\\\\n * .bps(\\\\"<0 .25 .5 1>/4\\\\")\\\\n * .bpenv(4)\\\\n */","meta":{"filename":"controls.mjs","lineno":710,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the sustain amplitude for the bandpass filter envelope.</p>","name":"bpsustain","params":[{"type":{"names":["number","Pattern"]},"description":"<p>amplitude of the bandpass filter envelope</p>","name":"sustain"}],"synonyms_text":"bps","synonyms":["bps"],"examples":["note(\\\\"c2 e2 f2 g2\\\\")\\\\n.sound(\'sawtooth\')\\\\n.bpf(500)\\\\n.bpd(.5)\\\\n.bps(\\\\"<0 .25 .5 1>/4\\\\")\\\\n.bpenv(4)"],"longname":"bpsustain","kind":"member","scope":"global"},{"comment":"/**\\\\n * Sets the release time for the lowpass filter envelope.\\\\n * @name lprelease\\\\n * @param {number | Pattern} release time of the filter envelope\\\\n * @synonyms lpr\\\\n * @example\\\\n * note(\\\\"c2 e2 f2 g2\\\\")\\\\n * .sound(\'sawtooth\')\\\\n * .clip(.5)\\\\n * .lpf(300)\\\\n * .lpenv(4)\\\\n * .lpr(\\\\"<.5 .25 .1 0>/4\\\\")\\\\n * .release(.5)\\\\n */","meta":{"filename":"controls.mjs","lineno":724,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the release time for the lowpass filter envelope.</p>","name":"lprelease","params":[{"type":{"names":["number","Pattern"]},"description":"<p>time of the filter envelope</p>","name":"release"}],"synonyms_text":"lpr","synonyms":["lpr"],"examples":["note(\\\\"c2 e2 f2 g2\\\\")\\\\n.sound(\'sawtooth\')\\\\n.clip(.5)\\\\n.lpf(300)\\\\n.lpenv(4)\\\\n.lpr(\\\\"<.5 .25 .1 0>/4\\\\")\\\\n.release(.5)"],"longname":"lprelease","kind":"member","scope":"global"},{"comment":"/**\\\\n * Sets the release time for the highpass filter envelope.\\\\n * @name hprelease\\\\n * @param {number | Pattern} release time of the highpass filter envelope\\\\n * @synonyms hpr\\\\n * @example\\\\n * note(\\\\"c2 e2 f2 g2\\\\")\\\\n * .sound(\'sawtooth\')\\\\n * .clip(.5)\\\\n * .hpf(500)\\\\n * .hpenv(4)\\\\n * .hpr(\\\\"<.5 .25 .1 0>/4\\\\")\\\\n * .release(.5)\\\\n */","meta":{"filename":"controls.mjs","lineno":739,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the release time for the highpass filter envelope.</p>","name":"hprelease","params":[{"type":{"names":["number","Pattern"]},"description":"<p>time of the highpass filter envelope</p>","name":"release"}],"synonyms_text":"hpr","synonyms":["hpr"],"examples":["note(\\\\"c2 e2 f2 g2\\\\")\\\\n.sound(\'sawtooth\')\\\\n.clip(.5)\\\\n.hpf(500)\\\\n.hpenv(4)\\\\n.hpr(\\\\"<.5 .25 .1 0>/4\\\\")\\\\n.release(.5)"],"longname":"hprelease","kind":"member","scope":"global"},{"comment":"/**\\\\n * Sets the release time for the bandpass filter envelope.\\\\n * @name bprelease\\\\n * @param {number | Pattern} release time of the bandpass filter envelope\\\\n * @synonyms bpr\\\\n * @example\\\\n * note(\\\\"c2 e2 f2 g2\\\\")\\\\n * .sound(\'sawtooth\')\\\\n * .clip(.5)\\\\n * .bpf(500)\\\\n * .bpenv(4)\\\\n * .bpr(\\\\"<.5 .25 .1 0>/4\\\\")\\\\n * .release(.5)\\\\n */","meta":{"filename":"controls.mjs","lineno":754,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the release time for the bandpass filter envelope.</p>","name":"bprelease","params":[{"type":{"names":["number","Pattern"]},"description":"<p>time of the bandpass filter envelope</p>","name":"release"}],"synonyms_text":"bpr","synonyms":["bpr"],"examples":["note(\\\\"c2 e2 f2 g2\\\\")\\\\n.sound(\'sawtooth\')\\\\n.clip(.5)\\\\n.bpf(500)\\\\n.bpenv(4)\\\\n.bpr(\\\\"<.5 .25 .1 0>/4\\\\")\\\\n.release(.5)"],"longname":"bprelease","kind":"member","scope":"global"},{"comment":"/**\\\\n * Sets the filter type. The ladder filter is more aggressive. More types might be added in the future.\\\\n * @name ftype\\\\n * @param {number | Pattern} type 12db (0), ladder (1), or 24db (2)\\\\n * @example\\\\n * note(\\\\"{f g g c d a a#}%8\\\\").s(\\\\"sawtooth\\\\").lpenv(4).lpf(500).ftype(\\\\"<0 1 2>\\\\").lpq(1)\\\\n * @example\\\\n * note(\\\\"c f g g a c d4\\\\").fast(2)\\\\n * .sound(\'sawtooth\')\\\\n * .lpf(200).fanchor(0)\\\\n * .lpenv(3).lpq(1)\\\\n * .ftype(\\\\"<ladder 12db 24db>\\\\")\\\\n */","meta":{"filename":"controls.mjs","lineno":769,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the filter type. The ladder filter is more aggressive. More types might be added in the future.</p>","name":"ftype","params":[{"type":{"names":["number","Pattern"]},"description":"<p>12db (0), ladder (1), or 24db (2)</p>","name":"type"}],"examples":["note(\\\\"{f g g c d a a#}%8\\\\").s(\\\\"sawtooth\\\\").lpenv(4).lpf(500).ftype(\\\\"<0 1 2>\\\\").lpq(1)","note(\\\\"c f g g a c d4\\\\").fast(2)\\\\n.sound(\'sawtooth\')\\\\n.lpf(200).fanchor(0)\\\\n.lpenv(3).lpq(1)\\\\n.ftype(\\\\"<ladder 12db 24db>\\\\")"],"longname":"ftype","kind":"member","scope":"global"},{"comment":"/**\\\\n * controls the center of the filter envelope. 0 is unipolar positive, .5 is bipolar, 1 is unipolar negative\\\\n * @name fanchor\\\\n * @param {number | Pattern} center 0 to 1\\\\n * @example\\\\n * note(\\\\"{f g g c d a a#}%8\\\\").s(\\\\"sawtooth\\\\").lpf(\\\\"{1000}%2\\\\")\\\\n * .lpenv(8).fanchor(\\\\"<0 .5 1>\\\\")\\\\n */","meta":{"filename":"controls.mjs","lineno":784,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>controls the center of the filter envelope. 0 is unipolar positive, .5 is bipolar, 1 is unipolar negative</p>","name":"fanchor","params":[{"type":{"names":["number","Pattern"]},"description":"<p>0 to 1</p>","name":"center"}],"examples":["note(\\\\"{f g g c d a a#}%8\\\\").s(\\\\"sawtooth\\\\").lpf(\\\\"{1000}%2\\\\")\\\\n.lpenv(8).fanchor(\\\\"<0 .5 1>\\\\")"],"longname":"fanchor","kind":"member","scope":"global"},{"comment":"/**\\\\n * Applies the cutoff frequency of the **h**igh-**p**ass **f**ilter.\\\\n *\\\\n * When using mininotation, you can also optionally add the \'hpq\' parameter, separated by \':\'.\\\\n *\\\\n * @name hpf\\\\n * @param {number | Pattern} frequency audible between 0 and 20000\\\\n * @synonyms hp, hcutoff\\\\n * @example\\\\n * s(\\\\"bd sd [~ bd] sd,hh*8\\\\").hpf(\\\\"<4000 2000 1000 500 200 100>\\\\")\\\\n * @example\\\\n * s(\\\\"bd sd [~ bd] sd,hh*8\\\\").hpf(\\\\"<2000 2000:25>\\\\")\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":793,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Applies the cutoff frequency of the <strong>h</strong>igh-<strong>p</strong>ass <strong>f</strong>ilter.</p>\\\\n<p>When using mininotation, you can also optionally add the \'hpq\' parameter, separated by \':\'.</p>","name":"hpf","params":[{"type":{"names":["number","Pattern"]},"description":"<p>audible between 0 and 20000</p>","name":"frequency"}],"synonyms_text":"hp, hcutoff","synonyms":["hp","hcutoff"],"examples":["s(\\\\"bd sd [~ bd] sd,hh*8\\\\").hpf(\\\\"<4000 2000 1000 500 200 100>\\\\")","s(\\\\"bd sd [~ bd] sd,hh*8\\\\").hpf(\\\\"<2000 2000:25>\\\\")"],"longname":"hpf","kind":"member","scope":"global"},{"comment":"/**\\\\n * Applies a vibrato to the frequency of the oscillator.\\\\n *\\\\n * @name vib\\\\n * @synonyms vibrato, v\\\\n * @param {number | Pattern} frequency of the vibrato in hertz\\\\n * @example\\\\n * note(\\\\"a e\\\\")\\\\n * .vib(\\\\"<.5 1 2 4 8 16>\\\\")\\\\n * ._scope()\\\\n * @example\\\\n * // change the modulation depth with \\\\":\\\\"\\\\n * note(\\\\"a e\\\\")\\\\n * .vib(\\\\"<.5 1 2 4 8 16>:12\\\\")\\\\n * ._scope()\\\\n */","meta":{"filename":"controls.mjs","lineno":809,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Applies a vibrato to the frequency of the oscillator.</p>","name":"vib","synonyms_text":"vibrato, v","synonyms":["vibrato","v"],"params":[{"type":{"names":["number","Pattern"]},"description":"<p>of the vibrato in hertz</p>","name":"frequency"}],"examples":["note(\\\\"a e\\\\")\\\\n.vib(\\\\"<.5 1 2 4 8 16>\\\\")\\\\n._scope()","// change the modulation depth with \\\\":\\\\"\\\\nnote(\\\\"a e\\\\")\\\\n.vib(\\\\"<.5 1 2 4 8 16>:12\\\\")\\\\n._scope()"],"longname":"vib","kind":"member","scope":"global"},{"comment":"/**\\\\n * Adds pink noise to the mix\\\\n *\\\\n * @name noise\\\\n * @param {number | Pattern} wet wet amount\\\\n * @example\\\\n * sound(\\\\"<white pink brown>/2\\\\")\\\\n */","meta":{"filename":"controls.mjs","lineno":826,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Adds pink noise to the mix</p>","name":"noise","params":[{"type":{"names":["number","Pattern"]},"description":"<p>wet amount</p>","name":"wet"}],"examples":["sound(\\\\"<white pink brown>/2\\\\")"],"longname":"noise","kind":"member","scope":"global"},{"comment":"/**\\\\n * Sets the vibrato depth in semitones. Only has an effect if \\`vibrato\\` | \\`vib\\` | \\`v\\` is is also set\\\\n *\\\\n * @name vibmod\\\\n * @synonyms vmod\\\\n * @param {number | Pattern} depth of vibrato (in semitones)\\\\n * @example\\\\n * note(\\\\"a e\\\\").vib(4)\\\\n * .vibmod(\\\\"<.25 .5 1 2 12>\\\\")\\\\n * ._scope()\\\\n * @example\\\\n * // change the vibrato frequency with \\\\":\\\\"\\\\n * note(\\\\"a e\\\\")\\\\n * .vibmod(\\\\"<.25 .5 1 2 12>:8\\\\")\\\\n * ._scope()\\\\n */","meta":{"filename":"controls.mjs","lineno":835,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the vibrato depth in semitones. Only has an effect if <code>vibrato</code> | <code>vib</code> | <code>v</code> is is also set</p>","name":"vibmod","synonyms_text":"vmod","synonyms":["vmod"],"params":[{"type":{"names":["number","Pattern"]},"description":"<p>of vibrato (in semitones)</p>","name":"depth"}],"examples":["note(\\\\"a e\\\\").vib(4)\\\\n.vibmod(\\\\"<.25 .5 1 2 12>\\\\")\\\\n._scope()","// change the vibrato frequency with \\\\":\\\\"\\\\nnote(\\\\"a e\\\\")\\\\n.vibmod(\\\\"<.25 .5 1 2 12>:8\\\\")\\\\n._scope()"],"longname":"vibmod","kind":"member","scope":"global"},{"comment":"/**\\\\n * Controls the **h**igh-**p**ass **q**-value.\\\\n *\\\\n * @name hpq\\\\n * @param {number | Pattern} q resonance factor between 0 and 50\\\\n * @synonyms hresonance\\\\n * @example\\\\n * s(\\\\"bd sd [~ bd] sd,hh*8\\\\").hpf(2000).hpq(\\\\"<0 10 20 30>\\\\")\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":853,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Controls the <strong>h</strong>igh-<strong>p</strong>ass <strong>q</strong>-value.</p>","name":"hpq","params":[{"type":{"names":["number","Pattern"]},"description":"<p>resonance factor between 0 and 50</p>","name":"q"}],"synonyms_text":"hresonance","synonyms":["hresonance"],"examples":["s(\\\\"bd sd [~ bd] sd,hh*8\\\\").hpf(2000).hpq(\\\\"<0 10 20 30>\\\\")"],"longname":"hpq","kind":"member","scope":"global"},{"comment":"/**\\\\n * Controls the **l**ow-**p**ass **q**-value.\\\\n *\\\\n * @name lpq\\\\n * @param {number | Pattern} q resonance factor between 0 and 50\\\\n * @synonyms resonance\\\\n * @example\\\\n * s(\\\\"bd sd [~ bd] sd,hh*8\\\\").lpf(2000).lpq(\\\\"<0 10 20 30>\\\\")\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":864,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Controls the <strong>l</strong>ow-<strong>p</strong>ass <strong>q</strong>-value.</p>","name":"lpq","params":[{"type":{"names":["number","Pattern"]},"description":"<p>resonance factor between 0 and 50</p>","name":"q"}],"synonyms_text":"resonance","synonyms":["resonance"],"examples":["s(\\\\"bd sd [~ bd] sd,hh*8\\\\").lpf(2000).lpq(\\\\"<0 10 20 30>\\\\")"],"longname":"lpq","kind":"member","scope":"global"},{"comment":"/**\\\\n * DJ filter, below 0.5 is low pass filter, above is high pass filter.\\\\n *\\\\n * @name djf\\\\n * @param {number | Pattern} cutoff below 0.5 is low pass filter, above is high pass filter\\\\n * @example\\\\n * n(\\\\"0 3 7 [10,24]\\\\").s(\'superzow\').octave(3).djf(\\\\"<.5 .25 .5 .75>\\\\").osc()\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":876,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>DJ filter, below 0.5 is low pass filter, above is high pass filter.</p>","name":"djf","params":[{"type":{"names":["number","Pattern"]},"description":"<p>below 0.5 is low pass filter, above is high pass filter</p>","name":"cutoff"}],"examples":["n(\\\\"0 3 7 [10,24]\\\\").s(\'superzow\').octave(3).djf(\\\\"<.5 .25 .5 .75>\\\\").osc()"],"longname":"djf","kind":"member","scope":"global"},{"comment":"/**\\\\n * Sets the level of the delay signal.\\\\n *\\\\n * When using mininotation, you can also optionally add the \'delaytime\' and \'delayfeedback\' parameter,\\\\n * separated by \':\'.\\\\n *\\\\n *\\\\n * @name delay\\\\n * @param {number | Pattern} level between 0 and 1\\\\n * @example\\\\n * s(\\\\"bd bd\\\\").delay(\\\\"<0 .25 .5 1>\\\\")\\\\n * @example\\\\n * s(\\\\"bd bd\\\\").delay(\\\\"0.65:0.25:0.9 0.65:0.125:0.7\\\\")\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":888,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the level of the delay signal.</p>\\\\n<p>When using mininotation, you can also optionally add the \'delaytime\' and \'delayfeedback\' parameter,\\\\nseparated by \':\'.</p>","name":"delay","params":[{"type":{"names":["number","Pattern"]},"description":"<p>between 0 and 1</p>","name":"level"}],"examples":["s(\\\\"bd bd\\\\").delay(\\\\"<0 .25 .5 1>\\\\")","s(\\\\"bd bd\\\\").delay(\\\\"0.65:0.25:0.9 0.65:0.125:0.7\\\\")"],"longname":"delay","kind":"member","scope":"global"},{"comment":"/**\\\\n * Sets the level of the signal that is fed back into the delay.\\\\n * Caution: Values >= 1 will result in a signal that gets louder and louder! Don\'t do it\\\\n *\\\\n * @name delayfeedback\\\\n * @param {number | Pattern} feedback between 0 and 1\\\\n * @synonyms delayfb, dfb\\\\n * @example\\\\n * s(\\\\"bd\\\\").delay(.25).delayfeedback(\\\\"<.25 .5 .75 1>\\\\")\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":904,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the level of the signal that is fed back into the delay.\\\\nCaution: Values &gt;= 1 will result in a signal that gets louder and louder! Don\'t do it</p>","name":"delayfeedback","params":[{"type":{"names":["number","Pattern"]},"description":"<p>between 0 and 1</p>","name":"feedback"}],"synonyms_text":"delayfb, dfb","synonyms":["delayfb","dfb"],"examples":["s(\\\\"bd\\\\").delay(.25).delayfeedback(\\\\"<.25 .5 .75 1>\\\\")"],"longname":"delayfeedback","kind":"member","scope":"global"},{"comment":"/**\\\\n * Sets the time of the delay effect.\\\\n *\\\\n * @name delaytime\\\\n * @param {number | Pattern} seconds between 0 and Infinity\\\\n * @synonyms delayt, dt\\\\n * @example\\\\n * s(\\\\"bd bd\\\\").delay(.25).delaytime(\\\\"<.125 .25 .5 1>\\\\")\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":916,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the time of the delay effect.</p>","name":"delaytime","params":[{"type":{"names":["number","Pattern"]},"description":"<p>between 0 and Infinity</p>","name":"seconds"}],"synonyms_text":"delayt, dt","synonyms":["delayt","dt"],"examples":["s(\\\\"bd bd\\\\").delay(.25).delaytime(\\\\"<.125 .25 .5 1>\\\\")"],"longname":"delaytime","kind":"member","scope":"global"},{"comment":"/**\\\\n * Set detune for stacked voices of supported oscillators\\\\n *\\\\n * @name detune\\\\n * @param {number | Pattern} amount\\\\n * @synonyms det\\\\n * @example\\\\n * note(\\\\"d f a a# a d3\\\\").fast(2).s(\\\\"supersaw\\\\").detune(\\\\"<.1 .2 .5 24.1>\\\\")\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":937,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Set detune for stacked voices of supported oscillators</p>","name":"detune","params":[{"type":{"names":["number","Pattern"]},"name":"amount"}],"synonyms_text":"det","synonyms":["det"],"examples":["note(\\\\"d f a a# a d3\\\\").fast(2).s(\\\\"supersaw\\\\").detune(\\\\"<.1 .2 .5 24.1>\\\\")"],"longname":"detune","kind":"member","scope":"global"},{"comment":"/**\\\\n * Set number of stacked voices for supported oscillators\\\\n *\\\\n * @name unison\\\\n * @param {number | Pattern} numvoices\\\\n * @example\\\\n * note(\\\\"d f a a# a d3\\\\").fast(2).s(\\\\"supersaw\\\\").unison(\\\\"<1 2 7>\\\\")\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":948,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Set number of stacked voices for supported oscillators</p>","name":"unison","params":[{"type":{"names":["number","Pattern"]},"name":"numvoices"}],"examples":["note(\\\\"d f a a# a d3\\\\").fast(2).s(\\\\"supersaw\\\\").unison(\\\\"<1 2 7>\\\\")"],"longname":"unison","kind":"member","scope":"global"},{"comment":"/**\\\\n * Set the stereo pan spread for supported oscillators\\\\n *\\\\n * @name spread\\\\n * @param {number | Pattern} spread between 0 and 1\\\\n * @example\\\\n * note(\\\\"d f a a# a d3\\\\").fast(2).s(\\\\"supersaw\\\\").spread(\\\\"<0 .3 1>\\\\")\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":959,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Set the stereo pan spread for supported oscillators</p>","name":"spread","params":[{"type":{"names":["number","Pattern"]},"description":"<p>between 0 and 1</p>","name":"spread"}],"examples":["note(\\\\"d f a a# a d3\\\\").fast(2).s(\\\\"supersaw\\\\").spread(\\\\"<0 .3 1>\\\\")"],"longname":"spread","kind":"member","scope":"global"},{"comment":"/**\\\\n * Set dryness of reverb. See \\`room\\` and \\`size\\` for more information about reverb.\\\\n *\\\\n * @name dry\\\\n * @param {number | Pattern} dry 0 = wet, 1 = dry\\\\n * @example\\\\n * n(\\\\"[0,3,7](3,8)\\\\").s(\\\\"superpiano\\\\").room(.7).dry(\\\\"<0 .5 .75 1>\\\\").osc()\\\\n * @superdirtOnly\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":969,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Set dryness of reverb. See <code>room</code> and <code>size</code> for more information about reverb.</p>","name":"dry","params":[{"type":{"names":["number","Pattern"]},"description":"<p>0 = wet, 1 = dry</p>","name":"dry"}],"examples":["n(\\\\"[0,3,7](3,8)\\\\").s(\\\\"superpiano\\\\").room(.7).dry(\\\\"<0 .5 .75 1>\\\\").osc()"],"tags":[{"originalTitle":"superdirtOnly","title":"superdirtonly","text":""}],"longname":"dry","kind":"member","scope":"global"},{"comment":"/**\\\\n * Set frequency of sound.\\\\n *\\\\n * @name freq\\\\n * @param {number | Pattern} frequency in Hz. the audible range is between 20 and 20000 Hz\\\\n * @example\\\\n * freq(\\\\"220 110 440 110\\\\").s(\\\\"superzow\\\\").osc()\\\\n * @example\\\\n * freq(\\\\"110\\\\".mul.out(\\\\".5 1.5 .6 [2 3]\\\\")).s(\\\\"superzow\\\\").osc()\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":993,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Set frequency of sound.</p>","name":"freq","params":[{"type":{"names":["number","Pattern"]},"description":"<p>in Hz. the audible range is between 20 and 20000 Hz</p>","name":"frequency"}],"examples":["freq(\\\\"220 110 440 110\\\\").s(\\\\"superzow\\\\").osc()","freq(\\\\"110\\\\".mul.out(\\\\".5 1.5 .6 [2 3]\\\\")).s(\\\\"superzow\\\\").osc()"],"longname":"freq","kind":"member","scope":"global"},{"comment":"/**\\\\n * Attack time of pitch envelope.\\\\n *\\\\n * @name pattack\\\\n * @synonyms patt\\\\n * @param {number | Pattern} time time in seconds\\\\n * @example\\\\n * note(\\\\"c eb g bb\\\\").pattack(\\\\"0 .1 .25 .5\\\\").slow(2)\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":1006,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Attack time of pitch envelope.</p>","name":"pattack","synonyms_text":"patt","synonyms":["patt"],"params":[{"type":{"names":["number","Pattern"]},"description":"<p>time in seconds</p>","name":"time"}],"examples":["note(\\\\"c eb g bb\\\\").pattack(\\\\"0 .1 .25 .5\\\\").slow(2)"],"longname":"pattack","kind":"member","scope":"global"},{"comment":"/**\\\\n * Decay time of pitch envelope.\\\\n *\\\\n * @name pdecay\\\\n * @synonyms pdec\\\\n * @param {number | Pattern} time time in seconds\\\\n * @example\\\\n * note(\\\\"<c eb g bb>\\\\").pdecay(\\\\"<0 .1 .25 .5>\\\\")\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":1017,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Decay time of pitch envelope.</p>","name":"pdecay","synonyms_text":"pdec","synonyms":["pdec"],"params":[{"type":{"names":["number","Pattern"]},"description":"<p>time in seconds</p>","name":"time"}],"examples":["note(\\\\"<c eb g bb>\\\\").pdecay(\\\\"<0 .1 .25 .5>\\\\")"],"longname":"pdecay","kind":"member","scope":"global"},{"comment":"/**\\\\n * Release time of pitch envelope\\\\n *\\\\n * @name prelease\\\\n * @synonyms prel\\\\n * @param {number | Pattern} time time in seconds\\\\n * @example\\\\n * note(\\\\"<c eb g bb> ~\\\\")\\\\n * .release(.5) // to hear the pitch release\\\\n * .prelease(\\\\"<0 .1 .25 .5>\\\\")\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":1030,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Release time of pitch envelope</p>","name":"prelease","synonyms_text":"prel","synonyms":["prel"],"params":[{"type":{"names":["number","Pattern"]},"description":"<p>time in seconds</p>","name":"time"}],"examples":["note(\\\\"<c eb g bb> ~\\\\")\\\\n.release(.5) // to hear the pitch release\\\\n.prelease(\\\\"<0 .1 .25 .5>\\\\")"],"longname":"prelease","kind":"member","scope":"global"},{"comment":"/**\\\\n * Amount of pitch envelope. Negative values will flip the envelope.\\\\n * If you don\'t set other pitch envelope controls, \\`pattack:.2\\` will be the default.\\\\n *\\\\n * @name penv\\\\n * @param {number | Pattern} semitones change in semitones\\\\n * @example\\\\n * note(\\\\"c\\\\")\\\\n * .penv(\\\\"<12 7 1 .5 0 -1 -7 -12>\\\\")\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":1043,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Amount of pitch envelope. Negative values will flip the envelope.\\\\nIf you don\'t set other pitch envelope controls, <code>pattack:.2</code> will be the default.</p>","name":"penv","params":[{"type":{"names":["number","Pattern"]},"description":"<p>change in semitones</p>","name":"semitones"}],"examples":["note(\\\\"c\\\\")\\\\n.penv(\\\\"<12 7 1 .5 0 -1 -7 -12>\\\\")"],"longname":"penv","kind":"member","scope":"global"},{"comment":"/**\\\\n * Curve of envelope. Defaults to linear. exponential is good for kicks\\\\n *\\\\n * @name pcurve\\\\n * @param {number | Pattern} type 0 = linear, 1 = exponential\\\\n * @example\\\\n * note(\\\\"g1*4\\\\")\\\\n * .s(\\\\"sine\\\\").pdec(.5)\\\\n * .penv(32)\\\\n * .pcurve(\\\\"<0 1>\\\\")\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":1055,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Curve of envelope. Defaults to linear. exponential is good for kicks</p>","name":"pcurve","params":[{"type":{"names":["number","Pattern"]},"description":"<p>0 = linear, 1 = exponential</p>","name":"type"}],"examples":["note(\\\\"g1*4\\\\")\\\\n.s(\\\\"sine\\\\").pdec(.5)\\\\n.penv(32)\\\\n.pcurve(\\\\"<0 1>\\\\")"],"longname":"pcurve","kind":"member","scope":"global"},{"comment":"/**\\\\n * Sets the range anchor of the envelope:\\\\n * - anchor 0: range = [note, note + penv]\\\\n * - anchor 1: range = [note - penv, note]\\\\n * If you don\'t set an anchor, the value will default to the psustain value.\\\\n *\\\\n * @name panchor\\\\n * @param {number | Pattern} anchor anchor offset\\\\n * @example\\\\n * note(\\\\"c c4\\\\").penv(12).panchor(\\\\"<0 .5 1 .5>\\\\")\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":1068,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the range anchor of the envelope:</p>\\\\n<ul>\\\\n<li>anchor 0: range = [note, note + penv]</li>\\\\n<li>anchor 1: range = [note - penv, note]\\\\nIf you don\'t set an anchor, the value will default to the psustain value.</li>\\\\n</ul>","name":"panchor","params":[{"type":{"names":["number","Pattern"]},"description":"<p>anchor offset</p>","name":"anchor"}],"examples":["note(\\\\"c c4\\\\").penv(12).panchor(\\\\"<0 .5 1 .5>\\\\")"],"longname":"panchor","kind":"member","scope":"global"},{"comment":"/**\\\\n * Emulation of a Leslie speaker: speakers rotating in a wooden amplified cabinet.\\\\n *\\\\n * @name leslie\\\\n * @param {number | Pattern} wet between 0 and 1\\\\n * @example\\\\n * n(\\\\"0,4,7\\\\").s(\\\\"supersquare\\\\").leslie(\\\\"<0 .4 .6 1>\\\\").osc()\\\\n * @superdirtOnly\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":1092,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Emulation of a Leslie speaker: speakers rotating in a wooden amplified cabinet.</p>","name":"leslie","params":[{"type":{"names":["number","Pattern"]},"description":"<p>between 0 and 1</p>","name":"wet"}],"examples":["n(\\\\"0,4,7\\\\").s(\\\\"supersquare\\\\").leslie(\\\\"<0 .4 .6 1>\\\\").osc()"],"tags":[{"originalTitle":"superdirtOnly","title":"superdirtonly","text":""}],"longname":"leslie","kind":"member","scope":"global"},{"comment":"/**\\\\n * Rate of modulation / rotation for leslie effect\\\\n *\\\\n * @name lrate\\\\n * @param {number | Pattern} rate 6.7 for fast, 0.7 for slow\\\\n * @example\\\\n * n(\\\\"0,4,7\\\\").s(\\\\"supersquare\\\\").leslie(1).lrate(\\\\"<1 2 4 8>\\\\").osc()\\\\n * @superdirtOnly\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":1103,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Rate of modulation / rotation for leslie effect</p>","name":"lrate","params":[{"type":{"names":["number","Pattern"]},"description":"<p>6.7 for fast, 0.7 for slow</p>","name":"rate"}],"examples":["n(\\\\"0,4,7\\\\").s(\\\\"supersquare\\\\").leslie(1).lrate(\\\\"<1 2 4 8>\\\\").osc()"],"tags":[{"originalTitle":"superdirtOnly","title":"superdirtonly","text":""}],"longname":"lrate","kind":"member","scope":"global"},{"comment":"/**\\\\n * Physical size of the cabinet in meters. Be careful, it might be slightly larger than your computer. Affects the Doppler amount (pitch warble)\\\\n *\\\\n * @name lsize\\\\n * @param {number | Pattern} meters somewhere between 0 and 1\\\\n * @example\\\\n * n(\\\\"0,4,7\\\\").s(\\\\"supersquare\\\\").leslie(1).lrate(2).lsize(\\\\"<.1 .5 1>\\\\").osc()\\\\n * @superdirtOnly\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":1115,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Physical size of the cabinet in meters. Be careful, it might be slightly larger than your computer. Affects the Doppler amount (pitch warble)</p>","name":"lsize","params":[{"type":{"names":["number","Pattern"]},"description":"<p>somewhere between 0 and 1</p>","name":"meters"}],"examples":["n(\\\\"0,4,7\\\\").s(\\\\"supersquare\\\\").leslie(1).lrate(2).lsize(\\\\"<.1 .5 1>\\\\").osc()"],"tags":[{"originalTitle":"superdirtOnly","title":"superdirtonly","text":""}],"longname":"lsize","kind":"member","scope":"global"},{"comment":"/**\\\\n * Sets the displayed text for an event on the pianoroll\\\\n *\\\\n * @name label\\\\n * @param {string} label text to display\\\\n */","meta":{"filename":"controls.mjs","lineno":1126,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the displayed text for an event on the pianoroll</p>","name":"label","params":[{"type":{"names":["string"]},"description":"<p>text to display</p>","name":"label"}],"longname":"label","kind":"member","scope":"global"},{"comment":"/**\\\\n * Sets the default octave of a synth.\\\\n *\\\\n * @name octave\\\\n * @param {number | Pattern} octave octave number\\\\n * @example\\\\n * n(\\\\"0,4,7\\\\").s(\'supersquare\').octave(\\\\"<3 4 5 6>\\\\").osc()\\\\n * @superDirtOnly\\\\n */","meta":{"filename":"controls.mjs","lineno":1162,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the default octave of a synth.</p>","name":"octave","params":[{"type":{"names":["number","Pattern"]},"description":"<p>octave number</p>","name":"octave"}],"examples":["n(\\\\"0,4,7\\\\").s(\'supersquare\').octave(\\\\"<3 4 5 6>\\\\").osc()"],"tags":[{"originalTitle":"superDirtOnly","title":"superdirtonly","text":""}],"longname":"octave","kind":"member","scope":"global"},{"comment":"/**\\\\n * An \\`orbit\\` is a global parameter context for patterns. Patterns with the same orbit will share the same global effects.\\\\n *\\\\n * @name orbit\\\\n * @param {number | Pattern} number\\\\n * @example\\\\n * stack(\\\\n *   s(\\\\"hh*6\\\\").delay(.5).delaytime(.25).orbit(1),\\\\n *   s(\\\\"~ sd ~ sd\\\\").delay(.5).delaytime(.125).orbit(2)\\\\n * )\\\\n */","meta":{"filename":"controls.mjs","lineno":1175,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>An <code>orbit</code> is a global parameter context for patterns. Patterns with the same orbit will share the same global effects.</p>","name":"orbit","params":[{"type":{"names":["number","Pattern"]},"name":"number"}],"examples":["stack(\\\\n  s(\\\\"hh*6\\\\").delay(.5).delaytime(.25).orbit(1),\\\\n  s(\\\\"~ sd ~ sd\\\\").delay(.5).delaytime(.125).orbit(2)\\\\n)"],"longname":"orbit","kind":"member","scope":"global"},{"comment":"/**\\\\n * Sets position in stereo.\\\\n *\\\\n * @name pan\\\\n * @param {number | Pattern} pan between 0 and 1, from left to right (assuming stereo), once round a circle (assuming multichannel)\\\\n * @example\\\\n * s(\\\\"[bd hh]*2\\\\").pan(\\\\"<.5 1 .5 0>\\\\")\\\\n * @example\\\\n * s(\\\\"bd rim sd rim bd ~ cp rim\\\\").pan(sine.slow(2))\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":1191,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets position in stereo.</p>","name":"pan","params":[{"type":{"names":["number","Pattern"]},"description":"<p>between 0 and 1, from left to right (assuming stereo), once round a circle (assuming multichannel)</p>","name":"pan"}],"examples":["s(\\\\"[bd hh]*2\\\\").pan(\\\\"<.5 1 .5 0>\\\\")","s(\\\\"bd rim sd rim bd ~ cp rim\\\\").pan(sine.slow(2))"],"longname":"pan","kind":"member","scope":"global"},{"comment":"/**\\\\n * Sets the level of reverb.\\\\n *\\\\n * When using mininotation, you can also optionally add the \'size\' parameter, separated by \':\'.\\\\n *\\\\n * @name room\\\\n * @param {number | Pattern} level between 0 and 1\\\\n * @example\\\\n * s(\\\\"bd sd [~ bd] sd\\\\").room(\\\\"<0 .2 .4 .6 .8 1>\\\\")\\\\n * @example\\\\n * s(\\\\"bd sd [~ bd] sd\\\\").room(\\\\"<0.9:1 0.9:4>\\\\")\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":1254,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the level of reverb.</p>\\\\n<p>When using mininotation, you can also optionally add the \'size\' parameter, separated by \':\'.</p>","name":"room","params":[{"type":{"names":["number","Pattern"]},"description":"<p>between 0 and 1</p>","name":"level"}],"examples":["s(\\\\"bd sd [~ bd] sd\\\\").room(\\\\"<0 .2 .4 .6 .8 1>\\\\")","s(\\\\"bd sd [~ bd] sd\\\\").room(\\\\"<0.9:1 0.9:4>\\\\")"],"longname":"room","kind":"member","scope":"global"},{"comment":"/**\\\\n * Reverb lowpass starting frequency (in hertz).\\\\n * When this property is changed, the reverb will be recaculated, so only change this sparsely..\\\\n *\\\\n * @name roomlp\\\\n * @synonyms rlp\\\\n * @param {number} frequency between 0 and 20000hz\\\\n * @example\\\\n * s(\\\\"bd sd [~ bd] sd\\\\").room(0.5).rlp(10000)\\\\n * @example\\\\n * s(\\\\"bd sd [~ bd] sd\\\\").room(0.5).rlp(5000)\\\\n */","meta":{"filename":"controls.mjs","lineno":1268,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Reverb lowpass starting frequency (in hertz).\\\\nWhen this property is changed, the reverb will be recaculated, so only change this sparsely..</p>","name":"roomlp","synonyms_text":"rlp","synonyms":["rlp"],"params":[{"type":{"names":["number"]},"description":"<p>between 0 and 20000hz</p>","name":"frequency"}],"examples":["s(\\\\"bd sd [~ bd] sd\\\\").room(0.5).rlp(10000)","s(\\\\"bd sd [~ bd] sd\\\\").room(0.5).rlp(5000)"],"longname":"roomlp","kind":"member","scope":"global"},{"comment":"/**\\\\n * Reverb lowpass frequency at -60dB (in hertz).\\\\n * When this property is changed, the reverb will be recaculated, so only change this sparsely..\\\\n *\\\\n * @name roomdim\\\\n * @synonyms rdim\\\\n * @param {number} frequency between 0 and 20000hz\\\\n * @example\\\\n * s(\\\\"bd sd [~ bd] sd\\\\").room(0.5).rlp(10000).rdim(8000)\\\\n * @example\\\\n * s(\\\\"bd sd [~ bd] sd\\\\").room(0.5).rlp(5000).rdim(400)\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":1281,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Reverb lowpass frequency at -60dB (in hertz).\\\\nWhen this property is changed, the reverb will be recaculated, so only change this sparsely..</p>","name":"roomdim","synonyms_text":"rdim","synonyms":["rdim"],"params":[{"type":{"names":["number"]},"description":"<p>between 0 and 20000hz</p>","name":"frequency"}],"examples":["s(\\\\"bd sd [~ bd] sd\\\\").room(0.5).rlp(10000).rdim(8000)","s(\\\\"bd sd [~ bd] sd\\\\").room(0.5).rlp(5000).rdim(400)"],"longname":"roomdim","kind":"member","scope":"global"},{"comment":"/**\\\\n * Reverb fade time (in seconds).\\\\n * When this property is changed, the reverb will be recaculated, so only change this sparsely..\\\\n *\\\\n * @name roomfade\\\\n * @synonyms rfade\\\\n * @param {number} seconds for the reverb to fade\\\\n * @example\\\\n * s(\\\\"bd sd [~ bd] sd\\\\").room(0.5).rlp(10000).rfade(0.5)\\\\n * @example\\\\n * s(\\\\"bd sd [~ bd] sd\\\\").room(0.5).rlp(5000).rfade(4)\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":1295,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Reverb fade time (in seconds).\\\\nWhen this property is changed, the reverb will be recaculated, so only change this sparsely..</p>","name":"roomfade","synonyms_text":"rfade","synonyms":["rfade"],"params":[{"type":{"names":["number"]},"description":"<p>for the reverb to fade</p>","name":"seconds"}],"examples":["s(\\\\"bd sd [~ bd] sd\\\\").room(0.5).rlp(10000).rfade(0.5)","s(\\\\"bd sd [~ bd] sd\\\\").room(0.5).rlp(5000).rfade(4)"],"longname":"roomfade","kind":"member","scope":"global"},{"comment":"/**\\\\n * Sets the sample to use as an impulse response for the reverb.\\\\n * @name iresponse\\\\n * @param {string | Pattern} sample to use as an impulse response\\\\n * @synonyms ir\\\\n * @example\\\\n * s(\\\\"bd sd [~ bd] sd\\\\").room(.8).ir(\\\\"<shaker_large:0 shaker_large:2>\\\\")\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":1309,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the sample to use as an impulse response for the reverb.</p>","name":"iresponse","params":[{"type":{"names":["string","Pattern"]},"description":"<p>to use as an impulse response</p>","name":"sample"}],"synonyms_text":"ir","synonyms":["ir"],"examples":["s(\\\\"bd sd [~ bd] sd\\\\").room(.8).ir(\\\\"<shaker_large:0 shaker_large:2>\\\\")"],"longname":"iresponse","kind":"member","scope":"global"},{"comment":"/**\\\\n * Sets the room size of the reverb, see \\`room\\`.\\\\n * When this property is changed, the reverb will be recaculated, so only change this sparsely..\\\\n *\\\\n * @name roomsize\\\\n * @param {number | Pattern} size between 0 and 10\\\\n * @synonyms rsize, sz, size\\\\n * @example\\\\n * s(\\\\"bd sd [~ bd] sd\\\\").room(.8).rsize(1)\\\\n * @example\\\\n * s(\\\\"bd sd [~ bd] sd\\\\").room(.8).rsize(4)\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":1319,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the room size of the reverb, see <code>room</code>.\\\\nWhen this property is changed, the reverb will be recaculated, so only change this sparsely..</p>","name":"roomsize","params":[{"type":{"names":["number","Pattern"]},"description":"<p>between 0 and 10</p>","name":"size"}],"synonyms_text":"rsize, sz, size","synonyms":["rsize","sz","size"],"examples":["s(\\\\"bd sd [~ bd] sd\\\\").room(.8).rsize(1)","s(\\\\"bd sd [~ bd] sd\\\\").room(.8).rsize(4)"],"longname":"roomsize","kind":"member","scope":"global"},{"comment":"/**\\\\n * (Deprecated) Wave shaping distortion. WARNING: can suddenly get unpredictably loud.\\\\n * Please use distort instead, which has a more predictable response curve\\\\n * second option in optional array syntax (ex: \\\\".9:.5\\\\") applies a postgain to the output\\\\n *\\\\n *\\\\n * @name shape\\\\n * @param {number | Pattern} distortion between 0 and 1\\\\n * @example\\\\n * s(\\\\"bd sd [~ bd] sd,hh*8\\\\").shape(\\\\"<0 .2 .4 .6 .8>\\\\")\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":1340,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>(Deprecated) Wave shaping distortion. WARNING: can suddenly get unpredictably loud.\\\\nPlease use distort instead, which has a more predictable response curve\\\\nsecond option in optional array syntax (ex: &quot;.9:.5&quot;) applies a postgain to the output</p>","name":"shape","params":[{"type":{"names":["number","Pattern"]},"description":"<p>between 0 and 1</p>","name":"distortion"}],"examples":["s(\\\\"bd sd [~ bd] sd,hh*8\\\\").shape(\\\\"<0 .2 .4 .6 .8>\\\\")"],"longname":"shape","kind":"member","scope":"global"},{"comment":"/**\\\\n * Wave shaping distortion. CAUTION: it can get loud.\\\\n * Second option in optional array syntax (ex: \\\\".9:.5\\\\") applies a postgain to the output.\\\\n * Most useful values are usually between 0 and 10 (depending on source gain). If you are feeling adventurous, you can turn it up to 11 and beyond ;)\\\\n *\\\\n * @name distort\\\\n * @synonyms dist\\\\n * @param {number | Pattern} distortion\\\\n * @example\\\\n * s(\\\\"bd sd [~ bd] sd,hh*8\\\\").distort(\\\\"<0 2 3 10:.5>\\\\")\\\\n * @example\\\\n * note(\\\\"d1!8\\\\").s(\\\\"sine\\\\").penv(36).pdecay(.12).decay(.23).distort(\\\\"8:.4\\\\")\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":1353,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Wave shaping distortion. CAUTION: it can get loud.\\\\nSecond option in optional array syntax (ex: &quot;.9:.5&quot;) applies a postgain to the output.\\\\nMost useful values are usually between 0 and 10 (depending on source gain). If you are feeling adventurous, you can turn it up to 11 and beyond ;)</p>","name":"distort","synonyms_text":"dist","synonyms":["dist"],"params":[{"type":{"names":["number","Pattern"]},"name":"distortion"}],"examples":["s(\\\\"bd sd [~ bd] sd,hh*8\\\\").distort(\\\\"<0 2 3 10:.5>\\\\")","note(\\\\"d1!8\\\\").s(\\\\"sine\\\\").penv(36).pdecay(.12).decay(.23).distort(\\\\"8:.4\\\\")"],"longname":"distort","kind":"member","scope":"global"},{"comment":"/**\\\\n * Dynamics Compressor. The params are \\`compressor(\\\\"threshold:ratio:knee:attack:release\\\\")\\`\\\\n * More info [here](https://developer.mozilla.org/en-US/docs/Web/API/DynamicsCompressorNode?retiredLocale=de#instance_properties)\\\\n *\\\\n * @name compressor\\\\n * @example\\\\n * s(\\\\"bd sd [~ bd] sd,hh*8\\\\")\\\\n * .compressor(\\\\"-20:20:10:.002:.02\\\\")\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":1368,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Dynamics Compressor. The params are <code>compressor(&quot;threshold:ratio:knee:attack:release&quot;)</code>\\\\nMore info <a href=\\\\"https://developer.mozilla.org/en-US/docs/Web/API/DynamicsCompressorNode?retiredLocale=de#instance_properties\\\\">here</a></p>","name":"compressor","examples":["s(\\\\"bd sd [~ bd] sd,hh*8\\\\")\\\\n.compressor(\\\\"-20:20:10:.002:.02\\\\")"],"longname":"compressor","kind":"member","scope":"global"},{"comment":"/**\\\\n * Changes the speed of sample playback, i.e. a cheap way of changing pitch.\\\\n *\\\\n * @name speed\\\\n * @param {number | Pattern} speed -inf to inf, negative numbers play the sample backwards.\\\\n * @example\\\\n * s(\\\\"bd*6\\\\").speed(\\\\"1 2 4 1 -2 -4\\\\")\\\\n * @example\\\\n * speed(\\\\"1 1.5*2 [2 1.1]\\\\").s(\\\\"piano\\\\").clip(1)\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":1389,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Changes the speed of sample playback, i.e. a cheap way of changing pitch.</p>","name":"speed","params":[{"type":{"names":["number","Pattern"]},"description":"<p>inf to inf, negative numbers play the sample backwards.</p>","name":"speed"}],"examples":["s(\\\\"bd*6\\\\").speed(\\\\"1 2 4 1 -2 -4\\\\")","speed(\\\\"1 1.5*2 [2 1.1]\\\\").s(\\\\"piano\\\\").clip(1)"],"longname":"speed","kind":"member","scope":"global"},{"comment":"/**\\\\n * Changes the speed of sample playback, i.e. a cheap way of changing pitch.\\\\n *\\\\n * @name stretch\\\\n * @param {number | Pattern} factor -inf to inf, negative numbers play the sample backwards.\\\\n * @example\\\\n * s(\\\\"gm_flute\\\\").stretch(\\\\"1 2 .5\\\\")\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":1402,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Changes the speed of sample playback, i.e. a cheap way of changing pitch.</p>","name":"stretch","params":[{"type":{"names":["number","Pattern"]},"description":"<p>inf to inf, negative numbers play the sample backwards.</p>","name":"factor"}],"examples":["s(\\\\"gm_flute\\\\").stretch(\\\\"1 2 .5\\\\")"],"longname":"stretch","kind":"member","scope":"global"},{"comment":"/**\\\\n * Used in conjunction with \\`speed\\`, accepts values of \\\\"r\\\\" (rate, default behavior), \\\\"c\\\\" (cycles), or \\\\"s\\\\" (seconds). Using \\`unit \\\\"c\\\\"\\` means \\`speed\\` will be interpreted in units of cycles, e.g. \\`speed \\\\"1\\\\"\\` means samples will be stretched to fill a cycle. Using \\`unit \\\\"s\\\\"\\` means the playback speed will be adjusted so that the duration is the number of seconds specified by \\`speed\\`.\\\\n *\\\\n * @name unit\\\\n * @param {number | string | Pattern} unit see description above\\\\n * @example\\\\n * speed(\\\\"1 2 .5 3\\\\").s(\\\\"bd\\\\").unit(\\\\"c\\\\").osc()\\\\n * @superdirtOnly\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":1412,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Used in conjunction with <code>speed</code>, accepts values of &quot;r&quot; (rate, default behavior), &quot;c&quot; (cycles), or &quot;s&quot; (seconds). Using <code>unit &quot;c&quot;</code> means <code>speed</code> will be interpreted in units of cycles, e.g. <code>speed &quot;1&quot;</code> means samples will be stretched to fill a cycle. Using <code>unit &quot;s&quot;</code> means the playback speed will be adjusted so that the duration is the number of seconds specified by <code>speed</code>.</p>","name":"unit","params":[{"type":{"names":["number","string","Pattern"]},"description":"<p>see description above</p>","name":"unit"}],"examples":["speed(\\\\"1 2 .5 3\\\\").s(\\\\"bd\\\\").unit(\\\\"c\\\\").osc()"],"tags":[{"originalTitle":"superdirtOnly","title":"superdirtonly","text":""}],"longname":"unit","kind":"member","scope":"global"},{"comment":"/**\\\\n * Made by Calum Gunn. Reminiscent of some weird mixture of filter, ring-modulator and pitch-shifter. The SuperCollider manual defines Squiz as:\\\\n *\\\\n * \\\\"A simplistic pitch-raising algorithm. It\'s not meant to sound natural; its sound is reminiscent of some weird mixture of filter, ring-modulator and pitch-shifter, depending on the input. The algorithm works by cutting the signal into fragments (delimited by upwards-going zero-crossings) and squeezing those fragments in the time domain (i.e. simply playing them back faster than they came in), leaving silences inbetween. All the parameters apart from memlen can be modulated.\\\\"\\\\n *\\\\n * @name squiz\\\\n * @param {number | Pattern} squiz Try passing multiples of 2 to it - 2, 4, 8 etc.\\\\n * @example\\\\n * squiz(\\\\"2 4/2 6 [8 16]\\\\").s(\\\\"bd\\\\").osc()\\\\n * @superdirtOnly\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":1424,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Made by Calum Gunn. Reminiscent of some weird mixture of filter, ring-modulator and pitch-shifter. The SuperCollider manual defines Squiz as:</p>\\\\n<p>&quot;A simplistic pitch-raising algorithm. It\'s not meant to sound natural; its sound is reminiscent of some weird mixture of filter, ring-modulator and pitch-shifter, depending on the input. The algorithm works by cutting the signal into fragments (delimited by upwards-going zero-crossings) and squeezing those fragments in the time domain (i.e. simply playing them back faster than they came in), leaving silences inbetween. All the parameters apart from memlen can be modulated.&quot;</p>","name":"squiz","params":[{"type":{"names":["number","Pattern"]},"description":"<p>Try passing multiples of 2 to it - 2, 4, 8 etc.</p>","name":"squiz"}],"examples":["squiz(\\\\"2 4/2 6 [8 16]\\\\").s(\\\\"bd\\\\").osc()"],"tags":[{"originalTitle":"superdirtOnly","title":"superdirtonly","text":""}],"longname":"squiz","kind":"member","scope":"global"},{"comment":"/**\\\\n *\\\\n * Formant filter to make things sound like vowels.\\\\n *\\\\n * @name vowel\\\\n * @param {string | Pattern} vowel You can use a e i o u ae aa oe ue y uh un en an on, corresponding to [a] [e] [i] [o] [u] [æ] [ɑ] [ø] [y] [ɯ] [ʌ] [œ̃] [ɛ̃] [ɑ̃] [ɔ̃]. Aliases: aa = å = ɑ, oe = ø = ö, y = ı, ae = æ.\\\\n * @example\\\\n * note(\\\\"[c2 <eb2 <g2 g1>>]*2\\\\").s(\'sawtooth\')\\\\n * .vowel(\\\\"<a e i <o u>>\\\\")\\\\n * @example\\\\n * s(\\\\"bd sd mt ht bd [~ cp] ht lt\\\\").vowel(\\\\"[a|e|i|o|u]\\\\")\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":1449,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Formant filter to make things sound like vowels.</p>","name":"vowel","params":[{"type":{"names":["string","Pattern"]},"description":"<p>You can use a e i o u ae aa oe ue y uh un en an on, corresponding to [a] [e] [i] [o] [u] [æ] [ɑ] [ø] [y] [ɯ] [ʌ] [œ̃] [ɛ̃] [ɑ̃] [ɔ̃]. Aliases: aa = å = ɑ, oe = ø = ö, y = ı, ae = æ.</p>","name":"vowel"}],"examples":["note(\\\\"[c2 <eb2 <g2 g1>>]*2\\\\").s(\'sawtooth\')\\\\n.vowel(\\\\"<a e i <o u>>\\\\")","s(\\\\"bd sd mt ht bd [~ cp] ht lt\\\\").vowel(\\\\"[a|e|i|o|u]\\\\")"],"longname":"vowel","kind":"member","scope":"global"},{"comment":"/**\\\\n * Multiplies the duration with the given number. Also cuts samples off at the end if they exceed the duration.\\\\n *\\\\n * @name clip\\\\n * @synonyms legato\\\\n * @param {number | Pattern} factor >= 0\\\\n * @example\\\\n * note(\\\\"c a f e\\\\").s(\\\\"piano\\\\").clip(\\\\"<.5 1 2>\\\\")\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":1536,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Multiplies the duration with the given number. Also cuts samples off at the end if they exceed the duration.</p>","name":"clip","synonyms_text":"legato","synonyms":["legato"],"params":[{"type":{"names":["number","Pattern"]},"description":"<blockquote>\\\\n<p>= 0</p>\\\\n</blockquote>","name":"factor"}],"examples":["note(\\\\"c a f e\\\\").s(\\\\"piano\\\\").clip(\\\\"<.5 1 2>\\\\")"],"longname":"clip","kind":"member","scope":"global"},{"comment":"/**\\\\n * Sets the duration of the event in cycles. Similar to clip / legato, it also cuts samples off at the end if they exceed the duration.\\\\n *\\\\n * @name duration\\\\n * @synonyms dur\\\\n * @param {number | Pattern} seconds >= 0\\\\n * @example\\\\n * note(\\\\"c a f e\\\\").s(\\\\"piano\\\\").dur(\\\\"<.5 1 2>\\\\")\\\\n *\\\\n */","meta":{"filename":"controls.mjs","lineno":1548,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the duration of the event in cycles. Similar to clip / legato, it also cuts samples off at the end if they exceed the duration.</p>","name":"duration","synonyms_text":"dur","synonyms":["dur"],"params":[{"type":{"names":["number","Pattern"]},"description":"<blockquote>\\\\n<p>= 0</p>\\\\n</blockquote>","name":"seconds"}],"examples":["note(\\\\"c a f e\\\\").s(\\\\"piano\\\\").dur(\\\\"<.5 1 2>\\\\")"],"longname":"duration","kind":"member","scope":"global"},{"comment":"/**\\\\n * Sets the color of the hap in visualizations like pianoroll or highlighting.\\\\n * @name color\\\\n * @synonyms colour\\\\n * @param {string} color Hexadecimal or CSS color name\\\\n */","meta":{"filename":"controls.mjs","lineno":1578,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the color of the hap in visualizations like pianoroll or highlighting.</p>","name":"color","synonyms_text":"colour","synonyms":["colour"],"params":[{"type":{"names":["string"]},"description":"<p>Hexadecimal or CSS color name</p>","name":"color"}],"longname":"color","kind":"member","scope":"global"},{"comment":"/**\\\\n * ADSR envelope: Combination of Attack, Decay, Sustain, and Release.\\\\n *\\\\n * @name adsr\\\\n * @param {number | Pattern} time attack time in seconds\\\\n * @param {number | Pattern} time decay time in seconds\\\\n * @param {number | Pattern} gain sustain level (0 to 1)\\\\n * @param {number | Pattern} time release time in seconds\\\\n * @example\\\\n * note(\\\\"[c3 bb2 f3 eb3]*2\\\\").sound(\\\\"sawtooth\\\\").lpf(600).adsr(\\\\".1:.1:.5:.2\\\\")\\\\n */","meta":{"filename":"controls.mjs","lineno":1591,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>ADSR envelope: Combination of Attack, Decay, Sustain, and Release.</p>","name":"adsr","params":[{"type":{"names":["number","Pattern"]},"description":"<p>attack time in seconds</p>","name":"time"},{"type":{"names":["number","Pattern"]},"description":"<p>decay time in seconds</p>","name":"time"},{"type":{"names":["number","Pattern"]},"description":"<p>sustain level (0 to 1)</p>","name":"gain"},{"type":{"names":["number","Pattern"]},"description":"<p>release time in seconds</p>","name":"time"}],"examples":["note(\\\\"[c3 bb2 f3 eb3]*2\\\\").sound(\\\\"sawtooth\\\\").lpf(600).adsr(\\\\".1:.1:.5:.2\\\\")"],"longname":"adsr","kind":"member","scope":"global"},{"comment":"/**\\\\n * MIDI channel: Sets the MIDI channel for the event.\\\\n *\\\\n * @name midichan\\\\n * @param {number | Pattern} channel MIDI channel number (0-15)\\\\n * @example\\\\n * note(\\\\"c4\\\\").midichan(1).midi()\\\\n */","meta":{"filename":"controls.mjs","lineno":1625,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>MIDI channel: Sets the MIDI channel for the event.</p>","name":"midichan","params":[{"type":{"names":["number","Pattern"]},"description":"<p>MIDI channel number (0-15)</p>","name":"channel"}],"examples":["note(\\\\"c4\\\\").midichan(1).midi()"],"longname":"midichan","kind":"member","scope":"global"},{"comment":"/**\\\\n * MIDI port: Sets the MIDI port for the event.\\\\n *\\\\n * @name midiport\\\\n * @param {number | Pattern} port MIDI port\\\\n * @example\\\\n * note(\\\\"c a f e\\\\").midiport(\\\\"<0 1 2 3>\\\\").midi()\\\\n */","meta":{"filename":"controls.mjs","lineno":1637,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>MIDI port: Sets the MIDI port for the event.</p>","name":"midiport","params":[{"type":{"names":["number","Pattern"]},"description":"<p>MIDI port</p>","name":"port"}],"examples":["note(\\\\"c a f e\\\\").midiport(\\\\"<0 1 2 3>\\\\").midi()"],"longname":"midiport","kind":"member","scope":"global"},{"comment":"/**\\\\n * MIDI command: Sends a MIDI command message.\\\\n *\\\\n * @name midicmd\\\\n * @param {number | Pattern} command MIDI command\\\\n * @example\\\\n * midicmd(\\\\"clock*48,<start stop>/2\\\\").midi()\\\\n */","meta":{"filename":"controls.mjs","lineno":1647,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>MIDI command: Sends a MIDI command message.</p>","name":"midicmd","params":[{"type":{"names":["number","Pattern"]},"description":"<p>MIDI command</p>","name":"command"}],"examples":["midicmd(\\\\"clock*48,<start stop>/2\\\\").midi()"],"longname":"midicmd","kind":"member","scope":"global"},{"comment":"/**\\\\n * MIDI control: Sends a MIDI control change message.\\\\n *\\\\n * @name control\\\\n * @param {number | Pattern}  MIDI control number (0-127)\\\\n * @param {number | Pattern}  MIDI controller value (0-127)\\\\n */","meta":{"filename":"controls.mjs","lineno":1657,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>MIDI control: Sends a MIDI control change message.</p>","name":"control","params":[{"type":{"names":["number","Pattern"]},"description":"<p>control number (0-127)</p>","name":"MIDI"},{"type":{"names":["number","Pattern"]},"description":"<p>controller value (0-127)</p>","name":"MIDI"}],"longname":"control","kind":"member","scope":"global"},{"comment":"/**\\\\n * MIDI control number: Sends a MIDI control change message.\\\\n *\\\\n * @name ccn\\\\n * @param {number | Pattern}  MIDI control number (0-127)\\\\n */","meta":{"filename":"controls.mjs","lineno":1672,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>MIDI control number: Sends a MIDI control change message.</p>","name":"ccn","params":[{"type":{"names":["number","Pattern"]},"description":"<p>control number (0-127)</p>","name":"MIDI"}],"longname":"ccn","kind":"member","scope":"global"},{"comment":"/**\\\\n * MIDI control value: Sends a MIDI control change message.\\\\n *\\\\n * @name ccv\\\\n * @param {number | Pattern}  MIDI control value (0-127)\\\\n */","meta":{"filename":"controls.mjs","lineno":1679,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>MIDI control value: Sends a MIDI control change message.</p>","name":"ccv","params":[{"type":{"names":["number","Pattern"]},"description":"<p>control value (0-127)</p>","name":"MIDI"}],"longname":"ccv","kind":"member","scope":"global"},{"comment":"/**\\\\n * MIDI NRPN non-registered parameter number: Sends a MIDI NRPN non-registered parameter number message.\\\\n * @name nrpnn\\\\n * @param {number | Pattern} nrpnn MIDI NRPN non-registered parameter number (0-127)\\\\n * @example\\\\n * note(\\\\"c4\\\\").nrpnn(\\\\"1:8\\\\").nrpv(\\\\"123\\\\").midichan(1).midi()\\\\n */","meta":{"filename":"controls.mjs","lineno":1689,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>MIDI NRPN non-registered parameter number: Sends a MIDI NRPN non-registered parameter number message.</p>","name":"nrpnn","params":[{"type":{"names":["number","Pattern"]},"description":"<p>MIDI NRPN non-registered parameter number (0-127)</p>","name":"nrpnn"}],"examples":["note(\\\\"c4\\\\").nrpnn(\\\\"1:8\\\\").nrpv(\\\\"123\\\\").midichan(1).midi()"],"longname":"nrpnn","kind":"member","scope":"global"},{"comment":"/**\\\\n * MIDI NRPN non-registered parameter value: Sends a MIDI NRPN non-registered parameter value message.\\\\n * @name nrpv\\\\n * @param {number | Pattern} nrpv MIDI NRPN non-registered parameter value (0-127)\\\\n * @example\\\\n * note(\\\\"c4\\\\").nrpnn(\\\\"1:8\\\\").nrpv(\\\\"123\\\\").midichan(1).midi()\\\\n */","meta":{"filename":"controls.mjs","lineno":1697,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>MIDI NRPN non-registered parameter value: Sends a MIDI NRPN non-registered parameter value message.</p>","name":"nrpv","params":[{"type":{"names":["number","Pattern"]},"description":"<p>MIDI NRPN non-registered parameter value (0-127)</p>","name":"nrpv"}],"examples":["note(\\\\"c4\\\\").nrpnn(\\\\"1:8\\\\").nrpv(\\\\"123\\\\").midichan(1).midi()"],"longname":"nrpv","kind":"member","scope":"global"},{"comment":"/**\\\\n * MIDI program number: Sends a MIDI program change message.\\\\n *\\\\n * @name progNum\\\\n * @param {number | Pattern} program MIDI program number (0-127)\\\\n * @example\\\\n * note(\\\\"c4\\\\").progNum(10).midichan(1).midi()\\\\n */","meta":{"filename":"controls.mjs","lineno":1706,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>MIDI program number: Sends a MIDI program change message.</p>","name":"progNum","params":[{"type":{"names":["number","Pattern"]},"description":"<p>MIDI program number (0-127)</p>","name":"program"}],"examples":["note(\\\\"c4\\\\").progNum(10).midichan(1).midi()"],"longname":"progNum","kind":"member","scope":"global"},{"comment":"/**\\\\n * MIDI sysex: Sends a MIDI sysex message.\\\\n * @name sysex\\\\n * @param {number | Pattern} id Sysex ID\\\\n * @param {number | Pattern} data Sysex data\\\\n * @example\\\\n * note(\\\\"c4\\\\").sysex([\\\\"0x77\\\\", \\\\"0x01:0x02:0x03:0x04\\\\"]).midichan(1).midi()\\\\n */","meta":{"filename":"controls.mjs","lineno":1716,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>MIDI sysex: Sends a MIDI sysex message.</p>","name":"sysex","params":[{"type":{"names":["number","Pattern"]},"description":"<p>Sysex ID</p>","name":"id"},{"type":{"names":["number","Pattern"]},"description":"<p>Sysex data</p>","name":"data"}],"examples":["note(\\\\"c4\\\\").sysex([\\\\"0x77\\\\", \\\\"0x01:0x02:0x03:0x04\\\\"]).midichan(1).midi()"],"longname":"sysex","kind":"member","scope":"global"},{"comment":"/**\\\\n * MIDI sysex ID: Sends a MIDI sysex identifier message.\\\\n * @name sysexid\\\\n * @param {number | Pattern} id Sysex ID\\\\n * @example\\\\n * note(\\\\"c4\\\\").sysexid(\\\\"0x77\\\\").sysexdata(\\\\"0x01:0x02:0x03:0x04\\\\").midichan(1).midi()\\\\n */","meta":{"filename":"controls.mjs","lineno":1731,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>MIDI sysex ID: Sends a MIDI sysex identifier message.</p>","name":"sysexid","params":[{"type":{"names":["number","Pattern"]},"description":"<p>Sysex ID</p>","name":"id"}],"examples":["note(\\\\"c4\\\\").sysexid(\\\\"0x77\\\\").sysexdata(\\\\"0x01:0x02:0x03:0x04\\\\").midichan(1).midi()"],"longname":"sysexid","kind":"member","scope":"global"},{"comment":"/**\\\\n * MIDI sysex data: Sends a MIDI sysex message.\\\\n * @name sysexdata\\\\n * @param {number | Pattern} data Sysex data\\\\n * @example\\\\n * note(\\\\"c4\\\\").sysexid(\\\\"0x77\\\\").sysexdata(\\\\"0x01:0x02:0x03:0x04\\\\").midichan(1).midi()\\\\n */","meta":{"filename":"controls.mjs","lineno":1739,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>MIDI sysex data: Sends a MIDI sysex message.</p>","name":"sysexdata","params":[{"type":{"names":["number","Pattern"]},"description":"<p>Sysex data</p>","name":"data"}],"examples":["note(\\\\"c4\\\\").sysexid(\\\\"0x77\\\\").sysexdata(\\\\"0x01:0x02:0x03:0x04\\\\").midichan(1).midi()"],"longname":"sysexdata","kind":"member","scope":"global"},{"comment":"/**\\\\n * MIDI pitch bend: Sends a MIDI pitch bend message.\\\\n * @name midibend\\\\n * @param {number | Pattern} midibend MIDI pitch bend (-1 - 1)\\\\n * @example\\\\n * note(\\\\"c4\\\\").midibend(sine.slow(4).range(-0.4,0.4)).midi()\\\\n */","meta":{"filename":"controls.mjs","lineno":1748,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>MIDI pitch bend: Sends a MIDI pitch bend message.</p>","name":"midibend","params":[{"type":{"names":["number","Pattern"]},"description":"<p>MIDI pitch bend (-1 - 1)</p>","name":"midibend"}],"examples":["note(\\\\"c4\\\\").midibend(sine.slow(4).range(-0.4,0.4)).midi()"],"longname":"midibend","kind":"member","scope":"global"},{"comment":"/**\\\\n * MIDI key after touch: Sends a MIDI key after touch message.\\\\n * @name miditouch\\\\n * @param {number | Pattern} miditouch MIDI key after touch (0-1)\\\\n * @example\\\\n * note(\\\\"c4\\\\").miditouch(sine.slow(4).range(0,1)).midi()\\\\n */","meta":{"filename":"controls.mjs","lineno":1756,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>MIDI key after touch: Sends a MIDI key after touch message.</p>","name":"miditouch","params":[{"type":{"names":["number","Pattern"]},"description":"<p>MIDI key after touch (0-1)</p>","name":"miditouch"}],"examples":["note(\\\\"c4\\\\").miditouch(sine.slow(4).range(0,1)).midi()"],"longname":"miditouch","kind":"member","scope":"global"},{"comment":"/**\\\\n * Sets properties in a batch.\\\\n *\\\\n * @name as\\\\n * @param {String | Array} mapping the control names that are set\\\\n * @example\\\\n * \\\\"c:.5 a:1 f:.25 e:.8\\\\".as(\\\\"note:clip\\\\")\\\\n * @example\\\\n * \\\\"{0@2 0.25 0 0.5 .3 .5}%8\\\\".as(\\\\"begin\\\\").s(\\\\"sax_vib\\\\").clip(1)\\\\n */","meta":{"filename":"controls.mjs","lineno":1775,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets properties in a batch.</p>","name":"as","params":[{"type":{"names":["String","Array"]},"description":"<p>the control names that are set</p>","name":"mapping"}],"examples":["\\\\"c:.5 a:1 f:.25 e:.8\\\\".as(\\\\"note:clip\\\\")","\\\\"{0@2 0.25 0 0.5 .3 .5}%8\\\\".as(\\\\"begin\\\\").s(\\\\"sax_vib\\\\").clip(1)"],"longname":"as","kind":"member","scope":"global"},{"comment":"/**\\\\n * Allows you to scrub an audio file like a tape loop by passing values that represents the position in the audio file\\\\n * in the optional array syntax ex: \\\\"0.5:2\\\\", the second value controls the speed of playback\\\\n * @name scrub\\\\n * @memberof Pattern\\\\n * @returns Pattern\\\\n * @example\\\\n * samples(\'github:switchangel/pad\')\\\\n * s(\\\\"swpad:0\\\\").scrub(\\\\"{0.1!2 .25@3 0.7!2 <0.8:1.5>}%8\\\\")\\\\n * @example\\\\n * samples(\'github:yaxu/clean-breaks/main\');\\\\n * s(\\\\"amen/4\\\\").fit().scrub(\\\\"{0@3 0@2 4@3}%8\\\\".div(16))\\\\n */","meta":{"filename":"controls.mjs","lineno":1794,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Allows you to scrub an audio file like a tape loop by passing values that represents the position in the audio file\\\\nin the optional array syntax ex: &quot;0.5:2&quot;, the second value controls the speed of playback</p>","name":"scrub","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["samples(\'github:switchangel/pad\')\\\\ns(\\\\"swpad:0\\\\").scrub(\\\\"{0.1!2 .25@3 0.7!2 <0.8:1.5>}%8\\\\")","samples(\'github:yaxu/clean-breaks/main\');\\\\ns(\\\\"amen/4\\\\").fit().scrub(\\\\"{0@3 0@2 4@3}%8\\\\".div(16))"],"scope":"static","longname":"Pattern.scrub","kind":"member"},{"comment":"/**\\\\n * Intended for a debugging, drawLine renders the pattern as a string, where each character represents the same time span.\\\\n * Should only be used with single characters as values, otherwise the character slots will be messed up.\\\\n * Character legend:\\\\n *\\\\n * - \\\\"|\\\\" cycle separator\\\\n * - \\\\"-\\\\" hold previous value\\\\n * - \\\\".\\\\" silence\\\\n *\\\\n * @param {Pattern} pattern the pattern to use\\\\n * @param {number} chars max number of characters (approximately)\\\\n * @returns string\\\\n * @example\\\\n * const line = drawLine(\\\\"0 [1 2 3]\\\\", 10); // |0--123|0--123\\\\n * console.log(line);\\\\n * silence;\\\\n */","meta":{"range":[1426,2796],"filename":"drawLine.mjs","lineno":26,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100018983","name":"drawLine","type":"FunctionDeclaration","paramnames":["pat","chars"]},"vars":{"cycle":"drawLine~cycle","pos":"drawLine~pos","lines":"drawLine~lines","emptyLine":"drawLine~emptyLine","haps":"drawLine~haps","durations":"drawLine~durations","":null,"charFraction":"drawLine~charFraction","totalSlots":"drawLine~totalSlots","i":"drawLine~i","undefined":null,"matches":"drawLine~matches","missingLines":"drawLine~missingLines"}},"description":"<p>Intended for a debugging, drawLine renders the pattern as a string, where each character represents the same time span.\\\\nShould only be used with single characters as values, otherwise the character slots will be messed up.\\\\nCharacter legend:</p>\\\\n<ul>\\\\n<li>&quot;|&quot; cycle separator</li>\\\\n<li>&quot;-&quot; hold previous value</li>\\\\n<li>&quot;.&quot; silence</li>\\\\n</ul>","params":[{"type":{"names":["Pattern"]},"description":"<p>the pattern to use</p>","name":"pattern"},{"type":{"names":["number"]},"description":"<p>max number of characters (approximately)</p>","name":"chars"}],"returns":[{"description":"<p>string</p>"}],"examples":["const line = drawLine(\\\\"0 [1 2 3]\\\\", 10); // |0--123|0--123\\\\nconsole.log(line);\\\\nsilence;"],"name":"drawLine","longname":"drawLine","kind":"function","scope":"global"},{"comment":"/**\\\\n * Changes the structure of the pattern to form an euclidean rhythm.\\\\n * Euclidian rhythms are rhythms obtained using the greatest common\\\\n * divisor of two numbers.  They were described in 2004 by Godfried\\\\n * Toussaint, a canadian computer scientist.  Euclidian rhythms are\\\\n * really useful for computer/algorithmic music because they can\\\\n * describe a large number of rhythms with a couple of numbers.\\\\n *\\\\n * @memberof Pattern\\\\n * @name euclid\\\\n * @param {number} pulses the number of onsets / beats\\\\n * @param {number} steps the number of steps to fill\\\\n * @returns Pattern\\\\n * @example\\\\n * // The Cuban tresillo pattern.\\\\n * note(\\\\"c3\\\\").euclid(3,8)\\\\n */","meta":{"filename":"euclid.mjs","lineno":57,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Changes the structure of the pattern to form an euclidean rhythm.\\\\nEuclidian rhythms are rhythms obtained using the greatest common\\\\ndivisor of two numbers.  They were described in 2004 by Godfried\\\\nToussaint, a canadian computer scientist.  Euclidian rhythms are\\\\nreally useful for computer/algorithmic music because they can\\\\ndescribe a large number of rhythms with a couple of numbers.</p>","memberof":"Pattern","name":"euclid","params":[{"type":{"names":["number"]},"description":"<p>the number of onsets / beats</p>","name":"pulses"},{"type":{"names":["number"]},"description":"<p>the number of steps to fill</p>","name":"steps"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["// The Cuban tresillo pattern.\\\\nnote(\\\\"c3\\\\").euclid(3,8)"],"scope":"static","longname":"Pattern.euclid","kind":"member"},{"comment":"/**\\\\n * Like \\`euclid\\`, but has an additional parameter for \'rotating\' the resulting sequence.\\\\n * @memberof Pattern\\\\n * @name euclidRot\\\\n * @param {number} pulses the number of onsets / beats\\\\n * @param {number} steps the number of steps to fill\\\\n * @param {number} rotation offset in steps\\\\n * @returns Pattern\\\\n * @example\\\\n * // A Samba rhythm necklace from Brazil\\\\n * note(\\\\"c3\\\\").euclidRot(3,16,14)\\\\n */","meta":{"filename":"euclid.mjs","lineno":75,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Like <code>euclid</code>, but has an additional parameter for \'rotating\' the resulting sequence.</p>","memberof":"Pattern","name":"euclidRot","params":[{"type":{"names":["number"]},"description":"<p>the number of onsets / beats</p>","name":"pulses"},{"type":{"names":["number"]},"description":"<p>the number of steps to fill</p>","name":"steps"},{"type":{"names":["number"]},"description":"<p>offset in steps</p>","name":"rotation"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["// A Samba rhythm necklace from Brazil\\\\nnote(\\\\"c3\\\\").euclidRot(3,16,14)"],"scope":"static","longname":"Pattern.euclidRot","kind":"member"},{"comment":"/**\\\\n * @example // A thirteenth century Persian rhythm called Khafif-e-ramal.\\\\n * note(\\\\"c3\\\\").euclid(2,5)\\\\n * @example // The archetypal pattern of the Cumbia from Colombia, as well as a Calypso rhythm from Trinidad.\\\\n * note(\\\\"c3\\\\").euclid(3,4)\\\\n * @example // Another thirteenth century Persian rhythm by the name of Khafif-e-ramal, as well as a Rumanian folk-dance rhythm.\\\\n * note(\\\\"c3\\\\").euclidRot(3,5,2)\\\\n * @example // A Ruchenitza rhythm used in a Bulgarian folk-dance.\\\\n * note(\\\\"c3\\\\").euclid(3,7)\\\\n * @example // The Cuban tresillo pattern.\\\\n * note(\\\\"c3\\\\").euclid(3,8)\\\\n * @example // Another Ruchenitza Bulgarian folk-dance rhythm.\\\\n * note(\\\\"c3\\\\").euclid(4,7)\\\\n * @example // The Aksak rhythm of Turkey.\\\\n * note(\\\\"c3\\\\").euclid(4,9)\\\\n * @example // The metric pattern used by Frank Zappa in his piece titled Outside Now.\\\\n * note(\\\\"c3\\\\").euclid(4,11)\\\\n * @example // Yields the York-Samai pattern, a popular Arab rhythm.\\\\n * note(\\\\"c3\\\\").euclid(5,6)\\\\n * @example // The Nawakhat pattern, another popular Arab rhythm.\\\\n * note(\\\\"c3\\\\").euclid(5,7)\\\\n * @example // The Cuban cinquillo pattern.\\\\n * note(\\\\"c3\\\\").euclid(5,8)\\\\n * @example // A popular Arab rhythm called Agsag-Samai.\\\\n * note(\\\\"c3\\\\").euclid(5,9)\\\\n * @example // The metric pattern used by Moussorgsky in Pictures at an Exhibition.\\\\n * note(\\\\"c3\\\\").euclid(5,11)\\\\n * @example // The Venda clapping pattern of a South African children’s song.\\\\n * note(\\\\"c3\\\\").euclid(5,12)\\\\n * @example // The Bossa-Nova rhythm necklace of Brazil.\\\\n * note(\\\\"c3\\\\").euclid(5,16)\\\\n * @example // A typical rhythm played on the Bendir (frame drum).\\\\n * note(\\\\"c3\\\\").euclid(7,8)\\\\n * @example // A common West African bell pattern.\\\\n * note(\\\\"c3\\\\").euclid(7,12)\\\\n * @example // A Samba rhythm necklace from Brazil.\\\\n * note(\\\\"c3\\\\").euclidRot(7,16,14)\\\\n * @example // A rhythm necklace used in the Central African Republic.\\\\n * note(\\\\"c3\\\\").euclid(9,16)\\\\n * @example // A rhythm necklace of the Aka Pygmies of Central Africa.\\\\n * note(\\\\"c3\\\\").euclidRot(11,24,14)\\\\n * @example // Another rhythm necklace of the Aka Pygmies of the upper Sangha.\\\\n * note(\\\\"c3\\\\").euclidRot(13,24,5)\\\\n */","meta":{"range":[5273,5425],"filename":"euclid.mjs","lineno":133,"columnno":6,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100019487","name":"_euclidRot","type":"FunctionExpression"},"vars":{"b":"_euclidRot~b"}},"examples":["// A thirteenth century Persian rhythm called Khafif-e-ramal.\\\\nnote(\\\\"c3\\\\").euclid(2,5)","// The archetypal pattern of the Cumbia from Colombia, as well as a Calypso rhythm from Trinidad.\\\\nnote(\\\\"c3\\\\").euclid(3,4)","// Another thirteenth century Persian rhythm by the name of Khafif-e-ramal, as well as a Rumanian folk-dance rhythm.\\\\nnote(\\\\"c3\\\\").euclidRot(3,5,2)","// A Ruchenitza rhythm used in a Bulgarian folk-dance.\\\\nnote(\\\\"c3\\\\").euclid(3,7)","// The Cuban tresillo pattern.\\\\nnote(\\\\"c3\\\\").euclid(3,8)","// Another Ruchenitza Bulgarian folk-dance rhythm.\\\\nnote(\\\\"c3\\\\").euclid(4,7)","// The Aksak rhythm of Turkey.\\\\nnote(\\\\"c3\\\\").euclid(4,9)","// The metric pattern used by Frank Zappa in his piece titled Outside Now.\\\\nnote(\\\\"c3\\\\").euclid(4,11)","// Yields the York-Samai pattern, a popular Arab rhythm.\\\\nnote(\\\\"c3\\\\").euclid(5,6)","// The Nawakhat pattern, another popular Arab rhythm.\\\\nnote(\\\\"c3\\\\").euclid(5,7)","// The Cuban cinquillo pattern.\\\\nnote(\\\\"c3\\\\").euclid(5,8)","// A popular Arab rhythm called Agsag-Samai.\\\\nnote(\\\\"c3\\\\").euclid(5,9)","// The metric pattern used by Moussorgsky in Pictures at an Exhibition.\\\\nnote(\\\\"c3\\\\").euclid(5,11)","// The Venda clapping pattern of a South African children’s song.\\\\nnote(\\\\"c3\\\\").euclid(5,12)","// The Bossa-Nova rhythm necklace of Brazil.\\\\nnote(\\\\"c3\\\\").euclid(5,16)","// A typical rhythm played on the Bendir (frame drum).\\\\nnote(\\\\"c3\\\\").euclid(7,8)","// A common West African bell pattern.\\\\nnote(\\\\"c3\\\\").euclid(7,12)","// A Samba rhythm necklace from Brazil.\\\\nnote(\\\\"c3\\\\").euclidRot(7,16,14)","// A rhythm necklace used in the Central African Republic.\\\\nnote(\\\\"c3\\\\").euclid(9,16)","// A rhythm necklace of the Aka Pygmies of Central Africa.\\\\nnote(\\\\"c3\\\\").euclidRot(11,24,14)","// Another rhythm necklace of the Aka Pygmies of the upper Sangha.\\\\nnote(\\\\"c3\\\\").euclidRot(13,24,5)"],"name":"_euclidRot","longname":"_euclidRot","kind":"function","scope":"global","params":[]},{"comment":"/**\\\\n * Similar to \\`euclid\\`, but each pulse is held until the next pulse,\\\\n * so there will be no gaps.\\\\n * @name euclidLegato\\\\n * @memberof Pattern\\\\n * @param {number} pulses the number of onsets / beats\\\\n * @param {number} steps the number of steps to fill\\\\n * @example\\\\n * note(\\\\"c3\\\\").euclidLegato(3,8)\\\\n */","meta":{"filename":"euclid.mjs","lineno":149,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Similar to <code>euclid</code>, but each pulse is held until the next pulse,\\\\nso there will be no gaps.</p>","name":"euclidLegato","memberof":"Pattern","params":[{"type":{"names":["number"]},"description":"<p>the number of onsets / beats</p>","name":"pulses"},{"type":{"names":["number"]},"description":"<p>the number of steps to fill</p>","name":"steps"}],"examples":["note(\\\\"c3\\\\").euclidLegato(3,8)"],"scope":"static","longname":"Pattern.euclidLegato","kind":"member"},{"comment":"/**\\\\n * Similar to \\`euclid\\`, but each pulse is held until the next pulse,\\\\n * so there will be no gaps, and has an additional parameter for \'rotating\'\\\\n * the resulting sequence\\\\n * @name euclidLegatoRot\\\\n * @memberof Pattern\\\\n * @param {number} pulses the number of onsets / beats\\\\n * @param {number} steps the number of steps to fill\\\\n * @param {number} rotation offset in steps\\\\n * @example\\\\n * note(\\\\"c3\\\\").euclidLegatoRot(3,5,2)\\\\n */","meta":{"filename":"euclid.mjs","lineno":177,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Similar to <code>euclid</code>, but each pulse is held until the next pulse,\\\\nso there will be no gaps, and has an additional parameter for \'rotating\'\\\\nthe resulting sequence</p>","name":"euclidLegatoRot","memberof":"Pattern","params":[{"type":{"names":["number"]},"description":"<p>the number of onsets / beats</p>","name":"pulses"},{"type":{"names":["number"]},"description":"<p>the number of steps to fill</p>","name":"steps"},{"type":{"names":["number"]},"description":"<p>offset in steps</p>","name":"rotation"}],"examples":["note(\\\\"c3\\\\").euclidLegatoRot(3,5,2)"],"scope":"static","longname":"Pattern.euclidLegatoRot","kind":"member"},{"comment":"/** @class Class representing a pattern. */","meta":{"range":[1671,26458],"filename":"pattern.mjs","lineno":42,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100021979","name":"exports.Pattern","type":"ClassDeclaration"}},"name":"Pattern","longname":"Pattern","kind":"class","classdesc":"<p>Class representing a pattern.</p>","scope":"global","description":"<p>Create a pattern. As an end user, you will most likely not create a Pattern directly.</p>","tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"memberof":"Pattern","params":[{"type":{"names":["function"]},"description":"<p>The function that maps a <code>State</code> to an array of <code>Hap</code>.</p>","name":"query"}]},{"comment":"/**\\\\n   * Returns a new pattern, with the function applied to the value of\\\\n   * each hap. It has the alias \\`fmap\\`.\\\\n   * @synonyms fmap\\\\n   * @param {Function} func to to apply to the value\\\\n   * @returns Pattern\\\\n   * @example\\\\n   * \\\\"0 1 2\\\\".withValue(v => v + 10).log()\\\\n   */","meta":{"range":[2978,3147],"filename":"pattern.mjs","lineno":91,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100022087","name":"Pattern#withValue","type":"MethodDefinition","paramnames":["func"]},"vars":{"":null}},"description":"<p>Returns a new pattern, with the function applied to the value of\\\\neach hap. It has the alias <code>fmap</code>.</p>","synonyms_text":"fmap","synonyms":["fmap"],"params":[{"type":{"names":["function"]},"description":"<p>to to apply to the value</p>","name":"func"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["\\\\"0 1 2\\\\".withValue(v => v + 10).log()"],"name":"withValue","longname":"Pattern#withValue","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\\\n   * see \\`withValue\\`\\\\n   * @noAutocomplete\\\\n   */","meta":{"range":[3350,3399],"filename":"pattern.mjs","lineno":109,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100022144","name":"Pattern#fmap","type":"MethodDefinition","paramnames":["func"]},"vars":{"":null}},"description":"<p>see <code>withValue</code></p>","tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"fmap","longname":"Pattern#fmap","kind":"function","memberof":"Pattern","scope":"instance","params":[]},{"comment":"/**\\\\n   * Assumes \'this\' is a pattern of functions, and given a function to\\\\n   * resolve wholes, applies a given pattern of values to that\\\\n   * pattern of functions.\\\\n   * @param {Function} whole_func\\\\n   * @param {Function} func\\\\n   * @noAutocomplete\\\\n   * @returns Pattern\\\\n   */","meta":{"range":[3681,4423],"filename":"pattern.mjs","lineno":122,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100022155","name":"Pattern#appWhole","type":"MethodDefinition","paramnames":["whole_func","pat_val"]},"vars":{"":null}},"description":"<p>Assumes \'this\' is a pattern of functions, and given a function to\\\\nresolve wholes, applies a given pattern of values to that\\\\npattern of functions.</p>","params":[{"type":{"names":["function"]},"name":"whole_func"},{"type":{"names":["function"]},"name":"func"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"returns":[{"description":"<p>Pattern</p>"}],"name":"appWhole","longname":"Pattern#appWhole","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\\\n   * When this method is called on a pattern of functions, it matches its haps\\\\n   * with those in the given pattern of values.  A new pattern is returned, with\\\\n   * each matching value applied to the corresponding function.\\\\n   *\\\\n   * In this \\`_appBoth\\` variant, where timespans of the function and value haps\\\\n   * are not the same but do intersect, the resulting hap has a timespan of the\\\\n   * intersection. This applies to both the part and the whole timespan.\\\\n   * @param {Pattern} pat_val\\\\n   * @noAutocomplete\\\\n   * @returns Pattern\\\\n   */","meta":{"range":[4974,5398],"filename":"pattern.mjs","lineno":158,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100022262","name":"Pattern#appBoth","type":"MethodDefinition","paramnames":["pat_val"]},"vars":{"":null}},"description":"<p>When this method is called on a pattern of functions, it matches its haps\\\\nwith those in the given pattern of values.  A new pattern is returned, with\\\\neach matching value applied to the corresponding function.</p>\\\\n<p>In this <code>_appBoth</code> variant, where timespans of the function and value haps\\\\nare not the same but do intersect, the resulting hap has a timespan of the\\\\nintersection. This applies to both the part and the whole timespan.</p>","params":[{"type":{"names":["Pattern"]},"name":"pat_val"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"returns":[{"description":"<p>Pattern</p>"}],"name":"appBoth","longname":"Pattern#appBoth","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\\\n   * As with \\`appBoth\\`, but the \\`whole\\` timespan is not the intersection,\\\\n   * but the timespan from the function of patterns that this method is called\\\\n   * on. In practice, this means that the pattern structure, including onsets,\\\\n   * are preserved from the pattern of functions (often referred to as the left\\\\n   * hand or inner pattern).\\\\n   * @param {Pattern} pat_val\\\\n   * @noAutocomplete\\\\n   * @returns Pattern\\\\n   */","meta":{"range":[5828,6632],"filename":"pattern.mjs","lineno":185,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100022322","name":"Pattern#appLeft","type":"MethodDefinition","paramnames":["pat_val"]},"vars":{"":null}},"description":"<p>As with <code>appBoth</code>, but the <code>whole</code> timespan is not the intersection,\\\\nbut the timespan from the function of patterns that this method is called\\\\non. In practice, this means that the pattern structure, including onsets,\\\\nare preserved from the pattern of functions (often referred to as the left\\\\nhand or inner pattern).</p>","params":[{"type":{"names":["Pattern"]},"name":"pat_val"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"returns":[{"description":"<p>Pattern</p>"}],"name":"appLeft","longname":"Pattern#appLeft","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\\\n   * As with \\`appLeft\\`, but \\`whole\\` timespans are instead taken from the\\\\n   * pattern of values, i.e. structure is preserved from the right hand/outer\\\\n   * pattern.\\\\n   * @param {Pattern} pat_val\\\\n   * @noAutocomplete\\\\n   * @returns Pattern\\\\n   */","meta":{"range":[6886,7694],"filename":"pattern.mjs","lineno":218,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100022444","name":"Pattern#appRight","type":"MethodDefinition","paramnames":["pat_val"]},"vars":{"":null}},"description":"<p>As with <code>appLeft</code>, but <code>whole</code> timespans are instead taken from the\\\\npattern of values, i.e. structure is preserved from the right hand/outer\\\\npattern.</p>","params":[{"type":{"names":["Pattern"]},"name":"pat_val"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"returns":[{"description":"<p>Pattern</p>"}],"name":"appRight","longname":"Pattern#appRight","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\\\n   * Query haps inside the given time span.\\\\n   *\\\\n   * @param {Fraction | number} begin from time\\\\n   * @param {Fraction | number} end to time\\\\n   * @returns Hap[]\\\\n   * @example\\\\n   * const pattern = sequence(\'a\', [\'b\', \'c\'])\\\\n   * const haps = pattern.queryArc(0, 1)\\\\n   * console.log(haps)\\\\n   * silence\\\\n   * @noAutocomplete\\\\n   */","meta":{"range":[13330,13546],"filename":"pattern.mjs","lineno":414,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023124","name":"Pattern#queryArc","type":"MethodDefinition","paramnames":["begin","end","controls"]},"vars":{"":null}},"description":"<p>Query haps inside the given time span.</p>","params":[{"type":{"names":["Fraction","number"]},"description":"<p>from time</p>","name":"begin"},{"type":{"names":["Fraction","number"]},"description":"<p>to time</p>","name":"end"}],"returns":[{"description":"<p>Hap[]</p>"}],"examples":["const pattern = sequence(\'a\', [\'b\', \'c\'])\\\\nconst haps = pattern.queryArc(0, 1)\\\\nconsole.log(haps)\\\\nsilence"],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"queryArc","longname":"Pattern#queryArc","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\\\n   * Returns a new pattern, with queries split at cycle boundaries. This makes\\\\n   * some calculations easier to express, as all haps are then constrained to\\\\n   * happen within a cycle.\\\\n   * @returns Pattern\\\\n   * @noAutocomplete\\\\n   */","meta":{"range":[13790,13990],"filename":"pattern.mjs","lineno":430,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023160","name":"Pattern#splitQueries","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Returns a new pattern, with queries split at cycle boundaries. This makes\\\\nsome calculations easier to express, as all haps are then constrained to\\\\nhappen within a cycle.</p>","returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"splitQueries","longname":"Pattern#splitQueries","kind":"function","memberof":"Pattern","scope":"instance","params":[]},{"comment":"/**\\\\n   * Returns a new pattern, where the given function is applied to the query\\\\n   * timespan before passing it to the original pattern.\\\\n   * @param {Function} func the function to apply\\\\n   * @returns Pattern\\\\n   * @noAutocomplete\\\\n   */","meta":{"range":[14233,14327],"filename":"pattern.mjs","lineno":445,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023200","name":"Pattern#withQuerySpan","type":"MethodDefinition","paramnames":["func"]},"vars":{"":null}},"description":"<p>Returns a new pattern, where the given function is applied to the query\\\\ntimespan before passing it to the original pattern.</p>","params":[{"type":{"names":["function"]},"description":"<p>the function to apply</p>","name":"func"}],"returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"withQuerySpan","longname":"Pattern#withQuerySpan","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\\\n   * As with \\`withQuerySpan\\`, but the function is applied to both the\\\\n   * begin and end time of the query timespan.\\\\n   * @param {Function} func the function to apply\\\\n   * @returns Pattern\\\\n   * @noAutocomplete\\\\n   */","meta":{"range":[14787,14906],"filename":"pattern.mjs","lineno":467,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023256","name":"Pattern#withQueryTime","type":"MethodDefinition","paramnames":["func"]},"vars":{"":null}},"description":"<p>As with <code>withQuerySpan</code>, but the function is applied to both the\\\\nbegin and end time of the query timespan.</p>","params":[{"type":{"names":["function"]},"description":"<p>the function to apply</p>","name":"func"}],"returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"withQueryTime","longname":"Pattern#withQueryTime","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\\\n   * Similar to \\`withQuerySpan\\`, but the function is applied to the timespans\\\\n   * of all haps returned by pattern queries (both \\`part\\` timespans, and where\\\\n   * present, \\`whole\\` timespans).\\\\n   * @param {Function} func\\\\n   * @returns Pattern\\\\n   * @noAutocomplete\\\\n   */","meta":{"range":[15184,15294],"filename":"pattern.mjs","lineno":479,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023281","name":"Pattern#withHapSpan","type":"MethodDefinition","paramnames":["func"]},"vars":{"":null}},"description":"<p>Similar to <code>withQuerySpan</code>, but the function is applied to the timespans\\\\nof all haps returned by pattern queries (both <code>part</code> timespans, and where\\\\npresent, <code>whole</code> timespans).</p>","params":[{"type":{"names":["function"]},"name":"func"}],"returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"withHapSpan","longname":"Pattern#withHapSpan","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\\\n   * As with \\`withHapSpan\\`, but the function is applied to both the\\\\n   * begin and end time of the hap timespans.\\\\n   * @param {Function} func the function to apply\\\\n   * @returns Pattern\\\\n   * @noAutocomplete\\\\n   */","meta":{"range":[15517,15600],"filename":"pattern.mjs","lineno":490,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023306","name":"Pattern#withHapTime","type":"MethodDefinition","paramnames":["func"]},"vars":{"":null}},"description":"<p>As with <code>withHapSpan</code>, but the function is applied to both the\\\\nbegin and end time of the hap timespans.</p>","params":[{"type":{"names":["function"]},"description":"<p>the function to apply</p>","name":"func"}],"returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"withHapTime","longname":"Pattern#withHapTime","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\\\n   * Returns a new pattern with the given function applied to the list of haps returned by every query.\\\\n   * @param {Function} func\\\\n   * @returns Pattern\\\\n   * @noAutocomplete\\\\n   */","meta":{"range":[15791,15938],"filename":"pattern.mjs","lineno":500,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023323","name":"Pattern#withHaps","type":"MethodDefinition","paramnames":["func"]},"vars":{"":null}},"description":"<p>Returns a new pattern with the given function applied to the list of haps returned by every query.</p>","params":[{"type":{"names":["function"]},"name":"func"}],"returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"withHaps","longname":"Pattern#withHaps","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\\\n   * As with \\`withHaps\\`, but applies the function to every hap, rather than every list of haps.\\\\n   * @param {Function} func\\\\n   * @returns Pattern\\\\n   * @noAutocomplete\\\\n   */","meta":{"range":[16121,16192],"filename":"pattern.mjs","lineno":512,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023353","name":"Pattern#withHap","type":"MethodDefinition","paramnames":["func"]},"vars":{"":null}},"description":"<p>As with <code>withHaps</code>, but applies the function to every hap, rather than every list of haps.</p>","params":[{"type":{"names":["function"]},"name":"func"}],"returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"withHap","longname":"Pattern#withHap","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\\\n   * Returns a new pattern with the context field set to every hap set to the given value.\\\\n   * @param {*} context\\\\n   * @returns Pattern\\\\n   * @noAutocomplete\\\\n   */","meta":{"range":[16366,16450],"filename":"pattern.mjs","lineno":522,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023370","name":"Pattern#setContext","type":"MethodDefinition","paramnames":["context"]},"vars":{"":null}},"description":"<p>Returns a new pattern with the context field set to every hap set to the given value.</p>","params":[{"type":{"names":["*"]},"name":"context"}],"returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"setContext","longname":"Pattern#setContext","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\\\n   * Returns a new pattern with the given function applied to the context field of every hap.\\\\n   * @param {Function} func\\\\n   * @returns Pattern\\\\n   * @noAutocomplete\\\\n   */","meta":{"range":[16631,16871],"filename":"pattern.mjs","lineno":532,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023387","name":"Pattern#withContext","type":"MethodDefinition","paramnames":["func"]},"vars":{"":null}},"description":"<p>Returns a new pattern with the given function applied to the context field of every hap.</p>","params":[{"type":{"names":["function"]},"name":"func"}],"returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"withContext","longname":"Pattern#withContext","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\\\n   * Returns a new pattern with the context field of every hap set to an empty object.\\\\n   * @returns Pattern\\\\n   * @noAutocomplete\\\\n   */","meta":{"range":[17017,17091],"filename":"pattern.mjs","lineno":546,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023435","name":"Pattern#stripContext","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Returns a new pattern with the context field of every hap set to an empty object.</p>","returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"stripContext","longname":"Pattern#stripContext","kind":"function","memberof":"Pattern","scope":"instance","params":[]},{"comment":"/**\\\\n   * Returns a new pattern with the given location information added to the\\\\n   * context of every hap.\\\\n   * @param {Number} start start offset\\\\n   * @param {Number} end end offset\\\\n   * @returns Pattern\\\\n   * @noAutocomplete\\\\n   */","meta":{"range":[17329,17696],"filename":"pattern.mjs","lineno":558,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023451","name":"Pattern#withLoc","type":"MethodDefinition","paramnames":["start","end"]},"vars":{"":null}},"description":"<p>Returns a new pattern with the given location information added to the\\\\ncontext of every hap.</p>","params":[{"type":{"names":["Number"]},"description":"<p>start offset</p>","name":"start"},{"type":{"names":["Number"]},"description":"<p>end offset</p>","name":"end"}],"returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"withLoc","longname":"Pattern#withLoc","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\\\n   * Returns a new Pattern, which only returns haps that meet the given test.\\\\n   * @param {Function} hap_test - a function which returns false for haps to be removed from the pattern\\\\n   * @returns Pattern\\\\n   * @noAutocomplete\\\\n   */","meta":{"range":[17938,18035],"filename":"pattern.mjs","lineno":580,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023515","name":"Pattern#filterHaps","type":"MethodDefinition","paramnames":["hap_test"]},"vars":{"":null}},"description":"<p>Returns a new Pattern, which only returns haps that meet the given test.</p>","params":[{"type":{"names":["function"]},"description":"<p>a function which returns false for haps to be removed from the pattern</p>","name":"hap_test"}],"returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"filterHaps","longname":"Pattern#filterHaps","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\\\n   * As with \\`filterHaps\\`, but the function is applied to values\\\\n   * inside haps.\\\\n   * @param {Function} value_test\\\\n   * @returns Pattern\\\\n   * @noAutocomplete\\\\n   */","meta":{"range":[18211,18356],"filename":"pattern.mjs","lineno":591,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023534","name":"Pattern#filterValues","type":"MethodDefinition","paramnames":["value_test"]},"vars":{"":null}},"description":"<p>As with <code>filterHaps</code>, but the function is applied to values\\\\ninside haps.</p>","params":[{"type":{"names":["function"]},"name":"value_test"}],"returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"filterValues","longname":"Pattern#filterValues","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\\\n   * Returns a new pattern, with haps containing undefined values removed from\\\\n   * query results.\\\\n   * @returns Pattern\\\\n   * @noAutocomplete\\\\n   */","meta":{"range":[18514,18595],"filename":"pattern.mjs","lineno":601,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023565","name":"Pattern#removeUndefineds","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Returns a new pattern, with haps containing undefined values removed from\\\\nquery results.</p>","returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"removeUndefineds","longname":"Pattern#removeUndefineds","kind":"function","memberof":"Pattern","scope":"instance","params":[]},{"comment":"/**\\\\n   * Returns a new pattern, with all haps without onsets filtered out. A hap\\\\n   * with an onset is one with a \\`whole\\` timespan that begins at the same time\\\\n   * as its \\`part\\` timespan.\\\\n   * @returns Pattern\\\\n   * @noAutocomplete\\\\n   */","meta":{"range":[18839,19104],"filename":"pattern.mjs","lineno":612,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023579","name":"Pattern#onsetsOnly","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Returns a new pattern, with all haps without onsets filtered out. A hap\\\\nwith an onset is one with a <code>whole</code> timespan that begins at the same time\\\\nas its <code>part</code> timespan.</p>","returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"onsetsOnly","longname":"Pattern#onsetsOnly","kind":"function","memberof":"Pattern","scope":"instance","params":[]},{"comment":"/**\\\\n   * Returns a new pattern, with \'continuous\' haps (those without \'whole\'\\\\n   * timespans) removed from query results.\\\\n   * @returns Pattern\\\\n   * @noAutocomplete\\\\n   */","meta":{"range":[19281,19415],"filename":"pattern.mjs","lineno":625,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023594","name":"Pattern#discreteOnly","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Returns a new pattern, with \'continuous\' haps (those without \'whole\'\\\\ntimespans) removed from query results.</p>","returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"discreteOnly","longname":"Pattern#discreteOnly","kind":"function","memberof":"Pattern","scope":"instance","params":[]},{"comment":"/**\\\\n   * Combines adjacent haps with the same value and whole.  Only\\\\n   * intended for use in tests.\\\\n   * @noAutocomplete\\\\n   */","meta":{"range":[19549,20994],"filename":"pattern.mjs","lineno":635,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023608","name":"Pattern#defragmentHaps","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Combines adjacent haps with the same value and whole.  Only\\\\nintended for use in tests.</p>","tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"defragmentHaps","longname":"Pattern#defragmentHaps","kind":"function","memberof":"Pattern","scope":"instance","params":[]},{"comment":"/**\\\\n   * Queries the pattern for the first cycle, returning Haps. Mainly of use when\\\\n   * debugging a pattern.\\\\n   * @param {Boolean} with_context - set to true, otherwise the context field\\\\n   * will be stripped from the resulting haps.\\\\n   * @returns [Hap]\\\\n   * @noAutocomplete\\\\n   */","meta":{"range":[21283,21481],"filename":"pattern.mjs","lineno":690,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023839","name":"Pattern#firstCycle","type":"MethodDefinition","paramnames":["with_context"]},"vars":{"":null}},"description":"<p>Queries the pattern for the first cycle, returning Haps. Mainly of use when\\\\ndebugging a pattern.</p>","params":[{"type":{"names":["Boolean"]},"description":"<p>set to true, otherwise the context field\\\\nwill be stripped from the resulting haps.</p>","name":"with_context","defaultvalue":false}],"returns":[{"description":"<p>[Hap]</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"firstCycle","longname":"Pattern#firstCycle","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\\\n   * Accessor for a list of values returned by querying the first cycle.\\\\n   * @noAutocomplete\\\\n   */","meta":{"range":[21591,21673],"filename":"pattern.mjs","lineno":702,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023876","name":"Pattern#firstCycleValues","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Accessor for a list of values returned by querying the first cycle.</p>","tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"firstCycleValues","longname":"Pattern#firstCycleValues","kind":"member","memberof":"Pattern","scope":"instance","params":[]},{"comment":"/**\\\\n   * More human-readable version of the \\`firstCycleValues\\` accessor.\\\\n   * @noAutocomplete\\\\n   */","meta":{"range":[21779,21942],"filename":"pattern.mjs","lineno":710,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023893","name":"Pattern#showFirstCycle","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>More human-readable version of the <code>firstCycleValues</code> accessor.</p>","tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"showFirstCycle","longname":"Pattern#showFirstCycle","kind":"member","memberof":"Pattern","scope":"instance","params":[]},{"comment":"/**\\\\n   * Returns a new pattern, which returns haps sorted in temporal order. Mainly\\\\n   * of use when comparing two patterns for equality, in tests.\\\\n   * @returns Pattern\\\\n   * @noAutocomplete\\\\n   */","meta":{"range":[22145,22418],"filename":"pattern.mjs","lineno":722,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023931","name":"Pattern#sortHapsByPart","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Returns a new pattern, which returns haps sorted in temporal order. Mainly\\\\nof use when comparing two patterns for equality, in tests.</p>","returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"sortHapsByPart","longname":"Pattern#sortHapsByPart","kind":"function","memberof":"Pattern","scope":"instance","params":[]},{"comment":"/**\\\\n   * Layers the result of the given function(s). Like \\`superimpose\\`, but without the original pattern:\\\\n   * @name layer\\\\n   * @memberof Pattern\\\\n   * @synonyms apply\\\\n   * @returns Pattern\\\\n   * @example\\\\n   * \\\\"<0 2 4 6 ~ 4 ~ 2 0!3 ~!5>*8\\\\"\\\\n   *   .layer(x=>x.add(\\\\"0,2\\\\"))\\\\n   *   .scale(\'C minor\').note()\\\\n   */","meta":{"filename":"pattern.mjs","lineno":780,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Layers the result of the given function(s). Like <code>superimpose</code>, but without the original pattern:</p>","name":"layer","memberof":"Pattern","synonyms_text":"apply","synonyms":["apply"],"returns":[{"description":"<p>Pattern</p>"}],"examples":["\\\\"<0 2 4 6 ~ 4 ~ 2 0!3 ~!5>*8\\\\"\\\\n  .layer(x=>x.add(\\\\"0,2\\\\"))\\\\n  .scale(\'C minor\').note()"],"scope":"static","longname":"Pattern.layer","kind":"member"},{"comment":"/**\\\\n   * Superimposes the result of the given function(s) on top of the original pattern:\\\\n   * @name superimpose\\\\n   * @memberof Pattern\\\\n   * @returns Pattern\\\\n   * @example\\\\n   * \\\\"<0 2 4 6 ~ 4 ~ 2 0!3 ~!5>*8\\\\"\\\\n   *   .superimpose(x=>x.add(2))\\\\n   *   .scale(\'C minor\').note()\\\\n   */","meta":{"filename":"pattern.mjs","lineno":795,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Superimposes the result of the given function(s) on top of the original pattern:</p>","name":"superimpose","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["\\\\"<0 2 4 6 ~ 4 ~ 2 0!3 ~!5>*8\\\\"\\\\n  .superimpose(x=>x.add(2))\\\\n  .scale(\'C minor\').note()"],"scope":"static","longname":"Pattern.superimpose","kind":"member"},{"comment":"/**\\\\n * Selects indices in in stacked notes.\\\\n * @example\\\\n * note(\\\\"<[c,eb,g]!2 [c,f,ab] [d,f,ab]>\\\\")\\\\n * .arpWith(haps => haps[2])\\\\n * */","meta":{"range":[27428,27658],"filename":"pattern.mjs","lineno":907,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100024584","name":"exports.arpWith","type":"VariableDeclaration"}},"description":"<p>Selects indices in in stacked notes.</p>","examples":["note(\\\\"<[c,eb,g]!2 [c,f,ab] [d,f,ab]>\\\\")\\\\n.arpWith(haps => haps[2])"],"name":"arpWith","longname":"arpWith","kind":"constant","scope":"global"},{"comment":"/**\\\\n * Selects indices in in stacked notes.\\\\n * @example\\\\n * note(\\\\"<[c,eb,g]!2 [c,f,ab] [d,f,ab]>\\\\")\\\\n * .arp(\\\\"0 [0,2] 1 [0,2]\\\\")\\\\n * */","meta":{"range":[27791,27934],"filename":"pattern.mjs","lineno":921,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100024638","name":"exports.arp","type":"VariableDeclaration"}},"description":"<p>Selects indices in in stacked notes.</p>","examples":["note(\\\\"<[c,eb,g]!2 [c,f,ab] [d,f,ab]>\\\\")\\\\n.arp(\\\\"0 [0,2] 1 [0,2]\\\\")"],"name":"arp","longname":"arp","kind":"constant","scope":"global"},{"comment":"/**\\\\n     *\\\\n     * Assumes a pattern of numbers. Adds the given number to each item in the pattern.\\\\n     * @name add\\\\n     * @memberof Pattern\\\\n     * @example\\\\n     * // Here, the triad 0, 2, 4 is shifted by different amounts\\\\n     * n(\\\\"0 2 4\\\\".add(\\\\"<0 3 4 0>\\\\")).scale(\\\\"C:major\\\\")\\\\n     * // Without add, the equivalent would be:\\\\n     * // n(\\\\"<[0 2 4] [3 5 7] [4 6 8] [0 2 4]>\\\\").scale(\\\\"C:major\\\\")\\\\n     * @example\\\\n     * // You can also use add with notes:\\\\n     * note(\\\\"c3 e3 g3\\\\".add(\\\\"<0 5 7 0>\\\\"))\\\\n     * // Behind the scenes, the notes are converted to midi numbers:\\\\n     * // note(\\\\"48 52 55\\\\".add(\\\\"<0 5 7 0>\\\\"))\\\\n     */","meta":{"filename":"pattern.mjs","lineno":984,"columnno":4,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Assumes a pattern of numbers. Adds the given number to each item in the pattern.</p>","name":"add","memberof":"Pattern","examples":["// Here, the triad 0, 2, 4 is shifted by different amounts\\\\nn(\\\\"0 2 4\\\\".add(\\\\"<0 3 4 0>\\\\")).scale(\\\\"C:major\\\\")\\\\n// Without add, the equivalent would be:\\\\n// n(\\\\"<[0 2 4] [3 5 7] [4 6 8] [0 2 4]>\\\\").scale(\\\\"C:major\\\\")","// You can also use add with notes:\\\\nnote(\\\\"c3 e3 g3\\\\".add(\\\\"<0 5 7 0>\\\\"))\\\\n// Behind the scenes, the notes are converted to midi numbers:\\\\n// note(\\\\"48 52 55\\\\".add(\\\\"<0 5 7 0>\\\\"))"],"scope":"static","longname":"Pattern.add","kind":"member"},{"comment":"/**\\\\n     *\\\\n     * Like add, but the given numbers are subtracted.\\\\n     * @name sub\\\\n     * @memberof Pattern\\\\n     * @example\\\\n     * n(\\\\"0 2 4\\\\".sub(\\\\"<0 1 2 3>\\\\")).scale(\\\\"C4:minor\\\\")\\\\n     * // See add for more information.\\\\n     */","meta":{"filename":"pattern.mjs","lineno":1001,"columnno":4,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Like add, but the given numbers are subtracted.</p>","name":"sub","memberof":"Pattern","examples":["n(\\\\"0 2 4\\\\".sub(\\\\"<0 1 2 3>\\\\")).scale(\\\\"C4:minor\\\\")\\\\n// See add for more information."],"scope":"static","longname":"Pattern.sub","kind":"member"},{"comment":"/**\\\\n     *\\\\n     * Multiplies each number by the given factor.\\\\n     * @name mul\\\\n     * @memberof Pattern\\\\n     * @example\\\\n     * \\\\"<1 1.5 [1.66, <2 2.33>]>*4\\\\".mul(150).freq()\\\\n     */","meta":{"filename":"pattern.mjs","lineno":1011,"columnno":4,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Multiplies each number by the given factor.</p>","name":"mul","memberof":"Pattern","examples":["\\\\"<1 1.5 [1.66, <2 2.33>]>*4\\\\".mul(150).freq()"],"scope":"static","longname":"Pattern.mul","kind":"member"},{"comment":"/**\\\\n     *\\\\n     * Divides each number by the given factor.\\\\n     * @name div\\\\n     * @memberof Pattern\\\\n     */","meta":{"filename":"pattern.mjs","lineno":1020,"columnno":4,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Divides each number by the given factor.</p>","name":"div","memberof":"Pattern","scope":"static","longname":"Pattern.div","kind":"member"},{"comment":"/**\\\\n   * Applies the given structure to the pattern:\\\\n   *\\\\n   * @example\\\\n   * note(\\\\"c,eb,g\\\\")\\\\n   *   .struct(\\\\"x ~ x ~ ~ x ~ x ~ ~ ~ x ~ x ~ ~\\\\")\\\\n   *   .slow(2)\\\\n   */","meta":{"range":[33802,33890],"filename":"pattern.mjs","lineno":1116,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100025178","name":"Pattern.prototype.struct","type":"FunctionExpression","paramnames":["args"]}},"description":"<p>Applies the given structure to the pattern:</p>","examples":["note(\\\\"c,eb,g\\\\")\\\\n  .struct(\\\\"x ~ x ~ ~ x ~ x ~ ~ ~ x ~ x ~ ~\\\\")\\\\n  .slow(2)"],"name":"struct","longname":"Pattern#struct","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\\\n   * Returns silence when mask is 0 or \\\\"~\\\\"\\\\n   *\\\\n   * @example\\\\n   * note(\\\\"c [eb,g] d [eb,g]\\\\").mask(\\\\"<1 [0 1]>\\\\")\\\\n   */","meta":{"range":[34110,34195],"filename":"pattern.mjs","lineno":1128,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100025218","name":"Pattern.prototype.mask","type":"FunctionExpression","paramnames":["args"]}},"description":"<p>Returns silence when mask is 0 or &quot;~&quot;</p>","examples":["note(\\\\"c [eb,g] d [eb,g]\\\\").mask(\\\\"<1 [0 1]>\\\\")"],"name":"mask","longname":"Pattern#mask","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\\\n   * Resets the pattern to the start of the cycle for each onset of the reset pattern.\\\\n   *\\\\n   * @example\\\\n   * s(\\\\"[<bd lt> sd]*2, hh*8\\\\").reset(\\\\"<x@3 x(5,8)>\\\\")\\\\n   */","meta":{"range":[34460,34549],"filename":"pattern.mjs","lineno":1140,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100025258","name":"Pattern.prototype.reset","type":"FunctionExpression","paramnames":["args"]}},"description":"<p>Resets the pattern to the start of the cycle for each onset of the reset pattern.</p>","examples":["s(\\\\"[<bd lt> sd]*2, hh*8\\\\").reset(\\\\"<x@3 x(5,8)>\\\\")"],"name":"reset","longname":"Pattern#reset","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\\\n   * Restarts the pattern for each onset of the restart pattern.\\\\n   * While reset will only reset the current cycle, restart will start from cycle 0.\\\\n   *\\\\n   * @example\\\\n   * s(\\\\"[<bd lt> sd]*2, hh*8\\\\").restart(\\\\"<x@3 x(5,8)>\\\\")\\\\n   */","meta":{"range":[34883,34976],"filename":"pattern.mjs","lineno":1153,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100025298","name":"Pattern.prototype.restart","type":"FunctionExpression","paramnames":["args"]}},"description":"<p>Restarts the pattern for each onset of the restart pattern.\\\\nWhile reset will only reset the current cycle, restart will start from cycle 0.</p>","examples":["s(\\\\"[<bd lt> sd]*2, hh*8\\\\").restart(\\\\"<x@3 x(5,8)>\\\\")"],"name":"restart","longname":"Pattern#restart","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\\\n * Does absolutely nothing, but with a given metrical \'steps\'\\\\n * @name gap\\\\n * @param  {number} steps\\\\n * @example\\\\n * gap(3) // \\\\"~@3\\\\"\\\\n */","meta":{"filename":"pattern.mjs","lineno":1187,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Does absolutely nothing, but with a given metrical \'steps\'</p>","name":"gap","params":[{"type":{"names":["number"]},"name":"steps"}],"examples":["gap(3) // \\\\"~@3\\\\""],"longname":"gap","kind":"member","scope":"global"},{"comment":"/**\\\\n * Does absolutely nothing..\\\\n * @name silence\\\\n * @example\\\\n * silence // \\\\"~\\\\"\\\\n */","meta":{"filename":"pattern.mjs","lineno":1196,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Does absolutely nothing..</p>","name":"silence","examples":["silence // \\\\"~\\\\""],"longname":"silence","kind":"member","scope":"global"},{"comment":"/** A discrete value that repeats once per cycle.\\\\n *\\\\n * @returns {Pattern}\\\\n * @example\\\\n * pure(\'e4\') // \\\\"e4\\\\"\\\\n * @noAutocomplete\\\\n */","meta":{"range":[36224,36481],"filename":"pattern.mjs","lineno":1214,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100025377","name":"exports.pure","type":"FunctionDeclaration","paramnames":["value"]}},"description":"<p>A discrete value that repeats once per cycle.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["pure(\'e4\') // \\\\"e4\\\\""],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"pure","longname":"pure","kind":"function","scope":"global"},{"comment":"/** Takes a list of patterns, and returns a pattern of lists.\\\\n */","meta":{"range":[37486,37666],"filename":"pattern.mjs","lineno":1252,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100025467","name":"exports.sequenceP","type":"FunctionDeclaration","paramnames":["pats"]}},"description":"<p>Takes a list of patterns, and returns a pattern of lists.</p>","name":"sequenceP","longname":"sequenceP","kind":"function","scope":"global"},{"comment":"/** The given items are played at the same time at the same length.\\\\n *\\\\n * @return {Pattern}\\\\n * @synonyms polyrhythm, pr\\\\n * @example\\\\n * stack(\\\\"g3\\\\", \\\\"b3\\\\", [\\\\"e4\\\\", \\\\"d4\\\\"]).note()\\\\n * // \\\\"g3,b3,[e4,d4]\\\\".note()\\\\n *\\\\n * @example\\\\n * // As a chained function:\\\\n * s(\\\\"hh*4\\\\").stack(\\\\n *   note(\\\\"c4(5,8)\\\\")\\\\n * )\\\\n */","meta":{"range":[37965,38343],"filename":"pattern.mjs","lineno":1274,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100025507","name":"exports.stack","type":"FunctionDeclaration","paramnames":["pats"]}},"description":"<p>The given items are played at the same time at the same length.</p>","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"polyrhythm, pr","synonyms":["polyrhythm","pr"],"examples":["stack(\\\\"g3\\\\", \\\\"b3\\\\", [\\\\"e4\\\\", \\\\"d4\\\\"]).note()\\\\n// \\\\"g3,b3,[e4,d4]\\\\".note()","// As a chained function:\\\\ns(\\\\"hh*4\\\\").stack(\\\\n  note(\\\\"c4(5,8)\\\\")\\\\n)"],"name":"stack","longname":"stack","kind":"function","scope":"global"},{"comment":"/** Concatenation: combines a list of patterns, switching between them successively, one per cycle:\\\\n *\\\\n * synonyms: \\`cat\\`\\\\n *\\\\n * @return {Pattern}\\\\n * @example\\\\n * slowcat(\\\\"e5\\\\", \\\\"b4\\\\", [\\\\"d5\\\\", \\\\"c5\\\\"])\\\\n *\\\\n */","meta":{"range":[40013,41063],"filename":"pattern.mjs","lineno":1352,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100025871","name":"exports.slowcat","type":"FunctionDeclaration","paramnames":["pats"]}},"description":"<p>Concatenation: combines a list of patterns, switching between them successively, one per cycle:</p>\\\\n<p>synonyms: <code>cat</code></p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["slowcat(\\\\"e5\\\\", \\\\"b4\\\\", [\\\\"d5\\\\", \\\\"c5\\\\"])"],"name":"slowcat","longname":"slowcat","kind":"function","scope":"global"},{"comment":"/** Concatenation: combines a list of patterns, switching between them successively, one per cycle. Unlike slowcat, this version will skip cycles.\\\\n * @param {...any} items - The items to concatenate\\\\n * @return {Pattern}\\\\n */","meta":{"range":[41289,41662],"filename":"pattern.mjs","lineno":1382,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100026031","name":"exports.slowcatPrime","type":"FunctionDeclaration","paramnames":["pats"]}},"description":"<p>Concatenation: combines a list of patterns, switching between them successively, one per cycle. Unlike slowcat, this version will skip cycles.</p>","params":[{"type":{"names":["any"]},"variable":true,"description":"<p>The items to concatenate</p>","name":"items"}],"returns":[{"type":{"names":["Pattern"]}}],"name":"slowcatPrime","longname":"slowcatPrime","kind":"function","scope":"global"},{"comment":"/** The given items are con**cat**enated, where each one takes one cycle.\\\\n *\\\\n * @param {...any} items - The items to concatenate\\\\n * @synonyms slowcat\\\\n * @return {Pattern}\\\\n * @example\\\\n * cat(\\\\"e5\\\\", \\\\"b4\\\\", [\\\\"d5\\\\", \\\\"c5\\\\"]).note()\\\\n * // \\\\"<e5 b4 [d5 c5]>\\\\".note()\\\\n *\\\\n * @example\\\\n * // As a chained function:\\\\n * s(\\\\"hh*4\\\\").cat(\\\\n *    note(\\\\"c4(5,8)\\\\")\\\\n * )\\\\n */","meta":{"range":[42011,42070],"filename":"pattern.mjs","lineno":1407,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100026084","name":"exports.cat","type":"FunctionDeclaration","paramnames":["pats"]}},"description":"<p>The given items are con<strong>cat</strong>enated, where each one takes one cycle.</p>","params":[{"type":{"names":["any"]},"variable":true,"description":"<p>The items to concatenate</p>","name":"items"}],"synonyms_text":"slowcat","synonyms":["slowcat"],"returns":[{"type":{"names":["Pattern"]}}],"examples":["cat(\\\\"e5\\\\", \\\\"b4\\\\", [\\\\"d5\\\\", \\\\"c5\\\\"]).note()\\\\n// \\\\"<e5 b4 [d5 c5]>\\\\".note()","// As a chained function:\\\\ns(\\\\"hh*4\\\\").cat(\\\\n   note(\\\\"c4(5,8)\\\\")\\\\n)"],"name":"cat","longname":"cat","kind":"function","scope":"global"},{"comment":"/**\\\\n * Allows to arrange multiple patterns together over multiple cycles.\\\\n * Takes a variable number of arrays with two elements specifying the number of cycles and the pattern to use.\\\\n *\\\\n * @return {Pattern}\\\\n * @example\\\\n * arrange(\\\\n *   [4, \\\\"<c a f e>(3,8)\\\\"],\\\\n *   [2, \\\\"<g a>(5,8)\\\\"]\\\\n * ).note()\\\\n */","meta":{"range":[42372,42606],"filename":"pattern.mjs","lineno":1422,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100026095","name":"exports.arrange","type":"FunctionDeclaration","paramnames":["sections"]}},"description":"<p>Allows to arrange multiple patterns together over multiple cycles.\\\\nTakes a variable number of arrays with two elements specifying the number of cycles and the pattern to use.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["arrange(\\\\n  [4, \\\\"<c a f e>(3,8)\\\\"],\\\\n  [2, \\\\"<g a>(5,8)\\\\"]\\\\n).note()"],"name":"arrange","longname":"arrange","kind":"function","scope":"global"},{"comment":"/**\\\\n * Similarly to \\`arrange\\`, allows you to arrange multiple patterns together over multiple cycles.\\\\n * Unlike \\`arrange\\`, you specify a start and stop time for each pattern rather than duration, which\\\\n * means that patterns can overlap.\\\\n * @return {Pattern}\\\\n * @example\\\\nseqPLoop([0, 2, \\\\"bd(3,8)\\\\"],\\\\n         [1, 3, \\\\"cp(3,8)\\\\"]\\\\n        )\\\\n  .sound()\\\\n */","meta":{"range":[42959,43383],"filename":"pattern.mjs","lineno":1439,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100026140","name":"exports.seqPLoop","type":"FunctionDeclaration","paramnames":["parts"]}},"description":"<p>Similarly to <code>arrange</code>, allows you to arrange multiple patterns together over multiple cycles.\\\\nUnlike <code>arrange</code>, you specify a start and stop time for each pattern rather than duration, which\\\\nmeans that patterns can overlap.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["seqPLoop([0, 2, \\\\"bd(3,8)\\\\"],\\\\n         [1, 3, \\\\"cp(3,8)\\\\"]\\\\n        )\\\\n  .sound()"],"name":"seqPLoop","longname":"seqPLoop","kind":"function","scope":"global"},{"comment":"/** See \\`fastcat\\` */","meta":{"range":[43686,43750],"filename":"pattern.mjs","lineno":1471,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100026283","name":"exports.sequence","type":"FunctionDeclaration","paramnames":["pats"]}},"description":"<p>See <code>fastcat</code></p>","name":"sequence","longname":"sequence","kind":"function","scope":"global"},{"comment":"/** Like **cat**, but the items are crammed into one cycle.\\\\n * @synonyms sequence, fastcat\\\\n * @example\\\\n * seq(\\\\"e5\\\\", \\\\"b4\\\\", [\\\\"d5\\\\", \\\\"c5\\\\"]).note()\\\\n * // \\\\"e5 b4 [d5 c5]\\\\".note()\\\\n *\\\\n * @example\\\\n * // As a chained function:\\\\n * s(\\\\"hh*4\\\\").seq(\\\\n *   note(\\\\"c4(5,8)\\\\")\\\\n * )\\\\n */","meta":{"range":[44017,44076],"filename":"pattern.mjs","lineno":1488,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100026294","name":"exports.seq","type":"FunctionDeclaration","paramnames":["pats"]}},"description":"<p>Like <strong>cat</strong>, but the items are crammed into one cycle.</p>","synonyms_text":"sequence, fastcat","synonyms":["sequence","fastcat"],"examples":["seq(\\\\"e5\\\\", \\\\"b4\\\\", [\\\\"d5\\\\", \\\\"c5\\\\"]).note()\\\\n// \\\\"e5 b4 [d5 c5]\\\\".note()","// As a chained function:\\\\ns(\\\\"hh*4\\\\").seq(\\\\n  note(\\\\"c4(5,8)\\\\")\\\\n)"],"name":"seq","longname":"seq","kind":"function","scope":"global"},{"comment":"/**\\\\n * Registers a new pattern method. The method is added to the Pattern class + the standalone function is returned from register.\\\\n *\\\\n * @param {string} name name of the function\\\\n * @param {function} func function with 1 or more params, where last is the current pattern\\\\n * @noAutocomplete\\\\n *\\\\n */","meta":{"range":[46650,49326],"filename":"pattern.mjs","lineno":1552,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100026926","name":"exports.register","type":"FunctionDeclaration","paramnames":["name","func","patternify","preserveSteps","join"]}},"description":"<p>Registers a new pattern method. The method is added to the Pattern class + the standalone function is returned from register.</p>","params":[{"type":{"names":["string"]},"description":"<p>name of the function</p>","name":"name"},{"type":{"names":["function"]},"description":"<p>function with 1 or more params, where last is the current pattern</p>","name":"func"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"register","longname":"register","kind":"function","scope":"global"},{"comment":"/**\\\\n * Assumes a numerical pattern. Returns a new pattern with all values rounded\\\\n * to the nearest integer.\\\\n * @name round\\\\n * @memberof Pattern\\\\n * @returns Pattern\\\\n * @example\\\\n * n(\\\\"0.5 1.5 2.5\\\\".round()).scale(\\\\"C:major\\\\")\\\\n */","meta":{"filename":"pattern.mjs","lineno":1645,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Assumes a numerical pattern. Returns a new pattern with all values rounded\\\\nto the nearest integer.</p>","name":"round","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["n(\\\\"0.5 1.5 2.5\\\\".round()).scale(\\\\"C:major\\\\")"],"scope":"static","longname":"Pattern.round","kind":"member"},{"comment":"/**\\\\n * Assumes a numerical pattern. Returns a new pattern with all values set to\\\\n * their mathematical floor. E.g. \\`3.7\\` replaced with to \\`3\\`, and \\`-4.2\\`\\\\n * replaced with \\`-5\\`.\\\\n * @name floor\\\\n * @memberof Pattern\\\\n * @returns Pattern\\\\n * @example\\\\n * note(\\\\"42 42.1 42.5 43\\\\".floor())\\\\n */","meta":{"filename":"pattern.mjs","lineno":1658,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Assumes a numerical pattern. Returns a new pattern with all values set to\\\\ntheir mathematical floor. E.g. <code>3.7</code> replaced with to <code>3</code>, and <code>-4.2</code>\\\\nreplaced with <code>-5</code>.</p>","name":"floor","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["note(\\\\"42 42.1 42.5 43\\\\".floor())"],"scope":"static","longname":"Pattern.floor","kind":"member"},{"comment":"/**\\\\n * Assumes a numerical pattern. Returns a new pattern with all values set to\\\\n * their mathematical ceiling. E.g. \\`3.2\\` replaced with \\`4\\`, and \\`-4.2\\`\\\\n * replaced with \\`-4\\`.\\\\n * @name ceil\\\\n * @memberof Pattern\\\\n * @returns Pattern\\\\n * @example\\\\n * note(\\\\"42 42.1 42.5 43\\\\".ceil())\\\\n */","meta":{"filename":"pattern.mjs","lineno":1672,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Assumes a numerical pattern. Returns a new pattern with all values set to\\\\ntheir mathematical ceiling. E.g. <code>3.2</code> replaced with <code>4</code>, and <code>-4.2</code>\\\\nreplaced with <code>-4</code>.</p>","name":"ceil","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["note(\\\\"42 42.1 42.5 43\\\\".ceil())"],"scope":"static","longname":"Pattern.ceil","kind":"member"},{"comment":"/**\\\\n * Assumes a numerical pattern, containing unipolar values in the range 0 ..\\\\n * 1. Returns a new pattern with values scaled to the bipolar range -1 .. 1\\\\n * @returns Pattern\\\\n * @noAutocomplete\\\\n */","meta":{"range":[50971,51075],"filename":"pattern.mjs","lineno":1691,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100027442","name":"exports.toBipolar","type":"VariableDeclaration"}},"description":"<p>Assumes a numerical pattern, containing unipolar values in the range 0 ..</p>\\\\n<ol>\\\\n<li>Returns a new pattern with values scaled to the bipolar range -1 .. 1</li>\\\\n</ol>","returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"toBipolar","longname":"toBipolar","kind":"constant","scope":"global"},{"comment":"/**\\\\n * Assumes a numerical pattern, containing bipolar values in the range -1 .. 1\\\\n * Returns a new pattern with values scaled to the unipolar range 0 .. 1\\\\n * @returns Pattern\\\\n * @noAutocomplete\\\\n */","meta":{"range":[51276,51386],"filename":"pattern.mjs","lineno":1701,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100027464","name":"exports.fromBipolar","type":"VariableDeclaration"}},"description":"<p>Assumes a numerical pattern, containing bipolar values in the range -1 .. 1\\\\nReturns a new pattern with values scaled to the unipolar range 0 .. 1</p>","returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"fromBipolar","longname":"fromBipolar","kind":"constant","scope":"global"},{"comment":"/**\\\\n * Assumes a numerical pattern, containing unipolar values in the range 0 .. 1.\\\\n * Returns a new pattern with values scaled to the given min/max range.\\\\n * Most useful in combination with continuous patterns.\\\\n * @name range\\\\n * @memberof Pattern\\\\n * @returns Pattern\\\\n * @example\\\\n * s(\\\\"[bd sd]*2,hh*8\\\\")\\\\n * .cutoff(sine.range(500,4000))\\\\n */","meta":{"filename":"pattern.mjs","lineno":1705,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Assumes a numerical pattern, containing unipolar values in the range 0 .. 1.\\\\nReturns a new pattern with values scaled to the given min/max range.\\\\nMost useful in combination with continuous patterns.</p>","name":"range","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\\\"[bd sd]*2,hh*8\\\\")\\\\n.cutoff(sine.range(500,4000))"],"scope":"static","longname":"Pattern.range","kind":"member"},{"comment":"/**\\\\n * Assumes a numerical pattern, containing unipolar values in the range 0 .. 1\\\\n * Returns a new pattern with values scaled to the given min/max range,\\\\n * following an exponential curve.\\\\n * @name rangex\\\\n * @memberof Pattern\\\\n * @returns Pattern\\\\n * @example\\\\n * s(\\\\"[bd sd]*2,hh*8\\\\")\\\\n * .cutoff(sine.rangex(500,4000))\\\\n */","meta":{"filename":"pattern.mjs","lineno":1720,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Assumes a numerical pattern, containing unipolar values in the range 0 .. 1\\\\nReturns a new pattern with values scaled to the given min/max range,\\\\nfollowing an exponential curve.</p>","name":"rangex","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\\\"[bd sd]*2,hh*8\\\\")\\\\n.cutoff(sine.rangex(500,4000))"],"scope":"static","longname":"Pattern.rangex","kind":"member"},{"comment":"/**\\\\n * Assumes a numerical pattern, containing bipolar values in the range -1 .. 1\\\\n * Returns a new pattern with values scaled to the given min/max range.\\\\n * @name range2\\\\n * @memberof Pattern\\\\n * @returns Pattern\\\\n * @example\\\\n * s(\\\\"[bd sd]*2,hh*8\\\\")\\\\n * .cutoff(sine2.range2(500,4000))\\\\n */","meta":{"filename":"pattern.mjs","lineno":1735,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Assumes a numerical pattern, containing bipolar values in the range -1 .. 1\\\\nReturns a new pattern with values scaled to the given min/max range.</p>","name":"range2","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\\\"[bd sd]*2,hh*8\\\\")\\\\n.cutoff(sine2.range2(500,4000))"],"scope":"static","longname":"Pattern.range2","kind":"member"},{"comment":"/**\\\\n * Allows dividing numbers via list notation using \\\\":\\\\".\\\\n * Returns a new pattern with just numbers.\\\\n * @name ratio\\\\n * @memberof Pattern\\\\n * @returns Pattern\\\\n * @example\\\\n * ratio(\\\\"1, 5:4, 3:2\\\\").mul(110)\\\\n * .freq().s(\\\\"piano\\\\")\\\\n */","meta":{"filename":"pattern.mjs","lineno":1749,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Allows dividing numbers via list notation using &quot;:&quot;.\\\\nReturns a new pattern with just numbers.</p>","name":"ratio","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["ratio(\\\\"1, 5:4, 3:2\\\\").mul(110)\\\\n.freq().s(\\\\"piano\\\\")"],"scope":"static","longname":"Pattern.ratio","kind":"member"},{"comment":"/** Compress each cycle into the given timespan, leaving a gap\\\\n * @example\\\\n * cat(\\\\n *   s(\\\\"bd sd\\\\").compress(.25,.75),\\\\n *   s(\\\\"~ bd sd ~\\\\")\\\\n * )\\\\n */","meta":{"range":[53379,53632],"filename":"pattern.mjs","lineno":1778,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100027609","name":"exports.compress","type":"VariableDeclaration"}},"description":"<p>Compress each cycle into the given timespan, leaving a gap</p>","examples":["cat(\\\\n  s(\\\\"bd sd\\\\").compress(.25,.75),\\\\n  s(\\\\"~ bd sd ~\\\\")\\\\n)"],"name":"compress","longname":"compress","kind":"constant","scope":"global"},{"comment":"/**\\\\n * speeds up a pattern like fast, but rather than it playing multiple times as fast would it instead leaves a gap in the remaining space of the cycle. For example, the following will play the sound pattern \\\\"bd sn\\\\" only once but compressed into the first half of the cycle, i.e. twice as fast.\\\\n * @name fastGap\\\\n * @synonyms fastgap\\\\n * @example\\\\n * s(\\\\"bd sd\\\\").fastGap(2)\\\\n */","meta":{"filename":"pattern.mjs","lineno":1791,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>speeds up a pattern like fast, but rather than it playing multiple times as fast would it instead leaves a gap in the remaining space of the cycle. For example, the following will play the sound pattern &quot;bd sn&quot; only once but compressed into the first half of the cycle, i.e. twice as fast.</p>","name":"fastGap","synonyms_text":"fastgap","synonyms":["fastgap"],"examples":["s(\\\\"bd sd\\\\").fastGap(2)"],"longname":"fastGap","kind":"member","scope":"global"},{"comment":"/**\\\\n * Similar to \\`compress\\`, but doesn\'t leave gaps, and the \'focus\' can be bigger than a cycle\\\\n * @example\\\\n * s(\\\\"bd hh sd hh\\\\").focus(1/4, 3/4)\\\\n */","meta":{"range":[55523,55713],"filename":"pattern.mjs","lineno":1833,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100027951","name":"exports.focus","type":"VariableDeclaration"}},"description":"<p>Similar to <code>compress</code>, but doesn\'t leave gaps, and the \'focus\' can be bigger than a cycle</p>","examples":["s(\\\\"bd hh sd hh\\\\").focus(1/4, 3/4)"],"name":"focus","longname":"focus","kind":"constant","scope":"global"},{"comment":"/** The ply function repeats each event the given number of times.\\\\n * @example\\\\n * s(\\\\"bd ~ sd cp\\\\").ply(\\\\"<1 2 3>\\\\")\\\\n */","meta":{"range":[55980,56211],"filename":"pattern.mjs","lineno":1850,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100028030","name":"exports.ply","type":"VariableDeclaration"}},"description":"<p>The ply function repeats each event the given number of times.</p>","examples":["s(\\\\"bd ~ sd cp\\\\").ply(\\\\"<1 2 3>\\\\")"],"name":"ply","longname":"ply","kind":"constant","scope":"global"},{"comment":"/**\\\\n * Speed up a pattern by the given factor. Used by \\\\"*\\\\" in mini notation.\\\\n *\\\\n * @name fast\\\\n * @synonyms density\\\\n * @memberof Pattern\\\\n * @param {number | Pattern} factor speed up factor\\\\n * @returns Pattern\\\\n * @example\\\\n * s(\\\\"bd hh sd hh\\\\").fast(2) // s(\\\\"[bd hh sd hh]*2\\\\")\\\\n */","meta":{"filename":"pattern.mjs","lineno":1858,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Speed up a pattern by the given factor. Used by &quot;*&quot; in mini notation.</p>","name":"fast","synonyms_text":"density","synonyms":["density"],"memberof":"Pattern","params":[{"type":{"names":["number","Pattern"]},"description":"<p>speed up factor</p>","name":"factor"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\\\"bd hh sd hh\\\\").fast(2) // s(\\\\"[bd hh sd hh]*2\\\\")"],"scope":"static","longname":"Pattern.fast","kind":"member"},{"comment":"/**\\\\n * Both speeds up the pattern (like \'fast\') and the sample playback (like \'speed\').\\\\n * @example\\\\n * s(\\\\"bd sd:2\\\\").hurry(\\\\"<1 2 4 3>\\\\").slow(1.5)\\\\n */","meta":{"range":[56979,57088],"filename":"pattern.mjs","lineno":1888,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100028143","name":"exports.hurry","type":"VariableDeclaration"}},"description":"<p>Both speeds up the pattern (like \'fast\') and the sample playback (like \'speed\').</p>","examples":["s(\\\\"bd sd:2\\\\").hurry(\\\\"<1 2 4 3>\\\\").slow(1.5)"],"name":"hurry","longname":"hurry","kind":"constant","scope":"global"},{"comment":"/**\\\\n * Slow down a pattern over the given number of cycles. Like the \\\\"/\\\\" operator in mini notation.\\\\n *\\\\n * @name slow\\\\n * @synonyms sparsity\\\\n * @memberof Pattern\\\\n * @param {number | Pattern} factor slow down factor\\\\n * @returns Pattern\\\\n * @example\\\\n * s(\\\\"bd hh sd hh\\\\").slow(2) // s(\\\\"[bd hh sd hh]/2\\\\")\\\\n */","meta":{"filename":"pattern.mjs","lineno":1892,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Slow down a pattern over the given number of cycles. Like the &quot;/&quot; operator in mini notation.</p>","name":"slow","synonyms_text":"sparsity","synonyms":["sparsity"],"memberof":"Pattern","params":[{"type":{"names":["number","Pattern"]},"description":"<p>slow down factor</p>","name":"factor"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\\\"bd hh sd hh\\\\").slow(2) // s(\\\\"[bd hh sd hh]/2\\\\")"],"scope":"static","longname":"Pattern.slow","kind":"member"},{"comment":"/**\\\\n * Carries out an operation \'inside\' a cycle.\\\\n * @example\\\\n * \\\\"0 1 2 3 4 3 2 1\\\\".inside(4, rev).scale(\'C major\').note()\\\\n * // \\\\"0 1 2 3 4 3 2 1\\\\".slow(4).rev().fast(4).scale(\'C major\').note()\\\\n */","meta":{"range":[57773,57890],"filename":"pattern.mjs","lineno":1916,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100028204","name":"exports.inside","type":"VariableDeclaration"}},"description":"<p>Carries out an operation \'inside\' a cycle.</p>","examples":["\\\\"0 1 2 3 4 3 2 1\\\\".inside(4, rev).scale(\'C major\').note()\\\\n// \\\\"0 1 2 3 4 3 2 1\\\\".slow(4).rev().fast(4).scale(\'C major\').note()"],"name":"inside","longname":"inside","kind":"constant","scope":"global"},{"comment":"/**\\\\n * Carries out an operation \'outside\' a cycle.\\\\n * @example\\\\n * \\\\"<[0 1] 2 [3 4] 5>\\\\".outside(4, rev).scale(\'C major\').note()\\\\n * // \\\\"<[0 1] 2 [3 4] 5>\\\\".fast(4).rev().slow(4).scale(\'C major\').note()\\\\n */","meta":{"range":[58094,58213],"filename":"pattern.mjs","lineno":1926,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100028228","name":"exports.outside","type":"VariableDeclaration"}},"description":"<p>Carries out an operation \'outside\' a cycle.</p>","examples":["\\\\"<[0 1] 2 [3 4] 5>\\\\".outside(4, rev).scale(\'C major\').note()\\\\n// \\\\"<[0 1] 2 [3 4] 5>\\\\".fast(4).rev().slow(4).scale(\'C major\').note()"],"name":"outside","longname":"outside","kind":"constant","scope":"global"},{"comment":"/**\\\\n * Applies the given function every n cycles, starting from the last cycle.\\\\n * @name lastOf\\\\n * @memberof Pattern\\\\n * @param {number} n how many cycles\\\\n * @param {function} func function to apply\\\\n * @returns Pattern\\\\n * @example\\\\n * note(\\\\"c3 d3 e3 g3\\\\").lastOf(4, x=>x.rev())\\\\n */","meta":{"filename":"pattern.mjs","lineno":1930,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Applies the given function every n cycles, starting from the last cycle.</p>","name":"lastOf","memberof":"Pattern","params":[{"type":{"names":["number"]},"description":"<p>how many cycles</p>","name":"n"},{"type":{"names":["function"]},"description":"<p>function to apply</p>","name":"func"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["note(\\\\"c3 d3 e3 g3\\\\").lastOf(4, x=>x.rev())"],"scope":"static","longname":"Pattern.lastOf","kind":"member"},{"comment":"/**\\\\n * Applies the given function every n cycles, starting from the first cycle.\\\\n * @name firstOf\\\\n * @memberof Pattern\\\\n * @param {number} n how many cycles\\\\n * @param {function} func function to apply\\\\n * @returns Pattern\\\\n * @example\\\\n * note(\\\\"c3 d3 e3 g3\\\\").firstOf(4, x=>x.rev())\\\\n */","meta":{"filename":"pattern.mjs","lineno":1946,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Applies the given function every n cycles, starting from the first cycle.</p>","name":"firstOf","memberof":"Pattern","params":[{"type":{"names":["number"]},"description":"<p>how many cycles</p>","name":"n"},{"type":{"names":["function"]},"description":"<p>function to apply</p>","name":"func"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["note(\\\\"c3 d3 e3 g3\\\\").firstOf(4, x=>x.rev())"],"scope":"static","longname":"Pattern.firstOf","kind":"member"},{"comment":"/**\\\\n * An alias for \\`firstOf\\`\\\\n * @name every\\\\n * @memberof Pattern\\\\n * @param {number} n how many cycles\\\\n * @param {function} func function to apply\\\\n * @returns Pattern\\\\n * @example\\\\n * note(\\\\"c3 d3 e3 g3\\\\").every(4, x=>x.rev())\\\\n */","meta":{"filename":"pattern.mjs","lineno":1957,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>An alias for <code>firstOf</code></p>","name":"every","memberof":"Pattern","params":[{"type":{"names":["number"]},"description":"<p>how many cycles</p>","name":"n"},{"type":{"names":["function"]},"description":"<p>function to apply</p>","name":"func"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["note(\\\\"c3 d3 e3 g3\\\\").every(4, x=>x.rev())"],"scope":"static","longname":"Pattern.every","kind":"member"},{"comment":"/**\\\\n * Like layer, but with a single function:\\\\n * @name apply\\\\n * @memberof Pattern\\\\n * @example\\\\n * \\\\"<c3 eb3 g3>\\\\".scale(\'C minor\').apply(scaleTranspose(\\\\"0,2,4\\\\")).note()\\\\n */","meta":{"filename":"pattern.mjs","lineno":1973,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Like layer, but with a single function:</p>","name":"apply","memberof":"Pattern","examples":["\\\\"<c3 eb3 g3>\\\\".scale(\'C minor\').apply(scaleTranspose(\\\\"0,2,4\\\\")).note()"],"scope":"static","longname":"Pattern.apply","kind":"member"},{"comment":"/**\\\\n * Plays the pattern at the given cycles per minute.\\\\n * @example\\\\n * s(\\\\"<bd sd>,hh*2\\\\").cpm(90) // = 90 bpm\\\\n */","meta":{"range":[59842,59936],"filename":"pattern.mjs","lineno":1991,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100028347","name":"exports.cpm","type":"VariableDeclaration"}},"description":"<p>Plays the pattern at the given cycles per minute.</p>","examples":["s(\\\\"<bd sd>,hh*2\\\\").cpm(90) // = 90 bpm"],"name":"cpm","longname":"cpm","kind":"constant","scope":"global"},{"comment":"/**\\\\n * Nudge a pattern to start earlier in time. Equivalent of Tidal\'s <~ operator\\\\n *\\\\n * @name early\\\\n * @memberof Pattern\\\\n * @param {number | Pattern} cycles number of cycles to nudge left\\\\n * @returns Pattern\\\\n * @example\\\\n * \\\\"bd ~\\\\".stack(\\\\"hh ~\\\\".early(.1)).s()\\\\n */","meta":{"filename":"pattern.mjs","lineno":1995,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Nudge a pattern to start earlier in time. Equivalent of Tidal\'s &lt;~ operator</p>","name":"early","memberof":"Pattern","params":[{"type":{"names":["number","Pattern"]},"description":"<p>number of cycles to nudge left</p>","name":"cycles"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["\\\\"bd ~\\\\".stack(\\\\"hh ~\\\\".early(.1)).s()"],"scope":"static","longname":"Pattern.early","kind":"member"},{"comment":"/**\\\\n * Nudge a pattern to start later in time. Equivalent of Tidal\'s ~> operator\\\\n *\\\\n * @name late\\\\n * @memberof Pattern\\\\n * @param {number | Pattern} cycles number of cycles to nudge right\\\\n * @returns Pattern\\\\n * @example\\\\n * \\\\"bd ~\\\\".stack(\\\\"hh ~\\\\".late(.1)).s()\\\\n */","meta":{"filename":"pattern.mjs","lineno":2015,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Nudge a pattern to start later in time. Equivalent of Tidal\'s ~&gt; operator</p>","name":"late","memberof":"Pattern","params":[{"type":{"names":["number","Pattern"]},"description":"<p>number of cycles to nudge right</p>","name":"cycles"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["\\\\"bd ~\\\\".stack(\\\\"hh ~\\\\".late(.1)).s()"],"scope":"static","longname":"Pattern.late","kind":"member"},{"comment":"/**\\\\n * Plays a portion of a pattern, specified by the beginning and end of a time span. The new resulting pattern is played over the time period of the original pattern:\\\\n *\\\\n * @example\\\\n * s(\\\\"bd*2 hh*3 [sd bd]*2 perc\\\\").zoom(0.25, 0.75)\\\\n * // s(\\\\"hh*3 [sd bd]*2\\\\") // equivalent\\\\n */","meta":{"range":[61122,61541],"filename":"pattern.mjs","lineno":2042,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100028440","name":"exports.zoom","type":"VariableDeclaration"}},"description":"<p>Plays a portion of a pattern, specified by the beginning and end of a time span. The new resulting pattern is played over the time period of the original pattern:</p>","examples":["s(\\\\"bd*2 hh*3 [sd bd]*2 perc\\\\").zoom(0.25, 0.75)\\\\n// s(\\\\"hh*3 [sd bd]*2\\\\") // equivalent"],"name":"zoom","longname":"zoom","kind":"constant","scope":"global"},{"comment":"/**\\\\n * Splits a pattern into the given number of slices, and plays them according to a pattern of slice numbers.\\\\n * Similar to \\`slice\\`, but slices up patterns rather than sound samples.\\\\n * @param {number} number of slices\\\\n * @param {number} slices to play\\\\n * @example\\\\n * note(\\\\"0 1 2 3 4 5 6 7\\\\".scale(\'c:mixolydian\'))\\\\n *.bite(4, \\\\"3 2 1 0\\\\")\\\\n * @example\\\\n * sound(\\\\"bd - bd bd*2, - sd:6 - sd:5 sd:1 - [- sd:2] -, hh [- cp:7]\\\\")\\\\n  .bank(\\\\"RolandTR909\\\\").speed(1.2)\\\\n  .bite(4, \\\\"0 0 [1 2] <3 2> 0 0 [2 1] 3\\\\")\\\\n */","meta":{"range":[62174,62472],"filename":"pattern.mjs","lineno":2074,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100028565","name":"exports.bite","type":"VariableDeclaration"}},"description":"<p>Splits a pattern into the given number of slices, and plays them according to a pattern of slice numbers.\\\\nSimilar to <code>slice</code>, but slices up patterns rather than sound samples.</p>","params":[{"type":{"names":["number"]},"description":"<p>of slices</p>","name":"number"},{"type":{"names":["number"]},"description":"<p>to play</p>","name":"slices"}],"examples":["note(\\\\"0 1 2 3 4 5 6 7\\\\".scale(\'c:mixolydian\'))\\\\n.bite(4, \\\\"3 2 1 0\\\\")","sound(\\\\"bd - bd bd*2, - sd:6 - sd:5 sd:1 - [- sd:2] -, hh [- cp:7]\\\\")\\\\n  .bank(\\\\"RolandTR909\\\\").speed(1.2)\\\\n  .bite(4, \\\\"0 0 [1 2] <3 2> 0 0 [2 1] 3\\\\")"],"name":"bite","longname":"bite","kind":"constant","scope":"global"},{"comment":"/**\\\\n * Selects the given fraction of the pattern and repeats that part to fill the remainder of the cycle.\\\\n * @param {number} fraction fraction to select\\\\n * @example\\\\n * s(\\\\"lt ht mt cp, [hh oh]*2\\\\").linger(\\\\"<1 .5 .25 .125>\\\\")\\\\n */","meta":{"range":[62701,62943],"filename":"pattern.mjs","lineno":2095,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100028630","name":"exports.linger","type":"VariableDeclaration"}},"description":"<p>Selects the given fraction of the pattern and repeats that part to fill the remainder of the cycle.</p>","params":[{"type":{"names":["number"]},"description":"<p>fraction to select</p>","name":"fraction"}],"examples":["s(\\\\"lt ht mt cp, [hh oh]*2\\\\").linger(\\\\"<1 .5 .25 .125>\\\\")"],"name":"linger","longname":"linger","kind":"constant","scope":"global"},{"comment":"/**\\\\n * Samples the pattern at a rate of n events per cycle. Useful for turning a continuous pattern into a discrete one.\\\\n * @name segment\\\\n * @synonyms seg\\\\n * @param {number} segments number of segments per cycle\\\\n * @example\\\\n * note(saw.range(40,52).segment(24))\\\\n */","meta":{"filename":"pattern.mjs","lineno":2109,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Samples the pattern at a rate of n events per cycle. Useful for turning a continuous pattern into a discrete one.</p>","name":"segment","synonyms_text":"seg","synonyms":["seg"],"params":[{"type":{"names":["number"]},"description":"<p>number of segments per cycle</p>","name":"segments"}],"examples":["note(saw.range(40,52).segment(24))"],"longname":"segment","kind":"member","scope":"global"},{"comment":"/**\\\\n * The function \\`swingBy x n\\` breaks each cycle into \\`n\\` slices, and then delays events in the second half of each slice by the amount \\`x\\`, which is relative to the size of the (half) slice. So if \\`x\\` is 0 it does nothing, \\`0.5\\` delays for half the note duration, and 1 will wrap around to doing nothing again. The end result is a shuffle or swing-like rhythm\\\\n * @param {number} subdivision\\\\n * @param {number} offset\\\\n * @example\\\\n * s(\\\\"hh*8\\\\").swingBy(1/3, 4)\\\\n */","meta":{"range":[63826,63928],"filename":"pattern.mjs","lineno":2128,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100028714","name":"exports.swingBy","type":"VariableDeclaration"}},"description":"<p>The function <code>swingBy x n</code> breaks each cycle into <code>n</code> slices, and then delays events in the second half of each slice by the amount <code>x</code>, which is relative to the size of the (half) slice. So if <code>x</code> is 0 it does nothing, <code>0.5</code> delays for half the note duration, and 1 will wrap around to doing nothing again. The end result is a shuffle or swing-like rhythm</p>","params":[{"type":{"names":["number"]},"name":"subdivision"},{"type":{"names":["number"]},"name":"offset"}],"examples":["s(\\\\"hh*8\\\\").swingBy(1/3, 4)"],"name":"swingBy","longname":"swingBy","kind":"constant","scope":"global"},{"comment":"/**\\\\n * Shorthand for swingBy with 1/3:\\\\n * @param {number} subdivision\\\\n * @example\\\\n * s(\\\\"hh*8\\\\").swing(4)\\\\n * // s(\\\\"hh*8\\\\").swingBy(1/3, 4)\\\\n */","meta":{"range":[64070,64144],"filename":"pattern.mjs","lineno":2137,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100028738","name":"exports.swing","type":"VariableDeclaration"}},"description":"<p>Shorthand for swingBy with 1/3:</p>","params":[{"type":{"names":["number"]},"name":"subdivision"}],"examples":["s(\\\\"hh*8\\\\").swing(4)\\\\n// s(\\\\"hh*8\\\\").swingBy(1/3, 4)"],"name":"swing","longname":"swing","kind":"constant","scope":"global"},{"comment":"/**\\\\n * Swaps 1s and 0s in a binary pattern.\\\\n * @name invert\\\\n * @synonyms inv\\\\n * @example\\\\n * s(\\\\"bd\\\\").struct(\\\\"1 0 0 1 0 0 1 0\\\\".lastOf(4, invert))\\\\n */","meta":{"filename":"pattern.mjs","lineno":2139,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Swaps 1s and 0s in a binary pattern.</p>","name":"invert","synonyms_text":"inv","synonyms":["inv"],"examples":["s(\\\\"bd\\\\").struct(\\\\"1 0 0 1 0 0 1 0\\\\".lastOf(4, invert))"],"longname":"invert","kind":"member","scope":"global"},{"comment":"/**\\\\n * Applies the given function whenever the given pattern is in a true state.\\\\n * @name when\\\\n * @memberof Pattern\\\\n * @param {Pattern} binary_pat\\\\n * @param {function} func\\\\n * @returns Pattern\\\\n * @example\\\\n * \\\\"c3 eb3 g3\\\\".when(\\\\"<0 1>/2\\\\", x=>x.sub(\\\\"5\\\\")).note()\\\\n */","meta":{"filename":"pattern.mjs","lineno":2156,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Applies the given function whenever the given pattern is in a true state.</p>","name":"when","memberof":"Pattern","params":[{"type":{"names":["Pattern"]},"name":"binary_pat"},{"type":{"names":["function"]},"name":"func"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["\\\\"c3 eb3 g3\\\\".when(\\\\"<0 1>/2\\\\", x=>x.sub(\\\\"5\\\\")).note()"],"scope":"static","longname":"Pattern.when","kind":"member"},{"comment":"/**\\\\n * Superimposes the function result on top of the original pattern, delayed by the given time.\\\\n * @name off\\\\n * @memberof Pattern\\\\n * @param {Pattern | number} time offset time\\\\n * @param {function} func function to apply\\\\n * @returns Pattern\\\\n * @example\\\\n * \\\\"c3 eb3 g3\\\\".off(1/8, x=>x.add(7)).note()\\\\n */","meta":{"filename":"pattern.mjs","lineno":2170,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Superimposes the function result on top of the original pattern, delayed by the given time.</p>","name":"off","memberof":"Pattern","params":[{"type":{"names":["Pattern","number"]},"description":"<p>offset time</p>","name":"time"},{"type":{"names":["function"]},"description":"<p>function to apply</p>","name":"func"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["\\\\"c3 eb3 g3\\\\".off(1/8, x=>x.add(7)).note()"],"scope":"static","longname":"Pattern.off","kind":"member"},{"comment":"/**\\\\n * Returns a new pattern where every other cycle is played once, twice as\\\\n * fast, and offset in time by one quarter of a cycle. Creates a kind of\\\\n * breakbeat feel.\\\\n * @returns Pattern\\\\n */","meta":{"range":[65454,65592],"filename":"pattern.mjs","lineno":2190,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100028825","name":"exports.brak","type":"VariableDeclaration"}},"description":"<p>Returns a new pattern where every other cycle is played once, twice as\\\\nfast, and offset in time by one quarter of a cycle. Creates a kind of\\\\nbreakbeat feel.</p>","returns":[{"description":"<p>Pattern</p>"}],"name":"brak","longname":"brak","kind":"constant","scope":"global"},{"comment":"/**\\\\n * Reverse all haps in a pattern\\\\n *\\\\n * @name rev\\\\n * @memberof Pattern\\\\n * @returns Pattern\\\\n * @example\\\\n * note(\\\\"c d e g\\\\").rev()\\\\n */","meta":{"filename":"pattern.mjs","lineno":2194,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Reverse all haps in a pattern</p>","name":"rev","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["note(\\\\"c d e g\\\\").rev()"],"scope":"static","longname":"Pattern.rev","kind":"member"},{"comment":"/** Like press, but allows you to specify the amount by which each\\\\n * event is shifted. pressBy(0.5) is the same as press, while\\\\n * pressBy(1/3) shifts each event by a third of its timespan.\\\\n * @example\\\\n * stack(s(\\\\"hh*4\\\\"),\\\\n *       s(\\\\"bd mt sd ht\\\\").pressBy(\\\\"<0 0.5 0.25>\\\\")\\\\n *      ).slow(2)\\\\n */","meta":{"range":[66800,66930],"filename":"pattern.mjs","lineno":2235,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100028975","name":"exports.pressBy","type":"VariableDeclaration"}},"description":"<p>Like press, but allows you to specify the amount by which each\\\\nevent is shifted. pressBy(0.5) is the same as press, while\\\\npressBy(1/3) shifts each event by a third of its timespan.</p>","examples":["stack(s(\\\\"hh*4\\\\"),\\\\n      s(\\\\"bd mt sd ht\\\\").pressBy(\\\\"<0 0.5 0.25>\\\\")\\\\n     ).slow(2)"],"name":"pressBy","longname":"pressBy","kind":"constant","scope":"global"},{"comment":"/**\\\\n * Syncopates a rhythm, by shifting each event halfway into its timespan.\\\\n * @example\\\\n * stack(s(\\\\"hh*4\\\\"),\\\\n *       s(\\\\"bd mt sd ht\\\\").every(4, press)\\\\n *      ).slow(2)\\\\n */","meta":{"range":[67106,67193],"filename":"pattern.mjs","lineno":2246,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100029004","name":"exports.press","type":"VariableDeclaration"}},"description":"<p>Syncopates a rhythm, by shifting each event halfway into its timespan.</p>","examples":["stack(s(\\\\"hh*4\\\\"),\\\\n      s(\\\\"bd mt sd ht\\\\").every(4, press)\\\\n     ).slow(2)"],"name":"press","longname":"press","kind":"constant","scope":"global"},{"comment":"/**\\\\n * Silences a pattern.\\\\n * @example\\\\n * stack(\\\\n *   s(\\\\"bd\\\\").hush(),\\\\n *   s(\\\\"hh*3\\\\")\\\\n * )\\\\n */","meta":{"range":[67289,67347],"filename":"pattern.mjs","lineno":2258,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100029021","name":"Pattern.prototype.hush","type":"FunctionExpression","paramnames":[]}},"description":"<p>Silences a pattern.</p>","examples":["stack(\\\\n  s(\\\\"bd\\\\").hush(),\\\\n  s(\\\\"hh*3\\\\")\\\\n)"],"name":"hush","longname":"Pattern#hush","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\\\n * Applies \\`rev\\` to a pattern every other cycle, so that the pattern alternates between forwards and backwards.\\\\n * @example\\\\n * note(\\\\"c d e g\\\\").palindrome()\\\\n */","meta":{"range":[67514,67639],"filename":"pattern.mjs","lineno":2267,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100029031","name":"exports.palindrome","type":"VariableDeclaration"}},"description":"<p>Applies <code>rev</code> to a pattern every other cycle, so that the pattern alternates between forwards and backwards.</p>","examples":["note(\\\\"c d e g\\\\").palindrome()"],"name":"palindrome","longname":"palindrome","kind":"constant","scope":"global"},{"comment":"/**\\\\n * Jux with adjustable stereo width. 0 = mono, 1 = full stereo.\\\\n * @name juxBy\\\\n * @synonyms juxby\\\\n * @example\\\\n * s(\\\\"bd lt [~ ht] mt cp ~ bd hh\\\\").juxBy(\\\\"<0 .5 1>/2\\\\", rev)\\\\n */","meta":{"filename":"pattern.mjs","lineno":2276,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Jux with adjustable stereo width. 0 = mono, 1 = full stereo.</p>","name":"juxBy","synonyms_text":"juxby","synonyms":["juxby"],"examples":["s(\\\\"bd lt [~ ht] mt cp ~ bd hh\\\\").juxBy(\\\\"<0 .5 1>/2\\\\", rev)"],"longname":"juxBy","kind":"member","scope":"global"},{"comment":"/**\\\\n * The jux function creates strange stereo effects, by applying a function to a pattern, but only in the right-hand channel.\\\\n * @example\\\\n * s(\\\\"bd lt [~ ht] mt cp ~ bd hh\\\\").jux(rev)\\\\n * @example\\\\n * s(\\\\"bd lt [~ ht] mt cp ~ bd hh\\\\").jux(press)\\\\n * @example\\\\n * s(\\\\"bd lt [~ ht] mt cp ~ bd hh\\\\").jux(iter(4))\\\\n */","meta":{"range":[68658,68754],"filename":"pattern.mjs","lineno":2306,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100029160","name":"exports.jux","type":"VariableDeclaration"}},"description":"<p>The jux function creates strange stereo effects, by applying a function to a pattern, but only in the right-hand channel.</p>","examples":["s(\\\\"bd lt [~ ht] mt cp ~ bd hh\\\\").jux(rev)","s(\\\\"bd lt [~ ht] mt cp ~ bd hh\\\\").jux(press)","s(\\\\"bd lt [~ ht] mt cp ~ bd hh\\\\").jux(iter(4))"],"name":"jux","longname":"jux","kind":"constant","scope":"global"},{"comment":"/**\\\\n * Superimpose and offset multiple times, applying the given function each time.\\\\n * @name echoWith\\\\n * @synonyms echowith, stutWith, stutwith\\\\n * @param {number} times how many times to repeat\\\\n * @param {number} time cycle offset between iterations\\\\n * @param {function} func function to apply, given the pattern and the iteration index\\\\n * @example\\\\n * \\\\"<0 [2 4]>\\\\"\\\\n * .echoWith(4, 1/8, (p,n) => p.add(n*2))\\\\n * .scale(\\\\"C:minor\\\\").note()\\\\n */","meta":{"filename":"pattern.mjs","lineno":2310,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Superimpose and offset multiple times, applying the given function each time.</p>","name":"echoWith","synonyms_text":"echowith, stutWith, stutwith","synonyms":["echowith","stutWith","stutwith"],"params":[{"type":{"names":["number"]},"description":"<p>how many times to repeat</p>","name":"times"},{"type":{"names":["number"]},"description":"<p>cycle offset between iterations</p>","name":"time"},{"type":{"names":["function"]},"description":"<p>function to apply, given the pattern and the iteration index</p>","name":"func"}],"examples":["\\\\"<0 [2 4]>\\\\"\\\\n.echoWith(4, 1/8, (p,n) => p.add(n*2))\\\\n.scale(\\\\"C:minor\\\\").note()"],"longname":"echoWith","kind":"member","scope":"global"},{"comment":"/**\\\\n * Superimpose and offset multiple times, gradually decreasing the velocity\\\\n * @name echo\\\\n * @memberof Pattern\\\\n * @returns Pattern\\\\n * @param {number} times how many times to repeat\\\\n * @param {number} time cycle offset between iterations\\\\n * @param {number} feedback velocity multiplicator for each iteration\\\\n * @example\\\\n * s(\\\\"bd sd\\\\").echo(3, 1/6, .8)\\\\n */","meta":{"filename":"pattern.mjs","lineno":2329,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Superimpose and offset multiple times, gradually decreasing the velocity</p>","name":"echo","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"params":[{"type":{"names":["number"]},"description":"<p>how many times to repeat</p>","name":"times"},{"type":{"names":["number"]},"description":"<p>cycle offset between iterations</p>","name":"time"},{"type":{"names":["number"]},"description":"<p>velocity multiplicator for each iteration</p>","name":"feedback"}],"examples":["s(\\\\"bd sd\\\\").echo(3, 1/6, .8)"],"scope":"static","longname":"Pattern.echo","kind":"member"},{"comment":"/**\\\\n * Deprecated. Like echo, but the last 2 parameters are flipped.\\\\n * @name stut\\\\n * @param {number} times how many times to repeat\\\\n * @param {number} feedback velocity multiplicator for each iteration\\\\n * @param {number} time cycle offset between iterations\\\\n * @example\\\\n * s(\\\\"bd sd\\\\").stut(3, .8, 1/6)\\\\n */","meta":{"filename":"pattern.mjs","lineno":2344,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Deprecated. Like echo, but the last 2 parameters are flipped.</p>","name":"stut","params":[{"type":{"names":["number"]},"description":"<p>how many times to repeat</p>","name":"times"},{"type":{"names":["number"]},"description":"<p>velocity multiplicator for each iteration</p>","name":"feedback"},{"type":{"names":["number"]},"description":"<p>cycle offset between iterations</p>","name":"time"}],"examples":["s(\\\\"bd sd\\\\").stut(3, .8, 1/6)"],"longname":"stut","kind":"member","scope":"global"},{"comment":"/**\\\\n * Divides a pattern into a given number of subdivisions, plays the subdivisions in order, but increments the starting subdivision each cycle. The pattern wraps to the first subdivision after the last subdivision is played.\\\\n * @name iter\\\\n * @memberof Pattern\\\\n * @returns Pattern\\\\n * @example\\\\n * note(\\\\"0 1 2 3\\\\".scale(\'A minor\')).iter(4)\\\\n */","meta":{"filename":"pattern.mjs","lineno":2357,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Divides a pattern into a given number of subdivisions, plays the subdivisions in order, but increments the starting subdivision each cycle. The pattern wraps to the first subdivision after the last subdivision is played.</p>","name":"iter","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["note(\\\\"0 1 2 3\\\\".scale(\'A minor\')).iter(4)"],"scope":"static","longname":"Pattern.iter","kind":"member"},{"comment":"/**\\\\n * Like \\`iter\\`, but plays the subdivisions in reverse order. Known as iter\' in tidalcycles\\\\n * @name iterBack\\\\n * @synonyms iterback\\\\n * @memberof Pattern\\\\n * @returns Pattern\\\\n * @example\\\\n * note(\\\\"0 1 2 3\\\\".scale(\'A minor\')).iterBack(4)\\\\n */","meta":{"filename":"pattern.mjs","lineno":2384,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Like <code>iter</code>, but plays the subdivisions in reverse order. Known as iter\' in tidalcycles</p>","name":"iterBack","synonyms_text":"iterback","synonyms":["iterback"],"memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["note(\\\\"0 1 2 3\\\\".scale(\'A minor\')).iterBack(4)"],"scope":"static","longname":"Pattern.iterBack","kind":"member"},{"comment":"/**\\\\n * Repeats each cycle the given number of times.\\\\n * @name repeatCycles\\\\n * @memberof Pattern\\\\n * @returns Pattern\\\\n * @example\\\\n * note(irand(12).add(34)).segment(4).repeatCycles(2).s(\\\\"gm_acoustic_guitar_nylon\\\\")\\\\n */","meta":{"filename":"pattern.mjs","lineno":2402,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Repeats each cycle the given number of times.</p>","name":"repeatCycles","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["note(irand(12).add(34)).segment(4).repeatCycles(2).s(\\\\"gm_acoustic_guitar_nylon\\\\")"],"scope":"static","longname":"Pattern.repeatCycles","kind":"member"},{"comment":"/**\\\\n * Divides a pattern into a given number of parts, then cycles through those parts in turn, applying the given function to each part in turn (one part per cycle).\\\\n * @name chunk\\\\n * @synonyms slowChunk, slowchunk\\\\n * @memberof Pattern\\\\n * @returns Pattern\\\\n * @example\\\\n * \\\\"0 1 2 3\\\\".chunk(4, x=>x.add(7))\\\\n * .scale(\\\\"A:minor\\\\").note()\\\\n */","meta":{"filename":"pattern.mjs","lineno":2425,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Divides a pattern into a given number of parts, then cycles through those parts in turn, applying the given function to each part in turn (one part per cycle).</p>","name":"chunk","synonyms_text":"slowChunk, slowchunk","synonyms":["slowChunk","slowchunk"],"memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["\\\\"0 1 2 3\\\\".chunk(4, x=>x.add(7))\\\\n.scale(\\\\"A:minor\\\\").note()"],"scope":"static","longname":"Pattern.chunk","kind":"member"},{"comment":"/**\\\\n * Like \\`chunk\\`, but cycles through the parts in reverse order. Known as chunk\' in tidalcycles\\\\n * @name chunkBack\\\\n * @synonyms chunkback\\\\n * @memberof Pattern\\\\n * @returns Pattern\\\\n * @example\\\\n * \\\\"0 1 2 3\\\\".chunkBack(4, x=>x.add(7))\\\\n * .scale(\\\\"A:minor\\\\").note()\\\\n */","meta":{"filename":"pattern.mjs","lineno":2451,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Like <code>chunk</code>, but cycles through the parts in reverse order. Known as chunk\' in tidalcycles</p>","name":"chunkBack","synonyms_text":"chunkback","synonyms":["chunkback"],"memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["\\\\"0 1 2 3\\\\".chunkBack(4, x=>x.add(7))\\\\n.scale(\\\\"A:minor\\\\").note()"],"scope":"static","longname":"Pattern.chunkBack","kind":"member"},{"comment":"/**\\\\n * Like \\`chunk\\`, but the cycles of the source pattern aren\'t repeated\\\\n * for each set of chunks.\\\\n * @name fastChunk\\\\n * @synonyms fastchunk\\\\n * @memberof Pattern\\\\n * @returns Pattern\\\\n * @example\\\\n * \\\\"<0 8> 1 2 3 4 5 6 7\\\\"\\\\n * .fastChunk(4, x => x.color(\'red\')).slow(2)\\\\n * .scale(\\\\"C2:major\\\\").note()\\\\n */","meta":{"filename":"pattern.mjs","lineno":2465,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Like <code>chunk</code>, but the cycles of the source pattern aren\'t repeated\\\\nfor each set of chunks.</p>","name":"fastChunk","synonyms_text":"fastchunk","synonyms":["fastchunk"],"memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["\\\\"<0 8> 1 2 3 4 5 6 7\\\\"\\\\n.fastChunk(4, x => x.color(\'red\')).slow(2)\\\\n.scale(\\\\"C2:major\\\\").note()"],"scope":"static","longname":"Pattern.fastChunk","kind":"member"},{"comment":"/**\\\\n * Loops the pattern inside an \\`offset\\` for \\`cycles\\`.\\\\n * If you think of the entire span of time in cycles as a ribbon, you can cut a single piece and loop it.\\\\n * @name ribbon\\\\n * @synonym rib\\\\n * @param {number} offset start point of loop in cycles\\\\n * @param {number} cycles loop length in cycles\\\\n * @example\\\\n * note(\\\\"<c d e f>\\\\").ribbon(1, 2)\\\\n * @example\\\\n * // Looping a portion of randomness\\\\n * n(irand(8).segment(4)).scale(\\\\"c:pentatonic\\\\").ribbon(1337, 2)\\\\n * @example\\\\n * // rhythm generator\\\\n * s(\\\\"bd!16?\\\\").ribbon(29,.5)\\\\n */","meta":{"filename":"pattern.mjs","lineno":2492,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Loops the pattern inside an <code>offset</code> for <code>cycles</code>.\\\\nIf you think of the entire span of time in cycles as a ribbon, you can cut a single piece and loop it.</p>","name":"ribbon","tags":[{"originalTitle":"synonym","title":"synonym","text":"rib","value":"rib"}],"params":[{"type":{"names":["number"]},"description":"<p>start point of loop in cycles</p>","name":"offset"},{"type":{"names":["number"]},"description":"<p>loop length in cycles</p>","name":"cycles"}],"examples":["note(\\\\"<c d e f>\\\\").ribbon(1, 2)","// Looping a portion of randomness\\\\nn(irand(8).segment(4)).scale(\\\\"c:pentatonic\\\\").ribbon(1337, 2)","// rhythm generator\\\\ns(\\\\"bd!16?\\\\").ribbon(29,.5)"],"longname":"ribbon","kind":"member","scope":"global"},{"comment":"/**\\\\n * Tags each Hap with an identifier. Good for filtering. The function populates Hap.context.tags (Array).\\\\n * @name tag\\\\n * @noAutocomplete\\\\n * @param {string} tag anything unique\\\\n */","meta":{"filename":"pattern.mjs","lineno":2520,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Tags each Hap with an identifier. Good for filtering. The function populates Hap.context.tags (Array).</p>","name":"tag","tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"params":[{"type":{"names":["string"]},"description":"<p>anything unique</p>","name":"tag"}],"longname":"tag","kind":"member","scope":"global"},{"comment":"/**\\\\n * Filters haps using the given function\\\\n * @name filter\\\\n * @param {Function} test function to test Hap\\\\n * @example\\\\n * s(\\\\"hh!7 oh\\\\").filter(hap => hap.value.s===\'hh\')\\\\n */","meta":{"filename":"pattern.mjs","lineno":2530,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Filters haps using the given function</p>","name":"filter","params":[{"type":{"names":["function"]},"description":"<p>function to test Hap</p>","name":"test"}],"examples":["s(\\\\"hh!7 oh\\\\").filter(hap => hap.value.s===\'hh\')"],"longname":"filter","kind":"member","scope":"global"},{"comment":"/**\\\\n * Filters haps by their begin time\\\\n * @name filterWhen\\\\n * @noAutocomplete\\\\n * @param {Function} test function to test Hap.whole.begin\\\\n */","meta":{"filename":"pattern.mjs","lineno":2539,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Filters haps by their begin time</p>","name":"filterWhen","tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"params":[{"type":{"names":["function"]},"description":"<p>function to test Hap.whole.begin</p>","name":"test"}],"longname":"filterWhen","kind":"member","scope":"global"},{"comment":"/**\\\\n * Use within to apply a function to only a part of a pattern.\\\\n * @name within\\\\n * @param {number} start start within cycle (0 - 1)\\\\n * @param {number} end end within cycle (0 - 1). Must be > start\\\\n * @param {Function} func function to be applied to the sub-pattern\\\\n */","meta":{"filename":"pattern.mjs","lineno":2547,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Use within to apply a function to only a part of a pattern.</p>","name":"within","params":[{"type":{"names":["number"]},"description":"<p>start within cycle (0 - 1)</p>","name":"start"},{"type":{"names":["number"]},"description":"<p>end within cycle (0 - 1). Must be &gt; start</p>","name":"end"},{"type":{"names":["function"]},"description":"<p>function to be applied to the sub-pattern</p>","name":"func"}],"longname":"within","kind":"member","scope":"global"},{"comment":"/**\\\\n * *Experimental*\\\\n *\\\\n * Speeds a pattern up or down, to fit to the given number of steps per cycle.\\\\n * @example\\\\n * sound(\\\\"bd sd cp\\\\").pace(4)\\\\n * // The same as sound(\\\\"{bd sd cp}%4\\\\") or sound(\\\\"<bd sd cp>*4\\\\")\\\\n */","meta":{"range":[78785,79080],"filename":"pattern.mjs","lineno":2628,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100030271","name":"exports.pace","type":"VariableDeclaration"}},"description":"<p><em>Experimental</em></p>\\\\n<p>Speeds a pattern up or down, to fit to the given number of steps per cycle.</p>","examples":["sound(\\\\"bd sd cp\\\\").pace(4)\\\\n// The same as sound(\\\\"{bd sd cp}%4\\\\") or sound(\\\\"<bd sd cp>*4\\\\")"],"name":"pace","longname":"pace","kind":"constant","scope":"global"},{"comment":"/**\\\\n * *Experimental*\\\\n *\\\\n * Aligns the steps of the patterns, creating polymeters. The patterns are repeated until they all fit the cycle. For example, in the below the first pattern is repeated twice, and the second is repeated three times, to fit the lowest common multiple of six steps.\\\\n * @synonyms pm\\\\n * @example\\\\n * // The same as note(\\\\"{c eb g, c2 g2}%6\\\\")\\\\n * polymeter(\\\\"c eb g\\\\", \\\\"c2 g2\\\\").note()\\\\n *\\\\n */","meta":{"range":[79958,80466],"filename":"pattern.mjs","lineno":2671,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100030424","name":"exports.polymeter","type":"FunctionDeclaration","paramnames":["args"]}},"description":"<p><em>Experimental</em></p>\\\\n<p>Aligns the steps of the patterns, creating polymeters. The patterns are repeated until they all fit the cycle. For example, in the below the first pattern is repeated twice, and the second is repeated three times, to fit the lowest common multiple of six steps.</p>","synonyms_text":"pm","synonyms":["pm"],"examples":["// The same as note(\\\\"{c eb g, c2 g2}%6\\\\")\\\\npolymeter(\\\\"c eb g\\\\", \\\\"c2 g2\\\\").note()"],"name":"polymeter","longname":"polymeter","kind":"function","scope":"global"},{"comment":"/** \'Concatenates\' patterns like \\`fastcat\\`, but proportional to a number of steps per cycle.\\\\n * The steps can either be inferred from the pattern, or provided as a [length, pattern] pair.\\\\n * Has the alias \\`timecat\\`.\\\\n * @name stepcat\\\\n * @synonyms timeCat, timecat\\\\n * @return {Pattern}\\\\n * @example\\\\n * stepcat([3,\\\\"e3\\\\"],[1, \\\\"g3\\\\"]).note()\\\\n * // the same as \\\\"e3@3 g3\\\\".note()\\\\n * @example\\\\n * stepcat(\\\\"bd sd cp\\\\",\\\\"hh hh\\\\").sound()\\\\n * // the same as \\\\"bd sd cp hh hh\\\\".sound()\\\\n */","meta":{"filename":"pattern.mjs","lineno":2693,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>\'Concatenates\' patterns like <code>fastcat</code>, but proportional to a number of steps per cycle.\\\\nThe steps can either be inferred from the pattern, or provided as a [length, pattern] pair.\\\\nHas the alias <code>timecat</code>.</p>","name":"stepcat","synonyms_text":"timeCat, timecat","synonyms":["timeCat","timecat"],"returns":[{"type":{"names":["Pattern"]}}],"examples":["stepcat([3,\\\\"e3\\\\"],[1, \\\\"g3\\\\"]).note()\\\\n// the same as \\\\"e3@3 g3\\\\".note()","stepcat(\\\\"bd sd cp\\\\",\\\\"hh hh\\\\").sound()\\\\n// the same as \\\\"bd sd cp hh hh\\\\".sound()"],"longname":"stepcat","kind":"member","scope":"global"},{"comment":"/**\\\\n * *Experimental*\\\\n *\\\\n * Concatenates patterns stepwise, according to an inferred \'steps per cycle\'.\\\\n * Similar to \\`stepcat\\`, but if an argument is a list, the whole pattern will alternate between the elements in the list.\\\\n *\\\\n * @return {Pattern}\\\\n * @example\\\\n * stepalt([\\\\"bd cp\\\\", \\\\"mt\\\\"], \\\\"bd\\\\").sound()\\\\n * // The same as \\\\"bd cp bd mt bd\\\\".sound()\\\\n */","meta":{"range":[82525,83072],"filename":"pattern.mjs","lineno":2759,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100030793","name":"exports.stepalt","type":"FunctionDeclaration","paramnames":["groups"]}},"description":"<p><em>Experimental</em></p>\\\\n<p>Concatenates patterns stepwise, according to an inferred \'steps per cycle\'.\\\\nSimilar to <code>stepcat</code>, but if an argument is a list, the whole pattern will alternate between the elements in the list.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["stepalt([\\\\"bd cp\\\\", \\\\"mt\\\\"], \\\\"bd\\\\").sound()\\\\n// The same as \\\\"bd cp bd mt bd\\\\".sound()"],"name":"stepalt","longname":"stepalt","kind":"function","scope":"global"},{"comment":"/**\\\\n * *Experimental*\\\\n *\\\\n * Takes the given number of steps from a pattern (dropping the rest).\\\\n * A positive number will take steps from the start of a pattern, and a negative number from the end.\\\\n * @return {Pattern}\\\\n * @example\\\\n * \\\\"bd cp ht mt\\\\".take(\\\\"2\\\\").sound()\\\\n * // The same as \\\\"bd cp\\\\".sound()\\\\n * @example\\\\n * \\\\"bd cp ht mt\\\\".take(\\\\"1 2 3\\\\").sound()\\\\n * // The same as \\\\"bd bd cp bd cp ht\\\\".sound()\\\\n * @example\\\\n * \\\\"bd cp ht mt\\\\".take(\\\\"-1 -2 -3\\\\").sound()\\\\n * // The same as \\\\"mt ht mt cp ht mt\\\\".sound()\\\\n */","meta":{"range":[83575,84067],"filename":"pattern.mjs","lineno":2791,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100030934","name":"exports.take","type":"VariableDeclaration"}},"description":"<p><em>Experimental</em></p>\\\\n<p>Takes the given number of steps from a pattern (dropping the rest).\\\\nA positive number will take steps from the start of a pattern, and a negative number from the end.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["\\\\"bd cp ht mt\\\\".take(\\\\"2\\\\").sound()\\\\n// The same as \\\\"bd cp\\\\".sound()","\\\\"bd cp ht mt\\\\".take(\\\\"1 2 3\\\\").sound()\\\\n// The same as \\\\"bd bd cp bd cp ht\\\\".sound()","\\\\"bd cp ht mt\\\\".take(\\\\"-1 -2 -3\\\\").sound()\\\\n// The same as \\\\"mt ht mt cp ht mt\\\\".sound()"],"name":"take","longname":"take","kind":"constant","scope":"global"},{"comment":"/**\\\\n * *Experimental*\\\\n *\\\\n * Drops the given number of steps from a pattern.\\\\n * A positive number will drop steps from the start of a pattern, and a negative number from the end.\\\\n * @return {Pattern}\\\\n * @example\\\\n * \\\\"tha dhi thom nam\\\\".drop(\\\\"1\\\\").sound().bank(\\\\"mridangam\\\\")\\\\n * @example\\\\n * \\\\"tha dhi thom nam\\\\".drop(\\\\"-1\\\\").sound().bank(\\\\"mridangam\\\\")\\\\n * @example\\\\n * \\\\"tha dhi thom nam\\\\".drop(\\\\"0 1 2 3\\\\").sound().bank(\\\\"mridangam\\\\")\\\\n * @example\\\\n * \\\\"tha dhi thom nam\\\\".drop(\\\\"0 -1 -2 -3\\\\").sound().bank(\\\\"mridangam\\\\")\\\\n */","meta":{"range":[84568,84815],"filename":"pattern.mjs","lineno":2834,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100031046","name":"exports.drop","type":"VariableDeclaration"}},"description":"<p><em>Experimental</em></p>\\\\n<p>Drops the given number of steps from a pattern.\\\\nA positive number will drop steps from the start of a pattern, and a negative number from the end.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["\\\\"tha dhi thom nam\\\\".drop(\\\\"1\\\\").sound().bank(\\\\"mridangam\\\\")","\\\\"tha dhi thom nam\\\\".drop(\\\\"-1\\\\").sound().bank(\\\\"mridangam\\\\")","\\\\"tha dhi thom nam\\\\".drop(\\\\"0 1 2 3\\\\").sound().bank(\\\\"mridangam\\\\")","\\\\"tha dhi thom nam\\\\".drop(\\\\"0 -1 -2 -3\\\\").sound().bank(\\\\"mridangam\\\\")"],"name":"drop","longname":"drop","kind":"constant","scope":"global"},{"comment":"/**\\\\n * *Experimental*\\\\n *\\\\n * \\`extend\\` is similar to \\`fast\\` in that it increases its density, but it also increases the step count\\\\n * accordingly. So \\`stepcat(\\\\"a b\\\\".extend(2), \\\\"c d\\\\")\\` would be the same as \\`\\\\"a b a b c d\\\\"\\`, whereas\\\\n * \\`stepcat(\\\\"a b\\\\".fast(2), \\\\"c d\\\\")\\` would be the same as \\`\\\\"[a b] [a b] c d\\\\"\\`.\\\\n * @example\\\\n * stepcat(\\\\n *   sound(\\\\"bd bd - cp\\\\").extend(2),\\\\n *   sound(\\\\"bd - sd -\\\\")\\\\n * ).pace(8)\\\\n */","meta":{"range":[85223,85338],"filename":"pattern.mjs","lineno":2858,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100031108","name":"exports.extend","type":"VariableDeclaration"}},"description":"<p><em>Experimental</em></p>\\\\n<p><code>extend</code> is similar to <code>fast</code> in that it increases its density, but it also increases the step count\\\\naccordingly. So <code>stepcat(&quot;a b&quot;.extend(2), &quot;c d&quot;)</code> would be the same as <code>&quot;a b a b c d&quot;</code>, whereas\\\\n<code>stepcat(&quot;a b&quot;.fast(2), &quot;c d&quot;)</code> would be the same as <code>&quot;[a b] [a b] c d&quot;</code>.</p>","examples":["stepcat(\\\\n  sound(\\\\"bd bd - cp\\\\").extend(2),\\\\n  sound(\\\\"bd - sd -\\\\")\\\\n).pace(8)"],"name":"extend","longname":"extend","kind":"constant","scope":"global"},{"comment":"/**\\\\n * *Experimental*\\\\n *\\\\n * Expands the step size of the pattern by the given factor.\\\\n * @example\\\\n * sound(\\\\"tha dhi thom nam\\\\").bank(\\\\"mridangam\\\\").expand(\\\\"3 2 1 1 2 3\\\\").pace(8)\\\\n */","meta":{"range":[85519,85648],"filename":"pattern.mjs","lineno":2869,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100031129","name":"exports.expand","type":"VariableDeclaration"}},"description":"<p><em>Experimental</em></p>\\\\n<p>Expands the step size of the pattern by the given factor.</p>","examples":["sound(\\\\"tha dhi thom nam\\\\").bank(\\\\"mridangam\\\\").expand(\\\\"3 2 1 1 2 3\\\\").pace(8)"],"name":"expand","longname":"expand","kind":"constant","scope":"global"},{"comment":"/**\\\\n * *Experimental*\\\\n *\\\\n * Contracts the step size of the pattern by the given factor. See also \\`expand\\`.\\\\n * @example\\\\n * sound(\\\\"tha dhi thom nam\\\\").bank(\\\\"mridangam\\\\").contract(\\\\"3 2 1 1 2 3\\\\").pace(8)\\\\n */","meta":{"range":[85852,85985],"filename":"pattern.mjs","lineno":2880,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100031154","name":"exports.contract","type":"VariableDeclaration"}},"description":"<p><em>Experimental</em></p>\\\\n<p>Contracts the step size of the pattern by the given factor. See also <code>expand</code>.</p>","examples":["sound(\\\\"tha dhi thom nam\\\\").bank(\\\\"mridangam\\\\").contract(\\\\"3 2 1 1 2 3\\\\").pace(8)"],"name":"contract","longname":"contract","kind":"constant","scope":"global"},{"comment":"/**\\\\n * *Experimental*\\\\n *\\\\n * Progressively shrinks the pattern by \'n\' steps until there\'s nothing left, or if a second value is given (using mininotation list syntax with \\`:\\`),\\\\n * that number of times.\\\\n * A positive number will progressively drop steps from the start of a pattern, and a negative number from the end.\\\\n * @return {Pattern}\\\\n * @example\\\\n * \\\\"tha dhi thom nam\\\\".shrink(\\\\"1\\\\").sound()\\\\n * .bank(\\\\"mridangam\\\\")\\\\n * @example\\\\n * \\\\"tha dhi thom nam\\\\".shrink(\\\\"-1\\\\").sound()\\\\n * .bank(\\\\"mridangam\\\\")\\\\n * @example\\\\n * \\\\"tha dhi thom nam\\\\".shrink(\\\\"1 -1\\\\").sound().bank(\\\\"mridangam\\\\").pace(4)\\\\n * @example\\\\n * note(\\\\"0 1 2 3 4 5 6 7\\\\".scale(\\\\"C:ritusen\\\\")).sound(\\\\"folkharp\\\\")\\\\n   .shrink(\\\\"1 -1\\\\").pace(8)\\\\n\\\\n */","meta":{"range":[87634,88016],"filename":"pattern.mjs","lineno":2946,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100031394","name":"exports.shrink","type":"VariableDeclaration"}},"description":"<p><em>Experimental</em></p>\\\\n<p>Progressively shrinks the pattern by \'n\' steps until there\'s nothing left, or if a second value is given (using mininotation list syntax with <code>:</code>),\\\\nthat number of times.\\\\nA positive number will progressively drop steps from the start of a pattern, and a negative number from the end.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["\\\\"tha dhi thom nam\\\\".shrink(\\\\"1\\\\").sound()\\\\n.bank(\\\\"mridangam\\\\")","\\\\"tha dhi thom nam\\\\".shrink(\\\\"-1\\\\").sound()\\\\n.bank(\\\\"mridangam\\\\")","\\\\"tha dhi thom nam\\\\".shrink(\\\\"1 -1\\\\").sound().bank(\\\\"mridangam\\\\").pace(4)","note(\\\\"0 1 2 3 4 5 6 7\\\\".scale(\\\\"C:ritusen\\\\")).sound(\\\\"folkharp\\\\")\\\\n   .shrink(\\\\"1 -1\\\\").pace(8)"],"name":"shrink","longname":"shrink","kind":"constant","scope":"global"},{"comment":"/**\\\\n * *Experimental*\\\\n *\\\\n * Progressively grows the pattern by \'n\' steps until the full pattern is played, or if a second value is given (using mininotation list syntax with \\`:\\`),\\\\n * that number of times.\\\\n * A positive number will progressively grow steps from the start of a pattern, and a negative number from the end.\\\\n * @return {Pattern}\\\\n * @example\\\\n * \\\\"tha dhi thom nam\\\\".grow(\\\\"1\\\\").sound()\\\\n * .bank(\\\\"mridangam\\\\")\\\\n * @example\\\\n * \\\\"tha dhi thom nam\\\\".grow(\\\\"-1\\\\").sound()\\\\n * .bank(\\\\"mridangam\\\\")\\\\n * @example\\\\n * \\\\"tha dhi thom nam\\\\".grow(\\\\"1 -1\\\\").sound().bank(\\\\"mridangam\\\\").pace(4)\\\\n * @example\\\\n * note(\\\\"0 1 2 3 4 5 6 7\\\\".scale(\\\\"C:ritusen\\\\")).sound(\\\\"folkharp\\\\")\\\\n   .grow(\\\\"1 -1\\\\").pace(8)\\\\n */","meta":{"range":[88696,89111],"filename":"pattern.mjs","lineno":2984,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100031460","name":"exports.grow","type":"VariableDeclaration"}},"description":"<p><em>Experimental</em></p>\\\\n<p>Progressively grows the pattern by \'n\' steps until the full pattern is played, or if a second value is given (using mininotation list syntax with <code>:</code>),\\\\nthat number of times.\\\\nA positive number will progressively grow steps from the start of a pattern, and a negative number from the end.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["\\\\"tha dhi thom nam\\\\".grow(\\\\"1\\\\").sound()\\\\n.bank(\\\\"mridangam\\\\")","\\\\"tha dhi thom nam\\\\".grow(\\\\"-1\\\\").sound()\\\\n.bank(\\\\"mridangam\\\\")","\\\\"tha dhi thom nam\\\\".grow(\\\\"1 -1\\\\").sound().bank(\\\\"mridangam\\\\").pace(4)","note(\\\\"0 1 2 3 4 5 6 7\\\\".scale(\\\\"C:ritusen\\\\")).sound(\\\\"folkharp\\\\")\\\\n   .grow(\\\\"1 -1\\\\").pace(8)"],"name":"grow","longname":"grow","kind":"constant","scope":"global"},{"comment":"/**\\\\n * *Experimental*\\\\n * \\\\n * Inserts a pattern into a list of patterns. On the first repetition it will be inserted at the end of the list, then moved backwards through the list \\\\n * on successive repetitions. The patterns are added together stepwise, with all repetitions taking place over a single cycle. Using \\`pace\\` to set the \\\\n * number of steps per cycle is therefore usually recommended.\\\\n * \\\\n * @return {Pattern}\\\\n * @example\\\\n * \\\\"[c g]\\\\".tour(\\\\"e f\\\\", \\\\"e f g\\\\", \\\\"g f e c\\\\").note()\\\\n   .sound(\\\\"folkharp\\\\")\\\\n   .pace(8)\\\\n */","meta":{"range":[89632,89708],"filename":"pattern.mjs","lineno":3016,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100031537","name":"exports.tour","type":"VariableDeclaration"}},"description":"<p><em>Experimental</em></p>\\\\n<p>Inserts a pattern into a list of patterns. On the first repetition it will be inserted at the end of the list, then moved backwards through the list\\\\non successive repetitions. The patterns are added together stepwise, with all repetitions taking place over a single cycle. Using <code>pace</code> to set the\\\\nnumber of steps per cycle is therefore usually recommended.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["\\\\"[c g]\\\\".tour(\\\\"e f\\\\", \\\\"e f g\\\\", \\\\"g f e c\\\\").note()\\\\n   .sound(\\\\"folkharp\\\\")\\\\n   .pace(8)"],"name":"tour","longname":"tour","kind":"constant","scope":"global"},{"comment":"/**\\\\n * *Experimental*\\\\n * \\\\n * \'zips\' together the steps of the provided patterns. This can create a long repetition, taking place over a single, dense cycle. \\\\n * Using \\`pace\\` to set the number of steps per cycle is therefore usually recommended.\\\\n * \\\\n * @returns {Pattern}\\\\n * @example\\\\n * zip(\\\\"e f\\\\", \\\\"e f g\\\\", \\\\"g [f e] a f4 c\\\\").note()\\\\n   .sound(\\\\"folkharp\\\\")\\\\n   .pace(8)\\\\n */","meta":{"range":[90308,90563],"filename":"pattern.mjs","lineno":3042,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100031606","name":"exports.zip","type":"VariableDeclaration"}},"description":"<p><em>Experimental</em></p>\\\\n<p>\'zips\' together the steps of the provided patterns. This can create a long repetition, taking place over a single, dense cycle.\\\\nUsing <code>pace</code> to set the number of steps per cycle is therefore usually recommended.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["zip(\\\\"e f\\\\", \\\\"e f g\\\\", \\\\"g [f e] a f4 c\\\\").note()\\\\n   .sound(\\\\"folkharp\\\\")\\\\n   .pace(8)"],"name":"zip","longname":"zip","kind":"constant","scope":"global"},{"comment":"/** Aliases for \\`stepcat\\` */","meta":{"range":[90594,90625],"filename":"pattern.mjs","lineno":3050,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100031670","name":"exports.timecat","type":"VariableDeclaration"}},"description":"<p>Aliases for <code>stepcat</code></p>","name":"timecat","longname":"timecat","kind":"constant","scope":"global"},{"comment":"/**\\\\n * Cuts each sample into the given number of parts, allowing you to explore a technique known as \'granular synthesis\'.\\\\n * It turns a pattern of samples into a pattern of parts of samples.\\\\n * @name chop\\\\n * @memberof Pattern\\\\n * @returns Pattern\\\\n * @example\\\\n * samples({ rhodes: \'https://cdn.freesound.org/previews/132/132051_316502-lq.mp3\' })\\\\n * s(\\\\"rhodes\\\\")\\\\n *  .chop(4)\\\\n *  .rev() // reverse order of chops\\\\n *  .loopAt(2) // fit sample into 2 cycles\\\\n *\\\\n */","meta":{"filename":"pattern.mjs","lineno":3083,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Cuts each sample into the given number of parts, allowing you to explore a technique known as \'granular synthesis\'.\\\\nIt turns a pattern of samples into a pattern of parts of samples.</p>","name":"chop","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["samples({ rhodes: \'https://cdn.freesound.org/previews/132/132051_316502-lq.mp3\' })\\\\ns(\\\\"rhodes\\\\")\\\\n .chop(4)\\\\n .rev() // reverse order of chops\\\\n .loopAt(2) // fit sample into 2 cycles"],"scope":"static","longname":"Pattern.chop","kind":"member"},{"comment":"/**\\\\n * Cuts each sample into the given number of parts, triggering progressive portions of each sample at each loop.\\\\n * @name striate\\\\n * @memberof Pattern\\\\n * @returns Pattern\\\\n * @example\\\\n * s(\\\\"numbers:0 numbers:1 numbers:2\\\\").striate(6).slow(3)\\\\n */","meta":{"filename":"pattern.mjs","lineno":3114,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Cuts each sample into the given number of parts, triggering progressive portions of each sample at each loop.</p>","name":"striate","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\\\"numbers:0 numbers:1 numbers:2\\\\").striate(6).slow(3)"],"scope":"static","longname":"Pattern.striate","kind":"member"},{"comment":"/**\\\\n * Makes the sample fit the given number of cycles by changing the speed.\\\\n * @name loopAt\\\\n * @memberof Pattern\\\\n * @returns Pattern\\\\n * @example\\\\n * samples({ rhodes: \'https://cdn.freesound.org/previews/132/132051_316502-lq.mp3\' })\\\\n * s(\\\\"rhodes\\\\").loopAt(2)\\\\n */","meta":{"filename":"pattern.mjs","lineno":3132,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Makes the sample fit the given number of cycles by changing the speed.</p>","name":"loopAt","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["samples({ rhodes: \'https://cdn.freesound.org/previews/132/132051_316502-lq.mp3\' })\\\\ns(\\\\"rhodes\\\\").loopAt(2)"],"scope":"static","longname":"Pattern.loopAt","kind":"member"},{"comment":"/**\\\\n * Chops samples into the given number of slices, triggering those slices with a given pattern of slice numbers.\\\\n * Instead of a number, it also accepts a list of numbers from 0 to 1 to slice at specific points.\\\\n * @name slice\\\\n * @memberof Pattern\\\\n * @returns Pattern\\\\n * @example\\\\n * samples(\'github:tidalcycles/dirt-samples\')\\\\n * s(\\\\"breaks165\\\\").slice(8, \\\\"0 1 <2 2*2> 3 [4 0] 5 6 7\\\\".every(3, rev)).slow(0.75)\\\\n * @example\\\\n * samples(\'github:tidalcycles/dirt-samples\')\\\\n * s(\\\\"breaks125\\\\").fit().slice([0,.25,.5,.75], \\\\"0 1 1 <2 3>\\\\")\\\\n */","meta":{"filename":"pattern.mjs","lineno":3149,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Chops samples into the given number of slices, triggering those slices with a given pattern of slice numbers.\\\\nInstead of a number, it also accepts a list of numbers from 0 to 1 to slice at specific points.</p>","name":"slice","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["samples(\'github:tidalcycles/dirt-samples\')\\\\ns(\\\\"breaks165\\\\").slice(8, \\\\"0 1 <2 2*2> 3 [4 0] 5 6 7\\\\".every(3, rev)).slow(0.75)","samples(\'github:tidalcycles/dirt-samples\')\\\\ns(\\\\"breaks125\\\\").fit().slice([0,.25,.5,.75], \\\\"0 1 1 <2 3>\\\\")"],"scope":"static","longname":"Pattern.slice","kind":"member"},{"comment":"/**\\\\n * Works the same as slice, but changes the playback speed of each slice to match the duration of its step.\\\\n * @name splice\\\\n * @example\\\\n * samples(\'github:tidalcycles/dirt-samples\')\\\\n * s(\\\\"breaks165\\\\")\\\\n * .splice(8,  \\\\"0 1 [2 3 0]@2 3 0@2 7\\\\")\\\\n */","meta":{"filename":"pattern.mjs","lineno":3183,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Works the same as slice, but changes the playback speed of each slice to match the duration of its step.</p>","name":"splice","examples":["samples(\'github:tidalcycles/dirt-samples\')\\\\ns(\\\\"breaks165\\\\")\\\\n.splice(8,  \\\\"0 1 [2 3 0]@2 3 0@2 7\\\\")"],"longname":"splice","kind":"member","scope":"global"},{"comment":"/**\\\\n * Makes the sample fit its event duration. Good for rhythmical loops like drum breaks.\\\\n * Similar to \\`loopAt\\`.\\\\n * @name fit\\\\n * @example\\\\n * samples({ rhodes: \'https://cdn.freesound.org/previews/132/132051_316502-lq.mp3\' })\\\\n * s(\\\\"rhodes/2\\\\").fit()\\\\n */","meta":{"filename":"pattern.mjs","lineno":3219,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Makes the sample fit its event duration. Good for rhythmical loops like drum breaks.\\\\nSimilar to <code>loopAt</code>.</p>","name":"fit","examples":["samples({ rhodes: \'https://cdn.freesound.org/previews/132/132051_316502-lq.mp3\' })\\\\ns(\\\\"rhodes/2\\\\").fit()"],"longname":"fit","kind":"member","scope":"global"},{"comment":"/**\\\\n * Makes the sample fit the given number of cycles and cps value, by\\\\n * changing the speed. Please note that at some point cps will be\\\\n * given by a global clock and this function will be\\\\n * deprecated/removed.\\\\n * @name loopAtCps\\\\n * @memberof Pattern\\\\n * @returns Pattern\\\\n * @example\\\\n * samples({ rhodes: \'https://cdn.freesound.org/previews/132/132051_316502-lq.mp3\' })\\\\n * s(\\\\"rhodes\\\\").loopAtCps(4,1.5).cps(1.5)\\\\n */","meta":{"filename":"pattern.mjs","lineno":3242,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Makes the sample fit the given number of cycles and cps value, by\\\\nchanging the speed. Please note that at some point cps will be\\\\ngiven by a global clock and this function will be\\\\ndeprecated/removed.</p>","name":"loopAtCps","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["samples({ rhodes: \'https://cdn.freesound.org/previews/132/132051_316502-lq.mp3\' })\\\\ns(\\\\"rhodes\\\\").loopAtCps(4,1.5).cps(1.5)"],"scope":"static","longname":"Pattern.loopAtCps","kind":"member"},{"comment":"/** exposes a custom value at query time. basically allows mutating state without evaluation */","meta":{"range":[97606,97706],"filename":"pattern.mjs","lineno":3260,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100032468","name":"exports.ref","type":"VariableDeclaration"}},"description":"<p>exposes a custom value at query time. basically allows mutating state without evaluation</p>","name":"ref","longname":"ref","kind":"constant","scope":"global"},{"comment":"/**\\\\n * Cross-fades between left and right from 0 to 1:\\\\n * - 0 = (full left, no right)\\\\n * - .5 = (both equal)\\\\n * - 1 = (no left, full right)\\\\n *\\\\n * @name xfade\\\\n * @example\\\\n * xfade(s(\\\\"bd*2\\\\"), \\\\"<0 .25 .5 .75 1>\\\\", s(\\\\"hh*8\\\\"))\\\\n */","meta":{"filename":"pattern.mjs","lineno":3267,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Cross-fades between left and right from 0 to 1:</p>\\\\n<ul>\\\\n<li>0 = (full left, no right)</li>\\\\n<li>.5 = (both equal)</li>\\\\n<li>1 = (no left, full right)</li>\\\\n</ul>","name":"xfade","examples":["xfade(s(\\\\"bd*2\\\\"), \\\\"<0 .25 .5 .75 1>\\\\", s(\\\\"hh*8\\\\"))"],"longname":"xfade","kind":"member","scope":"global"},{"comment":"/**\\\\n * creates a structure pattern from divisions of a cycle\\\\n * especially useful for creating rhythms\\\\n * @name beat\\\\n * @example\\\\n * s(\\\\"bd\\\\").beat(\\\\"0,7,10\\\\", 16)\\\\n * @example\\\\n * s(\\\\"sd\\\\").beat(\\\\"4,12\\\\", 16)\\\\n */","meta":{"filename":"pattern.mjs","lineno":3291,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>creates a structure pattern from divisions of a cycle\\\\nespecially useful for creating rhythms</p>","name":"beat","examples":["s(\\\\"bd\\\\").beat(\\\\"0,7,10\\\\", 16)","s(\\\\"sd\\\\").beat(\\\\"4,12\\\\", 16)"],"longname":"beat","kind":"member","scope":"global"},{"comment":"/** * Picks patterns (or plain values) either from a list (by index) or a lookup table (by name).\\\\n * Similar to \\`inhabit\\`, but maintains the structure of the original patterns.\\\\n * @param {Pattern} pat\\\\n * @param {*} xs\\\\n * @returns {Pattern}\\\\n * @example\\\\n * note(\\\\"<0 1 2!2 3>\\\\".pick([\\\\"g a\\\\", \\\\"e f\\\\", \\\\"f g f g\\\\" , \\\\"g c d\\\\"]))\\\\n * @example\\\\n * sound(\\\\"<0 1 [2,0]>\\\\".pick([\\\\"bd sd\\\\", \\\\"cp cp\\\\", \\\\"hh hh\\\\"]))\\\\n * @example\\\\n * sound(\\\\"<0!2 [0,1] 1>\\\\".pick([\\\\"bd(3,8)\\\\", \\\\"sd sd\\\\"]))\\\\n * @example\\\\n * s(\\\\"<a!2 [a,b] b>\\\\".pick({a: \\\\"bd(3,8)\\\\", b: \\\\"sd sd\\\\"}))\\\\n */","meta":{"range":[1892,2094],"filename":"pick.mjs","lineno":44,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100032779","name":"exports.pick","type":"VariableDeclaration"}},"description":"<p>Picks patterns (or plain values) either from a list (by index) or a lookup table (by name).\\\\nSimilar to <code>inhabit</code>, but maintains the structure of the original patterns.</p>","params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["*"]},"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"examples":["note(\\\\"<0 1 2!2 3>\\\\".pick([\\\\"g a\\\\", \\\\"e f\\\\", \\\\"f g f g\\\\" , \\\\"g c d\\\\"]))","sound(\\\\"<0 1 [2,0]>\\\\".pick([\\\\"bd sd\\\\", \\\\"cp cp\\\\", \\\\"hh hh\\\\"]))","sound(\\\\"<0!2 [0,1] 1>\\\\".pick([\\\\"bd(3,8)\\\\", \\\\"sd sd\\\\"]))","s(\\\\"<a!2 [a,b] b>\\\\".pick({a: \\\\"bd(3,8)\\\\", b: \\\\"sd sd\\\\"}))"],"name":"pick","longname":"pick","kind":"constant","scope":"global"},{"comment":"/** * The same as \\`pick\\`, but if you pick a number greater than the size of the list,\\\\n * it wraps around, rather than sticking at the maximum value.\\\\n * For example, if you pick the fifth pattern of a list of three, you\'ll get the\\\\n * second one.\\\\n * @param {Pattern} pat\\\\n * @param {*} xs\\\\n * @returns {Pattern}\\\\n */","meta":{"range":[2519,2637],"filename":"pick.mjs","lineno":65,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100032824","name":"exports.pickmod","type":"VariableDeclaration"}},"description":"<p>The same as <code>pick</code>, but if you pick a number greater than the size of the list,\\\\nit wraps around, rather than sticking at the maximum value.\\\\nFor example, if you pick the fifth pattern of a list of three, you\'ll get the\\\\nsecond one.</p>","params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["*"]},"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"name":"pickmod","longname":"pickmod","kind":"constant","scope":"global"},{"comment":"/** * pickF lets you use a pattern of numbers to pick which function to apply to another pattern.\\\\n * @param {Pattern} pat\\\\n * @param {Pattern} lookup a pattern of indices\\\\n * @param {function[]} funcs the array of functions from which to pull\\\\n * @returns {Pattern}\\\\n * @example\\\\n * s(\\\\"bd [rim hh]\\\\").pickF(\\\\"<0 1 2>\\\\", [rev,jux(rev),fast(2)])\\\\n * @example\\\\n * note(\\\\"<c2 d2>(3,8)\\\\").s(\\\\"square\\\\")\\\\n *     .pickF(\\\\"<0 2> 1\\\\", [jux(rev),fast(2),x=>x.lpf(800)])\\\\n */","meta":{"range":[3086,3201],"filename":"pick.mjs","lineno":80,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100032844","name":"exports.pickF","type":"VariableDeclaration"}},"description":"<p>pickF lets you use a pattern of numbers to pick which function to apply to another pattern.</p>","params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["Pattern"]},"description":"<p>a pattern of indices</p>","name":"lookup"},{"type":{"names":["Array.<function()>"]},"description":"<p>the array of functions from which to pull</p>","name":"funcs"}],"returns":[{"type":{"names":["Pattern"]}}],"examples":["s(\\\\"bd [rim hh]\\\\").pickF(\\\\"<0 1 2>\\\\", [rev,jux(rev),fast(2)])","note(\\\\"<c2 d2>(3,8)\\\\").s(\\\\"square\\\\")\\\\n    .pickF(\\\\"<0 2> 1\\\\", [jux(rev),fast(2),x=>x.lpf(800)])"],"name":"pickF","longname":"pickF","kind":"constant","scope":"global"},{"comment":"/** * The same as \\`pickF\\`, but if you pick a number greater than the size of the functions list,\\\\n * it wraps around, rather than sticking at the maximum value.\\\\n * @param {Pattern} pat\\\\n * @param {Pattern} lookup a pattern of indices\\\\n * @param {function[]} funcs the array of functions from which to pull\\\\n * @returns {Pattern}\\\\n */","meta":{"range":[3532,3656],"filename":"pick.mjs","lineno":91,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100032865","name":"exports.pickmodF","type":"VariableDeclaration"}},"description":"<p>The same as <code>pickF</code>, but if you pick a number greater than the size of the functions list,\\\\nit wraps around, rather than sticking at the maximum value.</p>","params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["Pattern"]},"description":"<p>a pattern of indices</p>","name":"lookup"},{"type":{"names":["Array.<function()>"]},"description":"<p>the array of functions from which to pull</p>","name":"funcs"}],"returns":[{"type":{"names":["Pattern"]}}],"name":"pickmodF","longname":"pickmodF","kind":"constant","scope":"global"},{"comment":"/** * Similar to \\`pick\\`, but it applies an outerJoin instead of an innerJoin.\\\\n * @param {Pattern} pat\\\\n * @param {*} xs\\\\n * @returns {Pattern}\\\\n */","meta":{"range":[3803,3922],"filename":"pick.mjs","lineno":100,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100032886","name":"exports.pickOut","type":"VariableDeclaration"}},"description":"<p>Similar to <code>pick</code>, but it applies an outerJoin instead of an innerJoin.</p>","params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["*"]},"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"name":"pickOut","longname":"pickOut","kind":"constant","scope":"global"},{"comment":"/** * The same as \\`pickOut\\`, but if you pick a number greater than the size of the list,\\\\n * it wraps around, rather than sticking at the maximum value.\\\\n * @param {Pattern} pat\\\\n * @param {*} xs\\\\n * @returns {Pattern}\\\\n */","meta":{"range":[4143,4267],"filename":"pick.mjs","lineno":110,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100032906","name":"exports.pickmodOut","type":"VariableDeclaration"}},"description":"<p>The same as <code>pickOut</code>, but if you pick a number greater than the size of the list,\\\\nit wraps around, rather than sticking at the maximum value.</p>","params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["*"]},"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"name":"pickmodOut","longname":"pickmodOut","kind":"constant","scope":"global"},{"comment":"/** * Similar to \\`pick\\`, but the choosen pattern is restarted when its index is triggered.\\\\n * @param {Pattern} pat\\\\n * @param {*} xs\\\\n * @returns {Pattern}\\\\n */","meta":{"range":[4427,4556],"filename":"pick.mjs","lineno":119,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100032926","name":"exports.pickRestart","type":"VariableDeclaration"}},"description":"<p>Similar to <code>pick</code>, but the choosen pattern is restarted when its index is triggered.</p>","params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["*"]},"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"name":"pickRestart","longname":"pickRestart","kind":"constant","scope":"global"},{"comment":"/** * The same as \\`pickRestart\\`, but if you pick a number greater than the size of the list,\\\\n   * it wraps around, rather than sticking at the maximum value.\\\\n   * @param {Pattern} pat\\\\n   * @param {*} xs\\\\n   * @returns {Pattern}\\\\n   * @example\\\\n   * \\\\"<a@2 b@2 c@2 d@2>\\\\".pickRestart({\\\\n        a: n(\\\\"0 1 2 0\\\\"),\\\\n        b: n(\\\\"2 3 4 ~\\\\"),\\\\n        c: n(\\\\"[4 5] [4 3] 2 0\\\\"),\\\\n        d: n(\\\\"0 -3 0 ~\\\\")\\\\n      }).scale(\\\\"C:major\\\\").s(\\\\"piano\\\\")\\\\n   */","meta":{"range":[4989,5123],"filename":"pick.mjs","lineno":136,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100032946","name":"exports.pickmodRestart","type":"VariableDeclaration"}},"description":"<p>The same as <code>pickRestart</code>, but if you pick a number greater than the size of the list,\\\\nit wraps around, rather than sticking at the maximum value.</p>","params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["*"]},"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"examples":["\\\\"<a@2 b@2 c@2 d@2>\\\\".pickRestart({\\\\n        a: n(\\\\"0 1 2 0\\\\"),\\\\n        b: n(\\\\"2 3 4 ~\\\\"),\\\\n        c: n(\\\\"[4 5] [4 3] 2 0\\\\"),\\\\n        d: n(\\\\"0 -3 0 ~\\\\")\\\\n      }).scale(\\\\"C:major\\\\").s(\\\\"piano\\\\")"],"name":"pickmodRestart","longname":"pickmodRestart","kind":"constant","scope":"global"},{"comment":"/** * Similar to \\`pick\\`, but the choosen pattern is reset when its index is triggered.\\\\n * @param {Pattern} pat\\\\n * @param {*} xs\\\\n * @returns {Pattern}\\\\n */","meta":{"range":[5279,5402],"filename":"pick.mjs","lineno":145,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100032966","name":"exports.pickReset","type":"VariableDeclaration"}},"description":"<p>Similar to <code>pick</code>, but the choosen pattern is reset when its index is triggered.</p>","params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["*"]},"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"name":"pickReset","longname":"pickReset","kind":"constant","scope":"global"},{"comment":"/** * The same as \\`pickReset\\`, but if you pick a number greater than the size of the list,\\\\n * it wraps around, rather than sticking at the maximum value.\\\\n * @param {Pattern} pat\\\\n * @param {*} xs\\\\n * @returns {Pattern}\\\\n */","meta":{"range":[5625,5753],"filename":"pick.mjs","lineno":155,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100032986","name":"exports.pickmodReset","type":"VariableDeclaration"}},"description":"<p>The same as <code>pickReset</code>, but if you pick a number greater than the size of the list,\\\\nit wraps around, rather than sticking at the maximum value.</p>","params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["*"]},"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"name":"pickmodReset","longname":"pickmodReset","kind":"constant","scope":"global"},{"comment":"/**\\\\n  /** * Picks patterns (or plain values) either from a list (by index) or a lookup table (by name).\\\\n   * Similar to \\`pick\\`, but cycles are squeezed into the target (\'inhabited\') pattern.\\\\n   * @name inhabit\\\\n   * @synonyms pickSqueeze\\\\n   * @param {Pattern} pat\\\\n   * @param {*} xs\\\\n   * @returns {Pattern}\\\\n   * @example\\\\n   * \\\\"<a b [a,b]>\\\\".inhabit({a: s(\\\\"bd(3,8)\\\\"),\\\\n                            b: s(\\\\"cp sd\\\\")\\\\n                           })\\\\n   * @example\\\\n   * s(\\\\"a@2 [a b] a\\\\".inhabit({a: \\\\"bd(3,8)\\\\", b: \\\\"sd sd\\\\"})).slow(4)\\\\n   */","meta":{"filename":"pick.mjs","lineno":159,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>/** * Picks patterns (or plain values) either from a list (by index) or a lookup table (by name).\\\\nSimilar to <code>pick</code>, but cycles are squeezed into the target (\'inhabited\') pattern.</p>","name":"inhabit","synonyms_text":"pickSqueeze","synonyms":["pickSqueeze"],"params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["*"]},"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"examples":["\\\\"<a b [a,b]>\\\\".inhabit({a: s(\\\\"bd(3,8)\\\\"),\\\\n                            b: s(\\\\"cp sd\\\\")\\\\n                           })","s(\\\\"a@2 [a b] a\\\\".inhabit({a: \\\\"bd(3,8)\\\\", b: \\\\"sd sd\\\\"})).slow(4)"],"longname":"inhabit","kind":"member","scope":"global"},{"comment":"/** * The same as \\`inhabit\\`, but if you pick a number greater than the size of the list,\\\\n * it wraps around, rather than sticking at the maximum value.\\\\n * For example, if you pick the fifth pattern of a list of three, you\'ll get the\\\\n * second one.\\\\n * @name inhabitmod\\\\n * @synonyms pickmodSqueeze\\\\n * @param {Pattern} pat\\\\n * @param {*} xs\\\\n * @returns {Pattern}\\\\n */","meta":{"filename":"pick.mjs","lineno":178,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>The same as <code>inhabit</code>, but if you pick a number greater than the size of the list,\\\\nit wraps around, rather than sticking at the maximum value.\\\\nFor example, if you pick the fifth pattern of a list of three, you\'ll get the\\\\nsecond one.</p>","name":"inhabitmod","synonyms_text":"pickmodSqueeze","synonyms":["pickmodSqueeze"],"params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["*"]},"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"longname":"inhabitmod","kind":"member","scope":"global"},{"comment":"/**\\\\n * Pick from the list of values (or patterns of values) via the index using the given\\\\n * pattern of integers. The selected pattern will be compressed to fit the duration of the selecting event\\\\n * @param {Pattern} pat\\\\n * @param {*} xs\\\\n * @returns {Pattern}\\\\n * @example\\\\n * note(squeeze(\\\\"<0@2 [1!2] 2>\\\\", [\\\\"g a\\\\", \\\\"f g f g\\\\" , \\\\"g a c d\\\\"]))\\\\n */","meta":{"range":[7310,7551],"filename":"pick.mjs","lineno":203,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100033058","name":"exports.squeeze","type":"VariableDeclaration"}},"description":"<p>Pick from the list of values (or patterns of values) via the index using the given\\\\npattern of integers. The selected pattern will be compressed to fit the duration of the selecting event</p>","params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["*"]},"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"examples":["note(squeeze(\\\\"<0@2 [1!2] 2>\\\\", [\\\\"g a\\\\", \\\\"f g f g\\\\" , \\\\"g a c d\\\\"]))"],"name":"squeeze","longname":"squeeze","kind":"constant","scope":"global"},{"comment":"/** Applies a function to all the running patterns. Note that the patterns are groups together into a single \\`stack\\` before the function is applied. This is probably what you want, but see \\`each\\` for\\\\n   * a version that applies the function to each pattern separately.\\\\n   * \\`\\`\\`\\\\n   * $: sound(\\\\"bd - cp sd\\\\")\\\\n   * $: sound(\\\\"hh*8\\\\")\\\\n   * all(fast(\\\\"<2 3>\\\\"))\\\\n   * \\`\\`\\`\\\\n   * \\`\\`\\`\\\\n   * $: sound(\\\\"bd - cp sd\\\\")\\\\n   * $: sound(\\\\"hh*8\\\\")\\\\n   * all(x => x.pianoroll())\\\\n   * \\`\\`\\`\\\\n   */","meta":{"range":[2937,3019],"filename":"repl.mjs","lineno":106,"columnno":8,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100033428","name":"all","type":"FunctionExpression"},"vars":{"allTransform":"repl~all~allTransform"}},"description":"<p>Applies a function to all the running patterns. Note that the patterns are groups together into a single <code>stack</code> before the function is applied. This is probably what you want, but see <code>each</code> for\\\\na version that applies the function to each pattern separately.</p>\\\\n<pre class=\\\\"prettyprint source\\\\"><code>$: sound(&quot;bd - cp sd&quot;)\\\\n$: sound(&quot;hh*8&quot;)\\\\nall(fast(&quot;&lt;2 3>&quot;))\\\\n</code></pre>\\\\n<pre class=\\\\"prettyprint source\\\\"><code>$: sound(&quot;bd - cp sd&quot;)\\\\n$: sound(&quot;hh*8&quot;)\\\\nall(x => x.pianoroll())\\\\n</code></pre>","name":"all","longname":"repl~all","kind":"function","memberof":"repl","scope":"inner","params":[]},{"comment":"/** Applies a function to each of the running patterns separately. This is intended for future use with upcoming \'stepwise\' features. See \\`all\\` for a version that applies the function to all the patterns stacked together into a single pattern.\\\\n   * \\`\\`\\`\\\\n   * $: sound(\\\\"bd - cp sd\\\\")\\\\n   * $: sound(\\\\"hh*8\\\\")\\\\n   * each(fast(\\\\"<2 3>\\\\"))\\\\n   * \\`\\`\\`\\\\n   */","meta":{"range":[3374,3458],"filename":"repl.mjs","lineno":117,"columnno":8,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100033440","name":"each","type":"FunctionExpression"},"vars":{"eachTransform":"repl~each~eachTransform"}},"description":"<p>Applies a function to each of the running patterns separately. This is intended for future use with upcoming \'stepwise\' features. See <code>all</code> for a version that applies the function to all the patterns stacked together into a single pattern.</p>\\\\n<pre class=\\\\"prettyprint source\\\\"><code>$: sound(&quot;bd - cp sd&quot;)\\\\n$: sound(&quot;hh*8&quot;)\\\\neach(fast(&quot;&lt;2 3>&quot;))\\\\n</code></pre>","name":"each","longname":"repl~each","kind":"function","memberof":"repl","scope":"inner","params":[]},{"comment":"/**\\\\n *  A sawtooth signal between 0 and 1.\\\\n *\\\\n * @return {Pattern}\\\\n * @example\\\\n * note(\\\\"<c3 [eb3,g3] g2 [g3,bb3]>*8\\\\")\\\\n * .clip(saw.slow(2))\\\\n * @example\\\\n * n(saw.range(0,8).segment(8))\\\\n * .scale(\'C major\')\\\\n *\\\\n */","meta":{"range":[1533,1573],"filename":"signal.mjs","lineno":35,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034059","name":"exports.saw","type":"VariableDeclaration"}},"description":"<p>A sawtooth signal between 0 and 1.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["note(\\\\"<c3 [eb3,g3] g2 [g3,bb3]>*8\\\\")\\\\n.clip(saw.slow(2))","n(saw.range(0,8).segment(8))\\\\n.scale(\'C major\')"],"name":"saw","longname":"saw","kind":"constant","scope":"global"},{"comment":"/**\\\\n *  A sawtooth signal between -1 and 1 (like \\`saw\\`, but bipolar).\\\\n *\\\\n * @return {Pattern}\\\\n */","meta":{"range":[1673,1709],"filename":"signal.mjs","lineno":42,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034070","name":"exports.saw2","type":"VariableDeclaration"}},"description":"<p>A sawtooth signal between -1 and 1 (like <code>saw</code>, but bipolar).</p>","returns":[{"type":{"names":["Pattern"]}}],"name":"saw2","longname":"saw2","kind":"constant","scope":"global"},{"comment":"/**\\\\n *  A sawtooth signal between 1 and 0 (like \\`saw\\`, but flipped).\\\\n *\\\\n * @return {Pattern}\\\\n * @example\\\\n * note(\\\\"<c3 [eb3,g3] g2 [g3,bb3]>*8\\\\")\\\\n * .clip(isaw.slow(2))\\\\n * @example\\\\n * n(isaw.range(0,8).segment(8))\\\\n * .scale(\'C major\')\\\\n *\\\\n */","meta":{"range":[1951,1998],"filename":"signal.mjs","lineno":56,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034078","name":"exports.isaw","type":"VariableDeclaration"}},"description":"<p>A sawtooth signal between 1 and 0 (like <code>saw</code>, but flipped).</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["note(\\\\"<c3 [eb3,g3] g2 [g3,bb3]>*8\\\\")\\\\n.clip(isaw.slow(2))","n(isaw.range(0,8).segment(8))\\\\n.scale(\'C major\')"],"name":"isaw","longname":"isaw","kind":"constant","scope":"global"},{"comment":"/**\\\\n *  A sawtooth signal between 1 and -1 (like \\`saw2\\`, but flipped).\\\\n *\\\\n * @return {Pattern}\\\\n */","meta":{"range":[2099,2137],"filename":"signal.mjs","lineno":63,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034091","name":"exports.isaw2","type":"VariableDeclaration"}},"description":"<p>A sawtooth signal between 1 and -1 (like <code>saw2</code>, but flipped).</p>","returns":[{"type":{"names":["Pattern"]}}],"name":"isaw2","longname":"isaw2","kind":"constant","scope":"global"},{"comment":"/**\\\\n *  A sine signal between -1 and 1 (like \\`sine\\`, but bipolar).\\\\n *\\\\n * @return {Pattern}\\\\n */","meta":{"range":[2234,2296],"filename":"signal.mjs","lineno":70,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034099","name":"exports.sine2","type":"VariableDeclaration"}},"description":"<p>A sine signal between -1 and 1 (like <code>sine</code>, but bipolar).</p>","returns":[{"type":{"names":["Pattern"]}}],"name":"sine2","longname":"sine2","kind":"constant","scope":"global"},{"comment":"/**\\\\n *  A sine signal between 0 and 1.\\\\n * @return {Pattern}\\\\n * @example\\\\n * n(sine.segment(16).range(0,15))\\\\n * .scale(\\\\"C:minor\\\\")\\\\n *\\\\n */","meta":{"range":[2433,2473],"filename":"signal.mjs","lineno":80,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034118","name":"exports.sine","type":"VariableDeclaration"}},"description":"<p>A sine signal between 0 and 1.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["n(sine.segment(16).range(0,15))\\\\n.scale(\\\\"C:minor\\\\")"],"name":"sine","longname":"sine","kind":"constant","scope":"global"},{"comment":"/**\\\\n *  A cosine signal between 0 and 1.\\\\n *\\\\n * @return {Pattern}\\\\n * @example\\\\n * n(stack(sine,cosine).segment(16).range(0,15))\\\\n * .scale(\\\\"C:minor\\\\")\\\\n *\\\\n */","meta":{"range":[2629,2683],"filename":"signal.mjs","lineno":91,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034126","name":"exports.cosine","type":"VariableDeclaration"}},"description":"<p>A cosine signal between 0 and 1.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["n(stack(sine,cosine).segment(16).range(0,15))\\\\n.scale(\\\\"C:minor\\\\")"],"name":"cosine","longname":"cosine","kind":"constant","scope":"global"},{"comment":"/**\\\\n *  A cosine signal between -1 and 1 (like \\`cosine\\`, but bipolar).\\\\n *\\\\n * @return {Pattern}\\\\n */","meta":{"range":[2784,2840],"filename":"signal.mjs","lineno":98,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034141","name":"exports.cosine2","type":"VariableDeclaration"}},"description":"<p>A cosine signal between -1 and 1 (like <code>cosine</code>, but bipolar).</p>","returns":[{"type":{"names":["Pattern"]}}],"name":"cosine2","longname":"cosine2","kind":"constant","scope":"global"},{"comment":"/**\\\\n *  A square signal between 0 and 1.\\\\n * @return {Pattern}\\\\n * @example\\\\n * n(square.segment(4).range(0,7)).scale(\\\\"C:minor\\\\")\\\\n *\\\\n */","meta":{"range":[2975,3036],"filename":"signal.mjs","lineno":107,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034156","name":"exports.square","type":"VariableDeclaration"}},"description":"<p>A square signal between 0 and 1.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["n(square.segment(4).range(0,7)).scale(\\\\"C:minor\\\\")"],"name":"square","longname":"square","kind":"constant","scope":"global"},{"comment":"/**\\\\n *  A square signal between -1 and 1 (like \\`square\\`, but bipolar).\\\\n *\\\\n * @return {Pattern}\\\\n */","meta":{"range":[3137,3179],"filename":"signal.mjs","lineno":114,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034173","name":"exports.square2","type":"VariableDeclaration"}},"description":"<p>A square signal between -1 and 1 (like <code>square</code>, but bipolar).</p>","returns":[{"type":{"names":["Pattern"]}}],"name":"square2","longname":"square2","kind":"constant","scope":"global"},{"comment":"/**\\\\n *  A triangle signal between 0 and 1.\\\\n *\\\\n * @return {Pattern}\\\\n * @example\\\\n * n(tri.segment(8).range(0,7)).scale(\\\\"C:minor\\\\")\\\\n *\\\\n */","meta":{"range":[3316,3354],"filename":"signal.mjs","lineno":124,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034181","name":"exports.tri","type":"VariableDeclaration"}},"description":"<p>A triangle signal between 0 and 1.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["n(tri.segment(8).range(0,7)).scale(\\\\"C:minor\\\\")"],"name":"tri","longname":"tri","kind":"constant","scope":"global"},{"comment":"/**\\\\n *  A triangle signal between -1 and 1 (like \\`tri\\`, but bipolar).\\\\n *\\\\n * @return {Pattern}\\\\n */","meta":{"range":[3454,3495],"filename":"signal.mjs","lineno":131,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034189","name":"exports.tri2","type":"VariableDeclaration"}},"description":"<p>A triangle signal between -1 and 1 (like <code>tri</code>, but bipolar).</p>","returns":[{"type":{"names":["Pattern"]}}],"name":"tri2","longname":"tri2","kind":"constant","scope":"global"},{"comment":"/**\\\\n *  An inverted triangle signal between 1 and 0 (like \\`tri\\`, but flipped).\\\\n *\\\\n * @return {Pattern}\\\\n * @example\\\\n * n(itri.segment(8).range(0,7)).scale(\\\\"C:minor\\\\")\\\\n *\\\\n */","meta":{"range":[3669,3708],"filename":"signal.mjs","lineno":141,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034197","name":"exports.itri","type":"VariableDeclaration"}},"description":"<p>An inverted triangle signal between 1 and 0 (like <code>tri</code>, but flipped).</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["n(itri.segment(8).range(0,7)).scale(\\\\"C:minor\\\\")"],"name":"itri","longname":"itri","kind":"constant","scope":"global"},{"comment":"/**\\\\n *  An inverted triangle signal between -1 and 1 (like \\`itri\\`, but bipolar).\\\\n *\\\\n * @return {Pattern}\\\\n */","meta":{"range":[3819,3861],"filename":"signal.mjs","lineno":148,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034205","name":"exports.itri2","type":"VariableDeclaration"}},"description":"<p>An inverted triangle signal between -1 and 1 (like <code>itri</code>, but bipolar).</p>","returns":[{"type":{"names":["Pattern"]}}],"name":"itri2","longname":"itri2","kind":"constant","scope":"global"},{"comment":"/**\\\\n *  A signal representing the cycle time.\\\\n *\\\\n * @return {Pattern}\\\\n */","meta":{"range":[3937,3968],"filename":"signal.mjs","lineno":155,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034213","name":"exports.time","type":"VariableDeclaration"}},"description":"<p>A signal representing the cycle time.</p>","returns":[{"type":{"names":["Pattern"]}}],"name":"time","longname":"time","kind":"constant","scope":"global"},{"comment":"/**\\\\n *  The mouse\'s x position value ranges from 0 to 1.\\\\n * @name mousex\\\\n * @return {Pattern}\\\\n * @example\\\\n * n(mousex.segment(4).range(0,7)).scale(\\\\"C:minor\\\\")\\\\n *\\\\n */","meta":{"filename":"signal.mjs","lineno":157,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>The mouse\'s x position value ranges from 0 to 1.</p>","name":"mousex","returns":[{"type":{"names":["Pattern"]}}],"examples":["n(mousex.segment(4).range(0,7)).scale(\\\\"C:minor\\\\")"],"longname":"mousex","kind":"member","scope":"global"},{"comment":"/**\\\\n *  The mouse\'s y position value ranges from 0 to 1.\\\\n * @name mousey\\\\n * @return {Pattern}\\\\n * @example\\\\n * n(mousey.segment(4).range(0,7)).scale(\\\\"C:minor\\\\")\\\\n *\\\\n */","meta":{"filename":"signal.mjs","lineno":166,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>The mouse\'s y position value ranges from 0 to 1.</p>","name":"mousey","returns":[{"type":{"names":["Pattern"]}}],"examples":["n(mousey.segment(4).range(0,7)).scale(\\\\"C:minor\\\\")"],"longname":"mousey","kind":"member","scope":"global"},{"comment":"/**\\\\n * A discrete pattern of numbers from 0 to n-1\\\\n * @example\\\\n * n(run(4)).scale(\\\\"C4:pentatonic\\\\")\\\\n * // n(\\\\"0 1 2 3\\\\").scale(\\\\"C4:pentatonic\\\\")\\\\n */","meta":{"range":[5663,5724],"filename":"signal.mjs","lineno":228,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034430","name":"exports.run","type":"VariableDeclaration"}},"description":"<p>A discrete pattern of numbers from 0 to n-1</p>","examples":["n(run(4)).scale(\\\\"C4:pentatonic\\\\")\\\\n// n(\\\\"0 1 2 3\\\\").scale(\\\\"C4:pentatonic\\\\")"],"name":"run","longname":"run","kind":"constant","scope":"global"},{"comment":"/**\\\\n * Creates a pattern from a binary number.\\\\n *\\\\n * @name binary\\\\n * @param {number} n - input number to convert to binary\\\\n * @example\\\\n * \\\\"hh\\\\".s().struct(binary(5))\\\\n * // \\\\"hh\\\\".s().struct(\\\\"1 0 1\\\\")\\\\n */","meta":{"filename":"signal.mjs","lineno":230,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Creates a pattern from a binary number.</p>","name":"binary","params":[{"type":{"names":["number"]},"description":"<p>input number to convert to binary</p>","name":"n"}],"examples":["\\\\"hh\\\\".s().struct(binary(5))\\\\n// \\\\"hh\\\\".s().struct(\\\\"1 0 1\\\\")"],"longname":"binary","kind":"member","scope":"global"},{"comment":"/**\\\\n * Creates a pattern from a binary number, padded to n bits long.\\\\n *\\\\n * @name binaryN\\\\n * @param {number} n - input number to convert to binary\\\\n * @param {number} nBits - pattern length, defaults to 16\\\\n * @example\\\\n * \\\\"hh\\\\".s().struct(binaryN(55532, 16))\\\\n * // \\\\"hh\\\\".s().struct(\\\\"1 1 0 1 1 0 0 0 1 1 1 0 1 1 0 0\\\\")\\\\n */","meta":{"filename":"signal.mjs","lineno":244,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Creates a pattern from a binary number, padded to n bits long.</p>","name":"binaryN","params":[{"type":{"names":["number"]},"description":"<p>input number to convert to binary</p>","name":"n"},{"type":{"names":["number"]},"description":"<p>pattern length, defaults to 16</p>","name":"nBits"}],"examples":["\\\\"hh\\\\".s().struct(binaryN(55532, 16))\\\\n// \\\\"hh\\\\".s().struct(\\\\"1 1 0 1 1 0 0 0 1 1 1 0 1 1 0 0\\\\")"],"longname":"binaryN","kind":"member","scope":"global"},{"comment":"/**\\\\n * Slices a pattern into the given number of parts, then plays those parts in random order.\\\\n * Each part will be played exactly once per cycle.\\\\n * @name shuffle\\\\n * @example\\\\n * note(\\\\"c d e f\\\\").sound(\\\\"piano\\\\").shuffle(4)\\\\n * @example\\\\n * seq(\\\\"c d e f\\\\".shuffle(4), \\\\"g\\\\").note().sound(\\\\"piano\\\\")\\\\n */","meta":{"filename":"signal.mjs","lineno":279,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Slices a pattern into the given number of parts, then plays those parts in random order.\\\\nEach part will be played exactly once per cycle.</p>","name":"shuffle","examples":["note(\\\\"c d e f\\\\").sound(\\\\"piano\\\\").shuffle(4)","seq(\\\\"c d e f\\\\".shuffle(4), \\\\"g\\\\").note().sound(\\\\"piano\\\\")"],"longname":"shuffle","kind":"member","scope":"global"},{"comment":"/**\\\\n * Slices a pattern into the given number of parts, then plays those parts at random. Similar to \\`shuffle\\`,\\\\n * but parts might be played more than once, or not at all, per cycle.\\\\n * @name scramble\\\\n * @example\\\\n * note(\\\\"c d e f\\\\").sound(\\\\"piano\\\\").scramble(4)\\\\n * @example\\\\n * seq(\\\\"c d e f\\\\".scramble(4), \\\\"g\\\\").note().sound(\\\\"piano\\\\")\\\\n */","meta":{"filename":"signal.mjs","lineno":292,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Slices a pattern into the given number of parts, then plays those parts at random. Similar to <code>shuffle</code>,\\\\nbut parts might be played more than once, or not at all, per cycle.</p>","name":"scramble","examples":["note(\\\\"c d e f\\\\").sound(\\\\"piano\\\\").scramble(4)","seq(\\\\"c d e f\\\\".scramble(4), \\\\"g\\\\").note().sound(\\\\"piano\\\\")"],"longname":"scramble","kind":"member","scope":"global"},{"comment":"/**\\\\n * A continuous pattern of random numbers, between 0 and 1.\\\\n *\\\\n * @name rand\\\\n * @example\\\\n * // randomly change the cutoff\\\\n * s(\\\\"bd*4,hh*8\\\\").cutoff(rand.range(500,8000))\\\\n *\\\\n */","meta":{"filename":"signal.mjs","lineno":305,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>A continuous pattern of random numbers, between 0 and 1.</p>","name":"rand","examples":["// randomly change the cutoff\\\\ns(\\\\"bd*4,hh*8\\\\").cutoff(rand.range(500,8000))"],"longname":"rand","kind":"member","scope":"global"},{"comment":"/**\\\\n * A continuous pattern of random numbers, between -1 and 1\\\\n */","meta":{"range":[8351,8389],"filename":"signal.mjs","lineno":318,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034738","name":"exports.rand2","type":"VariableDeclaration"}},"description":"<p>A continuous pattern of random numbers, between -1 and 1</p>","name":"rand2","longname":"rand2","kind":"constant","scope":"global"},{"comment":"/**\\\\n * A continuous pattern of 0 or 1 (binary random), with a probability for the value being 1\\\\n *\\\\n * @name brandBy\\\\n * @param {number} probability - a number between 0 and 1\\\\n * @example\\\\n * s(\\\\"hh*10\\\\").pan(brandBy(0.2))\\\\n */","meta":{"filename":"signal.mjs","lineno":322,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>A continuous pattern of 0 or 1 (binary random), with a probability for the value being 1</p>","name":"brandBy","params":[{"type":{"names":["number"]},"description":"<p>a number between 0 and 1</p>","name":"probability"}],"examples":["s(\\\\"hh*10\\\\").pan(brandBy(0.2))"],"longname":"brandBy","kind":"member","scope":"global"},{"comment":"/**\\\\n * A continuous pattern of 0 or 1 (binary random)\\\\n *\\\\n * @name brand\\\\n * @example\\\\n * s(\\\\"hh*10\\\\").pan(brand)\\\\n */","meta":{"filename":"signal.mjs","lineno":332,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>A continuous pattern of 0 or 1 (binary random)</p>","name":"brand","examples":["s(\\\\"hh*10\\\\").pan(brand)"],"longname":"brand","kind":"member","scope":"global"},{"comment":"/**\\\\n * A continuous pattern of random integers, between 0 and n-1.\\\\n *\\\\n * @name irand\\\\n * @param {number} n max value (exclusive)\\\\n * @example\\\\n * // randomly select scale notes from 0 - 7 (= C to C)\\\\n * n(irand(8)).struct(\\\\"x x*2 x x*3\\\\").scale(\\\\"C:minor\\\\")\\\\n *\\\\n */","meta":{"filename":"signal.mjs","lineno":343,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>A continuous pattern of random integers, between 0 and n-1.</p>","name":"irand","params":[{"type":{"names":["number"]},"description":"<p>max value (exclusive)</p>","name":"n"}],"examples":["// randomly select scale notes from 0 - 7 (= C to C)\\\\nn(irand(8)).struct(\\\\"x x*2 x x*3\\\\").scale(\\\\"C:minor\\\\")"],"longname":"irand","kind":"member","scope":"global"},{"comment":"/**\\\\n * Choose from the list of values (or patterns of values) using the given\\\\n * pattern of numbers, which should be in the range of 0..1\\\\n * @param {Pattern} pat\\\\n * @param {*} xs\\\\n * @returns {Pattern}\\\\n * @example\\\\n * note(\\\\"c2 g2!2 d2 f1\\\\").s(chooseWith(sine.fast(2), [\\\\"sawtooth\\\\", \\\\"triangle\\\\", \\\\"bd:6\\\\"]))\\\\n */","meta":{"range":[9851,9938],"filename":"signal.mjs","lineno":375,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034885","name":"exports.chooseWith","type":"VariableDeclaration"}},"description":"<p>Choose from the list of values (or patterns of values) using the given\\\\npattern of numbers, which should be in the range of 0..1</p>","params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["*"]},"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"examples":["note(\\\\"c2 g2!2 d2 f1\\\\").s(chooseWith(sine.fast(2), [\\\\"sawtooth\\\\", \\\\"triangle\\\\", \\\\"bd:6\\\\"]))"],"name":"chooseWith","longname":"chooseWith","kind":"constant","scope":"global"},{"comment":"/**\\\\n * As with {chooseWith}, but the structure comes from the chosen values, rather\\\\n * than the pattern you\'re using to choose with.\\\\n * @param {Pattern} pat\\\\n * @param {*} xs\\\\n * @returns {Pattern}\\\\n */","meta":{"range":[10140,10229],"filename":"signal.mjs","lineno":386,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034901","name":"exports.chooseInWith","type":"VariableDeclaration"}},"description":"<p>As with {chooseWith}, but the structure comes from the chosen values, rather\\\\nthan the pattern you\'re using to choose with.</p>","params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["*"]},"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"name":"chooseInWith","longname":"chooseInWith","kind":"constant","scope":"global"},{"comment":"/**\\\\n * Chooses randomly from the given list of elements.\\\\n * @param  {...any} xs values / patterns to choose from.\\\\n * @returns {Pattern} - a continuous pattern.\\\\n * @example\\\\n * note(\\\\"c2 g2!2 d2 f1\\\\").s(choose(\\\\"sine\\\\", \\\\"triangle\\\\", \\\\"bd:6\\\\"))\\\\n */","meta":{"range":[10470,10524],"filename":"signal.mjs","lineno":397,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034917","name":"exports.choose","type":"VariableDeclaration"}},"description":"<p>Chooses randomly from the given list of elements.</p>","params":[{"type":{"names":["any"]},"variable":true,"description":"<p>values / patterns to choose from.</p>","name":"xs"}],"returns":[{"type":{"names":["Pattern"]},"description":"<ul>\\\\n<li>a continuous pattern.</li>\\\\n</ul>"}],"examples":["note(\\\\"c2 g2!2 d2 f1\\\\").s(choose(\\\\"sine\\\\", \\\\"triangle\\\\", \\\\"bd:6\\\\"))"],"name":"choose","longname":"choose","kind":"constant","scope":"global"},{"comment":"/**\\\\n * Chooses from the given list of values (or patterns of values), according\\\\n * to the pattern that the method is called on. The pattern should be in\\\\n * the range 0 .. 1.\\\\n * @param  {...any} xs\\\\n * @returns {Pattern}\\\\n */","meta":{"range":[10855,10933],"filename":"signal.mjs","lineno":410,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034945","name":"Pattern.prototype.choose","type":"FunctionExpression","paramnames":["xs"]}},"description":"<p>Chooses from the given list of values (or patterns of values), according\\\\nto the pattern that the method is called on. The pattern should be in\\\\nthe range 0 .. 1.</p>","params":[{"type":{"names":["any"]},"variable":true,"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"name":"choose","longname":"Pattern#choose","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\\\n * As with choose, but the pattern that this method is called on should be\\\\n * in the range -1 .. 1\\\\n * @param  {...any} xs\\\\n * @returns {Pattern}\\\\n */","meta":{"range":[11088,11181],"filename":"signal.mjs","lineno":420,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034961","name":"Pattern.prototype.choose2","type":"FunctionExpression","paramnames":["xs"]}},"description":"<p>As with choose, but the pattern that this method is called on should be\\\\nin the range -1 .. 1</p>","params":[{"type":{"names":["any"]},"variable":true,"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"name":"choose2","longname":"Pattern#choose2","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\\\n * Picks one of the elements at random each cycle.\\\\n * @synonyms randcat\\\\n * @returns {Pattern}\\\\n * @example\\\\n * chooseCycles(\\\\"bd\\\\", \\\\"hh\\\\", \\\\"sd\\\\").s().fast(8)\\\\n * @example\\\\n * s(\\\\"bd | hh | sd\\\\").fast(8)\\\\n */","meta":{"range":[11385,11458],"filename":"signal.mjs","lineno":433,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034979","name":"exports.chooseCycles","type":"VariableDeclaration"}},"description":"<p>Picks one of the elements at random each cycle.</p>","synonyms_text":"randcat","synonyms":["randcat"],"returns":[{"type":{"names":["Pattern"]}}],"examples":["chooseCycles(\\\\"bd\\\\", \\\\"hh\\\\", \\\\"sd\\\\").s().fast(8)","s(\\\\"bd | hh | sd\\\\").fast(8)"],"name":"chooseCycles","longname":"chooseCycles","kind":"constant","scope":"global"},{"comment":"/**\\\\n * Chooses randomly from the given list of elements by giving a probability to each element\\\\n * @param {...any} pairs arrays of value and weight\\\\n * @returns {Pattern} - a continuous pattern.\\\\n * @example\\\\n * note(\\\\"c2 g2!2 d2 f1\\\\").s(wchoose([\\\\"sine\\\\",10], [\\\\"triangle\\\\",1], [\\\\"bd:6\\\\",1]))\\\\n */","meta":{"range":[12750,12815],"filename":"signal.mjs","lineno":473,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100035117","name":"exports.wchoose","type":"VariableDeclaration"}},"description":"<p>Chooses randomly from the given list of elements by giving a probability to each element</p>","params":[{"type":{"names":["any"]},"variable":true,"description":"<p>arrays of value and weight</p>","name":"pairs"}],"returns":[{"type":{"names":["Pattern"]},"description":"<ul>\\\\n<li>a continuous pattern.</li>\\\\n</ul>"}],"examples":["note(\\\\"c2 g2!2 d2 f1\\\\").s(wchoose([\\\\"sine\\\\",10], [\\\\"triangle\\\\",1], [\\\\"bd:6\\\\",1]))"],"name":"wchoose","longname":"wchoose","kind":"constant","scope":"global"},{"comment":"/**\\\\n * Picks one of the elements at random each cycle by giving a probability to each element\\\\n * @synonyms wrandcat\\\\n * @returns {Pattern}\\\\n * @example\\\\n * wchooseCycles([\\\\"bd\\\\",10], [\\\\"hh\\\\",1], [\\\\"sd\\\\",1]).s().fast(8)\\\\n * @example\\\\n * wchooseCycles([\\\\"bd bd bd\\\\",5], [\\\\"hh hh hh\\\\",3], [\\\\"sd sd sd\\\\",1]).fast(4).s()\\\\n * @example\\\\n * // The probability can itself be a pattern\\\\n * wchooseCycles([\\\\"bd(3,8)\\\\",\\\\"<5 0>\\\\"], [\\\\"hh hh hh\\\\",3]).fast(4).s()\\\\n */","meta":{"range":[13244,13339],"filename":"signal.mjs","lineno":487,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100035129","name":"exports.wchooseCycles","type":"VariableDeclaration"}},"description":"<p>Picks one of the elements at random each cycle by giving a probability to each element</p>","synonyms_text":"wrandcat","synonyms":["wrandcat"],"returns":[{"type":{"names":["Pattern"]}}],"examples":["wchooseCycles([\\\\"bd\\\\",10], [\\\\"hh\\\\",1], [\\\\"sd\\\\",1]).s().fast(8)","wchooseCycles([\\\\"bd bd bd\\\\",5], [\\\\"hh hh hh\\\\",3], [\\\\"sd sd sd\\\\",1]).fast(4).s()","// The probability can itself be a pattern\\\\nwchooseCycles([\\\\"bd(3,8)\\\\",\\\\"<5 0>\\\\"], [\\\\"hh hh hh\\\\",3]).fast(4).s()"],"name":"wchooseCycles","longname":"wchooseCycles","kind":"constant","scope":"global"},{"comment":"/**\\\\n * Generates a continuous pattern of [perlin noise](https://en.wikipedia.org/wiki/Perlin_noise), in the range 0..1.\\\\n *\\\\n * @name perlin\\\\n * @example\\\\n * // randomly change the cutoff\\\\n * s(\\\\"bd*4,hh*8\\\\").cutoff(perlin.range(500,8000))\\\\n *\\\\n */","meta":{"filename":"signal.mjs","lineno":500,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Generates a continuous pattern of <a href=\\\\"https://en.wikipedia.org/wiki/Perlin_noise\\\\">perlin noise</a>, in the range 0..1.</p>","name":"perlin","examples":["// randomly change the cutoff\\\\ns(\\\\"bd*4,hh*8\\\\").cutoff(perlin.range(500,8000))"],"longname":"perlin","kind":"member","scope":"global"},{"comment":"/**\\\\n * Randomly removes events from the pattern by a given amount.\\\\n * 0 = 0% chance of removal\\\\n * 1 = 100% chance of removal\\\\n *\\\\n * @name degradeBy\\\\n * @memberof Pattern\\\\n * @param {number} amount - a number between 0 and 1\\\\n * @returns Pattern\\\\n * @example\\\\n * s(\\\\"hh*8\\\\").degradeBy(0.2)\\\\n * @example\\\\n * s(\\\\"[hh?0.2]*8\\\\")\\\\n * @example\\\\n * //beat generator\\\\n * s(\\\\"bd\\\\").segment(16).degradeBy(.5).ribbon(16,1)\\\\n */","meta":{"filename":"signal.mjs","lineno":518,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Randomly removes events from the pattern by a given amount.\\\\n0 = 0% chance of removal\\\\n1 = 100% chance of removal</p>","name":"degradeBy","memberof":"Pattern","params":[{"type":{"names":["number"]},"description":"<p>a number between 0 and 1</p>","name":"amount"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\\\"hh*8\\\\").degradeBy(0.2)","s(\\\\"[hh?0.2]*8\\\\")","//beat generator\\\\ns(\\\\"bd\\\\").segment(16).degradeBy(.5).ribbon(16,1)"],"scope":"static","longname":"Pattern.degradeBy","kind":"member"},{"comment":"/**\\\\n *\\\\n * Randomly removes 50% of events from the pattern. Shorthand for \\`.degradeBy(0.5)\\`\\\\n *\\\\n * @name degrade\\\\n * @memberof Pattern\\\\n * @returns Pattern\\\\n * @example\\\\n * s(\\\\"hh*8\\\\").degrade()\\\\n * @example\\\\n * s(\\\\"[hh?]*8\\\\")\\\\n */","meta":{"filename":"signal.mjs","lineno":544,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Randomly removes 50% of events from the pattern. Shorthand for <code>.degradeBy(0.5)</code></p>","name":"degrade","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\\\"hh*8\\\\").degrade()","s(\\\\"[hh?]*8\\\\")"],"scope":"static","longname":"Pattern.degrade","kind":"member"},{"comment":"/**\\\\n * Inverse of \\`degradeBy\\`: Randomly removes events from the pattern by a given amount.\\\\n * 0 = 100% chance of removal\\\\n * 1 = 0% chance of removal\\\\n * Events that would be removed by degradeBy are let through by undegradeBy and vice versa (see second example).\\\\n *\\\\n * @name undegradeBy\\\\n * @memberof Pattern\\\\n * @param {number} amount - a number between 0 and 1\\\\n * @returns Pattern\\\\n * @example\\\\n * s(\\\\"hh*8\\\\").undegradeBy(0.2)\\\\n * @example\\\\n * s(\\\\"hh*10\\\\").layer(\\\\n *   x => x.degradeBy(0.2).pan(0),\\\\n *   x => x.undegradeBy(0.8).pan(1)\\\\n * )\\\\n */","meta":{"filename":"signal.mjs","lineno":558,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Inverse of <code>degradeBy</code>: Randomly removes events from the pattern by a given amount.\\\\n0 = 100% chance of removal\\\\n1 = 0% chance of removal\\\\nEvents that would be removed by degradeBy are let through by undegradeBy and vice versa (see second example).</p>","name":"undegradeBy","memberof":"Pattern","params":[{"type":{"names":["number"]},"description":"<p>a number between 0 and 1</p>","name":"amount"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\\\"hh*8\\\\").undegradeBy(0.2)","s(\\\\"hh*10\\\\").layer(\\\\n  x => x.degradeBy(0.2).pan(0),\\\\n  x => x.undegradeBy(0.8).pan(1)\\\\n)"],"scope":"static","longname":"Pattern.undegradeBy","kind":"member"},{"comment":"/**\\\\n * Inverse of \\`degrade\\`: Randomly removes 50% of events from the pattern. Shorthand for \\`.undegradeBy(0.5)\\`\\\\n * Events that would be removed by degrade are let through by undegrade and vice versa (see second example).\\\\n *\\\\n * @name undegrade\\\\n * @memberof Pattern\\\\n * @returns Pattern\\\\n * @example\\\\n * s(\\\\"hh*8\\\\").undegrade()\\\\n * @example\\\\n * s(\\\\"hh*10\\\\").layer(\\\\n *   x => x.degrade().pan(0),\\\\n *   x => x.undegrade().pan(1)\\\\n * )\\\\n */","meta":{"filename":"signal.mjs","lineno":588,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Inverse of <code>degrade</code>: Randomly removes 50% of events from the pattern. Shorthand for <code>.undegradeBy(0.5)</code>\\\\nEvents that would be removed by degrade are let through by undegrade and vice versa (see second example).</p>","name":"undegrade","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\\\"hh*8\\\\").undegrade()","s(\\\\"hh*10\\\\").layer(\\\\n  x => x.degrade().pan(0),\\\\n  x => x.undegrade().pan(1)\\\\n)"],"scope":"static","longname":"Pattern.undegrade","kind":"member"},{"comment":"/**\\\\n *\\\\n * Randomly applies the given function by the given probability.\\\\n * Similar to \\`someCyclesBy\\`\\\\n *\\\\n * @name sometimesBy\\\\n * @memberof Pattern\\\\n * @param {number | Pattern} probability - a number between 0 and 1\\\\n * @param {function} function - the transformation to apply\\\\n * @returns Pattern\\\\n * @example\\\\n * s(\\\\"hh*8\\\\").sometimesBy(.4, x=>x.speed(\\\\"0.5\\\\"))\\\\n */","meta":{"filename":"signal.mjs","lineno":605,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Randomly applies the given function by the given probability.\\\\nSimilar to <code>someCyclesBy</code></p>","name":"sometimesBy","memberof":"Pattern","params":[{"type":{"names":["number","Pattern"]},"description":"<p>a number between 0 and 1</p>","name":"probability"},{"type":{"names":["function"]},"description":"<p>the transformation to apply</p>","name":"function"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\\\"hh*8\\\\").sometimesBy(.4, x=>x.speed(\\\\"0.5\\\\"))"],"scope":"static","longname":"Pattern.sometimesBy","kind":"member"},{"comment":"/**\\\\n *\\\\n * Applies the given function with a 50% chance\\\\n *\\\\n * @name sometimes\\\\n * @memberof Pattern\\\\n * @param {function} function - the transformation to apply\\\\n * @returns Pattern\\\\n * @example\\\\n * s(\\\\"hh*8\\\\").sometimes(x=>x.speed(\\\\"0.5\\\\"))\\\\n */","meta":{"filename":"signal.mjs","lineno":625,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Applies the given function with a 50% chance</p>","name":"sometimes","memberof":"Pattern","params":[{"type":{"names":["function"]},"description":"<p>the transformation to apply</p>","name":"function"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\\\"hh*8\\\\").sometimes(x=>x.speed(\\\\"0.5\\\\"))"],"scope":"static","longname":"Pattern.sometimes","kind":"member"},{"comment":"/**\\\\n *\\\\n * Randomly applies the given function by the given probability on a cycle by cycle basis.\\\\n * Similar to \\`sometimesBy\\`\\\\n *\\\\n * @name someCyclesBy\\\\n * @memberof Pattern\\\\n * @param {number | Pattern} probability - a number between 0 and 1\\\\n * @param {function} function - the transformation to apply\\\\n * @returns Pattern\\\\n * @example\\\\n * s(\\\\"bd,hh*8\\\\").someCyclesBy(.3, x=>x.speed(\\\\"0.5\\\\"))\\\\n */","meta":{"filename":"signal.mjs","lineno":640,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Randomly applies the given function by the given probability on a cycle by cycle basis.\\\\nSimilar to <code>sometimesBy</code></p>","name":"someCyclesBy","memberof":"Pattern","params":[{"type":{"names":["number","Pattern"]},"description":"<p>a number between 0 and 1</p>","name":"probability"},{"type":{"names":["function"]},"description":"<p>the transformation to apply</p>","name":"function"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\\\"bd,hh*8\\\\").someCyclesBy(.3, x=>x.speed(\\\\"0.5\\\\"))"],"scope":"static","longname":"Pattern.someCyclesBy","kind":"member"},{"comment":"/**\\\\n *\\\\n * Shorthand for \\`.someCyclesBy(0.5, fn)\\`\\\\n *\\\\n * @name someCycles\\\\n * @memberof Pattern\\\\n * @returns Pattern\\\\n * @example\\\\n * s(\\\\"bd,hh*8\\\\").someCycles(x=>x.speed(\\\\"0.5\\\\"))\\\\n */","meta":{"filename":"signal.mjs","lineno":665,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Shorthand for <code>.someCyclesBy(0.5, fn)</code></p>","name":"someCycles","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\\\"bd,hh*8\\\\").someCycles(x=>x.speed(\\\\"0.5\\\\"))"],"scope":"static","longname":"Pattern.someCycles","kind":"member"},{"comment":"/**\\\\n *\\\\n * Shorthand for \\`.sometimesBy(0.75, fn)\\`\\\\n *\\\\n * @name often\\\\n * @memberof Pattern\\\\n * @returns Pattern\\\\n * @example\\\\n * s(\\\\"hh*8\\\\").often(x=>x.speed(\\\\"0.5\\\\"))\\\\n */","meta":{"filename":"signal.mjs","lineno":679,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Shorthand for <code>.sometimesBy(0.75, fn)</code></p>","name":"often","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\\\"hh*8\\\\").often(x=>x.speed(\\\\"0.5\\\\"))"],"scope":"static","longname":"Pattern.often","kind":"member"},{"comment":"/**\\\\n *\\\\n * Shorthand for \\`.sometimesBy(0.25, fn)\\`\\\\n *\\\\n * @name rarely\\\\n * @memberof Pattern\\\\n * @returns Pattern\\\\n * @example\\\\n * s(\\\\"hh*8\\\\").rarely(x=>x.speed(\\\\"0.5\\\\"))\\\\n */","meta":{"filename":"signal.mjs","lineno":693,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Shorthand for <code>.sometimesBy(0.25, fn)</code></p>","name":"rarely","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\\\"hh*8\\\\").rarely(x=>x.speed(\\\\"0.5\\\\"))"],"scope":"static","longname":"Pattern.rarely","kind":"member"},{"comment":"/**\\\\n *\\\\n * Shorthand for \\`.sometimesBy(0.1, fn)\\`\\\\n *\\\\n * @name almostNever\\\\n * @memberof Pattern\\\\n * @returns Pattern\\\\n * @example\\\\n * s(\\\\"hh*8\\\\").almostNever(x=>x.speed(\\\\"0.5\\\\"))\\\\n */","meta":{"filename":"signal.mjs","lineno":707,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Shorthand for <code>.sometimesBy(0.1, fn)</code></p>","name":"almostNever","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\\\"hh*8\\\\").almostNever(x=>x.speed(\\\\"0.5\\\\"))"],"scope":"static","longname":"Pattern.almostNever","kind":"member"},{"comment":"/**\\\\n *\\\\n * Shorthand for \\`.sometimesBy(0.9, fn)\\`\\\\n *\\\\n * @name almostAlways\\\\n * @memberof Pattern\\\\n * @returns Pattern\\\\n * @example\\\\n * s(\\\\"hh*8\\\\").almostAlways(x=>x.speed(\\\\"0.5\\\\"))\\\\n */","meta":{"filename":"signal.mjs","lineno":721,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Shorthand for <code>.sometimesBy(0.9, fn)</code></p>","name":"almostAlways","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\\\"hh*8\\\\").almostAlways(x=>x.speed(\\\\"0.5\\\\"))"],"scope":"static","longname":"Pattern.almostAlways","kind":"member"},{"comment":"/**\\\\n *\\\\n * Shorthand for \\`.sometimesBy(0, fn)\\` (never calls fn)\\\\n *\\\\n * @name never\\\\n * @memberof Pattern\\\\n * @returns Pattern\\\\n * @example\\\\n * s(\\\\"hh*8\\\\").never(x=>x.speed(\\\\"0.5\\\\"))\\\\n */","meta":{"filename":"signal.mjs","lineno":735,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Shorthand for <code>.sometimesBy(0, fn)</code> (never calls fn)</p>","name":"never","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\\\"hh*8\\\\").never(x=>x.speed(\\\\"0.5\\\\"))"],"scope":"static","longname":"Pattern.never","kind":"member"},{"comment":"/**\\\\n *\\\\n * Shorthand for \\`.sometimesBy(1, fn)\\` (always calls fn)\\\\n *\\\\n * @name always\\\\n * @memberof Pattern\\\\n * @returns Pattern\\\\n * @example\\\\n * s(\\\\"hh*8\\\\").always(x=>x.speed(\\\\"0.5\\\\"))\\\\n */","meta":{"filename":"signal.mjs","lineno":749,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Shorthand for <code>.sometimesBy(1, fn)</code> (always calls fn)</p>","name":"always","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\\\"hh*8\\\\").always(x=>x.speed(\\\\"0.5\\\\"))"],"scope":"static","longname":"Pattern.always","kind":"member"},{"comment":"/**\\\\n *\\\\n * Do something on a keypress, or array of keypresses\\\\n * [Key name reference](https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values)\\\\n *\\\\n * @name whenKey\\\\n * @memberof Pattern\\\\n * @returns Pattern\\\\n * @example\\\\n * s(\\\\"bd(5,8)\\\\").whenKey(\\\\"Control:j\\\\", x => x.segment(16).color(\\\\"red\\\\")).whenKey(\\\\"Control:i\\\\", x => x.fast(2).color(\\\\"blue\\\\"))\\\\n */","meta":{"filename":"signal.mjs","lineno":776,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Do something on a keypress, or array of keypresses\\\\n<a href=\\\\"https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\\\\">Key name reference</a></p>","name":"whenKey","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\\\"bd(5,8)\\\\").whenKey(\\\\"Control:j\\\\", x => x.segment(16).color(\\\\"red\\\\")).whenKey(\\\\"Control:i\\\\", x => x.fast(2).color(\\\\"blue\\\\"))"],"scope":"static","longname":"Pattern.whenKey","kind":"member"},{"comment":"/**\\\\n *\\\\n * returns true when a key or array of keys is held\\\\n * [Key name reference](https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values)\\\\n *\\\\n * @name keyDown\\\\n * @memberof Pattern\\\\n * @returns Pattern\\\\n * @example\\\\n * keyDown(\\\\"Control:j\\\\").pick([s(\\\\"bd(5,8)\\\\"), s(\\\\"cp(3,8)\\\\")])\\\\n */","meta":{"filename":"signal.mjs","lineno":792,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>returns true when a key or array of keys is held\\\\n<a href=\\\\"https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\\\\">Key name reference</a></p>","name":"keyDown","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["keyDown(\\\\"Control:j\\\\").pick([s(\\\\"bd(5,8)\\\\"), s(\\\\"cp(3,8)\\\\")])"],"scope":"static","longname":"Pattern.keyDown","kind":"member"},{"comment":"/**\\\\n * @deprecated does not appear to be referenced or invoked anywhere in the codebase\\\\n * @noAutocomplete\\\\n */","meta":{"range":[2812,2979],"filename":"util.mjs","lineno":73,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100047442","name":"exports.getFreq","type":"VariableDeclaration"}},"deprecated":"does not appear to be referenced or invoked anywhere in the codebase","tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"getFreq","longname":"getFreq","kind":"constant","scope":"global"},{"comment":"/**\\\\n * @deprecated only used in workshop (first-notes)\\\\n * @noAutocomplete\\\\n */","meta":{"range":[3138,3257],"filename":"util.mjs","lineno":85,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100047481","name":"exports.midi2note","type":"VariableDeclaration"}},"deprecated":"only used in workshop (first-notes)","tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"midi2note","longname":"midi2note","kind":"constant","scope":"global"},{"comment":"/**\\\\n * Sends notes to Csound for rendering with MIDI semantics. The hap value is\\\\n * translated to these Csound pfields:\\\\n *\\\\n *  p1 -- Csound instrument either as a number (1-based, can be a fraction),\\\\n *        or as a string name.\\\\n *  p2 -- time in beats (usually seconds) from start of performance.\\\\n *  p3 -- duration in beats (usually seconds).\\\\n *  p4 -- MIDI key number (as a real number, not an integer but in [0, 127].\\\\n *  p5 -- MIDI velocity (as a real number, not an integer but in [0, 127].\\\\n *  p6 -- Strudel controls, as a string.\\\\n */","meta":{"range":[4695,6078],"filename":"index.mjs","lineno":139,"columnno":0,"path":"/Users/felix/projects/strudel/packages/csound","code":{"id":"astnode100050043","name":"exports.csoundm","type":"VariableDeclaration"}},"description":"<p>Sends notes to Csound for rendering with MIDI semantics. The hap value is\\\\ntranslated to these Csound pfields:</p>\\\\n<p>p1 -- Csound instrument either as a number (1-based, can be a fraction),\\\\nor as a string name.\\\\np2 -- time in beats (usually seconds) from start of performance.\\\\np3 -- duration in beats (usually seconds).\\\\np4 -- MIDI key number (as a real number, not an integer but in [0, 127].\\\\np5 -- MIDI velocity (as a real number, not an integer but in [0, 127].\\\\np6 -- Strudel controls, as a string.</p>","name":"csoundm","longname":"csoundm","kind":"constant","scope":"global"},{"comment":"/**\\\\n * Visualises a pattern as a scrolling \'pianoroll\', displayed in the background of the editor. To show a pianoroll for all running patterns, use \\`all(pianoroll)\\`. To have a pianoroll appear below\\\\n * a pattern instead, prefix with \\`_\\`, e.g.: \\`sound(\\\\"bd sd\\\\")._pianoroll()\\`.\\\\n *\\\\n * @name pianoroll\\\\n * @synonyms punchcard\\\\n * @param {Object} options Object containing all the optional following parameters as key value pairs:\\\\n * @param {integer} cycles number of cycles to be displayed at the same time - defaults to 4\\\\n * @param {number} playhead location of the active notes on the time axis - 0 to 1, defaults to 0.5\\\\n * @param {boolean} vertical displays the roll vertically - 0 by default\\\\n * @param {boolean} labels displays labels on individual notes (see the label function) - 0 by default\\\\n * @param {boolean} flipTime reverse the direction of the roll - 0 by default\\\\n * @param {boolean} flipValues reverse the relative location of notes on the value axis - 0 by default\\\\n * @param {number} overscan lookup X cycles outside of the cycles window to display notes in advance - 1 by default\\\\n * @param {boolean} hideNegative hide notes with negative time (before starting playing the pattern) - 0 by default\\\\n * @param {boolean} smear notes leave a solid trace - 0 by default\\\\n * @param {boolean} fold notes takes the full value axis width - 0 by default\\\\n * @param {string} active hexadecimal or CSS color of the active notes - defaults to #FFCA28\\\\n * @param {string} inactive hexadecimal or CSS color of the inactive notes - defaults to #7491D2\\\\n * @param {string} background hexadecimal or CSS color of the background - defaults to transparent\\\\n * @param {string} playheadColor hexadecimal or CSS color of the line representing the play head - defaults to white\\\\n * @param {boolean} fill notes are filled with color (otherwise only the label is displayed) - 0 by default\\\\n * @param {boolean} fillActive active notes are filled with color - 0 by default\\\\n * @param {boolean} stroke notes are shown with colored borders - 0 by default\\\\n * @param {boolean} strokeActive active notes are shown with colored borders - 0 by default\\\\n * @param {boolean} hideInactive only active notes are shown - 0 by default\\\\n * @param {boolean} colorizeInactive use note color for inactive notes - 1 by default\\\\n * @param {string} fontFamily define the font used by notes labels - defaults to \'monospace\'\\\\n * @param {integer} minMidi minimum note value to display on the value axis - defaults to 10\\\\n * @param {integer} maxMidi maximum note value to display on the value axis - defaults to 90\\\\n * @param {boolean} autorange automatically calculate the minMidi and maxMidi parameters - 0 by default\\\\n * @see _pianoroll\\\\n * @example\\\\n * note(\\\\"c2 a2 eb2\\\\")\\\\n * .euclid(5,8)\\\\n * .s(\'sawtooth\')\\\\n * .lpenv(4).lpf(300)\\\\n * .pianoroll({ labels: 1 })\\\\n */","meta":{"filename":"pianoroll.mjs","lineno":39,"columnno":0,"path":"/Users/felix/projects/strudel/packages/draw","code":{}},"description":"<p>Visualises a pattern as a scrolling \'pianoroll\', displayed in the background of the editor. To show a pianoroll for all running patterns, use <code>all(pianoroll)</code>. To have a pianoroll appear below\\\\na pattern instead, prefix with <code>_</code>, e.g.: <code>sound(&quot;bd sd&quot;)._pianoroll()</code>.</p>","name":"pianoroll","synonyms_text":"punchcard","synonyms":["punchcard"],"params":[{"type":{"names":["Object"]},"description":"<p>Object containing all the optional following parameters as key value pairs:</p>","name":"options"},{"type":{"names":["integer"]},"description":"<p>number of cycles to be displayed at the same time - defaults to 4</p>","name":"cycles"},{"type":{"names":["number"]},"description":"<p>location of the active notes on the time axis - 0 to 1, defaults to 0.5</p>","name":"playhead"},{"type":{"names":["boolean"]},"description":"<p>displays the roll vertically - 0 by default</p>","name":"vertical"},{"type":{"names":["boolean"]},"description":"<p>displays labels on individual notes (see the label function) - 0 by default</p>","name":"labels"},{"type":{"names":["boolean"]},"description":"<p>reverse the direction of the roll - 0 by default</p>","name":"flipTime"},{"type":{"names":["boolean"]},"description":"<p>reverse the relative location of notes on the value axis - 0 by default</p>","name":"flipValues"},{"type":{"names":["number"]},"description":"<p>lookup X cycles outside of the cycles window to display notes in advance - 1 by default</p>","name":"overscan"},{"type":{"names":["boolean"]},"description":"<p>hide notes with negative time (before starting playing the pattern) - 0 by default</p>","name":"hideNegative"},{"type":{"names":["boolean"]},"description":"<p>notes leave a solid trace - 0 by default</p>","name":"smear"},{"type":{"names":["boolean"]},"description":"<p>notes takes the full value axis width - 0 by default</p>","name":"fold"},{"type":{"names":["string"]},"description":"<p>hexadecimal or CSS color of the active notes - defaults to #FFCA28</p>","name":"active"},{"type":{"names":["string"]},"description":"<p>hexadecimal or CSS color of the inactive notes - defaults to #7491D2</p>","name":"inactive"},{"type":{"names":["string"]},"description":"<p>hexadecimal or CSS color of the background - defaults to transparent</p>","name":"background"},{"type":{"names":["string"]},"description":"<p>hexadecimal or CSS color of the line representing the play head - defaults to white</p>","name":"playheadColor"},{"type":{"names":["boolean"]},"description":"<p>notes are filled with color (otherwise only the label is displayed) - 0 by default</p>","name":"fill"},{"type":{"names":["boolean"]},"description":"<p>active notes are filled with color - 0 by default</p>","name":"fillActive"},{"type":{"names":["boolean"]},"description":"<p>notes are shown with colored borders - 0 by default</p>","name":"stroke"},{"type":{"names":["boolean"]},"description":"<p>active notes are shown with colored borders - 0 by default</p>","name":"strokeActive"},{"type":{"names":["boolean"]},"description":"<p>only active notes are shown - 0 by default</p>","name":"hideInactive"},{"type":{"names":["boolean"]},"description":"<p>use note color for inactive notes - 1 by default</p>","name":"colorizeInactive"},{"type":{"names":["string"]},"description":"<p>define the font used by notes labels - defaults to \'monospace\'</p>","name":"fontFamily"},{"type":{"names":["integer"]},"description":"<p>minimum note value to display on the value axis - defaults to 10</p>","name":"minMidi"},{"type":{"names":["integer"]},"description":"<p>maximum note value to display on the value axis - defaults to 90</p>","name":"maxMidi"},{"type":{"names":["boolean"]},"description":"<p>automatically calculate the minMidi and maxMidi parameters - 0 by default</p>","name":"autorange"}],"see":["_pianoroll"],"examples":["note(\\\\"c2 a2 eb2\\\\")\\\\n.euclid(5,8)\\\\n.s(\'sawtooth\')\\\\n.lpenv(4).lpf(300)\\\\n.pianoroll({ labels: 1 })"],"longname":"pianoroll","kind":"member","scope":"global"},{"comment":"/**\\\\n * Displays a vertical pianoroll with event labels.\\\\n * Supports all the same options as pianoroll.\\\\n *\\\\n * @name wordfall\\\\n */","meta":{"filename":"pianoroll.mjs","lineno":297,"columnno":0,"path":"/Users/felix/projects/strudel/packages/draw","code":{}},"description":"<p>Displays a vertical pianoroll with event labels.\\\\nSupports all the same options as pianoroll.</p>","name":"wordfall","longname":"wordfall","kind":"member","scope":"global"},{"comment":"/**\\\\n * Renders a pitch circle to visualize frequencies within one octave\\\\n * @name pitchwheel\\\\n * @param {number} hapcircles\\\\n * @param {number} circle\\\\n * @param {number} edo\\\\n * @param {string} root\\\\n * @param {number} thickness\\\\n * @param {number} hapRadius\\\\n * @param {string} mode\\\\n * @param {number} margin\\\\n * @example\\\\n * n(\\\\"0 .. 12\\\\").scale(\\\\"C:chromatic\\\\")\\\\n * .s(\\\\"sawtooth\\\\")\\\\n * .lpf(500)\\\\n * ._pitchwheel()\\\\n */","meta":{"filename":"pitchwheel.mjs","lineno":116,"columnno":0,"path":"/Users/felix/projects/strudel/packages/draw","code":{}},"description":"<p>Renders a pitch circle to visualize frequencies within one octave</p>","name":"pitchwheel","params":[{"type":{"names":["number"]},"name":"hapcircles"},{"type":{"names":["number"]},"name":"circle"},{"type":{"names":["number"]},"name":"edo"},{"type":{"names":["string"]},"name":"root"},{"type":{"names":["number"]},"name":"thickness"},{"type":{"names":["number"]},"name":"hapRadius"},{"type":{"names":["string"]},"name":"mode"},{"type":{"names":["number"]},"name":"margin"}],"examples":["n(\\\\"0 .. 12\\\\").scale(\\\\"C:chromatic\\\\")\\\\n.s(\\\\"sawtooth\\\\")\\\\n.lpf(500)\\\\n._pitchwheel()"],"longname":"pitchwheel","kind":"member","scope":"global"},{"comment":"/**\\\\n * Displays a spiral visual.\\\\n *\\\\n * @name spiral\\\\n * @param {Object} options Object containing all the optional following parameters as key value pairs:\\\\n * @param {number} stretch controls the rotations per cycle ratio, where 1 = 1 cycle / 360 degrees\\\\n * @param {number} size the diameter of the spiral\\\\n * @param {number} thickness line thickness\\\\n * @param {string} cap style of line ends: butt (default), round, square\\\\n * @param {string} inset number of rotations before spiral starts (default 3)\\\\n * @param {string} playheadColor color of playhead, defaults to white\\\\n * @param {number} playheadLength length of playhead in rotations, defaults to 0.02\\\\n * @param {number} playheadThickness thickness of playheadrotations, defaults to thickness\\\\n * @param {number} padding space around spiral\\\\n * @param {number} steady steadyness of spiral vs playhead. 1 = spiral doesn\'t move, playhead does.\\\\n * @param {number} activeColor color of active segment. defaults to foreground of theme\\\\n * @param {number} inactiveColor color of inactive segments. defaults to gutterForeground of theme\\\\n * @param {boolean} colorizeInactive wether or not to colorize inactive segments, defaults to 0\\\\n * @param {boolean} fade wether or not past and future should fade out. defaults to 1\\\\n * @param {boolean} logSpiral wether or not the spiral should be logarithmic. defaults to 0\\\\n * @example\\\\n * note(\\\\"c2 a2 eb2\\\\")\\\\n * .euclid(5,8)\\\\n * .s(\'sawtooth\')\\\\n * .lpenv(4).lpf(300)\\\\n * ._spiral({ steady: .96 })\\\\n */","meta":{"filename":"spiral.mjs","lineno":128,"columnno":0,"path":"/Users/felix/projects/strudel/packages/draw","code":{}},"description":"<p>Displays a spiral visual.</p>","name":"spiral","params":[{"type":{"names":["Object"]},"description":"<p>Object containing all the optional following parameters as key value pairs:</p>","name":"options"},{"type":{"names":["number"]},"description":"<p>controls the rotations per cycle ratio, where 1 = 1 cycle / 360 degrees</p>","name":"stretch"},{"type":{"names":["number"]},"description":"<p>the diameter of the spiral</p>","name":"size"},{"type":{"names":["number"]},"description":"<p>line thickness</p>","name":"thickness"},{"type":{"names":["string"]},"description":"<p>style of line ends: butt (default), round, square</p>","name":"cap"},{"type":{"names":["string"]},"description":"<p>number of rotations before spiral starts (default 3)</p>","name":"inset"},{"type":{"names":["string"]},"description":"<p>color of playhead, defaults to white</p>","name":"playheadColor"},{"type":{"names":["number"]},"description":"<p>length of playhead in rotations, defaults to 0.02</p>","name":"playheadLength"},{"type":{"names":["number"]},"description":"<p>thickness of playheadrotations, defaults to thickness</p>","name":"playheadThickness"},{"type":{"names":["number"]},"description":"<p>space around spiral</p>","name":"padding"},{"type":{"names":["number"]},"description":"<p>steadyness of spiral vs playhead. 1 = spiral doesn\'t move, playhead does.</p>","name":"steady"},{"type":{"names":["number"]},"description":"<p>color of active segment. defaults to foreground of theme</p>","name":"activeColor"},{"type":{"names":["number"]},"description":"<p>color of inactive segments. defaults to gutterForeground of theme</p>","name":"inactiveColor"},{"type":{"names":["boolean"]},"description":"<p>wether or not to colorize inactive segments, defaults to 0</p>","name":"colorizeInactive"},{"type":{"names":["boolean"]},"description":"<p>wether or not past and future should fade out. defaults to 1</p>","name":"fade"},{"type":{"names":["boolean"]},"description":"<p>wether or not the spiral should be logarithmic. defaults to 0</p>","name":"logSpiral"}],"examples":["note(\\\\"c2 a2 eb2\\\\")\\\\n.euclid(5,8)\\\\n.s(\'sawtooth\')\\\\n.lpenv(4).lpf(300)\\\\n._spiral({ steady: .96 })"],"longname":"spiral","kind":"member","scope":"global"},{"comment":"/**\\\\n * configures the default midimap, which is used when no \\\\"midimap\\\\" port is set\\\\n * @example\\\\n * defaultmidimap({ lpf: 74 })\\\\n * $: note(\\\\"c a f e\\\\").midi();\\\\n * $: lpf(sine.slow(4).segment(16)).midi();\\\\n */","meta":{"range":[4416,4515],"filename":"midi.mjs","lineno":131,"columnno":0,"path":"/Users/felix/projects/strudel/packages/midi","code":{"id":"astnode100057966","name":"exports.defaultmidimap","type":"FunctionDeclaration","paramnames":["mapping"]}},"description":"<p>configures the default midimap, which is used when no &quot;midimap&quot; port is set</p>","examples":["defaultmidimap({ lpf: 74 })\\\\n$: note(\\\\"c a f e\\\\").midi();\\\\n$: lpf(sine.slow(4).segment(16)).midi();"],"name":"defaultmidimap","longname":"defaultmidimap","kind":"function","scope":"global"},{"comment":"/**\\\\n * Adds midimaps to the registry. Inside each midimap, control names (e.g. lpf) are mapped to cc numbers.\\\\n * @example\\\\n * midimaps({ mymap: { lpf: 74 } })\\\\n * $: note(\\\\"c a f e\\\\")\\\\n * .lpf(sine.slow(4))\\\\n * .midimap(\'mymap\')\\\\n * .midi()\\\\n * @example\\\\n * midimaps({ mymap: {\\\\n *   lpf: { ccn: 74, min: 0, max: 20000, exp: 0.5 }\\\\n * }})\\\\n * $: note(\\\\"c a f e\\\\")\\\\n * .lpf(sine.slow(2).range(400,2000))\\\\n * .midimap(\'mymap\')\\\\n * .midi()\\\\n */","meta":{"range":[4962,5392],"filename":"midi.mjs","lineno":154,"columnno":0,"path":"/Users/felix/projects/strudel/packages/midi","code":{"id":"astnode100057984","name":"exports.midimaps","type":"FunctionDeclaration","paramnames":["map"]}},"description":"<p>Adds midimaps to the registry. Inside each midimap, control names (e.g. lpf) are mapped to cc numbers.</p>","examples":["midimaps({ mymap: { lpf: 74 } })\\\\n$: note(\\\\"c a f e\\\\")\\\\n.lpf(sine.slow(4))\\\\n.midimap(\'mymap\')\\\\n.midi()","midimaps({ mymap: {\\\\n  lpf: { ccn: 74, min: 0, max: 20000, exp: 0.5 }\\\\n}})\\\\n$: note(\\\\"c a f e\\\\")\\\\n.lpf(sine.slow(2).range(400,2000))\\\\n.midimap(\'mymap\')\\\\n.midi()"],"name":"midimaps","longname":"midimaps","kind":"function","scope":"global"},{"comment":"/**\\\\n * MIDI output: Opens a MIDI output port.\\\\n * @param {string | number} midiport MIDI device name or index defaulting to 0\\\\n * @param {object} options Additional MIDI configuration options\\\\n * @example\\\\n * note(\\\\"c4\\\\").midichan(1).midi(\'IAC Driver Bus 1\')\\\\n * @example\\\\n * note(\\\\"c4\\\\").midichan(1).midi(\'IAC Driver Bus 1\', { controller: true, latency: 50 })\\\\n */","meta":{"range":[10343,16489],"filename":"midi.mjs","lineno":289,"columnno":0,"path":"/Users/felix/projects/strudel/packages/midi","code":{"id":"astnode100058635","name":"Pattern.prototype.midi","type":"FunctionExpression","paramnames":["midiport","options"]},"vars":{"undefined":null,"options":"Pattern#midi~options","midiport":"Pattern#midi~midiport","midiConfig":"Pattern#midi~midiConfig","":null}},"description":"<p>MIDI output: Opens a MIDI output port.</p>","params":[{"type":{"names":["string","number"]},"description":"<p>MIDI device name or index defaulting to 0</p>","name":"midiport"},{"type":{"names":["object"]},"description":"<p>Additional MIDI configuration options</p>","name":"options"}],"examples":["note(\\\\"c4\\\\").midichan(1).midi(\'IAC Driver Bus 1\')","note(\\\\"c4\\\\").midichan(1).midi(\'IAC Driver Bus 1\', { controller: true, latency: 50 })"],"name":"midi","longname":"Pattern#midi","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\\\n * MIDI input: Opens a MIDI input port to receive MIDI control change messages.\\\\n * @param {string | number} input MIDI device name or index defaulting to 0\\\\n * @returns {Function}\\\\n * @example\\\\n * let cc = await midin(\'IAC Driver Bus 1\')\\\\n * note(\\\\"c a f e\\\\").lpf(cc(0).range(0, 1000)).lpq(cc(1).range(0, 10)).sound(\\\\"sawtooth\\\\")\\\\n */","meta":{"range":[16860,18060],"filename":"midi.mjs","lineno":474,"columnno":0,"path":"/Users/felix/projects/strudel/packages/midi","code":{"id":"astnode100059285","name":"exports.midin","type":"FunctionDeclaration","paramnames":["input"]}},"description":"<p>MIDI input: Opens a MIDI input port to receive MIDI control change messages.</p>","params":[{"type":{"names":["string","number"]},"description":"<p>MIDI device name or index defaulting to 0</p>","name":"input"}],"returns":[{"type":{"names":["function"]}}],"examples":["let cc = await midin(\'IAC Driver Bus 1\')\\\\nnote(\\\\"c a f e\\\\").lpf(cc(0).range(0, 1000)).lpq(cc(1).range(0, 10)).sound(\\\\"sawtooth\\\\")"],"name":"midin","longname":"midin","kind":"function","scope":"global"},{"comment":"/**\\\\n *  The accelerometer\'s x-axis value ranges from 0 to 1.\\\\n * @name accelerationX\\\\n * @return {Pattern}\\\\n * @synonyms accX\\\\n * @example\\\\n * n(accelerationX.segment(4).range(0,7)).scale(\\\\"C:minor\\\\")\\\\n *\\\\n */","meta":{"filename":"motion.mjs","lineno":5,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The accelerometer\'s x-axis value ranges from 0 to 1.</p>","name":"accelerationX","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"accX","synonyms":["accX"],"examples":["n(accelerationX.segment(4).range(0,7)).scale(\\\\"C:minor\\\\")"],"longname":"accelerationX","kind":"member","scope":"global"},{"comment":"/**\\\\n *  The accelerometer\'s y-axis value ranges from 0 to 1.\\\\n * @name accelerationY\\\\n * @return {Pattern}\\\\n * @synonyms accY\\\\n * @example\\\\n * n(accelerationY.segment(4).range(0,7)).scale(\\\\"C:minor\\\\")\\\\n *\\\\n */","meta":{"filename":"motion.mjs","lineno":15,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The accelerometer\'s y-axis value ranges from 0 to 1.</p>","name":"accelerationY","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"accY","synonyms":["accY"],"examples":["n(accelerationY.segment(4).range(0,7)).scale(\\\\"C:minor\\\\")"],"longname":"accelerationY","kind":"member","scope":"global"},{"comment":"/**\\\\n *  The accelerometer\'s z-axis value ranges from 0 to 1.\\\\n * @name accelerationZ\\\\n * @return {Pattern}\\\\n * @synonyms accZ\\\\n * @example\\\\n * n(accelerationZ.segment(4).range(0,7)).scale(\\\\"C:minor\\\\")\\\\n *\\\\n */","meta":{"filename":"motion.mjs","lineno":25,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The accelerometer\'s z-axis value ranges from 0 to 1.</p>","name":"accelerationZ","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"accZ","synonyms":["accZ"],"examples":["n(accelerationZ.segment(4).range(0,7)).scale(\\\\"C:minor\\\\")"],"longname":"accelerationZ","kind":"member","scope":"global"},{"comment":"/**\\\\n *  The device\'s gravity x-axis value ranges from 0 to 1.\\\\n * @name gravityX\\\\n * @return {Pattern}\\\\n * @synonyms gravX\\\\n * @example\\\\n * n(gravityX.segment(4).range(0,7)).scale(\\\\"C:minor\\\\")\\\\n *\\\\n */","meta":{"filename":"motion.mjs","lineno":35,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The device\'s gravity x-axis value ranges from 0 to 1.</p>","name":"gravityX","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"gravX","synonyms":["gravX"],"examples":["n(gravityX.segment(4).range(0,7)).scale(\\\\"C:minor\\\\")"],"longname":"gravityX","kind":"member","scope":"global"},{"comment":"/**\\\\n *  The device\'s gravity y-axis value ranges from 0 to 1.\\\\n * @name gravityY\\\\n * @return {Pattern}\\\\n * @synonyms gravY\\\\n * @example\\\\n * n(gravityY.segment(4).range(0,7)).scale(\\\\"C:minor\\\\")\\\\n *\\\\n */","meta":{"filename":"motion.mjs","lineno":45,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The device\'s gravity y-axis value ranges from 0 to 1.</p>","name":"gravityY","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"gravY","synonyms":["gravY"],"examples":["n(gravityY.segment(4).range(0,7)).scale(\\\\"C:minor\\\\")"],"longname":"gravityY","kind":"member","scope":"global"},{"comment":"/**\\\\n *  The device\'s gravity z-axis value ranges from 0 to 1.\\\\n * @name gravityZ\\\\n * @return {Pattern}\\\\n * @synonyms gravZ\\\\n * @example\\\\n * n(gravityZ.segment(4).range(0,7)).scale(\\\\"C:minor\\\\")\\\\n *\\\\n */","meta":{"filename":"motion.mjs","lineno":55,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The device\'s gravity z-axis value ranges from 0 to 1.</p>","name":"gravityZ","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"gravZ","synonyms":["gravZ"],"examples":["n(gravityZ.segment(4).range(0,7)).scale(\\\\"C:minor\\\\")"],"longname":"gravityZ","kind":"member","scope":"global"},{"comment":"/**\\\\n *  The device\'s rotation around the alpha-axis value ranges from 0 to 1.\\\\n * @name rotationAlpha\\\\n * @return {Pattern}\\\\n * @synonyms rotA, rotZ, rotationZ\\\\n * @example\\\\n * n(rotationAlpha.segment(4).range(0,7)).scale(\\\\"C:minor\\\\")\\\\n *\\\\n */","meta":{"filename":"motion.mjs","lineno":65,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The device\'s rotation around the alpha-axis value ranges from 0 to 1.</p>","name":"rotationAlpha","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"rotA, rotZ, rotationZ","synonyms":["rotA","rotZ","rotationZ"],"examples":["n(rotationAlpha.segment(4).range(0,7)).scale(\\\\"C:minor\\\\")"],"longname":"rotationAlpha","kind":"member","scope":"global"},{"comment":"/**\\\\n *  The device\'s rotation around the beta-axis value ranges from 0 to 1.\\\\n * @name rotationBeta\\\\n * @return {Pattern}\\\\n * @synonyms rotB, rotX, rotationX\\\\n * @example\\\\n * n(rotationBeta.segment(4).range(0,7)).scale(\\\\"C:minor\\\\")\\\\n *\\\\n */","meta":{"filename":"motion.mjs","lineno":75,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The device\'s rotation around the beta-axis value ranges from 0 to 1.</p>","name":"rotationBeta","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"rotB, rotX, rotationX","synonyms":["rotB","rotX","rotationX"],"examples":["n(rotationBeta.segment(4).range(0,7)).scale(\\\\"C:minor\\\\")"],"longname":"rotationBeta","kind":"member","scope":"global"},{"comment":"/**\\\\n *  The device\'s rotation around the gamma-axis value ranges from 0 to 1.\\\\n * @name rotationGamma\\\\n * @return {Pattern}\\\\n * @synonyms rotG, rotY, rotationY\\\\n * @example\\\\n * n(rotationGamma.segment(4).range(0,7)).scale(\\\\"C:minor\\\\")\\\\n *\\\\n */","meta":{"filename":"motion.mjs","lineno":85,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The device\'s rotation around the gamma-axis value ranges from 0 to 1.</p>","name":"rotationGamma","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"rotG, rotY, rotationY","synonyms":["rotG","rotY","rotationY"],"examples":["n(rotationGamma.segment(4).range(0,7)).scale(\\\\"C:minor\\\\")"],"longname":"rotationGamma","kind":"member","scope":"global"},{"comment":"/**\\\\n *  The device\'s orientation alpha value ranges from 0 to 1.\\\\n * @name orientationAlpha\\\\n * @return {Pattern}\\\\n * @synonyms oriA, oriZ, orientationZ\\\\n * @example\\\\n * n(orientationAlpha.segment(4).range(0,7)).scale(\\\\"C:minor\\\\")\\\\n *\\\\n */","meta":{"filename":"motion.mjs","lineno":95,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The device\'s orientation alpha value ranges from 0 to 1.</p>","name":"orientationAlpha","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"oriA, oriZ, orientationZ","synonyms":["oriA","oriZ","orientationZ"],"examples":["n(orientationAlpha.segment(4).range(0,7)).scale(\\\\"C:minor\\\\")"],"longname":"orientationAlpha","kind":"member","scope":"global"},{"comment":"/**\\\\n *  The device\'s orientation beta value ranges from 0 to 1.\\\\n * @name orientationBeta\\\\n * @return {Pattern}\\\\n * @synonyms oriB, oriX, orientationX\\\\n * @example\\\\n * n(orientationBeta.segment(4).range(0,7)).scale(\\\\"C:minor\\\\")\\\\n *\\\\n */","meta":{"filename":"motion.mjs","lineno":105,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The device\'s orientation beta value ranges from 0 to 1.</p>","name":"orientationBeta","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"oriB, oriX, orientationX","synonyms":["oriB","oriX","orientationX"],"examples":["n(orientationBeta.segment(4).range(0,7)).scale(\\\\"C:minor\\\\")"],"longname":"orientationBeta","kind":"member","scope":"global"},{"comment":"/**\\\\n *  The device\'s orientation gamma value ranges from 0 to 1.\\\\n * @name orientationGamma\\\\n * @return {Pattern}\\\\n * @synonyms oriG, oriY, orientationY\\\\n * @example\\\\n * n(orientationGamma.segment(4).range(0,7)).scale(\\\\"C:minor\\\\")\\\\n *\\\\n */","meta":{"filename":"motion.mjs","lineno":115,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The device\'s orientation gamma value ranges from 0 to 1.</p>","name":"orientationGamma","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"oriG, oriY, orientationY","synonyms":["oriG","oriY","orientationY"],"examples":["n(orientationGamma.segment(4).range(0,7)).scale(\\\\"C:minor\\\\")"],"longname":"orientationGamma","kind":"member","scope":"global"},{"comment":"/**\\\\n *  The device\'s absolute orientation alpha value ranges from 0 to 1.\\\\n * @name absoluteOrientationAlpha\\\\n * @return {Pattern}\\\\n * @synonyms absOriA, absOriZ, absoluteOrientationZ\\\\n * @example\\\\n * n(absoluteOrientationAlpha.segment(4).range(0,7)).scale(\\\\"C:minor\\\\")\\\\n *\\\\n */","meta":{"filename":"motion.mjs","lineno":125,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The device\'s absolute orientation alpha value ranges from 0 to 1.</p>","name":"absoluteOrientationAlpha","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"absOriA, absOriZ, absoluteOrientationZ","synonyms":["absOriA","absOriZ","absoluteOrientationZ"],"examples":["n(absoluteOrientationAlpha.segment(4).range(0,7)).scale(\\\\"C:minor\\\\")"],"longname":"absoluteOrientationAlpha","kind":"member","scope":"global"},{"comment":"/**\\\\n *  The device\'s absolute orientation beta value ranges from 0 to 1.\\\\n * @name absoluteOrientationBeta\\\\n * @return {Pattern}\\\\n * @synonyms absOriB, absOriX, absoluteOrientationX\\\\n * @example\\\\n * n(absoluteOrientationBeta.segment(4).range(0,7)).scale(\\\\"C:minor\\\\")\\\\n *\\\\n */","meta":{"filename":"motion.mjs","lineno":135,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The device\'s absolute orientation beta value ranges from 0 to 1.</p>","name":"absoluteOrientationBeta","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"absOriB, absOriX, absoluteOrientationX","synonyms":["absOriB","absOriX","absoluteOrientationX"],"examples":["n(absoluteOrientationBeta.segment(4).range(0,7)).scale(\\\\"C:minor\\\\")"],"longname":"absoluteOrientationBeta","kind":"member","scope":"global"},{"comment":"/**\\\\n *  The device\'s absolute orientation gamma value ranges from 0 to 1.\\\\n * @name absoluteOrientationGamma\\\\n * @return {Pattern}\\\\n * @synonyms absOriG, absOriY, absoluteOrientationY\\\\n * @example\\\\n * n(absoluteOrientationGamma.segment(4).range(0,7)).scale(\\\\"C:minor\\\\")\\\\n *\\\\n */","meta":{"filename":"motion.mjs","lineno":145,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The device\'s absolute orientation gamma value ranges from 0 to 1.</p>","name":"absoluteOrientationGamma","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"absOriG, absOriY, absoluteOrientationY","synonyms":["absOriG","absOriY","absoluteOrientationY"],"examples":["n(absoluteOrientationGamma.segment(4).range(0,7)).scale(\\\\"C:minor\\\\")"],"longname":"absoluteOrientationGamma","kind":"member","scope":"global"},{"comment":"/**\\\\n *\\\\n * Sends each hap as an OSC message, which can be picked up by SuperCollider or any other OSC-enabled software.\\\\n * For more info, read [MIDI & OSC in the docs](https://strudel.cc/learn/input-output/)\\\\n *\\\\n * @name osc\\\\n * @memberof Pattern\\\\n * @returns Pattern\\\\n */","meta":{"filename":"osc.mjs","lineno":75,"columnno":0,"path":"/Users/felix/projects/strudel/packages/osc","code":{}},"description":"<p>Sends each hap as an OSC message, which can be picked up by SuperCollider or any other OSC-enabled software.\\\\nFor more info, read <a href=\\\\"https://strudel.cc/learn/input-output/\\\\">MIDI &amp; OSC in the docs</a></p>","name":"osc","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"scope":"static","longname":"Pattern.osc","kind":"member"},{"comment":"/** Overlap-Add Node */","meta":{"range":[150,6513],"filename":"ola-processor.js","lineno":7,"columnno":0,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100094738","name":"OLAProcessor","type":"ClassDeclaration","paramnames":["options"]}},"name":"OLAProcessor","longname":"OLAProcessor","kind":"class","classdesc":"<p>Overlap-Add Node</p>","scope":"global"},{"comment":"/** Handles dynamic reallocation of input/output channels buffer\\\\n     (channel numbers may lety during lifecycle) **/","meta":{"range":[1429,1897],"filename":"ola-processor.js","lineno":39,"columnno":2,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100094891","name":"OLAProcessor#reallocateChannelsIfNeeded","type":"MethodDefinition","paramnames":["inputs","outputs"]},"vars":{"":null}},"description":"<p>Handles dynamic reallocation of input/output channels buffer\\\\n(channel numbers may lety during lifecycle)</p>","name":"reallocateChannelsIfNeeded","longname":"OLAProcessor#reallocateChannelsIfNeeded","kind":"function","memberof":"OLAProcessor","scope":"instance","params":[]},{"comment":"/** Read next web audio block to input buffers **/","meta":{"range":[3534,4122],"filename":"ola-processor.js","lineno":92,"columnno":2,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100095198","name":"OLAProcessor#readInputs","type":"MethodDefinition","paramnames":["inputs"]},"vars":{"":null}},"description":"<p>Read next web audio block to input buffers</p>","name":"readInputs","longname":"OLAProcessor#readInputs","kind":"function","memberof":"OLAProcessor","scope":"instance","params":[]},{"comment":"/** Write next web audio block from output buffers **/","meta":{"range":[4183,4461],"filename":"ola-processor.js","lineno":112,"columnno":2,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100095319","name":"OLAProcessor#writeOutputs","type":"MethodDefinition","paramnames":["outputs"]},"vars":{"":null}},"description":"<p>Write next web audio block from output buffers</p>","name":"writeOutputs","longname":"OLAProcessor#writeOutputs","kind":"function","memberof":"OLAProcessor","scope":"instance","params":[]},{"comment":"/** Shift left content of input buffers to receive new web audio block **/","meta":{"range":[4542,4757],"filename":"ola-processor.js","lineno":122,"columnno":2,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100095379","name":"OLAProcessor#shiftInputBuffers","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Shift left content of input buffers to receive new web audio block</p>","name":"shiftInputBuffers","longname":"OLAProcessor#shiftInputBuffers","kind":"function","memberof":"OLAProcessor","scope":"instance","params":[]},{"comment":"/** Shift left content of output buffers to receive new web audio block **/","meta":{"range":[4839,5147],"filename":"ola-processor.js","lineno":131,"columnno":2,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100095426","name":"OLAProcessor#shiftOutputBuffers","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Shift left content of output buffers to receive new web audio block</p>","name":"shiftOutputBuffers","longname":"OLAProcessor#shiftOutputBuffers","kind":"function","memberof":"OLAProcessor","scope":"instance","params":[]},{"comment":"/** Copy contents of input buffers to buffer actually sent to process **/","meta":{"range":[5227,5454],"filename":"ola-processor.js","lineno":141,"columnno":2,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100095493","name":"OLAProcessor#prepareInputBuffersToSend","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Copy contents of input buffers to buffer actually sent to process</p>","name":"prepareInputBuffersToSend","longname":"OLAProcessor#prepareInputBuffersToSend","kind":"function","memberof":"OLAProcessor","scope":"instance","params":[]},{"comment":"/** Add contents of output buffers just processed to output buffers **/","meta":{"range":[5532,5852],"filename":"ola-processor.js","lineno":150,"columnno":2,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100095545","name":"OLAProcessor#handleOutputBuffersToRetrieve","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Add contents of output buffers just processed to output buffers</p>","name":"handleOutputBuffersToRetrieve","longname":"OLAProcessor#handleOutputBuffersToRetrieve","kind":"function","memberof":"OLAProcessor","scope":"instance","params":[]},{"comment":"/** Generates a reverb impulse response.\\\\n\\\\n @param {!Object} params TODO: Document the properties.\\\\n @param {!function(!AudioBuffer)} callback Function to call when\\\\n  the impulse response has been generated. The impulse response\\\\n  is passed to this function as its parameter. May be called\\\\n  immediately within the current execution context, or later. */","meta":{"range":[969,2138],"filename":"reverbGen.mjs","lineno":24,"columnno":0,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100095954","name":"reverbGen.generateReverb","type":"FunctionExpression","paramnames":["params","callback"]},"vars":{"audioContext":"reverbGen.generateReverb~audioContext","sampleRate":"reverbGen.generateReverb~sampleRate","numChannels":"reverbGen.generateReverb~numChannels","totalTime":"reverbGen.generateReverb~totalTime","decaySampleFrames":"reverbGen.generateReverb~decaySampleFrames","numSampleFrames":"reverbGen.generateReverb~numSampleFrames","fadeInSampleFrames":"reverbGen.generateReverb~fadeInSampleFrames","decayBase":"reverbGen.generateReverb~decayBase","reverbIR":"reverbGen.generateReverb~reverbIR","i":"reverbGen.generateReverb~i","chan":"reverbGen.generateReverb~chan","j":"reverbGen.generateReverb~j","chan[undefined]":"reverbGen.generateReverb~chan.undefined]"}},"description":"<p>Generates a reverb impulse response.</p>","params":[{"type":{"names":["Object"]},"nullable":false,"description":"<p>TODO: Document the properties.</p>","name":"params"},{"type":{"names":["function"]},"nullable":false,"description":"<p>Function to call when\\\\nthe impulse response has been generated. The impulse response\\\\nis passed to this function as its parameter. May be called\\\\nimmediately within the current execution context, or later.</p>","name":"callback"}],"name":"generateReverb","longname":"reverbGen.generateReverb","kind":"function","memberof":"reverbGen","scope":"static"},{"comment":"/** Creates a canvas element showing a graph of the given data.\\\\n\\\\n\\\\n @param {!Float32Array} data An array of numbers, or a Float32Array.\\\\n @param {number} width Width in pixels of the canvas.\\\\n @param {number} height Height in pixels of the canvas.\\\\n @param {number} min Minimum value of data for the graph (lower edge).\\\\n @param {number} max Maximum value of data in the graph (upper edge).\\\\n @return {!CanvasElement} The generated canvas element. */","meta":{"range":[2586,3097],"filename":"reverbGen.mjs","lineno":58,"columnno":0,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100096134","name":"reverbGen.generateGraph","type":"FunctionExpression","paramnames":["data","width","height","min","max"]},"vars":{"canvas":"reverbGen.generateGraph~canvas","canvas.width":"reverbGen.generateGraph~canvas.width","canvas.height":"reverbGen.generateGraph~canvas.height","gc":"reverbGen.generateGraph~gc","gc.fillStyle":"reverbGen.generateGraph~gc.fillStyle","xscale":"reverbGen.generateGraph~xscale","yscale":"reverbGen.generateGraph~yscale","i":"reverbGen.generateGraph~i"}},"description":"<p>Creates a canvas element showing a graph of the given data.</p>","params":[{"type":{"names":["Float32Array"]},"nullable":false,"description":"<p>An array of numbers, or a Float32Array.</p>","name":"data"},{"type":{"names":["number"]},"description":"<p>Width in pixels of the canvas.</p>","name":"width"},{"type":{"names":["number"]},"description":"<p>Height in pixels of the canvas.</p>","name":"height"},{"type":{"names":["number"]},"description":"<p>Minimum value of data for the graph (lower edge).</p>","name":"min"},{"type":{"names":["number"]},"description":"<p>Maximum value of data in the graph (upper edge).</p>","name":"max"}],"returns":[{"type":{"names":["CanvasElement"]},"nullable":false,"description":"<p>The generated canvas element.</p>"}],"name":"generateGraph","longname":"reverbGen.generateGraph","kind":"function","memberof":"reverbGen","scope":"static"},{"comment":"/** Applies a constantly changing lowpass filter to the given sound.\\\\n\\\\n @private\\\\n @param {!AudioBuffer} input\\\\n @param {number} lpFreqStart\\\\n @param {number} lpFreqEnd\\\\n @param {number} lpFreqEndAt\\\\n @param {!function(!AudioBuffer)} callback May be called\\\\n  immediately within the current execution context, or later.*/","meta":{"range":[3419,4357],"filename":"reverbGen.mjs","lineno":83,"columnno":4,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100096249","name":"applyGradualLowpass","type":"FunctionExpression"},"vars":{"channelData":"applyGradualLowpass~channelData","context":"applyGradualLowpass~context","player":"applyGradualLowpass~player","player.buffer":"applyGradualLowpass~player.buffer","filter":"applyGradualLowpass~filter","lpFreqStart":"applyGradualLowpass~lpFreqStart","lpFreqEnd":"applyGradualLowpass~lpFreqEnd","filter.type":"applyGradualLowpass~filter.type","filter.Q.value":"applyGradualLowpass~filter.Q.value","context.oncomplete":"applyGradualLowpass~context.oncomplete","":null,"window.filterNode":"window.filterNode"}},"description":"<p>Applies a constantly changing lowpass filter to the given sound.</p>","access":"private","params":[{"type":{"names":["AudioBuffer"]},"nullable":false,"name":"input"},{"type":{"names":["number"]},"name":"lpFreqStart"},{"type":{"names":["number"]},"name":"lpFreqEnd"},{"type":{"names":["number"]},"name":"lpFreqEndAt"},{"type":{"names":["function"]},"nullable":false,"description":"<p>May be called\\\\nimmediately within the current execution context, or later.</p>","name":"callback"}],"name":"applyGradualLowpass","longname":"applyGradualLowpass","kind":"function","scope":"global"},{"comment":"/** @private\\\\n @param {!AudioBuffer} buffer\\\\n @return {!Array.<!Float32Array>} An array containing the Float32Array of each channel\'s samples. */","meta":{"range":[4508,4691],"filename":"reverbGen.mjs","lineno":116,"columnno":4,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100096413","name":"getAllChannelData","type":"FunctionExpression"},"vars":{"channels":"getAllChannelData~channels","i":"getAllChannelData~i","channels[undefined]":"getAllChannelData~channels.undefined]"}},"access":"private","params":[{"type":{"names":["AudioBuffer"]},"nullable":false,"name":"buffer"}],"returns":[{"type":{"names":["Array.<!Float32Array>"]},"nullable":false,"description":"<p>An array containing the Float32Array of each channel\'s samples.</p>"}],"name":"getAllChannelData","longname":"getAllChannelData","kind":"function","scope":"global"},{"comment":"/** @private\\\\n @return {number} A random number from -1 to 1. */","meta":{"range":[4762,4824],"filename":"reverbGen.mjs","lineno":126,"columnno":4,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100096448","name":"randomSample","type":"FunctionExpression"}},"access":"private","returns":[{"type":{"names":["number"]},"description":"<p>A random number from -1 to 1.</p>"}],"name":"randomSample","longname":"randomSample","kind":"function","scope":"global","params":[]},{"comment":"/**\\\\n * Loads a collection of samples to use with \\`s\\`\\\\n * @example\\\\n * samples(\'github:tidalcycles/dirt-samples\');\\\\n * s(\\\\"[bd ~]*2, [~ hh]*2, ~ sd\\\\")\\\\n * @example\\\\n * samples({\\\\n *  bd: \'808bd/BD0000.WAV\',\\\\n *  sd: \'808sd/SD0010.WAV\'\\\\n *  }, \'https://raw.githubusercontent.com/tidalcycles/Dirt-Samples/master/\');\\\\n * s(\\\\"[bd ~]*2, [~ hh]*2, ~ sd\\\\")\\\\n * @example\\\\n * samples(\'shabda:noise,chimp:2\')\\\\n * s(\\\\"noise <chimp:0*2 chimp:1>\\\\")\\\\n * @example\\\\n * samples(\'shabda/speech/fr-FR/f:chocolat\')\\\\n * s(\\\\"chocolat*4\\\\")\\\\n */","meta":{"range":[7678,9659],"filename":"sampler.mjs","lineno":218,"columnno":0,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100097494","name":"exports.samples","type":"VariableDeclaration"}},"description":"<p>Loads a collection of samples to use with <code>s</code></p>","examples":["samples(\'github:tidalcycles/dirt-samples\');\\\\ns(\\\\"[bd ~]*2, [~ hh]*2, ~ sd\\\\")","samples({\\\\n bd: \'808bd/BD0000.WAV\',\\\\n sd: \'808sd/SD0010.WAV\'\\\\n }, \'https://raw.githubusercontent.com/tidalcycles/Dirt-Samples/master/\');\\\\ns(\\\\"[bd ~]*2, [~ hh]*2, ~ sd\\\\")","samples(\'shabda:noise,chimp:2\')\\\\ns(\\\\"noise <chimp:0*2 chimp:1>\\\\")","samples(\'shabda/speech/fr-FR/f:chocolat\')\\\\ns(\\\\"chocolat*4\\\\")"],"name":"samples","longname":"samples","kind":"constant","scope":"global"},{"comment":"/**\\\\n * Register an alias for a bank of sounds.\\\\n * Optionally accepts a single argument map of bank aliases.\\\\n * Optionally accepts a single argument string of a path to a JSON file containing bank aliases.\\\\n * @param {string} bank - The bank to alias\\\\n * @param {string} alias - The alias to use for the bank\\\\n */","meta":{"range":[3321,3708],"filename":"superdough.mjs","lineno":88,"columnno":0,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100098366","name":"exports.aliasBank","type":"FunctionDeclaration","paramnames":["args"]}},"description":"<p>Register an alias for a bank of sounds.\\\\nOptionally accepts a single argument map of bank aliases.\\\\nOptionally accepts a single argument string of a path to a JSON file containing bank aliases.</p>","params":[{"type":{"names":["string"]},"description":"<p>The bank to alias</p>","name":"bank"},{"type":{"names":["string"]},"description":"<p>The alias to use for the bank</p>","name":"alias"}],"name":"aliasBank","longname":"aliasBank","kind":"function","scope":"global"},{"comment":"/** Apply Hann window in-place */","meta":{"range":[14719,14855],"filename":"worklets.mjs","lineno":558,"columnno":2,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100105624","name":"PhaseVocoderProcessor#applyHannWindow","type":"MethodDefinition","paramnames":["input"]},"vars":{"":null}},"description":"<p>Apply Hann window in-place</p>","name":"applyHannWindow","longname":"PhaseVocoderProcessor#applyHannWindow","kind":"function","memberof":"PhaseVocoderProcessor","scope":"instance","params":[]},{"comment":"/** Compute squared magnitudes for peak finding **/","meta":{"range":[14913,15225],"filename":"worklets.mjs","lineno":565,"columnno":2,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100105658","name":"PhaseVocoderProcessor#computeMagnitudes","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Compute squared magnitudes for peak finding</p>","name":"computeMagnitudes","longname":"PhaseVocoderProcessor#computeMagnitudes","kind":"function","memberof":"PhaseVocoderProcessor","scope":"instance","params":[]},{"comment":"/** Find peaks in spectrum magnitudes **/","meta":{"range":[15273,15744],"filename":"worklets.mjs","lineno":579,"columnno":2,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100105718","name":"PhaseVocoderProcessor#findPeaks","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Find peaks in spectrum magnitudes</p>","name":"findPeaks","longname":"PhaseVocoderProcessor#findPeaks","kind":"function","memberof":"PhaseVocoderProcessor","scope":"instance","params":[]},{"comment":"/** Shift peaks and regions of influence by pitchFactor into new specturm */","meta":{"range":[15827,17890],"filename":"worklets.mjs","lineno":603,"columnno":2,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100105824","name":"PhaseVocoderProcessor#shiftPeaks","type":"MethodDefinition","paramnames":["pitchFactor"]},"vars":{"":null}},"description":"<p>Shift peaks and regions of influence by pitchFactor into new specturm</p>","name":"shiftPeaks","longname":"PhaseVocoderProcessor#shiftPeaks","kind":"function","memberof":"PhaseVocoderProcessor","scope":"instance","params":[]},{"comment":"/**\\\\n * Change the pitch of each value by the given amount. Expects numbers or note strings as values.\\\\n * The amount can be given as a number of semitones or as a string in interval short notation.\\\\n * If you don\'t care about enharmonic correctness, just use numbers. Otherwise, pass the interval of\\\\n * the form: ST where S is the degree number and T the type of interval with\\\\n *\\\\n * - M = major\\\\n * - m = minor\\\\n * - P = perfect\\\\n * - A = augmented\\\\n * - d = diminished\\\\n *\\\\n * Examples intervals:\\\\n *\\\\n * - 1P = unison\\\\n * - 3M = major third\\\\n * - 3m = minor third\\\\n * - 4P = perfect fourth\\\\n * - 4A = augmented fourth\\\\n * - 5P = perfect fifth\\\\n * - 5d = diminished fifth\\\\n *\\\\n * @param {string | number} amount Either number of semitones or interval string.\\\\n * @returns Pattern\\\\n * @memberof Pattern\\\\n * @name transpose\\\\n * @example\\\\n * \\\\"c2 c3\\\\".fast(2).transpose(\\\\"<0 -2 5 3>\\\\".slow(2)).note()\\\\n * @example\\\\n * \\\\"c2 c3\\\\".fast(2).transpose(\\\\"<1P -2M 4P 3m>\\\\".slow(2)).note()\\\\n */","meta":{"filename":"tonal.mjs","lineno":65,"columnno":0,"path":"/Users/felix/projects/strudel/packages/tonal","code":{}},"description":"<p>Change the pitch of each value by the given amount. Expects numbers or note strings as values.\\\\nThe amount can be given as a number of semitones or as a string in interval short notation.\\\\nIf you don\'t care about enharmonic correctness, just use numbers. Otherwise, pass the interval of\\\\nthe form: ST where S is the degree number and T the type of interval with</p>\\\\n<ul>\\\\n<li>M = major</li>\\\\n<li>m = minor</li>\\\\n<li>P = perfect</li>\\\\n<li>A = augmented</li>\\\\n<li>d = diminished</li>\\\\n</ul>\\\\n<p>Examples intervals:</p>\\\\n<ul>\\\\n<li>1P = unison</li>\\\\n<li>3M = major third</li>\\\\n<li>3m = minor third</li>\\\\n<li>4P = perfect fourth</li>\\\\n<li>4A = augmented fourth</li>\\\\n<li>5P = perfect fifth</li>\\\\n<li>5d = diminished fifth</li>\\\\n</ul>","params":[{"type":{"names":["string","number"]},"description":"<p>Either number of semitones or interval string.</p>","name":"amount"}],"returns":[{"description":"<p>Pattern</p>"}],"memberof":"Pattern","name":"transpose","examples":["\\\\"c2 c3\\\\".fast(2).transpose(\\\\"<0 -2 5 3>\\\\".slow(2)).note()","\\\\"c2 c3\\\\".fast(2).transpose(\\\\"<1P -2M 4P 3m>\\\\".slow(2)).note()"],"scope":"static","longname":"Pattern.transpose","kind":"member"},{"comment":"/**\\\\n * Transposes notes inside the scale by the number of steps.\\\\n * Expected to be called on a Pattern which already has a {@link Pattern#scale}\\\\n *\\\\n * @memberof Pattern\\\\n * @name scaleTranspose\\\\n * @param {offset} offset number of steps inside the scale\\\\n * @returns Pattern\\\\n * @example\\\\n * \\\\"-8 [2,4,6]\\\\"\\\\n * .scale(\'C4 bebop major\')\\\\n * .scaleTranspose(\\\\"<0 -1 -2 -3 -4 -5 -6 -4>\\\\")\\\\n * .note()\\\\n */","meta":{"filename":"tonal.mjs","lineno":137,"columnno":0,"path":"/Users/felix/projects/strudel/packages/tonal","code":{}},"description":"<p>Transposes notes inside the scale by the number of steps.\\\\nExpected to be called on a Pattern which already has a {@link Pattern#scale}</p>","memberof":"Pattern","name":"scaleTranspose","params":[{"type":{"names":["offset"]},"description":"<p>number of steps inside the scale</p>","name":"offset"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["\\\\"-8 [2,4,6]\\\\"\\\\n.scale(\'C4 bebop major\')\\\\n.scaleTranspose(\\\\"<0 -1 -2 -3 -4 -5 -6 -4>\\\\")\\\\n.note()"],"scope":"static","longname":"Pattern.scaleTranspose","kind":"member"},{"comment":"/**\\\\n * Turns numbers into notes in the scale (zero indexed). Also sets scale for other scale operations, like {@link Pattern#scaleTranspose}.\\\\n *\\\\n * A scale consists of a root note (e.g. \\`c4\\`, \\`c\\`, \\`f#\\`, \\`bb4\\`) followed by semicolon (\':\') and then a [scale type](https://github.com/tonaljs/tonal/blob/main/packages/scale-type/data.ts).\\\\n *\\\\n * The root note defaults to octave 3, if no octave number is given.\\\\n *\\\\n * @name scale\\\\n * @param {string} scale Name of scale\\\\n * @returns Pattern\\\\n * @example\\\\n * n(\\\\"0 2 4 6 4 2\\\\").scale(\\\\"C:major\\\\")\\\\n * @example\\\\n * n(\\\\"[0,7] 4 [2,7] 4\\\\")\\\\n * .scale(\\\\"C:<major minor>/2\\\\")\\\\n * .s(\\\\"piano\\\\")\\\\n * @example\\\\n * n(rand.range(0,12).segment(8))\\\\n * .scale(\\\\"C:ritusen\\\\")\\\\n * .s(\\\\"piano\\\\")\\\\n */","meta":{"filename":"tonal.mjs","lineno":169,"columnno":0,"path":"/Users/felix/projects/strudel/packages/tonal","code":{}},"description":"<p>Turns numbers into notes in the scale (zero indexed). Also sets scale for other scale operations, like {@link Pattern#scaleTranspose}.</p>\\\\n<p>A scale consists of a root note (e.g. <code>c4</code>, <code>c</code>, <code>f#</code>, <code>bb4</code>) followed by semicolon (\':\') and then a <a href=\\\\"https://github.com/tonaljs/tonal/blob/main/packages/scale-type/data.ts\\\\">scale type</a>.</p>\\\\n<p>The root note defaults to octave 3, if no octave number is given.</p>","name":"scale","params":[{"type":{"names":["string"]},"description":"<p>Name of scale</p>","name":"scale"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["n(\\\\"0 2 4 6 4 2\\\\").scale(\\\\"C:major\\\\")","n(\\\\"[0,7] 4 [2,7] 4\\\\")\\\\n.scale(\\\\"C:<major minor>/2\\\\")\\\\n.s(\\\\"piano\\\\")","n(rand.range(0,12).segment(8))\\\\n.scale(\\\\"C:ritusen\\\\")\\\\n.s(\\\\"piano\\\\")"],"longname":"scale","kind":"member","scope":"global"},{"comment":"/**\\\\n * Adds a new custom voicing dictionary.\\\\n *\\\\n * @name addVoicings\\\\n * @memberof Pattern\\\\n * @param {string} name identifier for the voicing dictionary\\\\n * @param {Object} dictionary maps chord symbol to possible voicings\\\\n * @param {Array} range min, max note\\\\n * @returns Pattern\\\\n * @example\\\\n * addVoicings(\'cookie\', {\\\\n *   7: [\'3M 7m 9M 12P 15P\', \'7m 10M 13M 16M 19P\'],\\\\n *   \'^7\': [\'3M 6M 9M 12P 14M\', \'7M 10M 13M 16M 19P\'],\\\\n *   m7: [\'8P 11P 14m 17m 19P\', \'5P 8P 11P 14m 17m\'],\\\\n *   m7b5: [\'3m 5d 8P 11P 14m\', \'5d 8P 11P 14m 17m\'],\\\\n *   o7: [\'3m 6M 9M 11A 15P\'],\\\\n *   \'7alt\': [\'3M 7m 10m 13m 15P\'],\\\\n *   \'7#11\': [\'7m 10m 13m 15P 17m\'],\\\\n * }, [\'C3\', \'C6\'])\\\\n * \\\\"<C^7 A7 Dm7 G7>\\\\".voicings(\'cookie\').note()\\\\n */","meta":{"filename":"voicings.mjs","lineno":89,"columnno":0,"path":"/Users/felix/projects/strudel/packages/tonal","code":{}},"description":"<p>Adds a new custom voicing dictionary.</p>","name":"addVoicings","memberof":"Pattern","params":[{"type":{"names":["string"]},"description":"<p>identifier for the voicing dictionary</p>","name":"name"},{"type":{"names":["Object"]},"description":"<p>maps chord symbol to possible voicings</p>","name":"dictionary"},{"type":{"names":["Array"]},"description":"<p>min, max note</p>","name":"range"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["addVoicings(\'cookie\', {\\\\n  7: [\'3M 7m 9M 12P 15P\', \'7m 10M 13M 16M 19P\'],\\\\n  \'^7\': [\'3M 6M 9M 12P 14M\', \'7M 10M 13M 16M 19P\'],\\\\n  m7: [\'8P 11P 14m 17m 19P\', \'5P 8P 11P 14m 17m\'],\\\\n  m7b5: [\'3m 5d 8P 11P 14m\', \'5d 8P 11P 14m 17m\'],\\\\n  o7: [\'3m 6M 9M 11A 15P\'],\\\\n  \'7alt\': [\'3M 7m 10m 13m 15P\'],\\\\n  \'7#11\': [\'7m 10m 13m 15P 17m\'],\\\\n}, [\'C3\', \'C6\'])\\\\n\\\\"<C^7 A7 Dm7 G7>\\\\".voicings(\'cookie\').note()"],"scope":"static","longname":"Pattern.addVoicings","kind":"member"},{"comment":"/**\\\\n * DEPRECATED: still works, but it is recommended you use .voicing instead (without s).\\\\n * Turns chord symbols into voicings, using the smoothest voice leading possible.\\\\n * Uses [chord-voicings package](https://github.com/felixroos/chord-voicings#chord-voicings).\\\\n *\\\\n * @name voicings\\\\n * @memberof Pattern\\\\n * @param {string} dictionary which voicing dictionary to use.\\\\n * @returns Pattern\\\\n * @example\\\\n * stack(\\\\"<C^7 A7 Dm7 G7>\\\\".voicings(\'lefthand\'), \\\\"<C3 A2 D3 G2>\\\\").note()\\\\n */","meta":{"filename":"voicings.mjs","lineno":130,"columnno":0,"path":"/Users/felix/projects/strudel/packages/tonal","code":{}},"description":"<p>DEPRECATED: still works, but it is recommended you use .voicing instead (without s).\\\\nTurns chord symbols into voicings, using the smoothest voice leading possible.\\\\nUses <a href=\\\\"https://github.com/felixroos/chord-voicings#chord-voicings\\\\">chord-voicings package</a>.</p>","name":"voicings","memberof":"Pattern","params":[{"type":{"names":["string"]},"description":"<p>which voicing dictionary to use.</p>","name":"dictionary"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["stack(\\\\"<C^7 A7 Dm7 G7>\\\\".voicings(\'lefthand\'), \\\\"<C3 A2 D3 G2>\\\\").note()"],"scope":"static","longname":"Pattern.voicings","kind":"member"},{"comment":"/**\\\\n * Maps the chords of the incoming pattern to root notes in the given octave.\\\\n *\\\\n * @name rootNotes\\\\n * @memberof Pattern\\\\n * @param {octave} octave octave to use\\\\n * @returns Pattern\\\\n * @example\\\\n * \\\\"<C^7 A7 Dm7 G7>\\\\".rootNotes(2).note()\\\\n */","meta":{"filename":"voicings.mjs","lineno":156,"columnno":0,"path":"/Users/felix/projects/strudel/packages/tonal","code":{}},"description":"<p>Maps the chords of the incoming pattern to root notes in the given octave.</p>","name":"rootNotes","memberof":"Pattern","params":[{"type":{"names":["octave"]},"description":"<p>octave to use</p>","name":"octave"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["\\\\"<C^7 A7 Dm7 G7>\\\\".rootNotes(2).note()"],"scope":"static","longname":"Pattern.rootNotes","kind":"member"},{"comment":"/**\\\\n * Turns chord symbols into voicings. You can use the following control params:\\\\n *\\\\n * - \\`chord\\`: Note, followed by chord symbol, e.g. C Am G7 Bb^7\\\\n * - \\`dict\\`: voicing dictionary to use, falls back to default dictionary\\\\n * - \\`anchor\\`: the note that is used to align the chord\\\\n * - \\`mode\\`: how the voicing is aligned to the anchor\\\\n *   - \\`below\\`: top note <= anchor\\\\n *   - \\`duck\\`: top note <= anchor, anchor excluded\\\\n *   - \\`above\\`: bottom note >= anchor\\\\n * - \\`offset\\`: whole number that shifts the voicing up or down to the next voicing\\\\n * - \\`n\\`: if set, the voicing is played like a scale. Overshooting numbers will be octaved\\\\n *\\\\n * All of the above controls are optional, except \\`chord\\`.\\\\n * If you pass a pattern of strings to voicing, they will be interpreted as chords.\\\\n *\\\\n * @name voicing\\\\n * @returns Pattern\\\\n * @example\\\\n * n(\\\\"0 1 2 3\\\\").chord(\\\\"<C Am F G>\\\\").voicing()\\\\n */","meta":{"filename":"voicings.mjs","lineno":175,"columnno":0,"path":"/Users/felix/projects/strudel/packages/tonal","code":{}},"description":"<p>Turns chord symbols into voicings. You can use the following control params:</p>\\\\n<ul>\\\\n<li><code>chord</code>: Note, followed by chord symbol, e.g. C Am G7 Bb^7</li>\\\\n<li><code>dict</code>: voicing dictionary to use, falls back to default dictionary</li>\\\\n<li><code>anchor</code>: the note that is used to align the chord</li>\\\\n<li><code>mode</code>: how the voicing is aligned to the anchor\\\\n<ul>\\\\n<li><code>below</code>: top note &lt;= anchor</li>\\\\n<li><code>duck</code>: top note &lt;= anchor, anchor excluded</li>\\\\n<li><code>above</code>: bottom note &gt;= anchor</li>\\\\n</ul>\\\\n</li>\\\\n<li><code>offset</code>: whole number that shifts the voicing up or down to the next voicing</li>\\\\n<li><code>n</code>: if set, the voicing is played like a scale. Overshooting numbers will be octaved</li>\\\\n</ul>\\\\n<p>All of the above controls are optional, except <code>chord</code>.\\\\nIf you pass a pattern of strings to voicing, they will be interpreted as chords.</p>","name":"voicing","returns":[{"description":"<p>Pattern</p>"}],"examples":["n(\\\\"0 1 2 3\\\\").chord(\\\\"<C Am F G>\\\\").voicing()"],"longname":"voicing","kind":"member","scope":"global"},{"comment":"/**\\\\n * Renders an oscilloscope for the frequency domain of the audio signal.\\\\n * @name fscope\\\\n * @param {string} color line color as hex or color name. defaults to white.\\\\n * @param {number} scale scales the y-axis. Defaults to 0.25\\\\n * @param {number} pos y-position relative to screen height. 0 = top, 1 = bottom of screen\\\\n * @param {number} lean y-axis alignment where 0 = top and 1 = bottom\\\\n * @param {number} min min value\\\\n * @param {number} max max value\\\\n * @example\\\\n * s(\\\\"sawtooth\\\\").fscope()\\\\n */","meta":{"filename":"scope.mjs","lineno":98,"columnno":0,"path":"/Users/felix/projects/strudel/packages/webaudio","code":{}},"description":"<p>Renders an oscilloscope for the frequency domain of the audio signal.</p>","name":"fscope","params":[{"type":{"names":["string"]},"description":"<p>line color as hex or color name. defaults to white.</p>","name":"color"},{"type":{"names":["number"]},"description":"<p>scales the y-axis. Defaults to 0.25</p>","name":"scale"},{"type":{"names":["number"]},"description":"<p>y-position relative to screen height. 0 = top, 1 = bottom of screen</p>","name":"pos"},{"type":{"names":["number"]},"description":"<p>y-axis alignment where 0 = top and 1 = bottom</p>","name":"lean"},{"type":{"names":["number"]},"description":"<p>min value</p>","name":"min"},{"type":{"names":["number"]},"description":"<p>max value</p>","name":"max"}],"examples":["s(\\\\"sawtooth\\\\").fscope()"],"longname":"fscope","kind":"member","scope":"global"},{"comment":"/**\\\\n * Renders an oscilloscope for the time domain of the audio signal.\\\\n * @name scope\\\\n * @synonyms tscope\\\\n * @param {object} config optional config with options:\\\\n * @param {boolean} align if 1, the scope will be aligned to the first zero crossing. defaults to 1\\\\n * @param {string} color line color as hex or color name. defaults to white.\\\\n * @param {number} thickness line thickness. defaults to 3\\\\n * @param {number} scale scales the y-axis. Defaults to 0.25\\\\n * @param {number} pos y-position relative to screen height. 0 = top, 1 = bottom of screen\\\\n * @param {number} trigger amplitude value that is used to align the scope. defaults to 0.\\\\n * @example\\\\n * s(\\\\"sawtooth\\\\")._scope()\\\\n */","meta":{"filename":"scope.mjs","lineno":121,"columnno":0,"path":"/Users/felix/projects/strudel/packages/webaudio","code":{}},"description":"<p>Renders an oscilloscope for the time domain of the audio signal.</p>","name":"scope","synonyms_text":"tscope","synonyms":["tscope"],"params":[{"type":{"names":["object"]},"description":"<p>optional config with options:</p>","name":"config"},{"type":{"names":["boolean"]},"description":"<p>if 1, the scope will be aligned to the first zero crossing. defaults to 1</p>","name":"align"},{"type":{"names":["string"]},"description":"<p>line color as hex or color name. defaults to white.</p>","name":"color"},{"type":{"names":["number"]},"description":"<p>line thickness. defaults to 3</p>","name":"thickness"},{"type":{"names":["number"]},"description":"<p>scales the y-axis. Defaults to 0.25</p>","name":"scale"},{"type":{"names":["number"]},"description":"<p>y-position relative to screen height. 0 = top, 1 = bottom of screen</p>","name":"pos"},{"type":{"names":["number"]},"description":"<p>amplitude value that is used to align the scope. defaults to 0.</p>","name":"trigger"}],"examples":["s(\\\\"sawtooth\\\\")._scope()"],"longname":"scope","kind":"member","scope":"global"},{"comment":"/**\\\\n * Renders a spectrum analyzer for the incoming audio signal.\\\\n * @name spectrum\\\\n * @param {object} config optional config with options:\\\\n * @param {integer} thickness line thickness in px (default 3)\\\\n * @param {integer} speed scroll speed (default 1)\\\\n * @param {integer} min min db (default -80)\\\\n * @param {integer} max max db (default 0)\\\\n * @example\\\\n * n(\\\\"<0 4 <2 3> 1>*3\\\\")\\\\n * .off(1/8, add(n(5)))\\\\n * .off(1/5, add(n(7)))\\\\n * .scale(\\\\"d3:minor:pentatonic\\\\")\\\\n * .s(\'sine\')\\\\n * .dec(.3).room(.5)\\\\n * ._spectrum()\\\\n */","meta":{"filename":"spectrum.mjs","lineno":5,"columnno":0,"path":"/Users/felix/projects/strudel/packages/webaudio","code":{}},"description":"<p>Renders a spectrum analyzer for the incoming audio signal.</p>","name":"spectrum","params":[{"type":{"names":["object"]},"description":"<p>optional config with options:</p>","name":"config"},{"type":{"names":["integer"]},"description":"<p>line thickness in px (default 3)</p>","name":"thickness"},{"type":{"names":["integer"]},"description":"<p>scroll speed (default 1)</p>","name":"speed"},{"type":{"names":["integer"]},"description":"<p>min db (default -80)</p>","name":"min"},{"type":{"names":["integer"]},"description":"<p>max db (default 0)</p>","name":"max"}],"examples":["n(\\\\"<0 4 <2 3> 1>*3\\\\")\\\\n.off(1/8, add(n(5)))\\\\n.off(1/5, add(n(7)))\\\\n.scale(\\\\"d3:minor:pentatonic\\\\")\\\\n.s(\'sine\')\\\\n.dec(.3).room(.5)\\\\n._spectrum()"],"longname":"spectrum","kind":"member","scope":"global"},{"kind":"package","longname":"package:undefined","files":["/Users/felix/projects/strudel/packages/codemirror/autocomplete.mjs","/Users/felix/projects/strudel/packages/codemirror/codemirror.mjs","/Users/felix/projects/strudel/packages/codemirror/flash.mjs","/Users/felix/projects/strudel/packages/codemirror/highlight.mjs","/Users/felix/projects/strudel/packages/codemirror/html.mjs","/Users/felix/projects/strudel/packages/codemirror/index.mjs","/Users/felix/projects/strudel/packages/codemirror/keybindings.mjs","/Users/felix/projects/strudel/packages/codemirror/slider.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/CutiePi.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/algoboy.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/androidstudio.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/atomone.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/aura.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/bbedit.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/blackscreen.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/bluescreen.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/darcula.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/dracula.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/duotoneDark.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/duotoneLight.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/eclipse.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/githubDark.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/githubLight.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/green-text.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/gruvboxDark.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/gruvboxLight.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/materialDark.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/materialLight.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/monokai.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/noctisLilac.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/nord.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/red-text.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/solarizedDark.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/solarizedLight.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/sonic-pink.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/strudel-theme.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/sublime.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/teletext.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/terminal.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/theme-helper.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/tokioNightStorm.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/tokyoNight.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/tokyoNightDay.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/vscodeDark.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/vscodeLight.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/whitescreen.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/xcodeLight.mjs","/Users/felix/projects/strudel/packages/codemirror/themes.mjs","/Users/felix/projects/strudel/packages/codemirror/tooltip.mjs","/Users/felix/projects/strudel/packages/codemirror/vite.config.js","/Users/felix/projects/strudel/packages/codemirror/widget.mjs","/Users/felix/projects/strudel/packages/core/bench/pattern.bench.mjs","/Users/felix/projects/strudel/packages/core/clockworker.js","/Users/felix/projects/strudel/packages/core/controls.mjs","/Users/felix/projects/strudel/packages/core/cyclist.mjs","/Users/felix/projects/strudel/packages/core/drawLine.mjs","/Users/felix/projects/strudel/packages/core/euclid.mjs","/Users/felix/projects/strudel/packages/core/evaluate.mjs","/Users/felix/projects/strudel/packages/core/fraction.mjs","/Users/felix/projects/strudel/packages/core/hap.mjs","/Users/felix/projects/strudel/packages/core/index.mjs","/Users/felix/projects/strudel/packages/core/logger.mjs","/Users/felix/projects/strudel/packages/core/neocyclist.mjs","/Users/felix/projects/strudel/packages/core/pattern.mjs","/Users/felix/projects/strudel/packages/core/pick.mjs","/Users/felix/projects/strudel/packages/core/repl.mjs","/Users/felix/projects/strudel/packages/core/signal.mjs","/Users/felix/projects/strudel/packages/core/speak.mjs","/Users/felix/projects/strudel/packages/core/state.mjs","/Users/felix/projects/strudel/packages/core/test/controls.test.mjs","/Users/felix/projects/strudel/packages/core/test/drawLine.test.mjs","/Users/felix/projects/strudel/packages/core/test/fraction.test.mjs","/Users/felix/projects/strudel/packages/core/test/pattern.test.mjs","/Users/felix/projects/strudel/packages/core/test/solmization.test.js","/Users/felix/projects/strudel/packages/core/test/util.test.mjs","/Users/felix/projects/strudel/packages/core/test/value.test.mjs","/Users/felix/projects/strudel/packages/core/time.mjs","/Users/felix/projects/strudel/packages/core/timespan.mjs","/Users/felix/projects/strudel/packages/core/ui.mjs","/Users/felix/projects/strudel/packages/core/util.mjs","/Users/felix/projects/strudel/packages/core/value.mjs","/Users/felix/projects/strudel/packages/core/vite.config.js","/Users/felix/projects/strudel/packages/core/zyklus.mjs","/Users/felix/projects/strudel/packages/csound/index.mjs","/Users/felix/projects/strudel/packages/csound/vite.config.js","/Users/felix/projects/strudel/packages/desktopbridge/index.mjs","/Users/felix/projects/strudel/packages/desktopbridge/loggerbridge.mjs","/Users/felix/projects/strudel/packages/desktopbridge/midibridge.mjs","/Users/felix/projects/strudel/packages/desktopbridge/oscbridge.mjs","/Users/felix/projects/strudel/packages/desktopbridge/utils.mjs","/Users/felix/projects/strudel/packages/draw/animate.mjs","/Users/felix/projects/strudel/packages/draw/color.mjs","/Users/felix/projects/strudel/packages/draw/draw.mjs","/Users/felix/projects/strudel/packages/draw/index.mjs","/Users/felix/projects/strudel/packages/draw/pianoroll.mjs","/Users/felix/projects/strudel/packages/draw/pitchwheel.mjs","/Users/felix/projects/strudel/packages/draw/spiral.mjs","/Users/felix/projects/strudel/packages/draw/vite.config.js","/Users/felix/projects/strudel/packages/embed/embed.js","/Users/felix/projects/strudel/packages/gamepad/gamepad.mjs","/Users/felix/projects/strudel/packages/gamepad/index.mjs","/Users/felix/projects/strudel/packages/gamepad/vite.config.js","/Users/felix/projects/strudel/packages/hs2js/src/hs2js.mjs","/Users/felix/projects/strudel/packages/hs2js/src/index.mjs","/Users/felix/projects/strudel/packages/hs2js/src/parser.mjs","/Users/felix/projects/strudel/packages/hs2js/vite.config.js","/Users/felix/projects/strudel/packages/hydra/hydra.mjs","/Users/felix/projects/strudel/packages/hydra/vite.config.js","/Users/felix/projects/strudel/packages/midi/index.mjs","/Users/felix/projects/strudel/packages/midi/midi.mjs","/Users/felix/projects/strudel/packages/midi/vite.config.js","/Users/felix/projects/strudel/packages/mini/bench/mini.bench.mjs","/Users/felix/projects/strudel/packages/mini/index.mjs","/Users/felix/projects/strudel/packages/mini/krill-parser.js","/Users/felix/projects/strudel/packages/mini/mini.mjs","/Users/felix/projects/strudel/packages/mini/test/mini.test.mjs","/Users/felix/projects/strudel/packages/mini/vite.config.js","/Users/felix/projects/strudel/packages/mondo/mondo.mjs","/Users/felix/projects/strudel/packages/mondo/test/mondo.test.mjs","/Users/felix/projects/strudel/packages/mondo/vite.config.js","/Users/felix/projects/strudel/packages/mondough/mondough.mjs","/Users/felix/projects/strudel/packages/mondough/vite.config.js","/Users/felix/projects/strudel/packages/motion/index.mjs","/Users/felix/projects/strudel/packages/motion/motion.mjs","/Users/felix/projects/strudel/packages/motion/vite.config.js","/Users/felix/projects/strudel/packages/mqtt/mqtt.mjs","/Users/felix/projects/strudel/packages/mqtt/vite.config.js","/Users/felix/projects/strudel/packages/osc/osc.mjs","/Users/felix/projects/strudel/packages/osc/server.js","/Users/felix/projects/strudel/packages/osc/superdirtoutput.js","/Users/felix/projects/strudel/packages/osc/tidal-sniffer.js","/Users/felix/projects/strudel/packages/osc/vite.config.js","/Users/felix/projects/strudel/packages/reference/index.mjs","/Users/felix/projects/strudel/packages/reference/vite.config.js","/Users/felix/projects/strudel/packages/repl/index.mjs","/Users/felix/projects/strudel/packages/repl/prebake.mjs","/Users/felix/projects/strudel/packages/repl/repl-component.mjs","/Users/felix/projects/strudel/packages/repl/vite.config.js","/Users/felix/projects/strudel/packages/sampler/sample-server.mjs","/Users/felix/projects/strudel/packages/serial/serial.mjs","/Users/felix/projects/strudel/packages/serial/vite.config.js","/Users/felix/projects/strudel/packages/soundfonts/convert.js","/Users/felix/projects/strudel/packages/soundfonts/fontloader.mjs","/Users/felix/projects/strudel/packages/soundfonts/gm.mjs","/Users/felix/projects/strudel/packages/soundfonts/index.mjs","/Users/felix/projects/strudel/packages/soundfonts/list.mjs","/Users/felix/projects/strudel/packages/soundfonts/sfumato.mjs","/Users/felix/projects/strudel/packages/soundfonts/vite.config.js","/Users/felix/projects/strudel/packages/superdough/dspworklet.mjs","/Users/felix/projects/strudel/packages/superdough/feedbackdelay.mjs","/Users/felix/projects/strudel/packages/superdough/fft.js","/Users/felix/projects/strudel/packages/superdough/helpers.mjs","/Users/felix/projects/strudel/packages/superdough/index.mjs","/Users/felix/projects/strudel/packages/superdough/logger.mjs","/Users/felix/projects/strudel/packages/superdough/noise.mjs","/Users/felix/projects/strudel/packages/superdough/ola-processor.js","/Users/felix/projects/strudel/packages/superdough/reverb.mjs","/Users/felix/projects/strudel/packages/superdough/reverbGen.mjs","/Users/felix/projects/strudel/packages/superdough/sampler.mjs","/Users/felix/projects/strudel/packages/superdough/superdough.mjs","/Users/felix/projects/strudel/packages/superdough/synth.mjs","/Users/felix/projects/strudel/packages/superdough/util.mjs","/Users/felix/projects/strudel/packages/superdough/vite.config.js","/Users/felix/projects/strudel/packages/superdough/vowel.mjs","/Users/felix/projects/strudel/packages/superdough/worklets.mjs","/Users/felix/projects/strudel/packages/superdough/zzfx.mjs","/Users/felix/projects/strudel/packages/superdough/zzfx_fork.mjs","/Users/felix/projects/strudel/packages/tidal/tidal.mjs","/Users/felix/projects/strudel/packages/tonal/index.mjs","/Users/felix/projects/strudel/packages/tonal/ireal.mjs","/Users/felix/projects/strudel/packages/tonal/test/tonal.test.mjs","/Users/felix/projects/strudel/packages/tonal/test/tonleiter.test.mjs","/Users/felix/projects/strudel/packages/tonal/tonal.mjs","/Users/felix/projects/strudel/packages/tonal/tonleiter.mjs","/Users/felix/projects/strudel/packages/tonal/vite.config.js","/Users/felix/projects/strudel/packages/tonal/voicings.mjs","/Users/felix/projects/strudel/packages/transpiler/index.mjs","/Users/felix/projects/strudel/packages/transpiler/test/transpiler.test.mjs","/Users/felix/projects/strudel/packages/transpiler/transpiler.mjs","/Users/felix/projects/strudel/packages/transpiler/vite.config.js","/Users/felix/projects/strudel/packages/vite-plugin-bundle-audioworklet/vite-plugin-bundle-audioworklet.js","/Users/felix/projects/strudel/packages/web/vite.config.js","/Users/felix/projects/strudel/packages/web/web.mjs","/Users/felix/projects/strudel/packages/webaudio/index.mjs","/Users/felix/projects/strudel/packages/webaudio/scope.mjs","/Users/felix/projects/strudel/packages/webaudio/spectrum.mjs","/Users/felix/projects/strudel/packages/webaudio/vite.config.js","/Users/felix/projects/strudel/packages/webaudio/webaudio.mjs","/Users/felix/projects/strudel/packages/xen/index.mjs","/Users/felix/projects/strudel/packages/xen/test/xen.test.mjs","/Users/felix/projects/strudel/packages/xen/tune.mjs","/Users/felix/projects/strudel/packages/xen/tunejs.js","/Users/felix/projects/strudel/packages/xen/vite.config.js","/Users/felix/projects/strudel/packages/xen/xen.mjs"]}]`), Sf = {\n  docs: UT\n}, qT = typeof DOMParser < "u" ? new DOMParser() : null;\nlet GT = (t) => qT?.parseFromString(t, "text/html").querySelectorAll("*"), z0 = (t) => Array.isArray(t) ? t.flat().join("") : t === void 0 ? "" : t, zT = (t, ...e) => {\n  let n = "";\n  for (let r in t)\n    n += z0(t[r]), n += z0(e[r]);\n  return GT(n);\n};\nfunction HT(t) {\n  const e = document.createElement("div");\n  return e.innerText = t, e.innerHTML;\n}\nconst fu = (t) => t.name || t.longname, YT = (t) => {\n  var e = document.createElement("div");\n  return e.innerHTML = t, e.textContent || e.innerText || "";\n};\nfunction ZA({ doc: t, label: e }) {\n  return zT`<div class="prose dark:prose-invert max-h-[400px] overflow-auto p-2">\n<h1 class="pt-0 mt-0">${e || fu(t)}</h1>\n${t.description}\n<ul>\n  ${t.params?.map(\n    ({ name: n, type: r, description: i }) => `<li>${n} : ${r.names?.join(" | ")} ${i ? ` - ${YT(i)}` : ""}</li>`\n  )}\n</ul>\n<div>\n  ${t.examples?.map((n) => `<div><pre>${HT(n)}</pre></div>`)}\n</div>\n</div>`[0];\n}\nconst KT = Sf.docs.filter(\n  (t) => fu(t) && !fu(t).startsWith("_") && !["package"].includes(t.kind) && !["superdirtOnly", "noAutocomplete"].some((e) => t.tags?.find((n) => n.originalTitle === e))\n).map((t) => ({\n  label: fu(t),\n  // detail: \'xxx\', // An optional short piece of information to show (with a different style) after the label.\n  info: () => ZA({ doc: t }),\n  type: "function"\n  // https://codemirror.net/docs/ref/#autocomplete.Completion.type\n})), JT = (t) => {\n  let e = t.matchBefore(/\\w*/);\n  return e.from == e.to && !t.explicit ? null : {\n    from: e.from,\n    options: KT\n    /*     options: [\n      { label: \'match\', type: \'keyword\' },\n      { label: \'hello\', type: \'variable\', info: \'(World)\' },\n      { label: \'magic\', type: \'text\', apply: \'⠁⭒*.✩.*⭒⠁\', detail: \'macro\' },\n    ], */\n  };\n};\nfunction ej(t) {\n  return t ? [\n    o7({ override: [JT] })\n    //javascriptLanguage.data.of({ autocomplete: strudelAutocomplete }),\n  ] : [];\n}\nconst tj = (t) => t.name || t.longname;\nlet Af = !1;\ntypeof window < "u" && (window.addEventListener(\n  "keyup",\n  function(t) {\n    t.key == "Control" && (Af = !1);\n  },\n  !0\n), window.addEventListener(\n  "keydown",\n  function(t) {\n    t.key == "Control" && (Af = !0);\n  },\n  !0\n));\nconst nj = KC(\n  (t, e, n) => {\n    if (!Af)\n      return null;\n    let { from: r, to: i, text: s } = t.state.doc.lineAt(e), a = e, o = e;\n    for (; a > r && /\\w/.test(s[a - r - 1]); )\n      a--;\n    for (; o < i && /\\w/.test(s[o - r]); )\n      o++;\n    if (a == e && n < 0 || o == e && n > 0)\n      return null;\n    let l = s.slice(a - r, o - r), c = Sf.docs.filter((h) => tj(h) === l)[0];\n    return !c && (c = Sf.docs.filter((h) => h.synonyms && h.synonyms.includes(l))[0], !c) ? null : {\n      pos: a,\n      end: o,\n      above: !1,\n      arrow: !0,\n      create(h) {\n        let f = document.createElement("div");\n        f.className = "strudel-tooltip";\n        const m = ZA({ doc: c, label: l });\n        return f.appendChild(m), { dom: f };\n      }\n    };\n  },\n  { hoverTime: 10 }\n), rj = (t) => t ? nj : [], cc = Ie.define(), $A = Vt.define({\n  create() {\n    return Te.none;\n  },\n  update(t, e) {\n    try {\n      for (let n of e.effects)\n        if (n.is(cc))\n          if (n.value && e.newDoc.length > 0) {\n            const r = Te.mark({\n              attributes: { style: "background-color: rgba(255,255,255, .4); filter: invert(10%)" }\n            });\n            t = Te.set([r.range(0, e.newDoc.length)]);\n          } else\n            t = Te.set([]);\n      return t;\n    } catch (n) {\n      return console.warn("flash error", n), t;\n    }\n  },\n  provide: (t) => be.decorations.from(t)\n}), LA = (t, e = 200) => {\n  t.dispatch({ effects: cc.of(!0) }), setTimeout(() => {\n    t.dispatch({ effects: cc.of(!1) });\n  }, e);\n}, IA = (t) => t ? $A : [], mm = Ie.define(), gm = Ie.define(), hc = (t, e) => {\n  t.dispatch({ effects: mm.of(e) });\n}, NA = (t, e, n) => {\n  t.dispatch({ effects: gm.of({ atTime: e, haps: n }) });\n}, Df = Vt.define({\n  create() {\n    return Te.none;\n  },\n  update(t, e) {\n    e.docChanged && (t = t.map(e.changes));\n    for (let n of e.effects)\n      if (n.is(mm)) {\n        const r = n.value.filter(([i]) => i < e.newDoc.length).map(([i, s]) => [i, Math.min(s, e.newDoc.length)]).map(\n          (i) => Te.mark({\n            id: i.join(":"),\n            // this green is only to verify that the decoration moves when the document is edited\n            // it will be removed later, so the mark is not visible by default\n            attributes: { style: "background-color: #00CA2880" }\n          }).range(...i)\n          // -> Decoration\n        );\n        t = Te.set(r, !0);\n      }\n    return t;\n  }\n}), Pf = Vt.define({\n  create() {\n    return { atTime: 0, haps: /* @__PURE__ */ new Map() };\n  },\n  update(t, e) {\n    for (let n of e.effects)\n      if (n.is(gm)) {\n        const r = /* @__PURE__ */ new Map();\n        for (let i of n.value.haps)\n          if (!(!i.context?.locations || !i.whole))\n            for (let { start: s, end: a } of i.context.locations) {\n              let o = `${s}:${a}`;\n              (!r.has(o) || r.get(o).whole.begin.lt(i.whole.begin)) && r.set(o, i);\n            }\n        t = { atTime: n.value.atTime, haps: r };\n      }\n    return t;\n  }\n}), ij = be.decorations.compute([Df, Pf], (t) => {\n  const e = t.field(Df).iter(), { haps: n } = t.field(Pf), r = new Qi();\n  for (; e.value; ) {\n    const {\n      from: i,\n      to: s,\n      value: {\n        spec: { id: a }\n      }\n    } = e;\n    if (n.has(a)) {\n      const o = n.get(a), l = o.value?.color ?? "var(--foreground)", c = o.value?.markcss || `outline: solid 2px ${l}`;\n      r.add(\n        i,\n        s,\n        Te.mark({\n          // attributes: { style: `outline: solid 2px rgba(${channels.join(\', \')})` },\n          attributes: { style: c }\n        })\n      );\n    }\n    e.next();\n  }\n  return r.finish();\n}), VA = [Df, Pf, ij], XA = (t, e) => (t && e && setTimeout(() => {\n  hc(e.editor, e.miniLocations);\n}, 100), t ? VA : []);\nfunction Bt() {\n  var t = arguments[0];\n  typeof t == "string" && (t = document.createElement(t));\n  var e = 1, n = arguments[1];\n  if (n && typeof n == "object" && n.nodeType == null && !Array.isArray(n)) {\n    for (var r in n) if (Object.prototype.hasOwnProperty.call(n, r)) {\n      var i = n[r];\n      typeof i == "string" ? t.setAttribute(r, i) : i != null && (t[r] = i);\n    }\n    e++;\n  }\n  for (; e < arguments.length; e++) WA(t, arguments[e]);\n  return t;\n}\nfunction WA(t, e) {\n  if (typeof e == "string")\n    t.appendChild(document.createTextNode(e));\n  else if (e != null) if (e.nodeType != null)\n    t.appendChild(e);\n  else if (Array.isArray(e))\n    for (var n = 0; n < e.length; n++) WA(t, e[n]);\n  else\n    throw new RangeError("Unsupported child node: " + e);\n}\nconst H0 = typeof String.prototype.normalize == "function" ? (t) => t.normalize("NFKD") : (t) => t;\nclass Ro {\n  /**\n  Create a text cursor. The query is the search string, `from` to\n  `to` provides the region to search.\n  \n  When `normalize` is given, it will be called, on both the query\n  string and the content it is matched against, before comparing.\n  You can, for example, create a case-insensitive search by\n  passing `s => s.toLowerCase()`.\n  \n  Text is always normalized with\n  [`.normalize("NFKD")`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize)\n  (when supported).\n  */\n  constructor(e, n, r = 0, i = e.length, s, a) {\n    this.test = a, this.value = { from: 0, to: 0 }, this.done = !1, this.matches = [], this.buffer = "", this.bufferPos = 0, this.iter = e.iterRange(r, i), this.bufferStart = r, this.normalize = s ? (o) => s(H0(o)) : H0, this.query = this.normalize(n);\n  }\n  peek() {\n    if (this.bufferPos == this.buffer.length) {\n      if (this.bufferStart += this.buffer.length, this.iter.next(), this.iter.done)\n        return -1;\n      this.bufferPos = 0, this.buffer = this.iter.value;\n    }\n    return hr(this.buffer, this.bufferPos);\n  }\n  /**\n  Look for the next match. Updates the iterator\'s\n  [`value`](https://codemirror.net/6/docs/ref/#search.SearchCursor.value) and\n  [`done`](https://codemirror.net/6/docs/ref/#search.SearchCursor.done) properties. Should be called\n  at least once before using the cursor.\n  */\n  next() {\n    for (; this.matches.length; )\n      this.matches.pop();\n    return this.nextOverlapping();\n  }\n  /**\n  The `next` method will ignore matches that partially overlap a\n  previous match. This method behaves like `next`, but includes\n  such matches.\n  */\n  nextOverlapping() {\n    for (; ; ) {\n      let e = this.peek();\n      if (e < 0)\n        return this.done = !0, this;\n      let n = Qd(e), r = this.bufferStart + this.bufferPos;\n      this.bufferPos += hi(e);\n      let i = this.normalize(n);\n      if (i.length)\n        for (let s = 0, a = r; ; s++) {\n          let o = i.charCodeAt(s), l = this.match(o, a, this.bufferPos + this.bufferStart);\n          if (s == i.length - 1) {\n            if (l)\n              return this.value = l, this;\n            break;\n          }\n          a == r && s < n.length && n.charCodeAt(s) == o && a++;\n        }\n    }\n  }\n  match(e, n, r) {\n    let i = null;\n    for (let s = 0; s < this.matches.length; s += 2) {\n      let a = this.matches[s], o = !1;\n      this.query.charCodeAt(a) == e && (a == this.query.length - 1 ? i = { from: this.matches[s + 1], to: r } : (this.matches[s]++, o = !0)), o || (this.matches.splice(s, 2), s -= 2);\n    }\n    return this.query.charCodeAt(0) == e && (this.query.length == 1 ? i = { from: n, to: r } : this.matches.push(1, n)), i && this.test && !this.test(i.from, i.to, this.buffer, this.bufferStart) && (i = null), i;\n  }\n}\ntypeof Symbol < "u" && (Ro.prototype[Symbol.iterator] = function() {\n  return this;\n});\nconst UA = { from: -1, to: -1, match: /* @__PURE__ */ /.*/.exec("") }, bm = "gm" + (/x/.unicode == null ? "" : "u");\nclass ym {\n  /**\n  Create a cursor that will search the given range in the given\n  document. `query` should be the raw pattern (as you\'d pass it to\n  `new RegExp`).\n  */\n  constructor(e, n, r, i = 0, s = e.length) {\n    if (this.text = e, this.to = s, this.curLine = "", this.done = !1, this.value = UA, /\\\\[sWDnr]|\\n|\\r|\\[\\^/.test(n))\n      return new qA(e, n, r, i, s);\n    this.re = new RegExp(n, bm + (r?.ignoreCase ? "i" : "")), this.test = r?.test, this.iter = e.iter();\n    let a = e.lineAt(i);\n    this.curLineStart = a.from, this.matchPos = pc(e, i), this.getLine(this.curLineStart);\n  }\n  getLine(e) {\n    this.iter.next(e), this.iter.lineBreak ? this.curLine = "" : (this.curLine = this.iter.value, this.curLineStart + this.curLine.length > this.to && (this.curLine = this.curLine.slice(0, this.to - this.curLineStart)), this.iter.next());\n  }\n  nextLine() {\n    this.curLineStart = this.curLineStart + this.curLine.length + 1, this.curLineStart > this.to ? this.curLine = "" : this.getLine(0);\n  }\n  /**\n  Move to the next match, if there is one.\n  */\n  next() {\n    for (let e = this.matchPos - this.curLineStart; ; ) {\n      this.re.lastIndex = e;\n      let n = this.matchPos <= this.to && this.re.exec(this.curLine);\n      if (n) {\n        let r = this.curLineStart + n.index, i = r + n[0].length;\n        if (this.matchPos = pc(this.text, i + (r == i ? 1 : 0)), r == this.curLineStart + this.curLine.length && this.nextLine(), (r < i || r > this.value.to) && (!this.test || this.test(r, i, n)))\n          return this.value = { from: r, to: i, match: n }, this;\n        e = this.matchPos - this.curLineStart;\n      } else if (this.curLineStart + this.curLine.length < this.to)\n        this.nextLine(), e = 0;\n      else\n        return this.done = !0, this;\n    }\n  }\n}\nconst op = /* @__PURE__ */ new WeakMap();\nclass ha {\n  constructor(e, n) {\n    this.from = e, this.text = n;\n  }\n  get to() {\n    return this.from + this.text.length;\n  }\n  static get(e, n, r) {\n    let i = op.get(e);\n    if (!i || i.from >= r || i.to <= n) {\n      let o = new ha(n, e.sliceString(n, r));\n      return op.set(e, o), o;\n    }\n    if (i.from == n && i.to == r)\n      return i;\n    let { text: s, from: a } = i;\n    return a > n && (s = e.sliceString(n, a) + s, a = n), i.to < r && (s += e.sliceString(i.to, r)), op.set(e, new ha(a, s)), new ha(n, s.slice(n - a, r - a));\n  }\n}\nclass qA {\n  constructor(e, n, r, i, s) {\n    this.text = e, this.to = s, this.done = !1, this.value = UA, this.matchPos = pc(e, i), this.re = new RegExp(n, bm + (r?.ignoreCase ? "i" : "")), this.test = r?.test, this.flat = ha.get(e, i, this.chunkEnd(\n      i + 5e3\n      /* Chunk.Base */\n    ));\n  }\n  chunkEnd(e) {\n    return e >= this.to ? this.to : this.text.lineAt(e).to;\n  }\n  next() {\n    for (; ; ) {\n      let e = this.re.lastIndex = this.matchPos - this.flat.from, n = this.re.exec(this.flat.text);\n      if (n && !n[0] && n.index == e && (this.re.lastIndex = e + 1, n = this.re.exec(this.flat.text)), n) {\n        let r = this.flat.from + n.index, i = r + n[0].length;\n        if ((this.flat.to >= this.to || n.index + n[0].length <= this.flat.text.length - 10) && (!this.test || this.test(r, i, n)))\n          return this.value = { from: r, to: i, match: n }, this.matchPos = pc(this.text, i + (r == i ? 1 : 0)), this;\n      }\n      if (this.flat.to == this.to)\n        return this.done = !0, this;\n      this.flat = ha.get(this.text, this.flat.from, this.chunkEnd(this.flat.from + this.flat.text.length * 2));\n    }\n  }\n}\ntypeof Symbol < "u" && (ym.prototype[Symbol.iterator] = qA.prototype[Symbol.iterator] = function() {\n  return this;\n});\nfunction sj(t) {\n  try {\n    return new RegExp(t, bm), !0;\n  } catch {\n    return !1;\n  }\n}\nfunction pc(t, e) {\n  if (e >= t.length)\n    return e;\n  let n = t.lineAt(e), r;\n  for (; e < n.to && (r = n.text.charCodeAt(e - n.from)) >= 56320 && r < 57344; )\n    e++;\n  return e;\n}\nfunction Ef(t) {\n  let e = String(t.state.doc.lineAt(t.state.selection.main.head).number), n = Bt("input", { class: "cm-textfield", name: "line", value: e }), r = Bt("form", {\n    class: "cm-gotoLine",\n    onkeydown: (s) => {\n      s.keyCode == 27 ? (s.preventDefault(), t.dispatch({ effects: fc.of(!1) }), t.focus()) : s.keyCode == 13 && (s.preventDefault(), i());\n    },\n    onsubmit: (s) => {\n      s.preventDefault(), i();\n    }\n  }, Bt("label", t.state.phrase("Go to line"), ": ", n), " ", Bt("button", { class: "cm-button", type: "submit" }, t.state.phrase("go")));\n  function i() {\n    let s = /^([+-])?(\\d+)?(:\\d+)?(%)?$/.exec(n.value);\n    if (!s)\n      return;\n    let { state: a } = t, o = a.doc.lineAt(a.selection.main.head), [, l, c, h, f] = s, m = h ? +h.slice(1) : 0, y = c ? +c : o.number;\n    if (c && f) {\n      let S = y / 100;\n      l && (S = S * (l == "-" ? -1 : 1) + o.number / a.doc.lines), y = Math.round(a.doc.lines * S);\n    } else c && l && (y = y * (l == "-" ? -1 : 1) + o.number);\n    let v = a.doc.line(Math.max(1, Math.min(a.doc.lines, y))), C = ne.cursor(v.from + Math.max(0, Math.min(m, v.length)));\n    t.dispatch({\n      effects: [fc.of(!1), be.scrollIntoView(C.from, { y: "center" })],\n      selection: C\n    }), t.focus();\n  }\n  return { dom: r };\n}\nconst fc = /* @__PURE__ */ Ie.define(), Y0 = /* @__PURE__ */ Vt.define({\n  create() {\n    return !0;\n  },\n  update(t, e) {\n    for (let n of e.effects)\n      n.is(fc) && (t = n.value);\n    return t;\n  },\n  provide: (t) => ns.from(t, (e) => e ? Ef : null)\n}), aj = (t) => {\n  let e = Eo(t, Ef);\n  if (!e) {\n    let n = [fc.of(!0)];\n    t.state.field(Y0, !1) == null && n.push(Ie.appendConfig.of([Y0, oj])), t.dispatch({ effects: n }), e = Eo(t, Ef);\n  }\n  return e && e.dom.querySelector("input").select(), !0;\n}, oj = /* @__PURE__ */ be.baseTheme({\n  ".cm-panel.cm-gotoLine": {\n    padding: "2px 6px 4px",\n    "& label": { fontSize: "80%" }\n  }\n}), lj = ({ state: t, dispatch: e }) => {\n  let { selection: n } = t, r = ne.create(n.ranges.map((i) => t.wordAt(i.head) || ne.cursor(i.head)), n.mainIndex);\n  return r.eq(n) ? !1 : (e(t.update({ selection: r })), !0);\n};\nfunction uj(t, e) {\n  let { main: n, ranges: r } = t.selection, i = t.wordAt(n.head), s = i && i.from == n.from && i.to == n.to;\n  for (let a = !1, o = new Ro(t.doc, e, r[r.length - 1].to); ; )\n    if (o.next(), o.done) {\n      if (a)\n        return null;\n      o = new Ro(t.doc, e, 0, Math.max(0, r[r.length - 1].from - 1)), a = !0;\n    } else {\n      if (a && r.some((l) => l.from == o.value.from))\n        continue;\n      if (s) {\n        let l = t.wordAt(o.value.from);\n        if (!l || l.from != o.value.from || l.to != o.value.to)\n          continue;\n      }\n      return o.value;\n    }\n}\nconst cj = ({ state: t, dispatch: e }) => {\n  let { ranges: n } = t.selection;\n  if (n.some((s) => s.from === s.to))\n    return lj({ state: t, dispatch: e });\n  let r = t.sliceDoc(n[0].from, n[0].to);\n  if (t.selection.ranges.some((s) => t.sliceDoc(s.from, s.to) != r))\n    return !1;\n  let i = uj(t, r);\n  return i ? (e(t.update({\n    selection: t.selection.addRange(ne.range(i.from, i.to), !1),\n    effects: be.scrollIntoView(i.to)\n  })), !0) : !1;\n}, _a = /* @__PURE__ */ Ae.define({\n  combine(t) {\n    return ls(t, {\n      top: !1,\n      caseSensitive: !1,\n      literal: !1,\n      regexp: !1,\n      wholeWord: !1,\n      createPanel: (e) => new Oj(e),\n      scrollToMatch: (e) => be.scrollIntoView(e)\n    });\n  }\n});\nclass Om {\n  /**\n  Create a query object.\n  */\n  constructor(e) {\n    this.search = e.search, this.caseSensitive = !!e.caseSensitive, this.literal = !!e.literal, this.regexp = !!e.regexp, this.replace = e.replace || "", this.valid = !!this.search && (!this.regexp || sj(this.search)), this.unquoted = this.unquote(this.search), this.wholeWord = !!e.wholeWord;\n  }\n  /**\n  @internal\n  */\n  unquote(e) {\n    return this.literal ? e : e.replace(/\\\\([nrt\\\\])/g, (n, r) => r == "n" ? `\n` : r == "r" ? "\\r" : r == "t" ? "\t" : "\\\\");\n  }\n  /**\n  Compare this query to another query.\n  */\n  eq(e) {\n    return this.search == e.search && this.replace == e.replace && this.caseSensitive == e.caseSensitive && this.regexp == e.regexp && this.wholeWord == e.wholeWord;\n  }\n  /**\n  @internal\n  */\n  create() {\n    return this.regexp ? new dj(this) : new pj(this);\n  }\n  /**\n  Get a search cursor for this query, searching through the given\n  range in the given state.\n  */\n  getCursor(e, n = 0, r) {\n    let i = e.doc ? e : dt.create({ doc: e });\n    return r == null && (r = i.doc.length), this.regexp ? Gs(this, i, n, r) : qs(this, i, n, r);\n  }\n}\nclass GA {\n  constructor(e) {\n    this.spec = e;\n  }\n}\nfunction qs(t, e, n, r) {\n  return new Ro(e.doc, t.unquoted, n, r, t.caseSensitive ? void 0 : (i) => i.toLowerCase(), t.wholeWord ? hj(e.doc, e.charCategorizer(e.selection.main.head)) : void 0);\n}\nfunction hj(t, e) {\n  return (n, r, i, s) => ((s > n || s + i.length < r) && (s = Math.max(0, n - 2), i = t.sliceString(s, Math.min(t.length, r + 2))), (e(dc(i, n - s)) != sn.Word || e(mc(i, n - s)) != sn.Word) && (e(mc(i, r - s)) != sn.Word || e(dc(i, r - s)) != sn.Word));\n}\nclass pj extends GA {\n  constructor(e) {\n    super(e);\n  }\n  nextMatch(e, n, r) {\n    let i = qs(this.spec, e, r, e.doc.length).nextOverlapping();\n    if (i.done) {\n      let s = Math.min(e.doc.length, n + this.spec.unquoted.length);\n      i = qs(this.spec, e, 0, s).nextOverlapping();\n    }\n    return i.done || i.value.from == n && i.value.to == r ? null : i.value;\n  }\n  // Searching in reverse is, rather than implementing an inverted search\n  // cursor, done by scanning chunk after chunk forward.\n  prevMatchInRange(e, n, r) {\n    for (let i = r; ; ) {\n      let s = Math.max(n, i - 1e4 - this.spec.unquoted.length), a = qs(this.spec, e, s, i), o = null;\n      for (; !a.nextOverlapping().done; )\n        o = a.value;\n      if (o)\n        return o;\n      if (s == n)\n        return null;\n      i -= 1e4;\n    }\n  }\n  prevMatch(e, n, r) {\n    let i = this.prevMatchInRange(e, 0, n);\n    return i || (i = this.prevMatchInRange(e, Math.max(0, r - this.spec.unquoted.length), e.doc.length)), i && (i.from != n || i.to != r) ? i : null;\n  }\n  getReplacement(e) {\n    return this.spec.unquote(this.spec.replace);\n  }\n  matchAll(e, n) {\n    let r = qs(this.spec, e, 0, e.doc.length), i = [];\n    for (; !r.next().done; ) {\n      if (i.length >= n)\n        return null;\n      i.push(r.value);\n    }\n    return i;\n  }\n  highlight(e, n, r, i) {\n    let s = qs(this.spec, e, Math.max(0, n - this.spec.unquoted.length), Math.min(r + this.spec.unquoted.length, e.doc.length));\n    for (; !s.next().done; )\n      i(s.value.from, s.value.to);\n  }\n}\nfunction Gs(t, e, n, r) {\n  return new ym(e.doc, t.search, {\n    ignoreCase: !t.caseSensitive,\n    test: t.wholeWord ? fj(e.charCategorizer(e.selection.main.head)) : void 0\n  }, n, r);\n}\nfunction dc(t, e) {\n  return t.slice(kn(t, e, !1), e);\n}\nfunction mc(t, e) {\n  return t.slice(e, kn(t, e));\n}\nfunction fj(t) {\n  return (e, n, r) => !r[0].length || (t(dc(r.input, r.index)) != sn.Word || t(mc(r.input, r.index)) != sn.Word) && (t(mc(r.input, r.index + r[0].length)) != sn.Word || t(dc(r.input, r.index + r[0].length)) != sn.Word);\n}\nclass dj extends GA {\n  nextMatch(e, n, r) {\n    let i = Gs(this.spec, e, r, e.doc.length).next();\n    return i.done && (i = Gs(this.spec, e, 0, n).next()), i.done ? null : i.value;\n  }\n  prevMatchInRange(e, n, r) {\n    for (let i = 1; ; i++) {\n      let s = Math.max(\n        n,\n        r - i * 1e4\n        /* FindPrev.ChunkSize */\n      ), a = Gs(this.spec, e, s, r), o = null;\n      for (; !a.next().done; )\n        o = a.value;\n      if (o && (s == n || o.from > s + 10))\n        return o;\n      if (s == n)\n        return null;\n    }\n  }\n  prevMatch(e, n, r) {\n    return this.prevMatchInRange(e, 0, n) || this.prevMatchInRange(e, r, e.doc.length);\n  }\n  getReplacement(e) {\n    return this.spec.unquote(this.spec.replace).replace(/\\$([$&\\d+])/g, (n, r) => r == "$" ? "$" : r == "&" ? e.match[0] : r != "0" && +r < e.match.length ? e.match[r] : n);\n  }\n  matchAll(e, n) {\n    let r = Gs(this.spec, e, 0, e.doc.length), i = [];\n    for (; !r.next().done; ) {\n      if (i.length >= n)\n        return null;\n      i.push(r.value);\n    }\n    return i;\n  }\n  highlight(e, n, r, i) {\n    let s = Gs(this.spec, e, Math.max(\n      0,\n      n - 250\n      /* RegExp.HighlightMargin */\n    ), Math.min(r + 250, e.doc.length));\n    for (; !s.next().done; )\n      i(s.value.from, s.value.to);\n  }\n}\nconst ss = /* @__PURE__ */ Ie.define(), vm = /* @__PURE__ */ Ie.define(), Ki = /* @__PURE__ */ Vt.define({\n  create(t) {\n    return new lp(Ff(t).create(), null);\n  },\n  update(t, e) {\n    for (let n of e.effects)\n      n.is(ss) ? t = new lp(n.value.create(), t.panel) : n.is(vm) && (t = new lp(t.query, n.value ? xm : null));\n    return t;\n  },\n  provide: (t) => ns.from(t, (e) => e.panel)\n});\nclass lp {\n  constructor(e, n) {\n    this.query = e, this.panel = n;\n  }\n}\nconst mj = /* @__PURE__ */ Te.mark({ class: "cm-searchMatch" }), gj = /* @__PURE__ */ Te.mark({ class: "cm-searchMatch cm-searchMatch-selected" }), bj = /* @__PURE__ */ pn.fromClass(class {\n  constructor(t) {\n    this.view = t, this.decorations = this.highlight(t.state.field(Ki));\n  }\n  update(t) {\n    let e = t.state.field(Ki);\n    (e != t.startState.field(Ki) || t.docChanged || t.selectionSet || t.viewportChanged) && (this.decorations = this.highlight(e));\n  }\n  highlight({ query: t, panel: e }) {\n    if (!e || !t.spec.valid)\n      return Te.none;\n    let { view: n } = this, r = new Qi();\n    for (let i = 0, s = n.visibleRanges, a = s.length; i < a; i++) {\n      let { from: o, to: l } = s[i];\n      for (; i < a - 1 && l > s[i + 1].from - 2 * 250; )\n        l = s[++i].to;\n      t.highlight(n.state, o, l, (c, h) => {\n        let f = n.state.selection.ranges.some((m) => m.from == c && m.to == h);\n        r.add(c, h, f ? gj : mj);\n      });\n    }\n    return r.finish();\n  }\n}, {\n  decorations: (t) => t.decorations\n});\nfunction tl(t) {\n  return (e) => {\n    let n = e.state.field(Ki, !1);\n    return n && n.query.spec.valid ? t(e, n) : JA(e);\n  };\n}\nconst K0 = /* @__PURE__ */ tl((t, { query: e }) => {\n  let { to: n } = t.state.selection.main, r = e.nextMatch(t.state, n, n);\n  if (!r)\n    return !1;\n  let i = ne.single(r.from, r.to), s = t.state.facet(_a);\n  return t.dispatch({\n    selection: i,\n    effects: [km(t, r), s.scrollToMatch(i.main, t)],\n    userEvent: "select.search"\n  }), KA(t), !0;\n}), J0 = /* @__PURE__ */ tl((t, { query: e }) => {\n  let { state: n } = t, { from: r } = n.selection.main, i = e.prevMatch(n, r, r);\n  if (!i)\n    return !1;\n  let s = ne.single(i.from, i.to), a = t.state.facet(_a);\n  return t.dispatch({\n    selection: s,\n    effects: [km(t, i), a.scrollToMatch(s.main, t)],\n    userEvent: "select.search"\n  }), KA(t), !0;\n}), zA = /* @__PURE__ */ tl((t, { query: e }) => {\n  let n = e.matchAll(t.state, 1e3);\n  return !n || !n.length ? !1 : (t.dispatch({\n    selection: ne.create(n.map((r) => ne.range(r.from, r.to))),\n    userEvent: "select.search.matches"\n  }), !0);\n}), yj = ({ state: t, dispatch: e }) => {\n  let n = t.selection;\n  if (n.ranges.length > 1 || n.main.empty)\n    return !1;\n  let { from: r, to: i } = n.main, s = [], a = 0;\n  for (let o = new Ro(t.doc, t.sliceDoc(r, i)); !o.next().done; ) {\n    if (s.length > 1e3)\n      return !1;\n    o.value.from == r && (a = s.length), s.push(ne.range(o.value.from, o.value.to));\n  }\n  return e(t.update({\n    selection: ne.create(s, a),\n    userEvent: "select.search.matches"\n  })), !0;\n}, eb = /* @__PURE__ */ tl((t, { query: e }) => {\n  let { state: n } = t, { from: r, to: i } = n.selection.main;\n  if (n.readOnly)\n    return !1;\n  let s = e.nextMatch(n, r, r);\n  if (!s)\n    return !1;\n  let a = s, o = [], l, c, h = [];\n  if (a.from == r && a.to == i && (c = n.toText(e.getReplacement(a)), o.push({ from: a.from, to: a.to, insert: c }), a = e.nextMatch(n, a.from, a.to), h.push(be.announce.of(n.phrase("replaced match on line $", n.doc.lineAt(r).number) + "."))), a) {\n    let f = o.length == 0 || o[0].from >= s.to ? 0 : s.to - s.from - c.length;\n    l = ne.single(a.from - f, a.to - f), h.push(km(t, a)), h.push(n.facet(_a).scrollToMatch(l.main, t));\n  }\n  return t.dispatch({\n    changes: o,\n    selection: l,\n    effects: h,\n    userEvent: "input.replace"\n  }), !0;\n}), HA = /* @__PURE__ */ tl((t, { query: e }) => {\n  if (t.state.readOnly)\n    return !1;\n  let n = e.matchAll(t.state, 1e9).map((i) => {\n    let { from: s, to: a } = i;\n    return { from: s, to: a, insert: e.getReplacement(i) };\n  });\n  if (!n.length)\n    return !1;\n  let r = t.state.phrase("replaced $ matches", n.length) + ".";\n  return t.dispatch({\n    changes: n,\n    effects: be.announce.of(r),\n    userEvent: "input.replace.all"\n  }), !0;\n});\nfunction xm(t) {\n  return t.state.facet(_a).createPanel(t);\n}\nfunction Ff(t, e) {\n  var n, r, i, s, a;\n  let o = t.selection.main, l = o.empty || o.to > o.from + 100 ? "" : t.sliceDoc(o.from, o.to);\n  if (e && !l)\n    return e;\n  let c = t.facet(_a);\n  return new Om({\n    search: ((n = e?.literal) !== null && n !== void 0 ? n : c.literal) ? l : l.replace(/\\n/g, "\\\\n"),\n    caseSensitive: (r = e?.caseSensitive) !== null && r !== void 0 ? r : c.caseSensitive,\n    literal: (i = e?.literal) !== null && i !== void 0 ? i : c.literal,\n    regexp: (s = e?.regexp) !== null && s !== void 0 ? s : c.regexp,\n    wholeWord: (a = e?.wholeWord) !== null && a !== void 0 ? a : c.wholeWord\n  });\n}\nfunction YA(t) {\n  let e = Eo(t, xm);\n  return e && e.dom.querySelector("[main-field]");\n}\nfunction KA(t) {\n  let e = YA(t);\n  e && e == t.root.activeElement && e.select();\n}\nconst JA = (t) => {\n  let e = t.state.field(Ki, !1);\n  if (e && e.panel) {\n    let n = YA(t);\n    if (n && n != t.root.activeElement) {\n      let r = Ff(t.state, e.query.spec);\n      r.valid && t.dispatch({ effects: ss.of(r) }), n.focus(), n.select();\n    }\n  } else\n    t.dispatch({ effects: [\n      vm.of(!0),\n      e ? ss.of(Ff(t.state, e.query.spec)) : Ie.appendConfig.of(xj)\n    ] });\n  return !0;\n}, eD = (t) => {\n  let e = t.state.field(Ki, !1);\n  if (!e || !e.panel)\n    return !1;\n  let n = Eo(t, xm);\n  return n && n.dom.contains(t.root.activeElement) && t.focus(), t.dispatch({ effects: vm.of(!1) }), !0;\n};\nclass Oj {\n  constructor(e) {\n    this.view = e;\n    let n = this.query = e.state.field(Ki).query.spec;\n    this.commit = this.commit.bind(this), this.searchField = Bt("input", {\n      value: n.search,\n      placeholder: ar(e, "Find"),\n      "aria-label": ar(e, "Find"),\n      class: "cm-textfield",\n      name: "search",\n      form: "",\n      "main-field": "true",\n      onchange: this.commit,\n      onkeyup: this.commit\n    }), this.replaceField = Bt("input", {\n      value: n.replace,\n      placeholder: ar(e, "Replace"),\n      "aria-label": ar(e, "Replace"),\n      class: "cm-textfield",\n      name: "replace",\n      form: "",\n      onchange: this.commit,\n      onkeyup: this.commit\n    }), this.caseField = Bt("input", {\n      type: "checkbox",\n      name: "case",\n      form: "",\n      checked: n.caseSensitive,\n      onchange: this.commit\n    }), this.reField = Bt("input", {\n      type: "checkbox",\n      name: "re",\n      form: "",\n      checked: n.regexp,\n      onchange: this.commit\n    }), this.wordField = Bt("input", {\n      type: "checkbox",\n      name: "word",\n      form: "",\n      checked: n.wholeWord,\n      onchange: this.commit\n    });\n    function r(i, s, a) {\n      return Bt("button", { class: "cm-button", name: i, onclick: s, type: "button" }, a);\n    }\n    this.dom = Bt("div", { onkeydown: (i) => this.keydown(i), class: "cm-search" }, [\n      this.searchField,\n      r("next", () => K0(e), [ar(e, "next")]),\n      r("prev", () => J0(e), [ar(e, "previous")]),\n      r("select", () => zA(e), [ar(e, "all")]),\n      Bt("label", null, [this.caseField, ar(e, "match case")]),\n      Bt("label", null, [this.reField, ar(e, "regexp")]),\n      Bt("label", null, [this.wordField, ar(e, "by word")]),\n      ...e.state.readOnly ? [] : [\n        Bt("br"),\n        this.replaceField,\n        r("replace", () => eb(e), [ar(e, "replace")]),\n        r("replaceAll", () => HA(e), [ar(e, "replace all")])\n      ],\n      Bt("button", {\n        name: "close",\n        onclick: () => eD(e),\n        "aria-label": ar(e, "close"),\n        type: "button"\n      }, ["×"])\n    ]);\n  }\n  commit() {\n    let e = new Om({\n      search: this.searchField.value,\n      caseSensitive: this.caseField.checked,\n      regexp: this.reField.checked,\n      wholeWord: this.wordField.checked,\n      replace: this.replaceField.value\n    });\n    e.eq(this.query) || (this.query = e, this.view.dispatch({ effects: ss.of(e) }));\n  }\n  keydown(e) {\n    Q6(this.view, e, "search-panel") ? e.preventDefault() : e.keyCode == 13 && e.target == this.searchField ? (e.preventDefault(), (e.shiftKey ? J0 : K0)(this.view)) : e.keyCode == 13 && e.target == this.replaceField && (e.preventDefault(), eb(this.view));\n  }\n  update(e) {\n    for (let n of e.transactions)\n      for (let r of n.effects)\n        r.is(ss) && !r.value.eq(this.query) && this.setQuery(r.value);\n  }\n  setQuery(e) {\n    this.query = e, this.searchField.value = e.search, this.replaceField.value = e.replace, this.caseField.checked = e.caseSensitive, this.reField.checked = e.regexp, this.wordField.checked = e.wholeWord;\n  }\n  mount() {\n    this.searchField.select();\n  }\n  get pos() {\n    return 80;\n  }\n  get top() {\n    return this.view.state.facet(_a).top;\n  }\n}\nfunction ar(t, e) {\n  return t.state.phrase(e);\n}\nconst Gl = 30, zl = /[\\s\\.,:;?!]/;\nfunction km(t, { from: e, to: n }) {\n  let r = t.state.doc.lineAt(e), i = t.state.doc.lineAt(n).to, s = Math.max(r.from, e - Gl), a = Math.min(i, n + Gl), o = t.state.sliceDoc(s, a);\n  if (s != r.from) {\n    for (let l = 0; l < Gl; l++)\n      if (!zl.test(o[l + 1]) && zl.test(o[l])) {\n        o = o.slice(l);\n        break;\n      }\n  }\n  if (a != i) {\n    for (let l = o.length - 1; l > o.length - Gl; l--)\n      if (!zl.test(o[l - 1]) && zl.test(o[l])) {\n        o = o.slice(0, l);\n        break;\n      }\n  }\n  return be.announce.of(`${t.state.phrase("current match")}. ${o} ${t.state.phrase("on line")} ${r.number}.`);\n}\nconst vj = /* @__PURE__ */ be.baseTheme({\n  ".cm-panel.cm-search": {\n    padding: "2px 6px 4px",\n    position: "relative",\n    "& [name=close]": {\n      position: "absolute",\n      top: "0",\n      right: "4px",\n      backgroundColor: "inherit",\n      border: "none",\n      font: "inherit",\n      padding: 0,\n      margin: 0\n    },\n    "& input, & button, & label": {\n      margin: ".2em .6em .2em 0"\n    },\n    "& input[type=checkbox]": {\n      marginRight: ".2em"\n    },\n    "& label": {\n      fontSize: "80%",\n      whiteSpace: "pre"\n    }\n  },\n  "&light .cm-searchMatch": { backgroundColor: "#ffff0054" },\n  "&dark .cm-searchMatch": { backgroundColor: "#00ffff8a" },\n  "&light .cm-searchMatch-selected": { backgroundColor: "#ff6a0054" },\n  "&dark .cm-searchMatch-selected": { backgroundColor: "#ff00ff8a" }\n}), xj = [\n  Ki,\n  /* @__PURE__ */ jr.low(bj),\n  vj\n];\nlet Bf = zC, kj = class {\n  constructor(e, n, r, i, s, a, o, l, c, h) {\n    this.left = e, this.top = n, this.height = r, this.fontFamily = i, this.fontSize = s, this.fontWeight = a, this.color = o, this.className = l, this.letter = c, this.partial = h;\n  }\n  draw() {\n    let e = document.createElement("div");\n    return e.className = this.className, this.adjust(e), e;\n  }\n  adjust(e) {\n    e.style.left = this.left + "px", e.style.top = this.top + "px", e.style.height = this.height + "px", e.style.lineHeight = this.height + "px", e.style.fontFamily = this.fontFamily, e.style.fontSize = this.fontSize, e.style.fontWeight = this.fontWeight, e.style.color = this.partial ? "transparent" : this.color, e.className = this.className, e.textContent = this.letter;\n  }\n  eq(e) {\n    return this.left == e.left && this.top == e.top && this.height == e.height && this.fontFamily == e.fontFamily && this.fontSize == e.fontSize && this.fontWeight == e.fontWeight && this.color == e.color && this.className == e.className && this.letter == e.letter;\n  }\n}, wj = class {\n  constructor(e, n) {\n    this.view = e, this.rangePieces = [], this.cursors = [], this.em = n, this.measureReq = { read: this.readPos.bind(this), write: this.drawSel.bind(this) }, this.cursorLayer = e.scrollDOM.appendChild(document.createElement("div")), this.cursorLayer.className = "cm-cursorLayer cm-vimCursorLayer", this.cursorLayer.setAttribute("aria-hidden", "true"), e.requestMeasure(this.measureReq), this.setBlinkRate();\n  }\n  setBlinkRate() {\n    let n = Bf(this.view.state).cursorBlinkRate;\n    this.cursorLayer.style.animationDuration = n + "ms";\n  }\n  update(e) {\n    (e.selectionSet || e.geometryChanged || e.viewportChanged) && (this.view.requestMeasure(this.measureReq), this.cursorLayer.style.animationName = this.cursorLayer.style.animationName == "cm-blink" ? "cm-blink2" : "cm-blink"), Cj(e) && this.setBlinkRate();\n  }\n  scheduleRedraw() {\n    this.view.requestMeasure(this.measureReq);\n  }\n  readPos() {\n    let { state: e } = this.view, n = [];\n    for (let r of e.selection.ranges) {\n      let i = r == e.selection.main, s = Pj(this.em, this.view, r, i);\n      s && n.push(s);\n    }\n    return { cursors: n };\n  }\n  drawSel({ cursors: e }) {\n    if (e.length != this.cursors.length || e.some((n, r) => !n.eq(this.cursors[r]))) {\n      let n = this.cursorLayer.children;\n      if (n.length !== e.length) {\n        this.cursorLayer.textContent = "";\n        for (const r of e)\n          this.cursorLayer.appendChild(r.draw());\n      } else\n        e.forEach((r, i) => r.adjust(n[i]));\n      this.cursors = e;\n    }\n  }\n  destroy() {\n    this.cursorLayer.remove();\n  }\n};\nfunction Cj(t) {\n  return Bf(t.startState) != Bf(t.state);\n}\nconst Sj = {\n  ".cm-line": {\n    "& ::selection": { backgroundColor: "transparent !important" },\n    "&::selection": { backgroundColor: "transparent !important" },\n    caretColor: "transparent !important"\n  },\n  ".cm-fat-cursor": {\n    position: "absolute",\n    background: "#ff9696",\n    border: "none",\n    whiteSpace: "pre"\n  },\n  "&:not(.cm-focused) .cm-fat-cursor": {\n    background: "none",\n    outline: "solid 1px #ff9696",\n    color: "transparent !important"\n  }\n}, Aj = /* @__PURE__ */ jr.highest(/* @__PURE__ */ be.theme(Sj));\nfunction Dj(t) {\n  let e = t.scrollDOM.getBoundingClientRect();\n  return { left: (t.textDirection == Dt.LTR ? e.left : e.right - t.scrollDOM.clientWidth) - t.scrollDOM.scrollLeft, top: e.top - t.scrollDOM.scrollTop };\n}\nfunction Pj(t, e, n, r) {\n  var i, s;\n  let a = n.head, o = 1;\n  (t.$data.count || t.$data.keyChain) && (o = 0.5);\n  {\n    let c = a < e.state.doc.length && e.state.sliceDoc(a, a + 1);\n    c && /[\\uDC00-\\uDFFF]/.test(c) && a > 1 && (a--, c = e.state.sliceDoc(a, a + 1));\n    let h = e.coordsAtPos(a, 1);\n    if (!h)\n      return null;\n    let f = Dj(e), m = e.domAtPos(a), y = m ? m.node : e.contentDOM;\n    for (; m && m.node instanceof HTMLElement; )\n      y = m.node, m = { node: m.node.childNodes[m.offset], offset: 0 };\n    if (!(y instanceof HTMLElement)) {\n      if (!y.parentNode)\n        return null;\n      y = y.parentNode;\n    }\n    let v = getComputedStyle(y), C = h.left, S = (s = (i = e).coordsForChar) === null || s === void 0 ? void 0 : s.call(i, a);\n    if (S && (C = S.left), !c || c == `\n` || c == "\\r")\n      c = " ";\n    else if (c == "\t") {\n      c = " ";\n      var l = e.coordsAtPos(a + 1, -1);\n      l && (C = l.left - (l.left - h.left) / parseInt(v.tabSize));\n    } else /[\\uD800-\\uDBFF]/.test(c) && a < e.state.doc.length - 1 && (c += e.state.sliceDoc(a + 1, a + 2));\n    let M = h.bottom - h.top;\n    return new kj(C - f.left, h.top - f.top + M * (1 - o), M * o, v.fontFamily, v.fontSize, v.fontWeight, v.color, r ? "cm-fat-cursor cm-cursor-primary" : "cm-fat-cursor cm-cursor-secondary", c, o != 1);\n  }\n}\nconst Ej = /* @__PURE__ */ be.theme({\n  ".cm-emacsMode .cm-cursorLayer:not(.cm-vimCursorLayer)": {\n    display: "none"\n  },\n  ".cm-vim-panel": {\n    padding: "5px 10px",\n    backgroundColor: "#fffa8f",\n    fontFamily: "monospace"\n  },\n  ".cm-vim-panel input": {\n    border: "none",\n    outline: "none",\n    backgroundColor: "#fffa8f"\n  }\n}), Fj = /* @__PURE__ */ pn.fromClass(class {\n  constructor(t) {\n    this.status = "", this.view = t, this.em = new Ss(t), this.blockCursor = new wj(t, this.em), this.view.scrollDOM.classList.add("cm-emacsMode");\n  }\n  update(t) {\n    t.docChanged && (this.em.$emacsMark = null, this.em.updateMarksOnChange(t.changes)), this.blockCursor.update(t);\n  }\n  destroy() {\n    this.view.scrollDOM.classList.remove("cm-emacsMode"), this.blockCursor.destroy();\n  }\n}, {\n  eventHandlers: {\n    keydown: function(t, e) {\n      var n = this.em.handleKeyboard(t);\n      return n && this.blockCursor.scheduleRedraw(), !!n;\n    },\n    mousedown: function() {\n      this.em.$emacsMark = null;\n    }\n  }\n}), Bj = /* @__PURE__ */ Ie.define(), Mj = /* @__PURE__ */ Vt.define({\n  create: () => !1,\n  update(t, e) {\n    for (let n of e.effects)\n      n.is(Bj) && (t = n.value);\n    return t;\n  },\n  provide: (t) => ns.from(t, (e) => e ? Qj : null)\n});\nfunction Qj(t) {\n  let e = document.createElement("div");\n  return e.className = "cm-vim-panel", { top: !1, dom: e };\n}\nfunction Tj(t = {}) {\n  return [\n    Ej,\n    Fj,\n    Aj,\n    Mj\n  ];\n}\nvar jj = {\n  Return: "Return",\n  Escape: "Esc",\n  Insert: "Ins",\n  ArrowLeft: "Left",\n  ArrowRight: "Right",\n  ArrowUp: "Up",\n  ArrowDown: "Down",\n  Enter: "Return",\n  Divide: "/",\n  Slash: "/",\n  Multiply: "*",\n  Subtract: "-",\n  Minus: "-",\n  Equal: "="\n}, Rj = { Shift: 1, Alt: 1, Command: 1, Control: 1, CapsLock: 1 };\nconst up = {};\nclass Ss {\n  constructor(e) {\n    this.view = e, this.$data = {\n      count: 0,\n      keyChain: "",\n      lastCommand: ""\n    }, this.$emacsMarkRing = [], this.$emacsMark = null;\n  }\n  static bindKey(e, n) {\n    e.split("|").forEach(function(r) {\n      let i = "", s = r.split(/\\s+/);\n      s.forEach(function(a, o) {\n        let l = a.split(/-(?=.)/), c = l.pop();\n        l.length && (i += l.sort().join("-") + "-"), i += c, o === s.length - 1 ? up[i] = n : (up[i] = "null", i += " ");\n      });\n    });\n  }\n  static getKey(e) {\n    var n = e.code, r = e.key;\n    if (Rj[r])\n      return ["", "", ""];\n    n.length > 1 && (n[0] == "N" && (n = n.replace(/^Numpad/, "")), n[0] == "K" && (n = n.replace(/^Key/, ""))), n = jj[n] || n, n.length == 1 && (n = n.toLowerCase());\n    var i = "";\n    return e.ctrlKey && (i += "C-"), e.metaKey && (i += "CMD-"), e.altKey && (i += "M-"), e.shiftKey && (i += "S-"), [n, i, r];\n  }\n  static addCommands(e) {\n    Object.keys(e).forEach(function(n) {\n      var r = e[n];\n      typeof r == "function" && (r = { exec: r }), Ss.commands[n] = r;\n    });\n  }\n  static execCommand(e, n, r, i = 1) {\n    var s = void 0;\n    if (i < 0 && (i = -i), typeof e == "function")\n      for (var a = 0; a < i; a++)\n        e(n.view);\n    else if (e !== "null") if (e.exec) {\n      i > 1 && e.handlesCount && (r || (r = {}), typeof r == "object" && (r.count = i), i = 1);\n      for (var a = 0; a < i; a++)\n        s = e.exec(n, r || {});\n    } else\n      throw new Error("missformed command");\n    return s;\n  }\n  handleKeyboard(e) {\n    var n = Ss.getKey(e), r = this.findCommand(n);\n    if (!(/Up|Down/.test(n?.[0]) && c7(this.view.state))) {\n      if (r && r.command) {\n        var i = Ss.execCommand(r.command, this, r.args, r.count);\n        if (i === !1)\n          return;\n      }\n      return r;\n    }\n  }\n  findCommand([e, n, r]) {\n    if (e) {\n      var i = this, s = this.$data;\n      if (!n && e.length == 1 && (i.pushEmacsMark(), s.count)) {\n        var a = new Array(s.count + 1).join(r);\n        return s.count = null, { command: "insertstring", args: a };\n      }\n      if (n == "C-" || s.count) {\n        var c = parseInt(e[e.length - 1]);\n        if (typeof c == "number" && !isNaN(c))\n          return s.count = Math.max(s.count || 0, 0), s.count = 10 * s.count + c, { command: "null" };\n      }\n      n && (e = n + e), s.keyChain && (e = s.keyChain += " " + e);\n      var o = up[e];\n      if (s.keyChain = o == "null" ? e : "", !!o) {\n        if (o === "null")\n          return { command: "null" };\n        if (o === "universalArgument")\n          return s.count = -4, { command: "null" };\n        var l;\n        if (typeof o != "string" && (l = o.args, o.command && (o = o.command)), (o === "insertstring" || o === fm || o === $c) && i.pushEmacsMark(), !(typeof o == "string" && (o = Ss.commands[o], !o))) {\n          !o.readOnly && !o.keepLastCommand && (s.lastCommand = null);\n          var c = s.count || 1;\n          return s.count && (s.count = 0), { command: o, args: l, count: c };\n        }\n      }\n    }\n  }\n  showCommandLine(e) {\n    console.error("TODO");\n  }\n  updateMarksOnChange(e) {\n    this.$emacsMark && (this.$emacsMark = this.updateMark(this.$emacsMark, e)), this.$emacsMarkRing = this.$emacsMarkRing.map((n) => this.updateMark(n, e)).filter(Boolean);\n  }\n  updateMark(e, n) {\n    if (e) {\n      var r = e.map(function(i) {\n        return n.mapPos(i, 1, nn.TrackDel);\n      }).filter((i) => i != null);\n      return r.length == 0 ? null : r;\n    }\n  }\n  emacsMark() {\n    return this.$emacsMark;\n  }\n  setEmacsMark(e) {\n    this.$emacsMark = e;\n  }\n  pushEmacsMark(e, n) {\n    var r = this.$emacsMark;\n    r && tb(this.$emacsMarkRing, r), !e || n ? this.setEmacsMark(e) : tb(this.$emacsMarkRing, e);\n  }\n  popEmacsMark() {\n    var e = this.emacsMark();\n    return e ? (this.setEmacsMark(null), e) : this.$emacsMarkRing.pop();\n  }\n  getLastEmacsMark() {\n    return this.$emacsMark || this.$emacsMarkRing.slice(-1)[0];\n  }\n  getCopyText() {\n    var e = this.view.state;\n    return e.selection.ranges.map((n) => e.sliceDoc(n.from, n.to)).join(`\n`);\n  }\n  clearSelection() {\n    var e = this.view, n = e.state.selection, r = !n.ranges.some((s) => s.from != s.to);\n    if (r)\n      return !1;\n    var i = n.ranges.map((s) => ne.range(s.head, s.head));\n    return e.dispatch({\n      selection: ne.create(i, n.mainIndex)\n    }), !0;\n  }\n  onPaste(e) {\n    var n = this.view, r = n.state.selection, i;\n    if (r.ranges.length > 1) {\n      var s = e.split(`\n`);\n      s.length == r.ranges.length && (i = s);\n    }\n    var a = 0, o = n.state.changeByRange((l) => {\n      var c = i ? i[a] : e;\n      return a++, {\n        changes: { from: l.from, to: l.to, insert: c },\n        range: ne.cursor(l.from + c.length)\n      };\n    });\n    n.dispatch(o);\n  }\n  selectionToEmacsMark() {\n    var e = this.view.state.selection;\n    return e.ranges.map((n) => n.head);\n  }\n}\nSs.commands = {};\nfunction tb(t, e) {\n  t.length && t[t.length - 1] + "" == e + "" || t.push(e);\n}\nfunction _j(t) {\n  var e = t.Pos;\n  function n(p, d, g) {\n    if (d.line === g.line && d.ch >= g.ch - 1) {\n      var b = p.getLine(d.line), x = b.charCodeAt(d.ch);\n      55296 <= x && x <= 55551 && (g.ch += 1);\n    }\n    return { start: d, end: g };\n  }\n  var r = [\n    // Key to key mapping. This goes first to make it possible to override\n    // existing mappings.\n    { keys: "<Left>", type: "keyToKey", toKeys: "h" },\n    { keys: "<Right>", type: "keyToKey", toKeys: "l" },\n    { keys: "<Up>", type: "keyToKey", toKeys: "k" },\n    { keys: "<Down>", type: "keyToKey", toKeys: "j" },\n    { keys: "g<Up>", type: "keyToKey", toKeys: "gk" },\n    { keys: "g<Down>", type: "keyToKey", toKeys: "gj" },\n    { keys: "<Space>", type: "keyToKey", toKeys: "l" },\n    { keys: "<BS>", type: "keyToKey", toKeys: "h" },\n    { keys: "<Del>", type: "keyToKey", toKeys: "x" },\n    { keys: "<C-Space>", type: "keyToKey", toKeys: "W" },\n    { keys: "<C-BS>", type: "keyToKey", toKeys: "B" },\n    { keys: "<S-Space>", type: "keyToKey", toKeys: "w" },\n    { keys: "<S-BS>", type: "keyToKey", toKeys: "b" },\n    { keys: "<C-n>", type: "keyToKey", toKeys: "j" },\n    { keys: "<C-p>", type: "keyToKey", toKeys: "k" },\n    { keys: "<C-[>", type: "keyToKey", toKeys: "<Esc>" },\n    { keys: "<C-c>", type: "keyToKey", toKeys: "<Esc>" },\n    { keys: "<C-[>", type: "keyToKey", toKeys: "<Esc>", context: "insert" },\n    { keys: "<C-c>", type: "keyToKey", toKeys: "<Esc>", context: "insert" },\n    { keys: "<C-Esc>", type: "keyToKey", toKeys: "<Esc>" },\n    // ipad keyboard sends C-Esc instead of C-[\n    { keys: "<C-Esc>", type: "keyToKey", toKeys: "<Esc>", context: "insert" },\n    { keys: "s", type: "keyToKey", toKeys: "cl", context: "normal" },\n    { keys: "s", type: "keyToKey", toKeys: "c", context: "visual" },\n    { keys: "S", type: "keyToKey", toKeys: "cc", context: "normal" },\n    { keys: "S", type: "keyToKey", toKeys: "VdO", context: "visual" },\n    { keys: "<Home>", type: "keyToKey", toKeys: "0" },\n    { keys: "<End>", type: "keyToKey", toKeys: "$" },\n    { keys: "<PageUp>", type: "keyToKey", toKeys: "<C-b>" },\n    { keys: "<PageDown>", type: "keyToKey", toKeys: "<C-f>" },\n    { keys: "<CR>", type: "keyToKey", toKeys: "j^", context: "normal" },\n    { keys: "<Ins>", type: "keyToKey", toKeys: "i", context: "normal" },\n    { keys: "<Ins>", type: "action", action: "toggleOverwrite", context: "insert" },\n    // Motions\n    { keys: "H", type: "motion", motion: "moveToTopLine", motionArgs: { linewise: !0, toJumplist: !0 } },\n    { keys: "M", type: "motion", motion: "moveToMiddleLine", motionArgs: { linewise: !0, toJumplist: !0 } },\n    { keys: "L", type: "motion", motion: "moveToBottomLine", motionArgs: { linewise: !0, toJumplist: !0 } },\n    { keys: "h", type: "motion", motion: "moveByCharacters", motionArgs: { forward: !1 } },\n    { keys: "l", type: "motion", motion: "moveByCharacters", motionArgs: { forward: !0 } },\n    { keys: "j", type: "motion", motion: "moveByLines", motionArgs: { forward: !0, linewise: !0 } },\n    { keys: "k", type: "motion", motion: "moveByLines", motionArgs: { forward: !1, linewise: !0 } },\n    { keys: "gj", type: "motion", motion: "moveByDisplayLines", motionArgs: { forward: !0 } },\n    { keys: "gk", type: "motion", motion: "moveByDisplayLines", motionArgs: { forward: !1 } },\n    { keys: "w", type: "motion", motion: "moveByWords", motionArgs: { forward: !0, wordEnd: !1 } },\n    { keys: "W", type: "motion", motion: "moveByWords", motionArgs: { forward: !0, wordEnd: !1, bigWord: !0 } },\n    { keys: "e", type: "motion", motion: "moveByWords", motionArgs: { forward: !0, wordEnd: !0, inclusive: !0 } },\n    { keys: "E", type: "motion", motion: "moveByWords", motionArgs: { forward: !0, wordEnd: !0, bigWord: !0, inclusive: !0 } },\n    { keys: "b", type: "motion", motion: "moveByWords", motionArgs: { forward: !1, wordEnd: !1 } },\n    { keys: "B", type: "motion", motion: "moveByWords", motionArgs: { forward: !1, wordEnd: !1, bigWord: !0 } },\n    { keys: "ge", type: "motion", motion: "moveByWords", motionArgs: { forward: !1, wordEnd: !0, inclusive: !0 } },\n    { keys: "gE", type: "motion", motion: "moveByWords", motionArgs: { forward: !1, wordEnd: !0, bigWord: !0, inclusive: !0 } },\n    { keys: "{", type: "motion", motion: "moveByParagraph", motionArgs: { forward: !1, toJumplist: !0 } },\n    { keys: "}", type: "motion", motion: "moveByParagraph", motionArgs: { forward: !0, toJumplist: !0 } },\n    { keys: "(", type: "motion", motion: "moveBySentence", motionArgs: { forward: !1 } },\n    { keys: ")", type: "motion", motion: "moveBySentence", motionArgs: { forward: !0 } },\n    { keys: "<C-f>", type: "motion", motion: "moveByPage", motionArgs: { forward: !0 } },\n    { keys: "<C-b>", type: "motion", motion: "moveByPage", motionArgs: { forward: !1 } },\n    { keys: "<C-d>", type: "motion", motion: "moveByScroll", motionArgs: { forward: !0, explicitRepeat: !0 } },\n    { keys: "<C-u>", type: "motion", motion: "moveByScroll", motionArgs: { forward: !1, explicitRepeat: !0 } },\n    { keys: "gg", type: "motion", motion: "moveToLineOrEdgeOfDocument", motionArgs: { forward: !1, explicitRepeat: !0, linewise: !0, toJumplist: !0 } },\n    { keys: "G", type: "motion", motion: "moveToLineOrEdgeOfDocument", motionArgs: { forward: !0, explicitRepeat: !0, linewise: !0, toJumplist: !0 } },\n    { keys: "g$", type: "motion", motion: "moveToEndOfDisplayLine" },\n    { keys: "g^", type: "motion", motion: "moveToStartOfDisplayLine" },\n    { keys: "g0", type: "motion", motion: "moveToStartOfDisplayLine" },\n    { keys: "0", type: "motion", motion: "moveToStartOfLine" },\n    { keys: "^", type: "motion", motion: "moveToFirstNonWhiteSpaceCharacter" },\n    { keys: "+", type: "motion", motion: "moveByLines", motionArgs: { forward: !0, toFirstChar: !0 } },\n    { keys: "-", type: "motion", motion: "moveByLines", motionArgs: { forward: !1, toFirstChar: !0 } },\n    { keys: "_", type: "motion", motion: "moveByLines", motionArgs: { forward: !0, toFirstChar: !0, repeatOffset: -1 } },\n    { keys: "$", type: "motion", motion: "moveToEol", motionArgs: { inclusive: !0 } },\n    { keys: "%", type: "motion", motion: "moveToMatchedSymbol", motionArgs: { inclusive: !0, toJumplist: !0 } },\n    { keys: "f<character>", type: "motion", motion: "moveToCharacter", motionArgs: { forward: !0, inclusive: !0 } },\n    { keys: "F<character>", type: "motion", motion: "moveToCharacter", motionArgs: { forward: !1 } },\n    { keys: "t<character>", type: "motion", motion: "moveTillCharacter", motionArgs: { forward: !0, inclusive: !0 } },\n    { keys: "T<character>", type: "motion", motion: "moveTillCharacter", motionArgs: { forward: !1 } },\n    { keys: ";", type: "motion", motion: "repeatLastCharacterSearch", motionArgs: { forward: !0 } },\n    { keys: ",", type: "motion", motion: "repeatLastCharacterSearch", motionArgs: { forward: !1 } },\n    { keys: "\'<register>", type: "motion", motion: "goToMark", motionArgs: { toJumplist: !0, linewise: !0 } },\n    { keys: "`<register>", type: "motion", motion: "goToMark", motionArgs: { toJumplist: !0 } },\n    { keys: "]`", type: "motion", motion: "jumpToMark", motionArgs: { forward: !0 } },\n    { keys: "[`", type: "motion", motion: "jumpToMark", motionArgs: { forward: !1 } },\n    { keys: "]\'", type: "motion", motion: "jumpToMark", motionArgs: { forward: !0, linewise: !0 } },\n    { keys: "[\'", type: "motion", motion: "jumpToMark", motionArgs: { forward: !1, linewise: !0 } },\n    // the next two aren\'t motions but must come before more general motion declarations\n    { keys: "]p", type: "action", action: "paste", isEdit: !0, actionArgs: { after: !0, isEdit: !0, matchIndent: !0 } },\n    { keys: "[p", type: "action", action: "paste", isEdit: !0, actionArgs: { after: !1, isEdit: !0, matchIndent: !0 } },\n    { keys: "]<character>", type: "motion", motion: "moveToSymbol", motionArgs: { forward: !0, toJumplist: !0 } },\n    { keys: "[<character>", type: "motion", motion: "moveToSymbol", motionArgs: { forward: !1, toJumplist: !0 } },\n    { keys: "|", type: "motion", motion: "moveToColumn" },\n    { keys: "o", type: "motion", motion: "moveToOtherHighlightedEnd", context: "visual" },\n    { keys: "O", type: "motion", motion: "moveToOtherHighlightedEnd", motionArgs: { sameLine: !0 }, context: "visual" },\n    // Operators\n    { keys: "d", type: "operator", operator: "delete" },\n    { keys: "y", type: "operator", operator: "yank" },\n    { keys: "c", type: "operator", operator: "change" },\n    { keys: "=", type: "operator", operator: "indentAuto" },\n    { keys: ">", type: "operator", operator: "indent", operatorArgs: { indentRight: !0 } },\n    { keys: "<", type: "operator", operator: "indent", operatorArgs: { indentRight: !1 } },\n    { keys: "g~", type: "operator", operator: "changeCase" },\n    { keys: "gu", type: "operator", operator: "changeCase", operatorArgs: { toLower: !0 }, isEdit: !0 },\n    { keys: "gU", type: "operator", operator: "changeCase", operatorArgs: { toLower: !1 }, isEdit: !0 },\n    { keys: "n", type: "motion", motion: "findNext", motionArgs: { forward: !0, toJumplist: !0 } },\n    { keys: "N", type: "motion", motion: "findNext", motionArgs: { forward: !1, toJumplist: !0 } },\n    { keys: "gn", type: "motion", motion: "findAndSelectNextInclusive", motionArgs: { forward: !0 } },\n    { keys: "gN", type: "motion", motion: "findAndSelectNextInclusive", motionArgs: { forward: !1 } },\n    { keys: "gq", type: "operator", operator: "hardWrap" },\n    { keys: "gw", type: "operator", operator: "hardWrap", operatorArgs: { keepCursor: !0 } },\n    // Operator-Motion dual commands\n    { keys: "x", type: "operatorMotion", operator: "delete", motion: "moveByCharacters", motionArgs: { forward: !0 }, operatorMotionArgs: { visualLine: !1 } },\n    { keys: "X", type: "operatorMotion", operator: "delete", motion: "moveByCharacters", motionArgs: { forward: !1 }, operatorMotionArgs: { visualLine: !0 } },\n    { keys: "D", type: "operatorMotion", operator: "delete", motion: "moveToEol", motionArgs: { inclusive: !0 }, context: "normal" },\n    { keys: "D", type: "operator", operator: "delete", operatorArgs: { linewise: !0 }, context: "visual" },\n    { keys: "Y", type: "operatorMotion", operator: "yank", motion: "expandToLine", motionArgs: { linewise: !0 }, context: "normal" },\n    { keys: "Y", type: "operator", operator: "yank", operatorArgs: { linewise: !0 }, context: "visual" },\n    { keys: "C", type: "operatorMotion", operator: "change", motion: "moveToEol", motionArgs: { inclusive: !0 }, context: "normal" },\n    { keys: "C", type: "operator", operator: "change", operatorArgs: { linewise: !0 }, context: "visual" },\n    { keys: "~", type: "operatorMotion", operator: "changeCase", motion: "moveByCharacters", motionArgs: { forward: !0 }, operatorArgs: { shouldMoveCursor: !0 }, context: "normal" },\n    { keys: "~", type: "operator", operator: "changeCase", context: "visual" },\n    { keys: "<C-u>", type: "operatorMotion", operator: "delete", motion: "moveToStartOfLine", context: "insert" },\n    { keys: "<C-w>", type: "operatorMotion", operator: "delete", motion: "moveByWords", motionArgs: { forward: !1, wordEnd: !1 }, context: "insert" },\n    //ignore C-w in normal mode\n    { keys: "<C-w>", type: "idle", context: "normal" },\n    // Actions\n    { keys: "<C-i>", type: "action", action: "jumpListWalk", actionArgs: { forward: !0 } },\n    { keys: "<C-o>", type: "action", action: "jumpListWalk", actionArgs: { forward: !1 } },\n    { keys: "<C-e>", type: "action", action: "scroll", actionArgs: { forward: !0, linewise: !0 } },\n    { keys: "<C-y>", type: "action", action: "scroll", actionArgs: { forward: !1, linewise: !0 } },\n    { keys: "a", type: "action", action: "enterInsertMode", isEdit: !0, actionArgs: { insertAt: "charAfter" }, context: "normal" },\n    { keys: "A", type: "action", action: "enterInsertMode", isEdit: !0, actionArgs: { insertAt: "eol" }, context: "normal" },\n    { keys: "A", type: "action", action: "enterInsertMode", isEdit: !0, actionArgs: { insertAt: "endOfSelectedArea" }, context: "visual" },\n    { keys: "i", type: "action", action: "enterInsertMode", isEdit: !0, actionArgs: { insertAt: "inplace" }, context: "normal" },\n    { keys: "gi", type: "action", action: "enterInsertMode", isEdit: !0, actionArgs: { insertAt: "lastEdit" }, context: "normal" },\n    { keys: "I", type: "action", action: "enterInsertMode", isEdit: !0, actionArgs: { insertAt: "firstNonBlank" }, context: "normal" },\n    { keys: "gI", type: "action", action: "enterInsertMode", isEdit: !0, actionArgs: { insertAt: "bol" }, context: "normal" },\n    { keys: "I", type: "action", action: "enterInsertMode", isEdit: !0, actionArgs: { insertAt: "startOfSelectedArea" }, context: "visual" },\n    { keys: "o", type: "action", action: "newLineAndEnterInsertMode", isEdit: !0, interlaceInsertRepeat: !0, actionArgs: { after: !0 }, context: "normal" },\n    { keys: "O", type: "action", action: "newLineAndEnterInsertMode", isEdit: !0, interlaceInsertRepeat: !0, actionArgs: { after: !1 }, context: "normal" },\n    { keys: "v", type: "action", action: "toggleVisualMode" },\n    { keys: "V", type: "action", action: "toggleVisualMode", actionArgs: { linewise: !0 } },\n    { keys: "<C-v>", type: "action", action: "toggleVisualMode", actionArgs: { blockwise: !0 } },\n    { keys: "<C-q>", type: "action", action: "toggleVisualMode", actionArgs: { blockwise: !0 } },\n    { keys: "gv", type: "action", action: "reselectLastSelection" },\n    { keys: "J", type: "action", action: "joinLines", isEdit: !0 },\n    { keys: "gJ", type: "action", action: "joinLines", actionArgs: { keepSpaces: !0 }, isEdit: !0 },\n    { keys: "p", type: "action", action: "paste", isEdit: !0, actionArgs: { after: !0, isEdit: !0 } },\n    { keys: "P", type: "action", action: "paste", isEdit: !0, actionArgs: { after: !1, isEdit: !0 } },\n    { keys: "r<character>", type: "action", action: "replace", isEdit: !0 },\n    { keys: "@<register>", type: "action", action: "replayMacro" },\n    { keys: "q<register>", type: "action", action: "enterMacroRecordMode" },\n    // Handle Replace-mode as a special case of insert mode.\n    { keys: "R", type: "action", action: "enterInsertMode", isEdit: !0, actionArgs: { replace: !0 }, context: "normal" },\n    { keys: "R", type: "operator", operator: "change", operatorArgs: { linewise: !0, fullLine: !0 }, context: "visual", exitVisualBlock: !0 },\n    { keys: "u", type: "action", action: "undo", context: "normal" },\n    { keys: "u", type: "operator", operator: "changeCase", operatorArgs: { toLower: !0 }, context: "visual", isEdit: !0 },\n    { keys: "U", type: "operator", operator: "changeCase", operatorArgs: { toLower: !1 }, context: "visual", isEdit: !0 },\n    { keys: "<C-r>", type: "action", action: "redo" },\n    { keys: "m<register>", type: "action", action: "setMark" },\n    { keys: \'"<register>\', type: "action", action: "setRegister" },\n    { keys: "<C-r><register>", type: "action", action: "insertRegister", context: "insert", isEdit: !0 },\n    { keys: "<C-o>", type: "action", action: "oneNormalCommand", context: "insert" },\n    { keys: "zz", type: "action", action: "scrollToCursor", actionArgs: { position: "center" } },\n    { keys: "z.", type: "action", action: "scrollToCursor", actionArgs: { position: "center" }, motion: "moveToFirstNonWhiteSpaceCharacter" },\n    { keys: "zt", type: "action", action: "scrollToCursor", actionArgs: { position: "top" } },\n    { keys: "z<CR>", type: "action", action: "scrollToCursor", actionArgs: { position: "top" }, motion: "moveToFirstNonWhiteSpaceCharacter" },\n    { keys: "zb", type: "action", action: "scrollToCursor", actionArgs: { position: "bottom" } },\n    { keys: "z-", type: "action", action: "scrollToCursor", actionArgs: { position: "bottom" }, motion: "moveToFirstNonWhiteSpaceCharacter" },\n    { keys: ".", type: "action", action: "repeatLastEdit" },\n    { keys: "<C-a>", type: "action", action: "incrementNumberToken", isEdit: !0, actionArgs: { increase: !0, backtrack: !1 } },\n    { keys: "<C-x>", type: "action", action: "incrementNumberToken", isEdit: !0, actionArgs: { increase: !1, backtrack: !1 } },\n    { keys: "<C-t>", type: "action", action: "indent", actionArgs: { indentRight: !0 }, context: "insert" },\n    { keys: "<C-d>", type: "action", action: "indent", actionArgs: { indentRight: !1 }, context: "insert" },\n    // Text object motions\n    { keys: "a<register>", type: "motion", motion: "textObjectManipulation" },\n    { keys: "i<register>", type: "motion", motion: "textObjectManipulation", motionArgs: { textObjectInner: !0 } },\n    // Search\n    { keys: "/", type: "search", searchArgs: { forward: !0, querySrc: "prompt", toJumplist: !0 } },\n    { keys: "?", type: "search", searchArgs: { forward: !1, querySrc: "prompt", toJumplist: !0 } },\n    { keys: "*", type: "search", searchArgs: { forward: !0, querySrc: "wordUnderCursor", wholeWordOnly: !0, toJumplist: !0 } },\n    { keys: "#", type: "search", searchArgs: { forward: !1, querySrc: "wordUnderCursor", wholeWordOnly: !0, toJumplist: !0 } },\n    { keys: "g*", type: "search", searchArgs: { forward: !0, querySrc: "wordUnderCursor", toJumplist: !0 } },\n    { keys: "g#", type: "search", searchArgs: { forward: !1, querySrc: "wordUnderCursor", toJumplist: !0 } },\n    // Ex command\n    { keys: ":", type: "ex" }\n  ], i = r.length, s = [\n    { name: "colorscheme", shortName: "colo" },\n    { name: "map" },\n    { name: "imap", shortName: "im" },\n    { name: "nmap", shortName: "nm" },\n    { name: "vmap", shortName: "vm" },\n    { name: "omap", shortName: "om" },\n    { name: "noremap", shortName: "no" },\n    { name: "nnoremap", shortName: "nn" },\n    { name: "vnoremap", shortName: "vn" },\n    { name: "inoremap", shortName: "ino" },\n    { name: "onoremap", shortName: "ono" },\n    { name: "unmap" },\n    { name: "mapclear", shortName: "mapc" },\n    { name: "nmapclear", shortName: "nmapc" },\n    { name: "vmapclear", shortName: "vmapc" },\n    { name: "imapclear", shortName: "imapc" },\n    { name: "omapclear", shortName: "omapc" },\n    { name: "write", shortName: "w" },\n    { name: "undo", shortName: "u" },\n    { name: "redo", shortName: "red" },\n    { name: "set", shortName: "se" },\n    { name: "setlocal", shortName: "setl" },\n    { name: "setglobal", shortName: "setg" },\n    { name: "sort", shortName: "sor" },\n    { name: "substitute", shortName: "s", possiblyAsync: !0 },\n    { name: "startinsert", shortName: "start" },\n    { name: "nohlsearch", shortName: "noh" },\n    { name: "yank", shortName: "y" },\n    { name: "delmarks", shortName: "delm" },\n    { name: "registers", shortName: "reg", excludeFromCommandHistory: !0 },\n    { name: "vglobal", shortName: "v" },\n    { name: "delete", shortName: "d" },\n    { name: "join", shortName: "j" },\n    { name: "normal", shortName: "norm" },\n    { name: "global", shortName: "g" }\n  ], a = fn("");\n  function o(p) {\n    p.setOption("disableInput", !0), p.setOption("showCursorWhenSelecting", !1), t.signal(p, "vim-mode-change", { mode: "normal" }), p.on("cursorActivity", _e), Ee(p), t.on(p.getInputField(), "paste", c(p));\n  }\n  function l(p) {\n    p.setOption("disableInput", !1), p.off("cursorActivity", _e), t.off(p.getInputField(), "paste", c(p)), p.state.vim = null, ds && clearTimeout(ds);\n  }\n  function c(p) {\n    var d = p.state.vim;\n    return d.onPasteFn || (d.onPasteFn = function() {\n      d.insertMode || (p.setCursor(Xe(p.getCursor(), 0, 1)), qe.enterInsertMode(p, {}, d));\n    }), d.onPasteFn;\n  }\n  var h = /[\\d]/, f = [t.isWordChar, function(p) {\n    return p && !t.isWordChar(p) && !/\\s/.test(p);\n  }], m = [function(p) {\n    return /\\S/.test(p);\n  }], y = ["<", ">"], v = ["-", \'"\', ".", ":", "_", "/", "+"], C = /^\\w$/, S;\n  try {\n    S = new RegExp("^[\\\\p{Lu}]$", "u");\n  } catch {\n    S = /^[A-Z]$/;\n  }\n  function M(p, d) {\n    return d >= p.firstLine() && d <= p.lastLine();\n  }\n  function $(p) {\n    return /^[a-z]$/.test(p);\n  }\n  function U(p) {\n    return "()[]{}".indexOf(p) != -1;\n  }\n  function R(p) {\n    return h.test(p);\n  }\n  function B(p) {\n    return S.test(p);\n  }\n  function Z(p) {\n    return /^\\s*$/.test(p);\n  }\n  function N(p) {\n    return ".?!".indexOf(p) != -1;\n  }\n  function q(p, d) {\n    for (var g = 0; g < d.length; g++)\n      if (d[g] == p)\n        return !0;\n    return !1;\n  }\n  var se = {};\n  function K(p, d, g, b, x) {\n    if (d === void 0 && !x)\n      throw Error("defaultValue is required unless callback is provided");\n    if (g || (g = "string"), se[p] = {\n      type: g,\n      defaultValue: d,\n      callback: x\n    }, b)\n      for (var w = 0; w < b.length; w++)\n        se[b[w]] = se[p];\n    d && ce(p, d);\n  }\n  function ce(p, d, g, b) {\n    var x = se[p];\n    b = b || {};\n    var w = b.scope;\n    if (!x)\n      return new Error("Unknown option: " + p);\n    if (x.type == "boolean") {\n      if (d && d !== !0)\n        return new Error("Invalid argument: " + p + "=" + d);\n      d !== !1 && (d = !0);\n    }\n    x.callback ? (w !== "local" && x.callback(d, void 0), w !== "global" && g && x.callback(d, g)) : (w !== "local" && (x.value = x.type == "boolean" ? !!d : d), w !== "global" && g && (g.state.vim.options[p] = { value: d }));\n  }\n  function H(p, d, g) {\n    var b = se[p];\n    g = g || {};\n    var x = g.scope;\n    if (!b)\n      return new Error("Unknown option: " + p);\n    if (b.callback) {\n      let w = d && b.callback(void 0, d);\n      return x !== "global" && w !== void 0 ? w : x !== "local" ? b.callback() : void 0;\n    } else\n      return (x !== "global" && d && d.state.vim.options[p] || x !== "local" && b || {}).value;\n  }\n  K("filetype", void 0, "string", ["ft"], function(p, d) {\n    if (d !== void 0)\n      if (p === void 0) {\n        let g = d.getOption("mode");\n        return g == "null" ? "" : g;\n      } else {\n        let g = p == "" ? "null" : p;\n        d.setOption("mode", g);\n      }\n  }), K("textwidth", 80, "number", ["tw"], function(p, d) {\n    if (d !== void 0)\n      if (p === void 0) {\n        var g = d.getOption("textwidth");\n        return g;\n      } else {\n        var b = Math.round(\n          /**@type {any}*/\n          p\n        );\n        b > 1 && d.setOption("textwidth", b);\n      }\n  });\n  var ie = function() {\n    var p = 100, d = -1, g = 0, b = 0, x = new Array(p);\n    function w(j, V, X) {\n      var Y = d % p, ee = x[Y];\n      function z(te) {\n        var ue = ++d % p, $e = x[ue];\n        $e && $e.clear(), x[ue] = j.setBookmark(te);\n      }\n      if (ee) {\n        var G = ee.find();\n        G && !Re(G, V) && z(V);\n      } else\n        z(V);\n      z(X), g = d, b = d - p + 1, b < 0 && (b = 0);\n    }\n    function E(j, V) {\n      d += V, d > g ? d = g : d < b && (d = b);\n      var X = x[(p + d) % p];\n      if (X && !X.find()) {\n        var Y = V > 0 ? 1 : -1, ee, z = j.getCursor();\n        do\n          if (d += Y, X = x[(p + d) % p], X && (ee = X.find()) && !Re(z, ee))\n            break;\n        while (d < g && d > b);\n      }\n      return X;\n    }\n    function Q(j, V) {\n      var X = d, Y = E(j, V);\n      return d = X, Y && Y.find();\n    }\n    return {\n      cachedCursor: void 0,\n      //used for # and * jumps\n      add: w,\n      find: Q,\n      move: E\n    };\n  }, fe = function(p) {\n    return p ? {\n      changes: p.changes,\n      expectCursorActivityForChange: p.expectCursorActivityForChange\n    } : {\n      // Change list\n      changes: [],\n      // Set to true on change, false on cursorActivity.\n      expectCursorActivityForChange: !1\n    };\n  };\n  class De {\n    constructor() {\n      this.latestRegister = void 0, this.isPlaying = !1, this.isRecording = !1, this.replaySearchQueries = [], this.onRecordingDone = void 0, this.lastInsertModeChanges = fe();\n    }\n    exitMacroRecordMode() {\n      var d = re.macroModeState;\n      d.onRecordingDone && d.onRecordingDone(), d.onRecordingDone = void 0, d.isRecording = !1;\n    }\n    enterMacroRecordMode(d, g) {\n      var b = re.registerController.getRegister(g);\n      if (b) {\n        if (b.clear(), this.latestRegister = g, d.openDialog) {\n          var x = Jr("span", { class: "cm-vim-message" }, "recording @" + g);\n          this.onRecordingDone = d.openDialog(x, null, { bottom: !0 });\n        }\n        this.isRecording = !0;\n      }\n    }\n  }\n  function Ee(p) {\n    return p.state.vim || (p.state.vim = {\n      inputState: new yt(),\n      // Vim\'s input state that triggered the last edit, used to repeat\n      // motions and operators with \'.\'.\n      lastEditInputState: void 0,\n      // Vim\'s action command before the last edit, used to repeat actions\n      // with \'.\' and insert mode repeat.\n      lastEditActionCommand: void 0,\n      // When using jk for navigation, if you move from a longer line to a\n      // shorter line, the cursor may clip to the end of the shorter line.\n      // If j is pressed again and cursor goes to the next line, the\n      // cursor should go back to its horizontal position on the longer\n      // line if it can. This is to keep track of the horizontal position.\n      lastHPos: -1,\n      // Doing the same with screen-position for gj/gk\n      lastHSPos: -1,\n      // The last motion command run. Cleared if a non-motion command gets\n      // executed in between.\n      lastMotion: null,\n      marks: {},\n      insertMode: !1,\n      insertModeReturn: !1,\n      // Repeat count for changes made in insert mode, triggered by key\n      // sequences like 3,i. Only exists when insertMode is true.\n      insertModeRepeat: void 0,\n      visualMode: !1,\n      // If we are in visual line mode. No effect if visualMode is false.\n      visualLine: !1,\n      visualBlock: !1,\n      lastSelection: null,\n      lastPastedText: null,\n      sel: {},\n      // Buffer-local/window-local values of vim options.\n      options: {},\n      // Whether the next character should be interpreted literally\n      // Necassary for correct implementation of f<character>, r<character> etc.\n      // in terms of langmaps.\n      expectLiteralNext: !1\n    }), p.state.vim;\n  }\n  var re;\n  function Ce() {\n    re = {\n      // The current search query.\n      searchQuery: null,\n      // Whether we are searching backwards.\n      searchIsReversed: !1,\n      // Replace part of the last substituted pattern\n      lastSubstituteReplacePart: void 0,\n      jumpList: ie(),\n      macroModeState: new De(),\n      // Recording latest f, t, F or T motion command.\n      lastCharacterSearch: { increment: 0, forward: !0, selectedCharacter: "" },\n      registerController: new tr({}),\n      // search history buffer\n      searchHistoryController: new dr(),\n      // ex Command history buffer\n      exCommandHistoryController: new dr()\n    };\n    for (var p in se) {\n      var d = se[p];\n      d.value = d.defaultValue;\n    }\n  }\n  var Le, xe = {\n    enterVimMode: o,\n    leaveVimMode: l,\n    buildKeyMap: function() {\n    },\n    // Testing hook, though it might be useful to expose the register\n    // controller anyway.\n    getRegisterController: function() {\n      return re.registerController;\n    },\n    // Testing hook.\n    resetVimGlobalState_: Ce,\n    // Testing hook.\n    getVimGlobalState_: function() {\n      return re;\n    },\n    // Testing hook.\n    maybeInitVimState_: Ee,\n    suppressErrorLogging: !1,\n    InsertModeKey: Is,\n    /**@type {(lhs: string, rhs: string, ctx: string) => void} */\n    map: function(p, d, g) {\n      we.map(p, d, g);\n    },\n    /**@type {(lhs: string, ctx: string) => any} */\n    unmap: function(p, d) {\n      return we.unmap(p, d);\n    },\n    // Non-recursive map function.\n    // NOTE: This will not create mappings to key maps that aren\'t present\n    // in the default key map. See TODO at bottom of function.\n    /**@type {(lhs: string, rhs: string, ctx: string) => void} */\n    noremap: function(p, d, g) {\n      we.map(p, d, g, !0);\n    },\n    // Remove all user-defined mappings for the provided context.\n    /**@arg {string} [ctx]} */\n    mapclear: function(p) {\n      var d = r.length, g = i, b = r.slice(0, d - g);\n      if (r = r.slice(d - g), p)\n        for (var x = b.length - 1; x >= 0; x--) {\n          var w = b[x];\n          if (p !== w.context)\n            if (w.context)\n              this._mapCommand(w);\n            else {\n              var E = ["normal", "insert", "visual"];\n              for (var Q in E)\n                if (E[Q] !== p) {\n                  var j = Object.assign({}, w);\n                  j.context = E[Q], this._mapCommand(j);\n                }\n            }\n        }\n    },\n    langmap: Bn,\n    vimKeyFromEvent: xt,\n    // TODO: Expose setOption and getOption as instance methods. Need to decide how to namespace\n    // them, or somehow make them work with the existing CodeMirror setOption/getOption API.\n    setOption: ce,\n    getOption: H,\n    defineOption: K,\n    /**@type {(name: string, prefix: string|undefined, func: ExFn) => void} */\n    defineEx: function(p, d, g) {\n      if (!d)\n        d = p;\n      else if (p.indexOf(d) !== 0)\n        throw new Error(\'(Vim.defineEx) "\' + d + \'" is not a prefix of "\' + p + \'", command not registered\');\n      ms[p] = g, we.commandMap_[d] = { name: p, shortName: d, type: "api" };\n    },\n    /**@type {(cm: CodeMirror, key: string, origin: string) => undefined | boolean} */\n    handleKey: function(p, d, g) {\n      var b = this.findKey(p, d, g);\n      if (typeof b == "function")\n        return b();\n    },\n    multiSelectHandleKey: ch,\n    /**\n     * This is the outermost function called by CodeMirror, after keys have\n     * been mapped to their Vim equivalents.\n     *\n     * Finds a command based on the key (and cached keys if there is a\n     * multi-key sequence). Returns `undefined` if no key is matched, a noop\n     * function if a partial match is found (multi-key), and a function to\n     * execute the bound command if a a key is matched. The function always\n     * returns true.\n     */\n    /**@type {(cm_: CodeMirror, key: string, origin?: string| undefined) => (() => boolean) | undefined} */\n    findKey: function(p, d, g) {\n      var b = Ee(p), x = (\n        /**@type {CodeMirrorV}*/\n        p\n      );\n      function w() {\n        var X = re.macroModeState;\n        if (X.isRecording) {\n          if (d == "q")\n            return X.exitMacroRecordMode(), kt(x), !0;\n          g != "mapping" && uh(X, d);\n        }\n      }\n      function E() {\n        if (d == "<Esc>") {\n          if (b.visualMode)\n            ge(x);\n          else if (b.insertMode)\n            ei(x);\n          else\n            return;\n          return kt(x), !0;\n        }\n      }\n      function Q() {\n        if (E())\n          return !0;\n        b.inputState.keyBuffer.push(d);\n        var X = b.inputState.keyBuffer.join(""), Y = d.length == 1, ee = Mn.matchCommand(X, r, b.inputState, "insert"), z = b.inputState.changeQueue;\n        if (ee.type == "none")\n          return kt(x), !1;\n        if (ee.type == "partial") {\n          if (ee.expectLiteralNext && (b.expectLiteralNext = !0), Le && window.clearTimeout(Le), Le = Y && window.setTimeout(\n            function() {\n              b.insertMode && b.inputState.keyBuffer.length && kt(x);\n            },\n            H("insertModeEscKeysTimeout")\n          ), Y) {\n            var G = x.listSelections();\n            (!z || z.removed.length != G.length) && (z = b.inputState.changeQueue = new Ot()), z.inserted += d;\n            for (var te = 0; te < G.length; te++) {\n              var ue = It(G[te].anchor, G[te].head), $e = ct(G[te].anchor, G[te].head), Be = x.getRange(ue, x.state.overwrite ? Xe($e, 0, 1) : $e);\n              z.removed[te] = (z.removed[te] || "") + Be;\n            }\n          }\n          return !Y;\n        }\n        if (b.expectLiteralNext = !1, Le && window.clearTimeout(Le), ee.command && z) {\n          for (var G = x.listSelections(), te = 0; te < G.length; te++) {\n            var Ve = G[te].head;\n            x.replaceRange(\n              z.removed[te] || "",\n              Xe(Ve, 0, -z.inserted.length),\n              Ve,\n              "+input"\n            );\n          }\n          re.macroModeState.lastInsertModeChanges.changes.pop();\n        }\n        return ee.command || kt(x), ee.command;\n      }\n      function j() {\n        if (w() || E())\n          return !0;\n        b.inputState.keyBuffer.push(d);\n        var X = b.inputState.keyBuffer.join("");\n        if (/^[1-9]\\d*$/.test(X))\n          return !0;\n        var Y = /^(\\d*)(.*)$/.exec(X);\n        if (!Y)\n          return kt(x), !1;\n        var ee = b.visualMode ? "visual" : "normal", z = Y[2] || Y[1];\n        b.inputState.operatorShortcut && b.inputState.operatorShortcut.slice(-1) == z && (z = b.inputState.operatorShortcut);\n        var G = Mn.matchCommand(z, r, b.inputState, ee);\n        return G.type == "none" ? (kt(x), !1) : G.type == "partial" ? (G.expectLiteralNext && (b.expectLiteralNext = !0), !0) : G.type == "clear" ? (kt(x), !0) : (b.expectLiteralNext = !1, b.inputState.keyBuffer.length = 0, Y = /^(\\d*)(.*)$/.exec(X), Y && Y[1] && Y[1] != "0" && b.inputState.pushRepeatDigit(Y[1]), G.command);\n      }\n      var V;\n      return b.insertMode ? V = Q() : V = j(), V === !1 ? !b.insertMode && d.length === 1 ? function() {\n        return !0;\n      } : void 0 : V === !0 ? function() {\n        return !0;\n      } : function() {\n        return x.operation(function() {\n          x.curOp.isVimOp = !0;\n          try {\n            V.type == "keyToKey" ? ut(x, V.toKeys, V) : Mn.processCommand(x, b, V);\n          } catch (X) {\n            throw x.state.vim = void 0, Ee(x), xe.suppressErrorLogging || console.log(X), X;\n          }\n          return !0;\n        });\n      };\n    },\n    handleEx: function(p, d) {\n      we.processCommand(p, d);\n    },\n    defineMotion: _r,\n    defineAction: Qt,\n    defineOperator: Yr,\n    mapCommand: rt,\n    _mapCommand: Ia,\n    defineRegister: er,\n    exitVisualMode: ge,\n    exitInsertMode: ei\n  }, je = [], he = !1, Pe;\n  function Pt(p) {\n    if (p[0] == "<") {\n      var d = p.toLowerCase().slice(1, -1), g = d.split("-");\n      if (d = g.pop() || "", d == "lt") p = "<";\n      else if (d == "space") p = " ";\n      else if (d == "cr") p = `\n`;\n      else if (He[d]) {\n        var b = Pe.value, x = {\n          key: He[d],\n          target: {\n            value: b,\n            selectionEnd: b.length,\n            selectionStart: b.length\n          }\n        };\n        Pe.onKeyDown && Pe.onKeyDown(x, Pe.value, E), Pe && Pe.onKeyUp && Pe.onKeyUp(x, Pe.value, E);\n        return;\n      }\n    }\n    if (p == `\n`) {\n      var w = Pe;\n      Pe = null, w.onClose && w.onClose(w.value);\n    } else\n      Pe.value = (Pe.value || "") + p;\n    function E(Q) {\n      typeof Q == "string" ? Pe.value = Q : Pe = null;\n    }\n  }\n  function ut(p, d, g) {\n    var b = he;\n    if (g) {\n      if (je.indexOf(g) != -1) return;\n      je.push(g), he = g.noremap != !1;\n    }\n    try {\n      for (var x = Ee(p), w = /<(?:[CSMA]-)*\\w+>|./gi, E; E = w.exec(d); ) {\n        var Q = E[0], j = x.insertMode;\n        if (Pe) {\n          Pt(Q);\n          continue;\n        }\n        var V = xe.handleKey(p, Q, "mapping");\n        if (!V && j && x.insertMode) {\n          if (Q[0] == "<") {\n            var X = Q.toLowerCase().slice(1, -1), Y = X.split("-");\n            if (X = Y.pop() || "", X == "lt") Q = "<";\n            else if (X == "space") Q = " ";\n            else if (X == "cr") Q = `\n`;\n            else if (He.hasOwnProperty(X)) {\n              Q = He[X], yl(p, Q);\n              continue;\n            } else\n              Q = Q[0], w.lastIndex = E.index + 1;\n          }\n          p.replaceSelection(Q);\n        }\n      }\n    } finally {\n      if (je.pop(), he = je.length ? b : !1, !je.length && Pe) {\n        var ee = Pe;\n        Pe = null, ps(p, ee);\n      }\n    }\n  }\n  var We = {\n    Return: "CR",\n    Backspace: "BS",\n    Delete: "Del",\n    Escape: "Esc",\n    Insert: "Ins",\n    ArrowLeft: "Left",\n    ArrowRight: "Right",\n    ArrowUp: "Up",\n    ArrowDown: "Down",\n    Enter: "CR",\n    " ": "Space"\n  }, Mt = {\n    Shift: 1,\n    Alt: 1,\n    Command: 1,\n    Control: 1,\n    CapsLock: 1,\n    AltGraph: 1,\n    Dead: 1,\n    Unidentified: 1\n  }, He = {};\n  "Left|Right|Up|Down|End|Home".split("|").concat(Object.keys(We)).forEach(function(p) {\n    He[(We[p] || "").toLowerCase()] = He[p.toLowerCase()] = p;\n  });\n  function xt(p, d) {\n    var g = p.key;\n    if (!Mt[g]) {\n      g.length > 1 && g[0] == "n" && (g = g.replace("Numpad", "")), g = We[g] || g;\n      var b = "";\n      if (p.ctrlKey && (b += "C-"), p.altKey && (b += "A-"), p.metaKey && (b += "M-"), t.isMac && p.altKey && !p.metaKey && !p.ctrlKey && (b = b.slice(2)), (b || g.length > 1) && p.shiftKey && (b += "S-"), d && !d.expectLiteralNext && g.length == 1) {\n        if (a.keymap && g in a.keymap)\n          (a.remapCtrl != !1 || !b) && (g = a.keymap[g]);\n        else if (g.charCodeAt(0) > 255) {\n          var x = p.code?.slice(-1) || "";\n          p.shiftKey || (x = x.toLowerCase()), x && (g = x);\n        }\n      }\n      return b += g, b.length > 1 && (b = "<" + b + ">"), b;\n    }\n  }\n  function Bn(p, d) {\n    a.string !== p && (a = fn(p)), a.remapCtrl = d;\n  }\n  function fn(p) {\n    let d = {};\n    if (!p) return { keymap: d, string: "" };\n    function g(b) {\n      return b.split(/\\\\?(.)/).filter(Boolean);\n    }\n    return p.split(/((?:[^\\\\,]|\\\\.)+),/).map((b) => {\n      if (!b) return;\n      const x = b.split(/((?:[^\\\\;]|\\\\.)+);/);\n      if (x.length == 3) {\n        const w = g(x[1]), E = g(x[2]);\n        if (w.length !== E.length) return;\n        for (let Q = 0; Q < w.length; ++Q) d[w[Q]] = E[Q];\n      } else if (x.length == 1) {\n        const w = g(b);\n        if (w.length % 2 !== 0) return;\n        for (let E = 0; E < w.length; E += 2) d[w[E]] = w[E + 1];\n      }\n    }), { keymap: d, string: p };\n  }\n  K("langmap", void 0, "string", ["lmap"], function(p, d) {\n    if (p === void 0)\n      return a.string;\n    Bn(p);\n  });\n  class yt {\n    constructor() {\n      this.prefixRepeat = [], this.motionRepeat = [], this.operator = null, this.operatorArgs = null, this.motion = null, this.motionArgs = null, this.keyBuffer = [], this.registerName = null, this.changeQueue = null;\n    }\n    pushRepeatDigit(d) {\n      this.operator ? this.motionRepeat = this.motionRepeat.concat(d) : this.prefixRepeat = this.prefixRepeat.concat(d);\n    }\n    getRepeat() {\n      var d = 0;\n      return (this.prefixRepeat.length > 0 || this.motionRepeat.length > 0) && (d = 1, this.prefixRepeat.length > 0 && (d *= parseInt(this.prefixRepeat.join(""), 10)), this.motionRepeat.length > 0 && (d *= parseInt(this.motionRepeat.join(""), 10))), d;\n    }\n  }\n  function kt(p, d) {\n    p.state.vim.inputState = new yt(), p.state.vim.expectLiteralNext = !1, t.signal(p, "vim-command-done", d);\n  }\n  function Ot() {\n    this.removed = [], this.inserted = "";\n  }\n  class Xt {\n    constructor(d, g, b) {\n      this.clear(), this.keyBuffer = [d || ""], this.insertModeChanges = [], this.searchQueries = [], this.linewise = !!g, this.blockwise = !!b;\n    }\n    setText(d, g, b) {\n      this.keyBuffer = [d || ""], this.linewise = !!g, this.blockwise = !!b;\n    }\n    pushText(d, g) {\n      g && (this.linewise || this.keyBuffer.push(`\n`), this.linewise = !0), this.keyBuffer.push(d);\n    }\n    pushInsertModeChanges(d) {\n      this.insertModeChanges.push(fe(d));\n    }\n    pushSearchQuery(d) {\n      this.searchQueries.push(d);\n    }\n    clear() {\n      this.keyBuffer = [], this.insertModeChanges = [], this.searchQueries = [], this.linewise = !1;\n    }\n    toString() {\n      return this.keyBuffer.join("");\n    }\n  }\n  function er(p, d) {\n    var g = re.registerController.registers;\n    if (!p || p.length != 1)\n      throw Error("Register name must be 1 character");\n    if (g[p])\n      throw Error("Register already defined " + p);\n    g[p] = d, v.push(p);\n  }\n  class tr {\n    /** @arg {Object<string, Register>} registers */\n    constructor(d) {\n      this.registers = d, this.unnamedRegister = d[\'"\'] = new Xt(), d["."] = new Xt(), d[":"] = new Xt(), d["/"] = new Xt(), d["+"] = new Xt();\n    }\n    pushText(d, g, b, x, w) {\n      if (d !== "_") {\n        x && b.charAt(b.length - 1) !== `\n` && (b += `\n`);\n        var E = this.isValidRegister(d) ? this.getRegister(d) : null;\n        if (!E) {\n          switch (g) {\n            case "yank":\n              this.registers[0] = new Xt(b, x, w);\n              break;\n            case "delete":\n            case "change":\n              b.indexOf(`\n`) == -1 ? this.registers["-"] = new Xt(b, x) : (this.shiftNumericRegisters_(), this.registers[1] = new Xt(b, x));\n              break;\n          }\n          this.unnamedRegister.setText(b, x, w);\n          return;\n        }\n        var Q = B(d);\n        Q ? E.pushText(b, x) : E.setText(b, x, w), d === "+" && navigator.clipboard.writeText(b), this.unnamedRegister.setText(E.toString(), x);\n      }\n    }\n    /**\n     * Gets the register named @name.  If one of @name doesn\'t already exist,\n     * create it.  If @name is invalid, return the unnamedRegister.\n     * @arg {string} [name]\n     */\n    getRegister(d) {\n      return this.isValidRegister(d) ? (d = d.toLowerCase(), this.registers[d] || (this.registers[d] = new Xt()), this.registers[d]) : this.unnamedRegister;\n    }\n    /**@type {{(name: any): name is string}} */\n    isValidRegister(d) {\n      return d && (q(d, v) || C.test(d));\n    }\n    shiftNumericRegisters_() {\n      for (var d = 9; d >= 2; d--)\n        this.registers[d] = this.getRegister("" + (d - 1));\n    }\n  }\n  class dr {\n    constructor() {\n      this.historyBuffer = [], this.iterator = 0, this.initialPrefix = null;\n    }\n    // the input argument here acts a user entered prefix for a small time\n    // until we start autocompletion in which case it is the autocompleted.\n    nextMatch(d, g) {\n      var b = this.historyBuffer, x = g ? -1 : 1;\n      this.initialPrefix === null && (this.initialPrefix = d);\n      for (var w = this.iterator + x; g ? w >= 0 : w < b.length; w += x)\n        for (var E = b[w], Q = 0; Q <= E.length; Q++)\n          if (this.initialPrefix == E.substring(0, Q))\n            return this.iterator = w, E;\n      if (w >= b.length)\n        return this.iterator = b.length, this.initialPrefix;\n      if (w < 0) return d;\n    }\n    pushInput(d) {\n      var g = this.historyBuffer.indexOf(d);\n      g > -1 && this.historyBuffer.splice(g, 1), d.length && this.historyBuffer.push(d);\n    }\n    reset() {\n      this.initialPrefix = null, this.iterator = this.historyBuffer.length;\n    }\n  }\n  var Mn = {\n    matchCommand: function(p, d, g, b) {\n      var x = Kr(p, d, b, g);\n      if (!x.full && !x.partial)\n        return { type: "none" };\n      if (!x.full && x.partial)\n        return {\n          type: "partial",\n          expectLiteralNext: x.partial.length == 1 && x.partial[0].keys.slice(-11) == "<character>"\n          // langmap literal logic\n        };\n      for (var w, E = 0; E < x.full.length; E++) {\n        var Q = x.full[E];\n        w || (w = Q);\n      }\n      if (w.keys.slice(-11) == "<character>" || w.keys.slice(-10) == "<register>") {\n        var j = Cn(p);\n        if (!j || j.length > 1) return { type: "clear" };\n        g.selectedCharacter = j;\n      }\n      return { type: "full", command: w };\n    },\n    /**\n     * @arg {CodeMirrorV} cm\n     * @arg {vimState} vim\n     * @arg {vimKey} command\n     */\n    processCommand: function(p, d, g) {\n      switch (d.inputState.repeatOverride = g.repeatOverride, g.type) {\n        case "motion":\n          this.processMotion(p, d, g);\n          break;\n        case "operator":\n          this.processOperator(p, d, g);\n          break;\n        case "operatorMotion":\n          this.processOperatorMotion(p, d, g);\n          break;\n        case "action":\n          this.processAction(p, d, g);\n          break;\n        case "search":\n          this.processSearch(p, d, g);\n          break;\n        case "ex":\n        case "keyToEx":\n          this.processEx(p, d, g);\n          break;\n      }\n    },\n    /**\n     * @arg {CodeMirrorV} cm\n     * @arg {vimState} vim\n     * @arg {import("./types").motionCommand|import("./types").operatorMotionCommand} command\n     */\n    processMotion: function(p, d, g) {\n      d.inputState.motion = g.motion, d.inputState.motionArgs = /**@type {MotionArgs}*/\n      wt(g.motionArgs), this.evalInput(p, d);\n    },\n    /**\n     * @arg {CodeMirrorV} cm\n     * @arg {vimState} vim\n     * @arg {import("./types").operatorCommand|import("./types").operatorMotionCommand} command\n     */\n    processOperator: function(p, d, g) {\n      var b = d.inputState;\n      if (b.operator)\n        if (b.operator == g.operator) {\n          b.motion = "expandToLine", b.motionArgs = { linewise: !0, repeat: 1 }, this.evalInput(p, d);\n          return;\n        } else\n          kt(p);\n      b.operator = g.operator, b.operatorArgs = wt(g.operatorArgs), g.keys.length > 1 && (b.operatorShortcut = g.keys), g.exitVisualBlock && (d.visualBlock = !1, J(p)), d.visualMode && this.evalInput(p, d);\n    },\n    /**\n     * @arg {CodeMirrorV} cm\n     * @arg {vimState} vim\n     * @arg {import("./types").operatorMotionCommand} command\n     */\n    processOperatorMotion: function(p, d, g) {\n      var b = d.visualMode, x = wt(g.operatorMotionArgs);\n      x && b && x.visualLine && (d.visualLine = !0), this.processOperator(p, d, g), b || this.processMotion(p, d, g);\n    },\n    /**\n     * @arg {CodeMirrorV} cm\n     * @arg {vimState} vim\n     * @arg {import("./types").actionCommand} command\n     */\n    processAction: function(p, d, g) {\n      var b = d.inputState, x = b.getRepeat(), w = !!x, E = (\n        /**@type {ActionArgs}*/\n        wt(g.actionArgs) || { repeat: 1 }\n      );\n      b.selectedCharacter && (E.selectedCharacter = b.selectedCharacter), g.operator && this.processOperator(p, d, g), g.motion && this.processMotion(p, d, g), (g.motion || g.operator) && this.evalInput(p, d), E.repeat = x || 1, E.repeatIsExplicit = w, E.registerName = b.registerName, kt(p), d.lastMotion = null, g.isEdit && this.recordLastEdit(d, b, g), qe[g.action](p, E, d);\n    },\n    /** @arg {CodeMirrorV} cm @arg {vimState} vim @arg {import("./types").searchCommand} command*/\n    processSearch: function(p, d, g) {\n      if (!p.getSearchCursor)\n        return;\n      var b = g.searchArgs.forward, x = g.searchArgs.wholeWordOnly;\n      rr(p).setReversed(!b);\n      var w = b ? "/" : "?", E = rr(p).getQuery(), Q = p.getScrollInfo();\n      function j(te, ue, $e) {\n        re.searchHistoryController.pushInput(te), re.searchHistoryController.reset();\n        try {\n          fs(p, te, ue, $e);\n        } catch {\n          gt(p, "Invalid regex: " + te), kt(p);\n          return;\n        }\n        Mn.processMotion(p, d, {\n          keys: "",\n          type: "motion",\n          motion: "findNext",\n          motionArgs: { forward: !0, toJumplist: g.searchArgs.toJumplist }\n        });\n      }\n      function V(te) {\n        p.scrollTo(Q.left, Q.top), j(\n          te,\n          !0,\n          !0\n          /** smartCase */\n        );\n        var ue = re.macroModeState;\n        ue.isRecording && ml(ue, te);\n      }\n      function X(te, ue, $e) {\n        var Be = xt(te), Ve, bt;\n        Be == "<Up>" || Be == "<Down>" ? (Ve = Be == "<Up>", bt = te.target ? te.target.selectionEnd : 0, ue = re.searchHistoryController.nextMatch(ue, Ve) || "", $e(ue), bt && te.target && (te.target.selectionEnd = te.target.selectionStart = Math.min(bt, te.target.value.length))) : Be && Be != "<Left>" && Be != "<Right>" && re.searchHistoryController.reset();\n        var dn;\n        try {\n          dn = fs(\n            p,\n            ue,\n            !0,\n            !0\n            /** smartCase */\n          );\n        } catch {\n        }\n        dn ? p.scrollIntoView(dl(p, !b, dn), 30) : (La(p), p.scrollTo(Q.left, Q.top));\n      }\n      function Y(te, ue, $e) {\n        var Be = xt(te);\n        Be == "<Esc>" || Be == "<C-c>" || Be == "<C-[>" || Be == "<BS>" && ue == "" ? (re.searchHistoryController.pushInput(ue), re.searchHistoryController.reset(), fs(p, E), La(p), p.scrollTo(Q.left, Q.top), t.e_stop(te), kt(p), $e(), p.focus()) : Be == "<Up>" || Be == "<Down>" ? t.e_stop(te) : Be == "<C-u>" && (t.e_stop(te), $e(""));\n      }\n      switch (g.searchArgs.querySrc) {\n        case "prompt":\n          var ee = re.macroModeState;\n          if (ee.isPlaying) {\n            let ue = ee.replaySearchQueries.shift();\n            j(\n              ue,\n              !0,\n              !1\n              /** smartCase */\n            );\n          } else\n            ps(p, {\n              onClose: V,\n              prefix: w,\n              desc: "(JavaScript regexp)",\n              onKeyUp: X,\n              onKeyDown: Y\n            });\n          break;\n        case "wordUnderCursor":\n          var z = mr(p, { noSymbol: !0 }), G = !0;\n          if (z || (z = mr(p, { noSymbol: !1 }), G = !1), !z) {\n            gt(p, "No word under cursor"), kt(p);\n            return;\n          }\n          let te = p.getLine(z.start.line).substring(\n            z.start.ch,\n            z.end.ch\n          );\n          G && x ? te = "\\\\b" + te + "\\\\b" : te = Ln(te), re.jumpList.cachedCursor = p.getCursor(), p.setCursor(z.start), j(\n            te,\n            !0,\n            !1\n            /** smartCase */\n          );\n          break;\n      }\n    },\n    /**\n     * @arg {CodeMirrorV} cm\n     * @arg {vimState} vim\n     * @arg {import("./types").exCommand | import("./types").keyToExCommand} command\n     */\n    processEx: function(p, d, g) {\n      function b(w) {\n        re.exCommandHistoryController.pushInput(w), re.exCommandHistoryController.reset(), we.processCommand(p, w), p.state.vim && kt(p);\n      }\n      function x(w, E, Q) {\n        var j = xt(w), V, X;\n        (j == "<Esc>" || j == "<C-c>" || j == "<C-[>" || j == "<BS>" && E == "") && (re.exCommandHistoryController.pushInput(E), re.exCommandHistoryController.reset(), t.e_stop(w), kt(p), Q(), p.focus()), j == "<Up>" || j == "<Down>" ? (t.e_stop(w), V = j == "<Up>", X = w.target ? w.target.selectionEnd : 0, E = re.exCommandHistoryController.nextMatch(E, V) || "", Q(E), X && w.target && (w.target.selectionEnd = w.target.selectionStart = Math.min(X, w.target.value.length))) : j == "<C-u>" ? (t.e_stop(w), Q("")) : j && j != "<Left>" && j != "<Right>" && re.exCommandHistoryController.reset();\n      }\n      g.type == "keyToEx" ? we.processCommand(p, g.exArgs.input) : d.visualMode ? ps(p, {\n        onClose: b,\n        prefix: ":",\n        value: "\'<,\'>",\n        onKeyDown: x,\n        selectValueOnOpen: !1\n      }) : ps(p, {\n        onClose: b,\n        prefix: ":",\n        onKeyDown: x\n      });\n    },\n    /**@arg {CodeMirrorV} cm   @arg {vimState} vim */\n    evalInput: function(p, d) {\n      var g = d.inputState, b = g.motion, x = g.motionArgs || { repeat: 1 }, w = g.operator, E = g.operatorArgs || {}, Q = g.registerName, j = d.sel, V = Ye(d.visualMode ? Se(p, j.head) : p.getCursor("head")), X = Ye(d.visualMode ? Se(p, j.anchor) : p.getCursor("anchor")), Y = Ye(V), ee = Ye(X), z, G, te;\n      if (w && this.recordLastEdit(d, g), g.repeatOverride !== void 0 ? te = g.repeatOverride : te = g.getRepeat(), te > 0 && x.explicitRepeat ? x.repeatIsExplicit = !0 : (x.noRepeat || !x.explicitRepeat && te === 0) && (te = 1, x.repeatIsExplicit = !1), g.selectedCharacter && (x.selectedCharacter = E.selectedCharacter = g.selectedCharacter), x.repeat = te, kt(p), b) {\n        var ue = zt[b](p, V, x, d, g);\n        if (d.lastMotion = zt[b], !ue)\n          return;\n        if (x.toJumplist) {\n          var $e = re.jumpList, Be = $e.cachedCursor;\n          Be ? (hs(p, Be, ue), delete $e.cachedCursor) : hs(p, V, ue);\n        }\n        ue instanceof Array ? (G = ue[0], z = ue[1]) : z = ue, z || (z = Ye(V)), d.visualMode ? (d.visualBlock && z.ch === 1 / 0 || (z = Se(p, z, Y)), G && (G = Se(p, G)), G = G || ee, j.anchor = G, j.head = z, J(p), Zr(\n          p,\n          d,\n          "<",\n          ft(G, z) ? G : z\n        ), Zr(\n          p,\n          d,\n          ">",\n          ft(G, z) ? z : G\n        )) : w || (z = Se(p, z, Y), p.setCursor(z.line, z.ch));\n      }\n      if (w) {\n        if (E.lastSel) {\n          G = ee;\n          var Ve = E.lastSel, bt = Math.abs(Ve.head.line - Ve.anchor.line), dn = Math.abs(Ve.head.ch - Ve.anchor.ch);\n          Ve.visualLine ? z = new e(ee.line + bt, ee.ch) : Ve.visualBlock ? z = new e(ee.line + bt, ee.ch + dn) : Ve.head.line == Ve.anchor.line ? z = new e(ee.line, ee.ch + dn) : z = new e(ee.line + bt, ee.ch), d.visualMode = !0, d.visualLine = Ve.visualLine, d.visualBlock = Ve.visualBlock, j = d.sel = {\n            anchor: G,\n            head: z\n          }, J(p);\n        } else d.visualMode && (E.lastSel = {\n          anchor: Ye(j.anchor),\n          head: Ye(j.head),\n          visualBlock: d.visualBlock,\n          visualLine: d.visualLine\n        });\n        var Ut, on, it, et, _t;\n        if (d.visualMode) {\n          Ut = It(j.head, j.anchor), on = ct(j.head, j.anchor), it = d.visualLine || E.linewise, et = d.visualBlock ? "block" : it ? "line" : "char";\n          var Yt = n(p, Ut, on);\n          if (_t = ae(p, {\n            anchor: Yt.start,\n            head: Yt.end\n          }, et), it) {\n            var Kt = _t.ranges;\n            if (et == "block")\n              for (var br = 0; br < Kt.length; br++)\n                Kt[br].head.ch = vt(p, Kt[br].head.line);\n            else et == "line" && (Kt[0].head = new e(Kt[0].head.line + 1, 0));\n          }\n        } else {\n          if (Ut = Ye(G || ee), on = Ye(z || Y), ft(on, Ut)) {\n            var Ns = Ut;\n            Ut = on, on = Ns;\n          }\n          it = x.linewise || E.linewise, it ? Rt(p, Ut, on) : x.forward && Je(p, Ut, on), et = "char";\n          var vl = !x.inclusive || it, Yt = n(p, Ut, on);\n          _t = ae(p, {\n            anchor: Yt.start,\n            head: Yt.end\n          }, et, vl);\n        }\n        p.setSelections(_t.ranges, _t.primary), d.lastMotion = null, E.repeat = te, E.registerName = Q, E.linewise = it;\n        var Xa = bn[w](\n          p,\n          E,\n          _t.ranges,\n          ee,\n          z\n        );\n        d.visualMode && ge(p, Xa != null), Xa && p.setCursor(Xa);\n      }\n    },\n    /**@arg {vimState} vim  @arg {InputStateInterface} inputState, @arg {import("./types").actionCommand} [actionCommand] */\n    recordLastEdit: function(p, d, g) {\n      var b = re.macroModeState;\n      b.isPlaying || (p.lastEditInputState = d, p.lastEditActionCommand = g, b.lastInsertModeChanges.changes = [], b.lastInsertModeChanges.expectCursorActivityForChange = !1, b.lastInsertModeChanges.visualBlock = p.visualBlock ? p.sel.head.line - p.sel.anchor.line : 0);\n    }\n  }, zt = {\n    moveToTopLine: function(p, d, g) {\n      var b = L(p).top + g.repeat - 1;\n      return new e(b, Ht(p.getLine(b)));\n    },\n    moveToMiddleLine: function(p) {\n      var d = L(p), g = Math.floor((d.top + d.bottom) * 0.5);\n      return new e(g, Ht(p.getLine(g)));\n    },\n    moveToBottomLine: function(p, d, g) {\n      var b = L(p).bottom - g.repeat + 1;\n      return new e(b, Ht(p.getLine(b)));\n    },\n    expandToLine: function(p, d, g) {\n      var b = d;\n      return new e(b.line + g.repeat - 1, 1 / 0);\n    },\n    findNext: function(p, d, g) {\n      var b = rr(p), x = b.getQuery();\n      if (x) {\n        var w = !g.forward;\n        return w = b.isReversed() ? !w : w, fl(p, x), dl(p, w, x, g.repeat);\n      }\n    },\n    /**\n     * Find and select the next occurrence of the search query. If the cursor is currently\n     * within a match, then find and select the current match. Otherwise, find the next occurrence in the\n     * appropriate direction.\n     *\n     * This differs from `findNext` in the following ways:\n     *\n     * 1. Instead of only returning the "from", this returns a "from", "to" range.\n     * 2. If the cursor is currently inside a search match, this selects the current match\n     *    instead of the next match.\n     * 3. If there is no associated operator, this will turn on visual mode.\n     */\n    findAndSelectNextInclusive: function(p, d, g, b, x) {\n      var w = rr(p), E = w.getQuery();\n      if (E) {\n        var Q = !g.forward;\n        Q = w.isReversed() ? !Q : Q;\n        var j = oh(p, Q, E, g.repeat, b);\n        if (j) {\n          if (x.operator)\n            return j;\n          var V = j[0], X = new e(j[1].line, j[1].ch - 1);\n          if (b.visualMode) {\n            (b.visualLine || b.visualBlock) && (b.visualLine = !1, b.visualBlock = !1, t.signal(p, "vim-mode-change", { mode: "visual", subMode: "" }));\n            var Y = b.sel.anchor;\n            if (Y)\n              return w.isReversed() ? g.forward ? [Y, V] : [Y, X] : g.forward ? [Y, X] : [Y, V];\n          } else\n            b.visualMode = !0, b.visualLine = !1, b.visualBlock = !1, t.signal(p, "vim-mode-change", { mode: "visual", subMode: "" });\n          return Q ? [X, V] : [V, X];\n        }\n      }\n    },\n    goToMark: function(p, d, g, b) {\n      var x = Ne(p, b, g.selectedCharacter || "");\n      return x ? g.linewise ? { line: x.line, ch: Ht(p.getLine(x.line)) } : x : null;\n    },\n    moveToOtherHighlightedEnd: function(p, d, g, b) {\n      if (b.visualBlock && g.sameLine) {\n        var x = b.sel;\n        return [\n          Se(p, new e(x.anchor.line, x.head.ch)),\n          Se(p, new e(x.head.line, x.anchor.ch))\n        ];\n      } else\n        return [b.sel.head, b.sel.anchor];\n    },\n    jumpToMark: function(p, d, g, b) {\n      for (var x = d, w = 0; w < g.repeat; w++) {\n        var E = x;\n        for (var Q in b.marks)\n          if ($(Q)) {\n            var j = b.marks[Q].find(), V = g.forward ? (\n              // @ts-ignore\n              ft(j, E)\n            ) : ft(E, j);\n            if (!V && !(g.linewise && j.line == E.line)) {\n              var X = Re(E, x), Y = g.forward ? (\n                // @ts-ignore\n                Wt(E, j, x)\n              ) : (\n                // @ts-ignore\n                Wt(x, j, E)\n              );\n              (X || Y) && (x = j);\n            }\n          }\n      }\n      return g.linewise && (x = new e(x.line, Ht(p.getLine(x.line)))), x;\n    },\n    moveByCharacters: function(p, d, g) {\n      var b = d, x = g.repeat, w = g.forward ? b.ch + x : b.ch - x;\n      return new e(b.line, w);\n    },\n    moveByLines: function(p, d, g, b) {\n      var x = d, w = x.ch;\n      switch (b.lastMotion) {\n        case this.moveByLines:\n        case this.moveByDisplayLines:\n        case this.moveByScroll:\n        case this.moveToColumn:\n        case this.moveToEol:\n          w = b.lastHPos;\n          break;\n        default:\n          b.lastHPos = w;\n      }\n      var E = g.repeat + (g.repeatOffset || 0), Q = g.forward ? x.line + E : x.line - E, j = p.firstLine(), V = p.lastLine(), X = p.findPosV(x, g.forward ? E : -E, "line", b.lastHSPos), Y = g.forward ? X.line > Q : X.line < Q;\n      return Y && (Q = X.line, w = X.ch), Q < j && x.line == j ? this.moveToStartOfLine(p, d, g, b) : Q > V && x.line == V ? il(p, d, g, b, !0) : (g.toFirstChar && (w = Ht(p.getLine(Q)), b.lastHPos = w), b.lastHSPos = p.charCoords(new e(Q, w), "div").left, new e(Q, w));\n    },\n    moveByDisplayLines: function(p, d, g, b) {\n      var x = d;\n      switch (b.lastMotion) {\n        case this.moveByDisplayLines:\n        case this.moveByScroll:\n        case this.moveByLines:\n        case this.moveToColumn:\n        case this.moveToEol:\n          break;\n        default:\n          b.lastHSPos = p.charCoords(x, "div").left;\n      }\n      var w = g.repeat, E = p.findPosV(x, g.forward ? w : -w, "line", b.lastHSPos);\n      if (E.hitSide)\n        if (g.forward) {\n          var Q = p.charCoords(E, "div"), j = { top: Q.top + 8, left: b.lastHSPos };\n          E = p.coordsChar(j, "div");\n        } else {\n          var V = p.charCoords(new e(p.firstLine(), 0), "div");\n          V.left = b.lastHSPos, E = p.coordsChar(V, "div");\n        }\n      return b.lastHPos = E.ch, E;\n    },\n    moveByPage: function(p, d, g) {\n      var b = d, x = g.repeat;\n      return p.findPosV(b, g.forward ? x : -x, "page");\n    },\n    moveByParagraph: function(p, d, g) {\n      var b = g.forward ? 1 : -1;\n      return sl(p, d, g.repeat, b).start;\n    },\n    moveBySentence: function(p, d, g) {\n      var b = g.forward ? 1 : -1;\n      return Hc(p, d, g.repeat, b);\n    },\n    moveByScroll: function(p, d, g, b) {\n      var x = p.getScrollInfo(), w = null, E = g.repeat;\n      E || (E = x.clientHeight / (2 * p.defaultTextHeight()));\n      var Q = p.charCoords(d, "local");\n      if (g.repeat = E, w = zt.moveByDisplayLines(p, d, g, b), !w)\n        return null;\n      var j = p.charCoords(w, "local");\n      return p.scrollTo(null, x.top + j.top - Q.top), w;\n    },\n    moveByWords: function(p, d, g) {\n      return qc(\n        p,\n        d,\n        g.repeat,\n        !!g.forward,\n        !!g.wordEnd,\n        !!g.bigWord\n      );\n    },\n    moveTillCharacter: function(p, d, g) {\n      var b = g.repeat, x = $a(\n        p,\n        b,\n        g.forward,\n        g.selectedCharacter,\n        d\n      ), w = g.forward ? -1 : 1;\n      return Qn(w, g), x ? (x.ch += w, x) : null;\n    },\n    moveToCharacter: function(p, d, g) {\n      var b = g.repeat;\n      return Qn(0, g), $a(\n        p,\n        b,\n        g.forward,\n        g.selectedCharacter,\n        d\n      ) || d;\n    },\n    moveToSymbol: function(p, d, g) {\n      var b = g.repeat;\n      return g.selectedCharacter && Uc(\n        p,\n        b,\n        g.forward,\n        g.selectedCharacter\n      ) || d;\n    },\n    moveToColumn: function(p, d, g, b) {\n      var x = g.repeat;\n      return b.lastHPos = x - 1, b.lastHSPos = p.charCoords(d, "div").left, Gc(p, x);\n    },\n    moveToEol: function(p, d, g, b) {\n      return il(p, d, g, b, !1);\n    },\n    moveToFirstNonWhiteSpaceCharacter: function(p, d) {\n      var g = d;\n      return new e(\n        g.line,\n        Ht(p.getLine(g.line))\n      );\n    },\n    moveToMatchedSymbol: function(p, d) {\n      for (var g = d, b = g.line, x = g.ch, w = p.getLine(b), E; x < w.length; x++)\n        if (E = w.charAt(x), E && U(E)) {\n          var Q = p.getTokenTypeAt(new e(b, x + 1));\n          if (Q !== "string" && Q !== "comment")\n            break;\n        }\n      if (x < w.length) {\n        var j = E === "<" || E === ">" ? /[(){}[\\]<>]/ : /[(){}[\\]]/, V = p.findMatchingBracket(new e(b, x), { bracketRegex: j });\n        return V.to;\n      } else\n        return g;\n    },\n    moveToStartOfLine: function(p, d) {\n      return new e(d.line, 0);\n    },\n    moveToLineOrEdgeOfDocument: function(p, d, g) {\n      var b = g.forward ? p.lastLine() : p.firstLine();\n      return g.repeatIsExplicit && (b = g.repeat - p.getOption("firstLineNumber")), new e(\n        b,\n        Ht(p.getLine(b))\n      );\n    },\n    moveToStartOfDisplayLine: function(p) {\n      return p.execCommand("goLineLeft"), p.getCursor();\n    },\n    moveToEndOfDisplayLine: function(p) {\n      p.execCommand("goLineRight");\n      var d = p.getCursor();\n      return d.sticky == "before" && d.ch--, d;\n    },\n    textObjectManipulation: function(p, d, g, b) {\n      var x = {\n        "(": ")",\n        ")": "(",\n        "{": "}",\n        "}": "{",\n        "[": "]",\n        "]": "[",\n        "<": ">",\n        ">": "<"\n      }, w = { "\'": !0, \'"\': !0, "`": !0 }, E = g.selectedCharacter || "";\n      E == "b" ? E = "(" : E == "B" && (E = "{");\n      var Q = !g.textObjectInner, j, V;\n      if (x[E]) {\n        if (V = !0, j = ol(p, d, E, Q), !j) {\n          var X = p.getSearchCursor(new RegExp("\\\\" + E, "g"), d);\n          X.find() && (j = ol(p, X.from(), E, Q));\n        }\n      } else if (w[E])\n        V = !0, j = Yc(p, d, E, Q);\n      else if (E === "W" || E === "w")\n        for (var Y = g.repeat || 1; Y-- > 0; ) {\n          var ee = mr(p, {\n            inclusive: Q,\n            innerWord: !Q,\n            bigWord: E === "W",\n            noSymbol: E === "W",\n            multiline: !0\n          }, j && j.end);\n          ee && (j || (j = ee), j.end = ee.end);\n        }\n      else if (E === "p")\n        if (j = sl(p, d, g.repeat, 0, Q), g.linewise = !0, b.visualMode)\n          b.visualLine || (b.visualLine = !0);\n        else {\n          var z = b.inputState.operatorArgs;\n          z && (z.linewise = !0), j.end.line--;\n        }\n      else if (E === "t")\n        j = $s(p, d, Q);\n      else if (E === "s") {\n        var G = p.getLine(d.line);\n        d.ch > 0 && N(G[d.ch]) && (d.ch -= 1);\n        var te = al(p, d, g.repeat, 1, Q), ue = al(p, d, g.repeat, -1, Q);\n        Z(p.getLine(ue.line)[ue.ch]) && Z(p.getLine(te.line)[te.ch - 1]) && (ue = { line: ue.line, ch: ue.ch + 1 }), j = { start: ue, end: te };\n      }\n      return j ? p.state.vim.visualMode ? _(p, j.start, j.end, V) : [j.start, j.end] : null;\n    },\n    repeatLastCharacterSearch: function(p, d, g) {\n      var b = re.lastCharacterSearch, x = g.repeat, w = g.forward === b.forward, E = (b.increment ? 1 : 0) * (w ? -1 : 1);\n      p.moveH(-E, "char"), g.inclusive = !!w;\n      var Q = $a(p, x, w, b.selectedCharacter);\n      return Q ? (Q.ch += E, Q) : (p.moveH(E, "char"), d);\n    }\n  };\n  function _r(p, d) {\n    zt[p] = d;\n  }\n  function nr(p, d) {\n    for (var g = [], b = 0; b < d; b++)\n      g.push(p);\n    return g;\n  }\n  var bn = {\n    change: function(p, d, g) {\n      var b, x, w = p.state.vim, E = g[0].anchor, Q = g[0].head;\n      if (w.visualMode)\n        if (d.fullLine)\n          Q.ch = Number.MAX_VALUE, Q.line--, p.setSelection(E, Q), x = p.getSelection(), p.replaceSelection(""), b = E;\n        else {\n          x = p.getSelection();\n          var X = nr("", g.length);\n          p.replaceSelections(X), b = It(g[0].head, g[0].anchor);\n        }\n      else {\n        x = p.getRange(E, Q);\n        var j = w.lastEditInputState;\n        if (j?.motion == "moveByWords" && !Z(x)) {\n          var V = /\\s+$/.exec(x);\n          V && j.motionArgs && j.motionArgs.forward && (Q = Xe(Q, 0, -V[0].length), x = x.slice(0, -V[0].length));\n        }\n        d.linewise && (E = new e(E.line, Ht(p.getLine(E.line))), Q.line > E.line && (Q = new e(Q.line - 1, Number.MAX_VALUE))), p.replaceRange("", E, Q), b = E;\n      }\n      re.registerController.pushText(\n        d.registerName,\n        "change",\n        x,\n        d.linewise,\n        g.length > 1\n      ), qe.enterInsertMode(p, { head: b }, p.state.vim);\n    },\n    delete: function(p, d, g) {\n      var b, x, w = p.state.vim;\n      if (w.visualBlock) {\n        x = p.getSelection();\n        var j = nr("", g.length);\n        p.replaceSelections(j), b = It(g[0].head, g[0].anchor);\n      } else {\n        var E = g[0].anchor, Q = g[0].head;\n        d.linewise && Q.line != p.firstLine() && E.line == p.lastLine() && E.line == Q.line - 1 && (E.line == p.firstLine() ? E.ch = 0 : E = new e(E.line - 1, vt(p, E.line - 1))), x = p.getRange(E, Q), p.replaceRange("", E, Q), b = E, d.linewise && (b = zt.moveToFirstNonWhiteSpaceCharacter(p, E));\n      }\n      return re.registerController.pushText(\n        d.registerName,\n        "delete",\n        x,\n        d.linewise,\n        w.visualBlock\n      ), Se(p, b);\n    },\n    indent: function(p, d, g) {\n      var b = p.state.vim, x = b.visualMode ? d.repeat || 0 : 1;\n      if (p.indentMore)\n        for (var w = 0; w < x; w++)\n          d.indentRight ? p.indentMore() : p.indentLess();\n      else {\n        var E = g[0].anchor.line, Q = b.visualBlock ? g[g.length - 1].anchor.line : g[0].head.line;\n        d.linewise && Q--;\n        for (var j = E; j <= Q; j++)\n          for (var w = 0; w < x; w++)\n            p.indentLine(j, d.indentRight);\n      }\n      return zt.moveToFirstNonWhiteSpaceCharacter(p, g[0].anchor);\n    },\n    indentAuto: function(p, d, g) {\n      return p.execCommand("indentAuto"), zt.moveToFirstNonWhiteSpaceCharacter(p, g[0].anchor);\n    },\n    hardWrap: function(p, d, g, b) {\n      if (p.hardWrap) {\n        var x = g[0].anchor.line, w = g[0].head.line;\n        d.linewise && w--;\n        var E = p.hardWrap({ from: x, to: w });\n        return E > x && d.linewise && E--, d.keepCursor ? b : new e(E, 0);\n      }\n    },\n    changeCase: function(p, d, g, b, x) {\n      for (var w = p.getSelections(), E = [], Q = d.toLower, j = 0; j < w.length; j++) {\n        var V = w[j], X = "";\n        if (Q === !0)\n          X = V.toLowerCase();\n        else if (Q === !1)\n          X = V.toUpperCase();\n        else\n          for (var Y = 0; Y < V.length; Y++) {\n            var ee = V.charAt(Y);\n            X += B(ee) ? ee.toLowerCase() : ee.toUpperCase();\n          }\n        E.push(X);\n      }\n      return p.replaceSelections(E), d.shouldMoveCursor ? x : !p.state.vim.visualMode && d.linewise && g[0].anchor.line + 1 == g[0].head.line ? zt.moveToFirstNonWhiteSpaceCharacter(p, b) : d.linewise ? b : It(g[0].anchor, g[0].head);\n    },\n    yank: function(p, d, g, b) {\n      var x = p.state.vim, w = p.getSelection(), E = x.visualMode ? It(x.sel.anchor, x.sel.head, g[0].head, g[0].anchor) : b;\n      return re.registerController.pushText(\n        d.registerName,\n        "yank",\n        w,\n        d.linewise,\n        x.visualBlock\n      ), E;\n    }\n  };\n  function Yr(p, d) {\n    bn[p] = d;\n  }\n  var qe = {\n    jumpListWalk: function(p, d, g) {\n      if (!g.visualMode) {\n        var b = d.repeat || 1, x = d.forward, w = re.jumpList, E = w.move(p, x ? b : -b), Q = E ? E.find() : void 0;\n        Q = Q || p.getCursor(), p.setCursor(Q);\n      }\n    },\n    scroll: function(p, d, g) {\n      if (!g.visualMode) {\n        var b = d.repeat || 1, x = p.defaultTextHeight(), w = p.getScrollInfo().top, E = x * b, Q = d.forward ? w + E : w - E, j = Ye(p.getCursor()), V = p.charCoords(j, "local");\n        if (d.forward)\n          Q > V.top ? (j.line += (Q - V.top) / x, j.line = Math.ceil(j.line), p.setCursor(j), V = p.charCoords(j, "local"), p.scrollTo(null, V.top)) : p.scrollTo(null, Q);\n        else {\n          var X = Q + p.getScrollInfo().clientHeight;\n          X < V.bottom ? (j.line -= (V.bottom - X) / x, j.line = Math.floor(j.line), p.setCursor(j), V = p.charCoords(j, "local"), p.scrollTo(\n            null,\n            V.bottom - p.getScrollInfo().clientHeight\n          )) : p.scrollTo(null, Q);\n        }\n      }\n    },\n    scrollToCursor: function(p, d) {\n      var g = p.getCursor().line, b = p.charCoords(new e(g, 0), "local"), x = p.getScrollInfo().clientHeight, w = b.top;\n      switch (d.position) {\n        case "center":\n          w = b.bottom - x / 2;\n          break;\n        case "bottom":\n          var E = new e(g, p.getLine(g).length - 1), Q = p.charCoords(E, "local"), j = Q.bottom - w;\n          w = w - x + j;\n          break;\n      }\n      p.scrollTo(null, w);\n    },\n    replayMacro: function(p, d, g) {\n      var b = d.selectedCharacter || "", x = d.repeat || 1, w = re.macroModeState;\n      for (b == "@" ? b = w.latestRegister : w.latestRegister = b; x--; )\n        $r(p, g, w, b);\n    },\n    enterMacroRecordMode: function(p, d) {\n      var g = re.macroModeState, b = d.selectedCharacter;\n      re.registerController.isValidRegister(b) && g.enterMacroRecordMode(p, b);\n    },\n    toggleOverwrite: function(p) {\n      p.state.overwrite ? (p.toggleOverwrite(!1), p.setOption("keyMap", "vim-insert"), t.signal(p, "vim-mode-change", { mode: "insert" })) : (p.toggleOverwrite(!0), p.setOption("keyMap", "vim-replace"), t.signal(p, "vim-mode-change", { mode: "replace" }));\n    },\n    enterInsertMode: function(p, d, g) {\n      if (!p.getOption("readOnly")) {\n        g.insertMode = !0, g.insertModeRepeat = d && d.repeat || 1;\n        var b = d ? d.insertAt : null, x = g.sel, w = d.head || p.getCursor("head"), E = p.listSelections().length;\n        if (b == "eol")\n          w = new e(w.line, vt(p, w.line));\n        else if (b == "bol")\n          w = new e(w.line, 0);\n        else if (b == "charAfter") {\n          var Q = n(p, w, Xe(w, 0, 1));\n          w = Q.end;\n        } else if (b == "firstNonBlank") {\n          var Q = n(p, w, zt.moveToFirstNonWhiteSpaceCharacter(p, w));\n          w = Q.end;\n        } else if (b == "startOfSelectedArea") {\n          if (!g.visualMode)\n            return;\n          g.visualBlock ? (w = new e(\n            Math.min(x.head.line, x.anchor.line),\n            Math.min(x.head.ch, x.anchor.ch)\n          ), E = Math.abs(x.head.line - x.anchor.line) + 1) : x.head.line < x.anchor.line ? w = x.head : w = new e(x.anchor.line, 0);\n        } else if (b == "endOfSelectedArea") {\n          if (!g.visualMode)\n            return;\n          g.visualBlock ? (w = new e(\n            Math.min(x.head.line, x.anchor.line),\n            Math.max(x.head.ch, x.anchor.ch) + 1\n          ), E = Math.abs(x.head.line - x.anchor.line) + 1) : x.head.line >= x.anchor.line ? w = Xe(x.head, 0, 1) : w = new e(x.anchor.line, 0);\n        } else if (b == "inplace") {\n          if (g.visualMode)\n            return;\n        } else b == "lastEdit" && (w = xi(p) || w);\n        p.setOption("disableInput", !1), d && d.replace ? (p.toggleOverwrite(!0), p.setOption("keyMap", "vim-replace"), t.signal(p, "vim-mode-change", { mode: "replace" })) : (p.toggleOverwrite(!1), p.setOption("keyMap", "vim-insert"), t.signal(p, "vim-mode-change", { mode: "insert" })), re.macroModeState.isPlaying || (p.on("change", Ls), g.insertEnd && g.insertEnd.clear(), g.insertEnd = p.setBookmark(w, { insertLeft: !0 }), t.on(p.getInputField(), "keydown", gr)), g.visualMode && ge(p), O(p, w, E);\n      }\n    },\n    toggleVisualMode: function(p, d, g) {\n      var b = d.repeat, x = p.getCursor(), w;\n      if (g.visualMode)\n        g.visualLine != !!d.linewise || g.visualBlock != !!d.blockwise ? (g.visualLine = !!d.linewise, g.visualBlock = !!d.blockwise, t.signal(p, "vim-mode-change", { mode: "visual", subMode: g.visualLine ? "linewise" : g.visualBlock ? "blockwise" : "" }), J(p)) : ge(p);\n      else {\n        g.visualMode = !0, g.visualLine = !!d.linewise, g.visualBlock = !!d.blockwise, w = Se(\n          p,\n          new e(x.line, x.ch + b - 1)\n        );\n        var E = n(p, x, w);\n        g.sel = {\n          anchor: E.start,\n          head: E.end\n        }, t.signal(p, "vim-mode-change", { mode: "visual", subMode: g.visualLine ? "linewise" : g.visualBlock ? "blockwise" : "" }), J(p), Zr(p, g, "<", It(x, w)), Zr(p, g, ">", ct(x, w));\n      }\n    },\n    reselectLastSelection: function(p, d, g) {\n      var b = g.lastSelection;\n      if (g.visualMode && P(p, g), b) {\n        var x = b.anchorMark.find(), w = b.headMark.find();\n        if (!x || !w)\n          return;\n        g.sel = {\n          anchor: x,\n          head: w\n        }, g.visualMode = !0, g.visualLine = b.visualLine, g.visualBlock = b.visualBlock, J(p), Zr(p, g, "<", It(x, w)), Zr(p, g, ">", ct(x, w)), t.signal(p, "vim-mode-change", {\n          mode: "visual",\n          subMode: g.visualLine ? "linewise" : g.visualBlock ? "blockwise" : ""\n        });\n      }\n    },\n    joinLines: function(p, d, g) {\n      var b, x;\n      if (g.visualMode) {\n        if (b = p.getCursor("anchor"), x = p.getCursor("head"), ft(x, b)) {\n          var w = x;\n          x = b, b = w;\n        }\n        x.ch = vt(p, x.line) - 1;\n      } else {\n        var E = Math.max(d.repeat, 2);\n        b = p.getCursor(), x = Se(p, new e(\n          b.line + E - 1,\n          1 / 0\n        ));\n      }\n      for (var Q = 0, j = b.line; j < x.line; j++) {\n        Q = vt(p, b.line);\n        var V = "", X = 0;\n        if (!d.keepSpaces) {\n          var Y = p.getLine(b.line + 1);\n          X = Y.search(/\\S/), X == -1 ? X = Y.length : V = " ";\n        }\n        p.replaceRange(\n          V,\n          new e(b.line, Q),\n          new e(b.line + 1, X)\n        );\n      }\n      var ee = Se(p, new e(b.line, Q));\n      g.visualMode && ge(p, !1), p.setCursor(ee);\n    },\n    newLineAndEnterInsertMode: function(p, d, g) {\n      g.insertMode = !0;\n      var b = Ye(p.getCursor());\n      if (b.line === p.firstLine() && !d.after)\n        p.replaceRange(`\n`, new e(p.firstLine(), 0)), p.setCursor(p.firstLine(), 0);\n      else {\n        b.line = d.after ? b.line : b.line - 1, b.ch = vt(p, b.line), p.setCursor(b);\n        var x = t.commands.newlineAndIndentContinueComment || t.commands.newlineAndIndent;\n        x(p);\n      }\n      this.enterInsertMode(p, { repeat: d.repeat }, g);\n    },\n    paste: function(p, d, g) {\n      var b = re.registerController.getRegister(\n        d.registerName\n      );\n      if (d.registerName === "+")\n        navigator.clipboard.readText().then((w) => {\n          this.continuePaste(p, d, g, w, b);\n        });\n      else {\n        var x = b.toString();\n        this.continuePaste(p, d, g, x, b);\n      }\n    },\n    continuePaste: function(p, d, g, b, x) {\n      var w = Ye(p.getCursor());\n      if (b) {\n        if (d.matchIndent) {\n          var E = p.getOption("tabSize"), Q = function(Yt) {\n            var Kt = Yt.split("\t").length - 1, br = Yt.split(" ").length - 1;\n            return Kt * E + br * 1;\n          }, j = p.getLine(p.getCursor().line), V = Q(j.match(/^\\s*/)[0]), X = b.replace(/\\n$/, ""), Y = b !== X, ee = Q(b.match(/^\\s*/)[0]), b = X.replace(/^\\s*/gm, function(Yt) {\n            var Kt = V + (Q(Yt) - ee);\n            if (Kt < 0)\n              return "";\n            if (p.getOption("indentWithTabs")) {\n              var br = Math.floor(Kt / E);\n              return Array(br + 1).join("\t");\n            } else\n              return Array(Kt + 1).join(" ");\n          });\n          b += Y ? `\n` : "";\n        }\n        if (d.repeat > 1)\n          var b = Array(d.repeat + 1).join(b);\n        var z = x.linewise, G = x.blockwise;\n        if (G) {\n          b = b.split(`\n`), z && b.pop();\n          for (var te = 0; te < b.length; te++)\n            b[te] = b[te] == "" ? " " : b[te];\n          w.ch += d.after ? 1 : 0, w.ch = Math.min(vt(p, w.line), w.ch);\n        } else z ? g.visualMode ? b = g.visualLine ? b.slice(0, -1) : `\n` + b.slice(0, b.length - 1) + `\n` : d.after ? (b = `\n` + b.slice(0, b.length - 1), w.ch = vt(p, w.line)) : w.ch = 0 : w.ch += d.after ? 1 : 0;\n        var ue;\n        if (g.visualMode) {\n          g.lastPastedText = b;\n          var $e, Be = A(p, g), Ve = Be[0], bt = Be[1], dn = p.getSelection(), Ut = p.listSelections(), on = new Array(Ut.length).join("1").split("1");\n          g.lastSelection && ($e = g.lastSelection.headMark.find()), re.registerController.unnamedRegister.setText(dn), G ? (p.replaceSelections(on), bt = new e(Ve.line + b.length - 1, Ve.ch), p.setCursor(Ve), yn(p, bt), p.replaceSelections(b), ue = Ve) : g.visualBlock ? (p.replaceSelections(on), p.setCursor(Ve), p.replaceRange(b, Ve, Ve), ue = Ve) : (p.replaceRange(b, Ve, bt), ue = p.posFromIndex(p.indexFromPos(Ve) + b.length - 1)), $e && (g.lastSelection.headMark = p.setBookmark($e)), z && (ue.ch = 0);\n        } else if (G) {\n          p.setCursor(w);\n          for (var te = 0; te < b.length; te++) {\n            var it = w.line + te;\n            it > p.lastLine() && p.replaceRange(`\n`, new e(it, 0));\n            var et = vt(p, it);\n            et < w.ch && Sn(p, it, w.ch);\n          }\n          p.setCursor(w), yn(p, new e(w.line + b.length - 1, w.ch)), p.replaceSelections(b), ue = w;\n        } else if (p.replaceRange(b, w), z) {\n          var it = d.after ? w.line + 1 : w.line;\n          ue = new e(it, Ht(p.getLine(it)));\n        } else\n          ue = Ye(w), /\\n/.test(b) || (ue.ch += b.length - (d.after ? 1 : 0));\n        g.visualMode && ge(p, !1), p.setCursor(ue);\n      }\n    },\n    undo: function(p, d) {\n      p.operation(function() {\n        $n(p, t.commands.undo, d.repeat)(), p.setCursor(Se(p, p.getCursor("start")));\n      });\n    },\n    redo: function(p, d) {\n      $n(p, t.commands.redo, d.repeat)();\n    },\n    setRegister: function(p, d, g) {\n      g.inputState.registerName = d.selectedCharacter;\n    },\n    insertRegister: function(p, d, g) {\n      var b = d.selectedCharacter, x = re.registerController.getRegister(b), w = x && x.toString();\n      w && p.replaceSelection(w);\n    },\n    oneNormalCommand: function(p, d, g) {\n      ei(p, !0), g.insertModeReturn = !0, t.on(p, "vim-command-done", function b() {\n        g.visualMode || (g.insertModeReturn && (g.insertModeReturn = !1, g.insertMode || qe.enterInsertMode(p, {}, g)), t.off(p, "vim-command-done", b));\n      });\n    },\n    setMark: function(p, d, g) {\n      var b = d.selectedCharacter;\n      b && Zr(p, g, b, p.getCursor());\n    },\n    replace: function(p, d, g) {\n      var b = d.selectedCharacter || "", x = p.getCursor(), w, E, Q = p.listSelections();\n      if (g.visualMode)\n        x = p.getCursor("start"), E = p.getCursor("end");\n      else {\n        var j = p.getLine(x.line);\n        w = x.ch + d.repeat, w > j.length && (w = j.length), E = new e(x.line, w);\n      }\n      var V = n(p, x, E);\n      if (x = V.start, E = V.end, b == `\n`)\n        g.visualMode || p.replaceRange("", x, E), (t.commands.newlineAndIndentContinueComment || t.commands.newlineAndIndent)(p);\n      else {\n        var X = p.getRange(x, E);\n        if (X = X.replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, b), X = X.replace(/[^\\n]/g, b), g.visualBlock) {\n          var Y = new Array(p.getOption("tabSize") + 1).join(" ");\n          X = p.getSelection(), X = X.replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, b);\n          var ee = X.replace(/\\t/g, Y).replace(/[^\\n]/g, b).split(`\n`);\n          p.replaceSelections(ee);\n        } else\n          p.replaceRange(X, x, E);\n        g.visualMode ? (x = ft(Q[0].anchor, Q[0].head) ? Q[0].anchor : Q[0].head, p.setCursor(x), ge(p, !1)) : p.setCursor(Xe(E, 0, -1));\n      }\n    },\n    incrementNumberToken: function(p, d) {\n      for (var g = p.getCursor(), b = p.getLine(g.line), x = /(-?)(?:(0x)([\\da-f]+)|(0b|0|)(\\d+))/gi, w, E, Q, j; (w = x.exec(b)) !== null && (E = w.index, Q = E + w[0].length, !(g.ch < Q)); )\n        ;\n      if (!(!d.backtrack && Q <= g.ch)) {\n        if (w) {\n          var V = w[2] || w[4], X = w[3] || w[5], Y = d.increase ? 1 : -1, ee = { "0b": 2, 0: 8, "": 10, "0x": 16 }[V.toLowerCase()], z = parseInt(w[1] + X, ee) + Y * d.repeat;\n          j = z.toString(ee);\n          var G = V ? new Array(X.length - j.length + 1 + w[1].length).join("0") : "";\n          j.charAt(0) === "-" ? j = "-" + V + G + j.substr(1) : j = V + G + j;\n          var te = new e(g.line, E), ue = new e(g.line, Q);\n          p.replaceRange(j, te, ue);\n        } else\n          return;\n        p.setCursor(new e(g.line, E + j.length - 1));\n      }\n    },\n    repeatLastEdit: function(p, d, g) {\n      var b = g.lastEditInputState;\n      if (b) {\n        var x = d.repeat;\n        x && d.repeatIsExplicit ? b.repeatOverride = x : x = b.repeatOverride || x, bl(\n          p,\n          g,\n          x,\n          !1\n          /** repeatForInsert */\n        );\n      }\n    },\n    indent: function(p, d) {\n      p.indentLine(p.getCursor().line, d.indentRight);\n    },\n    exitInsertMode: function(p, d) {\n      ei(p);\n    }\n  };\n  function Qt(p, d) {\n    qe[p] = d;\n  }\n  function Se(p, d, g) {\n    var b = p.state.vim, x = b.insertMode || b.visualMode, w = Math.min(Math.max(p.firstLine(), d.line), p.lastLine()), E = p.getLine(w), Q = E.length - 1 + +!!x, j = Math.min(Math.max(0, d.ch), Q), V = E.charCodeAt(j);\n    if (56320 <= V && V <= 57343) {\n      var X = 1;\n      g && g.line == w && g.ch > j && (X = -1), j += X, j > Q && (j -= 2);\n    }\n    return new e(w, j);\n  }\n  function wt(p) {\n    var d = {};\n    for (var g in p)\n      p.hasOwnProperty(g) && (d[g] = p[g]);\n    return d;\n  }\n  function Xe(p, d, g) {\n    return typeof d == "object" && (g = d.ch, d = d.line), new e(p.line + d, p.ch + g);\n  }\n  function Kr(p, d, g, b) {\n    b.operator && (g = "operatorPending");\n    for (var x, w = [], E = [], Q = he ? d.length - i : 0, j = Q; j < d.length; j++) {\n      var V = d[j];\n      g == "insert" && V.context != "insert" || V.context && V.context != g || b.operator && V.type == "action" || !(x = cs(p, V.keys)) || (x == "partial" && w.push(V), x == "full" && E.push(V));\n    }\n    return {\n      partial: w.length && w,\n      full: E.length && E\n    };\n  }\n  function cs(p, d) {\n    const g = d.slice(-11) == "<character>", b = d.slice(-10) == "<register>";\n    if (g || b) {\n      var x = d.length - (g ? 11 : 10), w = p.slice(0, x), E = d.slice(0, x);\n      return w == E && p.length > x ? "full" : E.indexOf(w) == 0 ? "partial" : !1;\n    } else\n      return p == d ? "full" : d.indexOf(p) == 0 ? "partial" : !1;\n  }\n  function Cn(p) {\n    var d = /^.*(<[^>]+>)$/.exec(p), g = d ? d[1] : p.slice(-1);\n    if (g.length > 1)\n      switch (g) {\n        case "<CR>":\n        case "<S-CR>":\n          g = `\n`;\n          break;\n        case "<Space>":\n        case "<S-Space>":\n          g = " ";\n          break;\n        default:\n          g = "";\n          break;\n      }\n    return g;\n  }\n  function $n(p, d, g) {\n    return function() {\n      for (var b = 0; b < g; b++)\n        d(p);\n    };\n  }\n  function Ye(p) {\n    return new e(p.line, p.ch);\n  }\n  function Re(p, d) {\n    return p.ch == d.ch && p.line == d.line;\n  }\n  function ft(p, d) {\n    return p.line < d.line || p.line == d.line && p.ch < d.ch;\n  }\n  function It(p, d) {\n    return arguments.length > 2 && (d = It.apply(void 0, Array.prototype.slice.call(arguments, 1))), ft(p, d) ? p : d;\n  }\n  function ct(p, d) {\n    return arguments.length > 2 && (d = ct.apply(void 0, Array.prototype.slice.call(arguments, 1))), ft(p, d) ? d : p;\n  }\n  function Wt(p, d, g) {\n    var b = ft(p, d), x = ft(d, g);\n    return b && x;\n  }\n  function vt(p, d) {\n    return p.getLine(d).length;\n  }\n  function ze(p) {\n    return p.trim ? p.trim() : p.replace(/^\\s+|\\s+$/g, "");\n  }\n  function Ln(p) {\n    return p.replace(/([.?*+$\\[\\]\\/\\\\(){}|\\-])/g, "\\\\$1");\n  }\n  function Sn(p, d, g) {\n    var b = vt(p, d), x = new Array(g - b + 1).join(" ");\n    p.setCursor(new e(d, b)), p.replaceRange(x, p.getCursor());\n  }\n  function yn(p, d) {\n    var g = [], b = p.listSelections(), x = Ye(p.clipPos(d)), w = !Re(d, x), E = p.getCursor("head"), Q = D(b, E), j = Re(b[Q].head, b[Q].anchor), V = b.length - 1, X = V - Q > Q ? V : 0, Y = b[X].anchor, ee = Math.min(Y.line, x.line), z = Math.max(Y.line, x.line), G = Y.ch, te = x.ch, ue = b[X].head.ch - G, $e = te - G;\n    ue > 0 && $e <= 0 ? (G++, w || te--) : ue < 0 && $e >= 0 ? (G--, j || te++) : ue < 0 && $e == -1 && (G--, te++);\n    for (var Be = ee; Be <= z; Be++) {\n      var Ve = { anchor: new e(Be, G), head: new e(Be, te) };\n      g.push(Ve);\n    }\n    return p.setSelections(g), d.ch = te, Y.ch = G, Y;\n  }\n  function O(p, d, g) {\n    for (var b = [], x = 0; x < g; x++) {\n      var w = Xe(d, x, 0);\n      b.push({ anchor: w, head: w });\n    }\n    p.setSelections(b, 0);\n  }\n  function D(p, d, g) {\n    for (var b = 0; b < p.length; b++) {\n      var x = Re(p[b].anchor, d), w = Re(p[b].head, d);\n      if (x || w)\n        return b;\n    }\n    return -1;\n  }\n  function A(p, d) {\n    var g = d.lastSelection, b = function() {\n      var w = p.listSelections(), E = w[0], Q = w[w.length - 1], j = ft(E.anchor, E.head) ? E.anchor : E.head, V = ft(Q.anchor, Q.head) ? Q.head : Q.anchor;\n      return [j, V];\n    }, x = function() {\n      var w = p.getCursor(), E = p.getCursor(), Q = g.visualBlock;\n      if (Q) {\n        var j = Q.width, V = Q.height;\n        E = new e(w.line + V, w.ch + j);\n        for (var X = [], Y = w.line; Y < E.line; Y++) {\n          var ee = new e(Y, w.ch), z = new e(Y, E.ch), G = { anchor: ee, head: z };\n          X.push(G);\n        }\n        p.setSelections(X);\n      } else {\n        var te = g.anchorMark.find(), ue = g.headMark.find(), $e = ue.line - te.line, Be = ue.ch - te.ch;\n        E = { line: E.line + $e, ch: $e ? E.ch : Be + E.ch }, g.visualLine && (w = new e(w.line, 0), E = new e(E.line, vt(p, E.line))), p.setSelection(w, E);\n      }\n      return [w, E];\n    };\n    return d.visualMode ? b() : x();\n  }\n  function P(p, d) {\n    var g = d.sel.anchor, b = d.sel.head;\n    d.lastPastedText && (b = p.posFromIndex(p.indexFromPos(g) + d.lastPastedText.length), d.lastPastedText = null), d.lastSelection = {\n      anchorMark: p.setBookmark(g),\n      headMark: p.setBookmark(b),\n      anchor: Ye(g),\n      head: Ye(b),\n      visualMode: d.visualMode,\n      visualLine: d.visualLine,\n      visualBlock: d.visualBlock\n    };\n  }\n  function _(p, d, g, b) {\n    var x = p.state.vim.sel, w = b ? d : x.head, E = b ? d : x.anchor, Q;\n    return ft(g, d) && (Q = g, g = d, d = Q), ft(w, E) ? (w = It(d, w), E = ct(E, g)) : (E = It(d, E), w = ct(w, g), w = Xe(w, 0, -1), w.ch == -1 && w.line != p.firstLine() && (w = new e(w.line - 1, vt(p, w.line - 1)))), [E, w];\n  }\n  function J(p, d, g) {\n    var b = p.state.vim;\n    d = d || b.sel, g || (g = b.visualLine ? "line" : b.visualBlock ? "block" : "char");\n    var x = ae(p, d, g);\n    p.setSelections(x.ranges, x.primary);\n  }\n  function ae(p, d, g, b) {\n    var x = Ye(d.head), w = Ye(d.anchor);\n    if (g == "char") {\n      var E = !b && !ft(d.head, d.anchor) ? 1 : 0, Q = ft(d.head, d.anchor) ? 1 : 0;\n      return x = Xe(d.head, 0, E), w = Xe(d.anchor, 0, Q), {\n        ranges: [{ anchor: w, head: x }],\n        primary: 0\n      };\n    } else if (g == "line") {\n      if (ft(d.head, d.anchor))\n        x.ch = 0, w.ch = vt(p, w.line);\n      else {\n        w.ch = 0;\n        var j = p.lastLine();\n        x.line > j && (x.line = j), x.ch = vt(p, x.line);\n      }\n      return {\n        ranges: [{ anchor: w, head: x }],\n        primary: 0\n      };\n    } else if (g == "block") {\n      var V = Math.min(w.line, x.line), X = w.ch, Y = Math.max(w.line, x.line), ee = x.ch;\n      X < ee ? ee += 1 : X += 1;\n      for (var z = Y - V + 1, G = x.line == V ? 0 : z - 1, te = [], ue = 0; ue < z; ue++)\n        te.push({\n          anchor: new e(V + ue, X),\n          head: new e(V + ue, ee)\n        });\n      return {\n        ranges: te,\n        primary: G\n      };\n    }\n    throw "never happens";\n  }\n  function pe(p) {\n    var d = p.getCursor("head");\n    return p.getSelection().length == 1 && (d = It(d, p.getCursor("anchor"))), d;\n  }\n  function ge(p, d) {\n    var g = p.state.vim;\n    d !== !1 && p.setCursor(Se(p, g.sel.head)), P(p, g), g.visualMode = !1, g.visualLine = !1, g.visualBlock = !1, g.insertMode || t.signal(p, "vim-mode-change", { mode: "normal" });\n  }\n  function Je(p, d, g) {\n    var b = p.getRange(d, g);\n    if (/\\n\\s*$/.test(b)) {\n      var x = b.split(`\n`);\n      x.pop();\n      for (var w = x.pop(); x.length > 0 && w && Z(w); w = x.pop())\n        g.line--, g.ch = 0;\n      w ? (g.line--, g.ch = vt(p, g.line)) : g.ch = 0;\n    }\n  }\n  function Rt(p, d, g) {\n    d.ch = 0, g.ch = 0, g.line++;\n  }\n  function Ht(p) {\n    if (!p)\n      return 0;\n    var d = p.search(/\\S/);\n    return d == -1 ? p.length : d;\n  }\n  function mr(p, { inclusive: d, innerWord: g, bigWord: b, noSymbol: x, multiline: w }, E) {\n    var Q = E || pe(p), j = p.getLine(Q.line), V = j, X = Q.line, Y = X, ee = Q.ch, z, G = x ? f[0] : m[0];\n    if (g && /\\s/.test(j.charAt(ee)))\n      G = function(bt) {\n        return /\\s/.test(bt);\n      };\n    else {\n      for (; !G(j.charAt(ee)); )\n        if (ee++, ee >= j.length) {\n          if (!w) return null;\n          ee--, z = rl(p, Q, !0, b, !0);\n          break;\n        }\n      b ? G = m[0] : (G = f[0], G(j.charAt(ee)) || (G = f[1]));\n    }\n    for (var te = ee, ue = ee; G(j.charAt(ue)) && ue >= 0; )\n      ue--;\n    if (ue++, z)\n      te = z.to, Y = z.line, V = p.getLine(Y), !V && te == 0 && te++;\n    else\n      for (; G(j.charAt(te)) && te < j.length; )\n        te++;\n    if (d) {\n      var $e = te, Be = Q.ch <= ue && /\\s/.test(j.charAt(Q.ch));\n      if (!Be)\n        for (; /\\s/.test(V.charAt(te)) && te < V.length; )\n          te++;\n      if ($e == te || Be) {\n        for (var Ve = ue; /\\s/.test(j.charAt(ue - 1)) && ue > 0; )\n          ue--;\n        !ue && !Be && (ue = Ve);\n      }\n    }\n    return { start: new e(X, ue), end: new e(Y, te) };\n  }\n  function $s(p, d, g) {\n    var b = d;\n    if (!t.findMatchingTag || !t.findEnclosingTag)\n      return { start: b, end: b };\n    var x = t.findMatchingTag(p, d) || t.findEnclosingTag(p, d);\n    return !x || !x.open || !x.close ? { start: b, end: b } : g ? { start: x.open.from, end: x.close.to } : { start: x.open.to, end: x.close.from };\n  }\n  function hs(p, d, g) {\n    Re(d, g) || re.jumpList.add(p, d, g);\n  }\n  function Qn(p, d) {\n    re.lastCharacterSearch.increment = p, re.lastCharacterSearch.forward = d.forward, re.lastCharacterSearch.selectedCharacter = d.selectedCharacter;\n  }\n  var Wc = {\n    "(": "bracket",\n    ")": "bracket",\n    "{": "bracket",\n    "}": "bracket",\n    "[": "section",\n    "]": "section",\n    "*": "comment",\n    "/": "comment",\n    m: "method",\n    M: "method",\n    "#": "preprocess"\n  }, nl = {\n    bracket: {\n      isComplete: function(p) {\n        if (p.nextCh === p.symb) {\n          if (p.depth++, p.depth >= 1) return !0;\n        } else p.nextCh === p.reverseSymb && p.depth--;\n        return !1;\n      }\n    },\n    section: {\n      init: function(p) {\n        p.curMoveThrough = !0, p.symb = (p.forward ? "]" : "[") === p.symb ? "{" : "}";\n      },\n      isComplete: function(p) {\n        return p.index === 0 && p.nextCh === p.symb;\n      }\n    },\n    comment: {\n      isComplete: function(p) {\n        var d = p.lastCh === "*" && p.nextCh === "/";\n        return p.lastCh = p.nextCh, d;\n      }\n    },\n    // TODO: The original Vim implementation only operates on level 1 and 2.\n    // The current implementation doesn\'t check for code block level and\n    // therefore it operates on any levels.\n    method: {\n      init: function(p) {\n        p.symb = p.symb === "m" ? "{" : "}", p.reverseSymb = p.symb === "{" ? "}" : "{";\n      },\n      isComplete: function(p) {\n        return p.nextCh === p.symb;\n      }\n    },\n    preprocess: {\n      init: function(p) {\n        p.index = 0;\n      },\n      isComplete: function(p) {\n        if (p.nextCh === "#") {\n          var d = p.lineText.match(/^#(\\w+)/)[1];\n          if (d === "endif") {\n            if (p.forward && p.depth === 0)\n              return !0;\n            p.depth++;\n          } else if (d === "if") {\n            if (!p.forward && p.depth === 0)\n              return !0;\n            p.depth--;\n          }\n          if (d === "else" && p.depth === 0) return !0;\n        }\n        return !1;\n      }\n    }\n  };\n  function Uc(p, d, g, b) {\n    var x = Ye(p.getCursor()), w = g ? 1 : -1, E = g ? p.lineCount() : -1, Q = x.ch, j = x.line, V = p.getLine(j), X = {\n      lineText: V,\n      nextCh: V.charAt(Q),\n      lastCh: null,\n      index: Q,\n      symb: b,\n      reverseSymb: (g ? { ")": "(", "}": "{" } : { "(": ")", "{": "}" })[b],\n      forward: g,\n      depth: 0,\n      curMoveThrough: !1\n    }, Y = Wc[b];\n    if (!Y) return x;\n    var ee = nl[Y].init, z = nl[Y].isComplete;\n    for (ee && ee(X); j !== E && d; ) {\n      if (X.index += w, X.nextCh = X.lineText.charAt(X.index), !X.nextCh) {\n        if (j += w, X.lineText = p.getLine(j) || "", w > 0)\n          X.index = 0;\n        else {\n          var G = X.lineText.length;\n          X.index = G > 0 ? G - 1 : 0;\n        }\n        X.nextCh = X.lineText.charAt(X.index);\n      }\n      z(X) && (x.line = j, x.ch = X.index, d--);\n    }\n    return X.nextCh || X.curMoveThrough ? new e(j, X.index) : x;\n  }\n  function rl(p, d, g, b, x) {\n    var w = d.line, E = d.ch, Q = p.getLine(w), j = g ? 1 : -1, V = b ? m : f;\n    if (x && Q == "") {\n      if (w += j, Q = p.getLine(w), !M(p, w))\n        return null;\n      E = g ? 0 : Q.length;\n    }\n    for (; ; ) {\n      if (x && Q == "")\n        return { from: 0, to: 0, line: w };\n      for (var X = j > 0 ? Q.length : -1, Y = X, ee = X; E != X; ) {\n        for (var z = !1, G = 0; G < V.length && !z; ++G)\n          if (V[G](Q.charAt(E))) {\n            for (Y = E; E != X && V[G](Q.charAt(E)); )\n              E += j;\n            if (ee = E, z = Y != ee, Y == d.ch && w == d.line && ee == Y + j)\n              continue;\n            return {\n              from: Math.min(Y, ee + 1),\n              to: Math.max(Y, ee),\n              line: w\n            };\n          }\n        z || (E += j);\n      }\n      if (w += j, !M(p, w))\n        return null;\n      Q = p.getLine(w), E = j > 0 ? 0 : Q.length;\n    }\n  }\n  function qc(p, d, g, b, x, w) {\n    var E = Ye(d), Q = [];\n    (b && !x || !b && x) && g++;\n    for (var j = !(b && x), V = 0; V < g; V++) {\n      var X = rl(p, d, b, w, j);\n      if (!X) {\n        var Y = vt(p, p.lastLine());\n        Q.push(b ? { line: p.lastLine(), from: Y, to: Y } : { line: 0, from: 0, to: 0 });\n        break;\n      }\n      Q.push(X), d = new e(X.line, b ? X.to - 1 : X.from);\n    }\n    var ee = Q.length != g, z = Q[0], G = Q.pop();\n    return b && !x ? (!ee && (z.from != E.ch || z.line != E.line) && (G = Q.pop()), G && new e(G.line, G.from)) : b && x ? G && new e(G.line, G.to - 1) : !b && x ? (!ee && (z.to != E.ch || z.line != E.line) && (G = Q.pop()), G && new e(G.line, G.to)) : G && new e(G.line, G.from);\n  }\n  function il(p, d, g, b, x) {\n    var w = d, E = new e(w.line + g.repeat - 1, 1 / 0), Q = p.clipPos(E);\n    return Q.ch--, x || (b.lastHPos = 1 / 0, b.lastHSPos = p.charCoords(Q, "div").left), E;\n  }\n  function $a(p, d, g, b, x) {\n    if (b) {\n      for (var w = x || p.getCursor(), E = w.ch, Q, j = 0; j < d; j++) {\n        var V = p.getLine(w.line);\n        if (Q = zc(E, V, b, g), Q == -1)\n          return;\n        E = Q;\n      }\n      if (Q != null)\n        return new e(p.getCursor().line, Q);\n    }\n  }\n  function Gc(p, d) {\n    var g = p.getCursor().line;\n    return Se(p, new e(g, d - 1));\n  }\n  function Zr(p, d, g, b) {\n    !q(g, y) && !C.test(g) || (d.marks[g] && d.marks[g].clear(), d.marks[g] = p.setBookmark(b));\n  }\n  function zc(p, d, g, b, x) {\n    var w;\n    return b ? w = d.indexOf(g, p + 1) : w = d.lastIndexOf(g, p - 1), w;\n  }\n  function sl(p, d, g, b, x) {\n    var w = d.line, E = p.firstLine(), Q = p.lastLine(), j, V, X = w;\n    function Y(ue) {\n      return !p.getLine(ue);\n    }\n    function ee(ue, $e, Be) {\n      return Be ? Y(ue) != Y(ue + $e) : !Y(ue) && Y(ue + $e);\n    }\n    if (b) {\n      for (; E <= X && X <= Q && g > 0; )\n        ee(X, b) && g--, X += b;\n      return { start: new e(X, 0), end: d };\n    }\n    var z = p.state.vim;\n    if (z.visualLine && ee(w, 1, !0)) {\n      var G = z.sel.anchor;\n      ee(G.line, -1, !0) && (!x || G.line != w) && (w += 1);\n    }\n    var te = Y(w);\n    for (X = w; X <= Q && g; X++)\n      ee(X, 1, !0) && (!x || Y(X) != te) && g--;\n    for (V = new e(X, 0), X > Q && !te ? te = !0 : x = !1, X = w; X > E && !((!x || Y(X) == te || X == w) && ee(X, -1, !0)); X--)\n      ;\n    return j = new e(X, 0), { start: j, end: V };\n  }\n  function al(p, d, g, b, x) {\n    function w(V) {\n      V.pos + V.dir < 0 || V.pos + V.dir >= V.line.length ? V.line = null : V.pos += V.dir;\n    }\n    function E(V, X, Y, ee) {\n      var z = V.getLine(X), G = {\n        line: z,\n        ln: X,\n        pos: Y,\n        dir: ee\n      };\n      if (G.line === "")\n        return { ln: G.ln, pos: G.pos };\n      var te = G.pos;\n      for (w(G); G.line !== null; ) {\n        if (te = G.pos, N(G.line[G.pos]))\n          if (x) {\n            for (w(G); G.line !== null && Z(G.line[G.pos]); )\n              te = G.pos, w(G);\n            return { ln: G.ln, pos: te + 1 };\n          } else\n            return { ln: G.ln, pos: G.pos + 1 };\n        w(G);\n      }\n      return { ln: G.ln, pos: te + 1 };\n    }\n    function Q(V, X, Y, ee) {\n      var z = V.getLine(X), G = {\n        line: z,\n        ln: X,\n        pos: Y,\n        dir: ee\n      };\n      if (G.line === "")\n        return { ln: G.ln, pos: G.pos };\n      var te = G.pos;\n      for (w(G); G.line !== null; ) {\n        if (!Z(G.line[G.pos]) && !N(G.line[G.pos]))\n          te = G.pos;\n        else if (N(G.line[G.pos]))\n          return x ? Z(G.line[G.pos + 1]) ? { ln: G.ln, pos: G.pos + 1 } : { ln: G.ln, pos: te } : { ln: G.ln, pos: te };\n        w(G);\n      }\n      return G.line = z, x && Z(G.line[G.pos]) ? { ln: G.ln, pos: G.pos } : { ln: G.ln, pos: te };\n    }\n    for (var j = {\n      ln: d.line,\n      pos: d.ch\n    }; g > 0; )\n      b < 0 ? j = Q(p, j.ln, j.pos, b) : j = E(p, j.ln, j.pos, b), g--;\n    return new e(j.ln, j.pos);\n  }\n  function Hc(p, d, g, b) {\n    function x(j, V) {\n      if (V.pos + V.dir < 0 || V.pos + V.dir >= V.line.length) {\n        if (V.ln += V.dir, !M(j, V.ln)) {\n          V.line = null, V.ln = null, V.pos = null;\n          return;\n        }\n        V.line = j.getLine(V.ln), V.pos = V.dir > 0 ? 0 : V.line.length - 1;\n      } else\n        V.pos += V.dir;\n    }\n    function w(j, V, X, Y) {\n      var ue = j.getLine(V), ee = ue === "", z = {\n        line: ue,\n        ln: V,\n        pos: X,\n        dir: Y\n      }, G = {\n        ln: z.ln,\n        pos: z.pos\n      }, te = z.line === "";\n      for (x(j, z); z.line !== null; ) {\n        if (G.ln = z.ln, G.pos = z.pos, z.line === "" && !te)\n          return { ln: z.ln, pos: z.pos };\n        if (ee && z.line !== "" && !Z(z.line[z.pos]))\n          return { ln: z.ln, pos: z.pos };\n        N(z.line[z.pos]) && !ee && (z.pos === z.line.length - 1 || Z(z.line[z.pos + 1])) && (ee = !0), x(j, z);\n      }\n      var ue = j.getLine(G.ln);\n      G.pos = 0;\n      for (var $e = ue.length - 1; $e >= 0; --$e)\n        if (!Z(ue[$e])) {\n          G.pos = $e;\n          break;\n        }\n      return G;\n    }\n    function E(j, V, X, Y) {\n      var te = j.getLine(V), ee = {\n        line: te,\n        ln: V,\n        pos: X,\n        dir: Y\n      }, z = {\n        ln: ee.ln,\n        pos: null\n      }, G = ee.line === "";\n      for (x(j, ee); ee.line !== null; ) {\n        if (ee.line === "" && !G)\n          return z.pos !== null ? z : { ln: ee.ln, pos: ee.pos };\n        if (N(ee.line[ee.pos]) && z.pos !== null && !(ee.ln === z.ln && ee.pos + 1 === z.pos))\n          return z;\n        ee.line !== "" && !Z(ee.line[ee.pos]) && (G = !1, z = { ln: ee.ln, pos: ee.pos }), x(j, ee);\n      }\n      var te = j.getLine(z.ln);\n      z.pos = 0;\n      for (var ue = 0; ue < te.length; ++ue)\n        if (!Z(te[ue])) {\n          z.pos = ue;\n          break;\n        }\n      return z;\n    }\n    for (var Q = {\n      ln: d.line,\n      pos: d.ch\n    }; g > 0; )\n      b < 0 ? Q = E(p, Q.ln, Q.pos, b) : Q = w(p, Q.ln, Q.pos, b), g--;\n    return new e(Q.ln, Q.pos);\n  }\n  function ol(p, d, g, b) {\n    var x = d, w = {\n      "(": /[()]/,\n      ")": /[()]/,\n      "[": /[[\\]]/,\n      "]": /[[\\]]/,\n      "{": /[{}]/,\n      "}": /[{}]/,\n      "<": /[<>]/,\n      ">": /[<>]/\n    }[g], E = {\n      "(": "(",\n      ")": "(",\n      "[": "[",\n      "]": "[",\n      "{": "{",\n      "}": "{",\n      "<": "<",\n      ">": "<"\n    }[g], Q = p.getLine(x.line).charAt(x.ch), j = Q === E ? 1 : 0, V = p.scanForBracket(new e(x.line, x.ch + j), -1, void 0, { bracketRegex: w }), X = p.scanForBracket(new e(x.line, x.ch + j), 1, void 0, { bracketRegex: w });\n    if (!V || !X) return null;\n    var Y = V.pos, ee = X.pos;\n    if (Y.line == ee.line && Y.ch > ee.ch || Y.line > ee.line) {\n      var z = Y;\n      Y = ee, ee = z;\n    }\n    return b ? ee.ch += 1 : Y.ch += 1, { start: Y, end: ee };\n  }\n  function Yc(p, d, g, b) {\n    var x = Ye(d), w = p.getLine(x.line), E = w.split(""), Q, j, V, X, Y = E.indexOf(g);\n    if (x.ch < Y)\n      x.ch = Y;\n    else if (Y < x.ch && E[x.ch] == g) {\n      var ee = /string/.test(p.getTokenTypeAt(Xe(d, 0, 1))), z = /string/.test(p.getTokenTypeAt(d)), G = ee && !z;\n      G || (j = x.ch, --x.ch);\n    }\n    if (E[x.ch] == g && !j)\n      Q = x.ch + 1;\n    else\n      for (V = x.ch; V > -1 && !Q; V--)\n        E[V] == g && (Q = V + 1);\n    if (Q && !j)\n      for (V = Q, X = E.length; V < X && !j; V++)\n        E[V] == g && (j = V);\n    return !Q || !j ? { start: x, end: x } : (b && (--Q, ++j), {\n      start: new e(x.line, Q),\n      end: new e(x.line, j)\n    });\n  }\n  K("pcre", !0, "boolean");\n  class Kc {\n    getQuery() {\n      return re.query;\n    }\n    setQuery(d) {\n      re.query = d;\n    }\n    getOverlay() {\n      return this.searchOverlay;\n    }\n    setOverlay(d) {\n      this.searchOverlay = d;\n    }\n    isReversed() {\n      return re.isReversed;\n    }\n    setReversed(d) {\n      re.isReversed = d;\n    }\n    getScrollbarAnnotate() {\n      return this.annotate;\n    }\n    setScrollbarAnnotate(d) {\n      this.annotate = d;\n    }\n  }\n  function rr(p) {\n    var d = p.state.vim;\n    return d.searchState_ || (d.searchState_ = new Kc());\n  }\n  function Jc(p) {\n    return ll(p, "/");\n  }\n  function eh(p) {\n    return ul(p, "/");\n  }\n  function ll(p, d) {\n    var g = ul(p, d);\n    if (!g.length) return [];\n    var b = [];\n    if (g[0] === 0) {\n      for (var x = 0; x < g.length; x++)\n        typeof g[x] == "number" && b.push(p.substring(g[x] + 1, g[x + 1]));\n      return b;\n    }\n  }\n  function ul(p, d) {\n    d || (d = "/");\n    for (var g = !1, b = [], x = 0; x < p.length; x++) {\n      var w = p.charAt(x);\n      !g && w == d && b.push(x), g = !g && w == "\\\\";\n    }\n    return b;\n  }\n  function th(p) {\n    for (var d = "|(){", g = "}", b = !1, x = [], w = -1; w < p.length; w++) {\n      var E = p.charAt(w) || "", Q = p.charAt(w + 1) || "", j = Q && d.indexOf(Q) != -1;\n      b ? ((E !== "\\\\" || !j) && x.push(E), b = !1) : E === "\\\\" ? (b = !0, Q && g.indexOf(Q) != -1 && (j = !0), (!j || Q === "\\\\") && x.push(E)) : (x.push(E), j && Q !== "\\\\" && x.push("\\\\"));\n    }\n    return x.join("");\n  }\n  var cl = { "\\\\n": `\n`, "\\\\r": "\\r", "\\\\t": "\t" };\n  function nh(p) {\n    for (var d = !1, g = [], b = -1; b < p.length; b++) {\n      var x = p.charAt(b) || "", w = p.charAt(b + 1) || "";\n      cl[x + w] ? (g.push(cl[x + w]), b++) : d ? (g.push(x), d = !1) : x === "\\\\" ? (d = !0, R(w) || w === "$" ? g.push("$") : w !== "/" && w !== "\\\\" && g.push("\\\\")) : (x === "$" && g.push("$"), g.push(x), w === "/" && g.push("\\\\"));\n    }\n    return g.join("");\n  }\n  var hl = { "\\\\/": "/", "\\\\\\\\": "\\\\", "\\\\n": `\n`, "\\\\r": "\\r", "\\\\t": "\t", "\\\\&": "&" };\n  function rh(p) {\n    for (var d = new t.StringStream(p), g = []; !d.eol(); ) {\n      for (; d.peek() && d.peek() != "\\\\"; )\n        g.push(d.next());\n      var b = !1;\n      for (var x in hl)\n        if (d.match(x, !0)) {\n          b = !0, g.push(hl[x]);\n          break;\n        }\n      b || g.push(d.next());\n    }\n    return g.join("");\n  }\n  function ih(p, d, g) {\n    var b = re.registerController.getRegister("/");\n    if (b.setText(p), p instanceof RegExp)\n      return p;\n    var x = eh(p), w, E;\n    if (!x.length)\n      w = p;\n    else {\n      w = p.substring(0, x[0]);\n      var Q = p.substring(x[0]);\n      E = Q.indexOf("i") != -1;\n    }\n    if (!w)\n      return null;\n    H("pcre") || (w = th(w)), g && (d = /^[^A-Z]*$/.test(w));\n    var j = new RegExp(\n      w,\n      d || E ? "im" : "m"\n    );\n    return j;\n  }\n  function Jr(p) {\n    typeof p == "string" && (p = document.createElement(p));\n    for (var d, g = 1; g < arguments.length; g++)\n      if (d = arguments[g])\n        if (typeof d != "object" && (d = document.createTextNode(d)), d.nodeType) p.appendChild(d);\n        else for (var b in d)\n          Object.prototype.hasOwnProperty.call(d, b) && (b[0] === "$" ? p.style[b.slice(1)] = d[b] : p.setAttribute(b, d[b]));\n    return p;\n  }\n  function gt(p, d) {\n    var g = Jr("div", { $color: "red", $whiteSpace: "pre", class: "cm-vim-message" }, d);\n    p.openNotification ? p.openNotification(g, { bottom: !0, duration: 5e3 }) : alert(g.innerText);\n  }\n  function sh(p, d) {\n    return Jr(\n      "div",\n      { $display: "flex" },\n      Jr(\n        "span",\n        { $fontFamily: "monospace", $whiteSpace: "pre", $flex: 1 },\n        p,\n        Jr("input", {\n          type: "text",\n          autocorrect: "off",\n          autocapitalize: "off",\n          spellcheck: "false",\n          $width: "100%"\n        })\n      ),\n      d && Jr("span", { $color: "#888" }, d)\n    );\n  }\n  function ps(p, d) {\n    if (je.length) {\n      d.value || (d.value = ""), Pe = d;\n      return;\n    }\n    var g = sh(d.prefix, d.desc);\n    if (p.openDialog)\n      p.openDialog(g, d.onClose, {\n        onKeyDown: d.onKeyDown,\n        onKeyUp: d.onKeyUp,\n        bottom: !0,\n        selectValueOnOpen: !1,\n        value: d.value\n      });\n    else {\n      var b = "";\n      typeof d.prefix != "string" && d.prefix && (b += d.prefix.textContent), d.desc && (b += " " + d.desc), d.onClose(prompt(b, ""));\n    }\n  }\n  function pl(p, d) {\n    if (p instanceof RegExp && d instanceof RegExp) {\n      for (var g = ["global", "multiline", "ignoreCase", "source"], b = 0; b < g.length; b++) {\n        var x = g[b];\n        if (p[x] !== d[x])\n          return !1;\n      }\n      return !0;\n    }\n    return !1;\n  }\n  function fs(p, d, g, b) {\n    if (d) {\n      var x = rr(p), w = ih(d, !!g, !!b);\n      if (w)\n        return fl(p, w), pl(w, x.getQuery()) || x.setQuery(w), w;\n    }\n  }\n  function ah(p) {\n    if (p.source.charAt(0) == "^")\n      var d = !0;\n    return {\n      token: function(g) {\n        if (d && !g.sol()) {\n          g.skipToEnd();\n          return;\n        }\n        var b = g.match(p, !1);\n        if (b)\n          return b[0].length == 0 ? (g.next(), "searching") : !g.sol() && (g.backUp(1), !p.exec(g.next() + b[0])) ? (g.next(), null) : (g.match(p), "searching");\n        for (; !g.eol() && (g.next(), !g.match(p, !1)); )\n          ;\n      },\n      query: p\n    };\n  }\n  var ds = 0;\n  function fl(p, d) {\n    clearTimeout(ds);\n    var g = rr(p);\n    g.highlightTimeout = ds, ds = setTimeout(function() {\n      if (p.state.vim) {\n        var b = rr(p);\n        b.highlightTimeout = null;\n        var x = b.getOverlay();\n        (!x || d != x.query) && (x && p.removeOverlay(x), x = ah(d), p.addOverlay(x), p.showMatchesOnScrollbar && (b.getScrollbarAnnotate() && b.getScrollbarAnnotate().clear(), b.setScrollbarAnnotate(p.showMatchesOnScrollbar(d))), b.setOverlay(x));\n      }\n    }, 50);\n  }\n  function dl(p, d, g, b) {\n    return p.operation(function() {\n      b === void 0 && (b = 1);\n      for (var x = p.getCursor(), w = p.getSearchCursor(g, x), E = 0; E < b; E++) {\n        var Q = w.find(d);\n        if (E == 0 && Q && Re(w.from(), x)) {\n          var j = d ? w.from() : w.to();\n          Q = w.find(d), Q && !Q[0] && Re(w.from(), j) && p.getLine(j.line).length == j.ch && (Q = w.find(d));\n        }\n        if (!Q && (w = p.getSearchCursor(\n          g,\n          // @ts-ignore\n          d ? new e(p.lastLine()) : new e(p.firstLine(), 0)\n        ), !w.find(d)))\n          return;\n      }\n      return w.from();\n    });\n  }\n  function oh(p, d, g, b, x) {\n    return p.operation(function() {\n      b === void 0 && (b = 1);\n      var w = p.getCursor(), E = p.getSearchCursor(g, w), Q = E.find(!d);\n      !x.visualMode && Q && Re(E.from(), w) && E.find(!d);\n      for (var j = 0; j < b; j++)\n        if (Q = E.find(d), !Q && (E = p.getSearchCursor(\n          g,\n          // @ts-ignore\n          d ? new e(p.lastLine()) : new e(p.firstLine(), 0)\n        ), !E.find(d)))\n          return;\n      return [E.from(), E.to()];\n    });\n  }\n  function La(p) {\n    var d = rr(p);\n    d.highlightTimeout && (clearTimeout(d.highlightTimeout), d.highlightTimeout = null), p.removeOverlay(rr(p).getOverlay()), d.setOverlay(null), d.getScrollbarAnnotate() && (d.getScrollbarAnnotate().clear(), d.setScrollbarAnnotate(null));\n  }\n  function lh(p, d, g) {\n    return typeof p != "number" && (p = p.line), d instanceof Array ? q(p, d) : typeof g == "number" ? p >= d && p <= g : p == d;\n  }\n  function L(p) {\n    var d = p.getScrollInfo(), g = 6, b = 10, x = p.coordsChar({ left: 0, top: g + d.top }, "local"), w = d.clientHeight - b + d.top, E = p.coordsChar({ left: 0, top: w }, "local");\n    return { top: x.line, bottom: E.line };\n  }\n  function Ne(p, d, g) {\n    if (g == "\'" || g == "`")\n      return re.jumpList.find(p, -1) || new e(0, 0);\n    if (g == ".")\n      return xi(p);\n    var b = d.marks[g];\n    return b && b.find();\n  }\n  function xi(p) {\n    if (p.getLastEditEnd)\n      return p.getLastEditEnd();\n    for (var d = (\n      /**@type{any}*/\n      p.doc.history.done\n    ), g = d.length; g--; )\n      if (d[g].changes)\n        return Ye(d[g].changes[0].to);\n  }\n  class ir {\n    constructor() {\n      this.commandMap_, this.buildCommandMap_();\n    }\n    processCommand(d, g, b) {\n      var x = this;\n      d.operation(function() {\n        d.curOp.isVimOp = !0, x._processCommand(d, g, b);\n      });\n    }\n    _processCommand(d, g, b) {\n      var x = d.state.vim, w = re.registerController.getRegister(":"), E = w.toString(), Q = new t.StringStream(g);\n      w.setText(g);\n      var j = b || {};\n      j.input = g;\n      try {\n        this.parseInput_(d, Q, j);\n      } catch (Y) {\n        throw gt(d, Y + ""), Y;\n      }\n      x.visualMode && ge(d);\n      var V, X;\n      if (!j.commandName)\n        j.line !== void 0 && (X = "move");\n      else if (V = this.matchCommand_(j.commandName), V) {\n        if (X = V.name, V.excludeFromCommandHistory && w.setText(E), this.parseCommandArgs_(Q, j, V), V.type == "exToKey") {\n          ut(d, V.toKeys, V);\n          return;\n        } else if (V.type == "exToEx") {\n          this.processCommand(d, V.toInput);\n          return;\n        }\n      }\n      if (!X) {\n        gt(d, \'Not an editor command ":\' + g + \'"\');\n        return;\n      }\n      try {\n        ms[X](d, j), (!V || !V.possiblyAsync) && j.callback && j.callback();\n      } catch (Y) {\n        throw gt(d, Y + ""), Y;\n      }\n    }\n    parseInput_(d, g, b) {\n      g.eatWhile(":"), g.eat("%") ? (b.line = d.firstLine(), b.lineEnd = d.lastLine()) : (b.line = this.parseLineSpec_(d, g), b.line !== void 0 && g.eat(",") && (b.lineEnd = this.parseLineSpec_(d, g))), b.line == null ? d.state.vim.visualMode ? (b.selectionLine = Ne(d, d.state.vim, "<")?.line, b.selectionLineEnd = Ne(d, d.state.vim, ">")?.line) : b.selectionLine = d.getCursor().line : (b.selectionLine = b.line, b.selectionLineEnd = b.lineEnd);\n      var x = g.match(/^(\\w+|!!|@@|[!#&*<=>@~])/);\n      return x ? b.commandName = x[1] : b.commandName = g.match(/.*/)[0], b;\n    }\n    parseLineSpec_(d, g) {\n      var b = g.match(/^(\\d+)/);\n      if (b)\n        return parseInt(b[1], 10) - 1;\n      switch (g.next()) {\n        case ".":\n          return this.parseLineSpecOffset_(g, d.getCursor().line);\n        case "$":\n          return this.parseLineSpecOffset_(g, d.lastLine());\n        case "\'":\n          var x = g.next(), w = Ne(d, d.state.vim, x);\n          if (!w) throw new Error("Mark not set");\n          return this.parseLineSpecOffset_(g, w.line);\n        case "-":\n        case "+":\n          return g.backUp(1), this.parseLineSpecOffset_(g, d.getCursor().line);\n        default:\n          g.backUp(1);\n          return;\n      }\n    }\n    parseLineSpecOffset_(d, g) {\n      var b = d.match(/^([+-])?(\\d+)/);\n      if (b) {\n        var x = parseInt(b[2], 10);\n        b[1] == "-" ? g -= x : g += x;\n      }\n      return g;\n    }\n    parseCommandArgs_(d, g, b) {\n      if (!d.eol()) {\n        g.argString = d.match(/.*/)[0];\n        var x = b.argDelimiter || /\\s+/, w = ze(g.argString).split(x);\n        w.length && w[0] && (g.args = w);\n      }\n    }\n    matchCommand_(d) {\n      for (var g = d.length; g > 0; g--) {\n        var b = d.substring(0, g);\n        if (this.commandMap_[b]) {\n          var x = this.commandMap_[b];\n          if (x.name.indexOf(d) === 0)\n            return x;\n        }\n      }\n      return null;\n    }\n    buildCommandMap_() {\n      this.commandMap_ = {};\n      for (var d = 0; d < s.length; d++) {\n        var g = s[d], b = g.shortName || g.name;\n        this.commandMap_[b] = g;\n      }\n    }\n    /**@type {(lhs: string, rhs: string, ctx: string, noremap?: boolean) => void} */\n    map(d, g, b, x) {\n      if (d != ":" && d.charAt(0) == ":") {\n        if (b)\n          throw Error("Mode not supported for ex mappings");\n        var w = d.substring(1);\n        g != ":" && g.charAt(0) == ":" ? this.commandMap_[w] = {\n          name: w,\n          type: "exToEx",\n          toInput: g.substring(1),\n          user: !0\n        } : this.commandMap_[w] = {\n          name: w,\n          type: "exToKey",\n          toKeys: g,\n          user: !0\n        };\n      } else {\n        var E = {\n          keys: d,\n          type: "keyToKey",\n          toKeys: g,\n          noremap: !!x\n        };\n        b && (E.context = b), r.unshift(E);\n      }\n    }\n    /**@type {(lhs: string, ctx: string) => boolean|void} */\n    unmap(d, g) {\n      if (d != ":" && d.charAt(0) == ":") {\n        if (g)\n          throw Error("Mode not supported for ex mappings");\n        var b = d.substring(1);\n        if (this.commandMap_[b] && this.commandMap_[b].user)\n          return delete this.commandMap_[b], !0;\n      } else\n        for (var x = d, w = 0; w < r.length; w++)\n          if (x == r[w].keys && r[w].context === g)\n            return r.splice(w, 1), !0;\n    }\n  }\n  var ms = {\n    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/\n    colorscheme: function(p, d) {\n      if (!d.args || d.args.length < 1) {\n        gt(p, p.getOption("theme"));\n        return;\n      }\n      p.setOption("theme", d.args[0]);\n    },\n    map: function(p, d, g, b) {\n      var x = d.args;\n      if (!x || x.length < 2) {\n        p && gt(p, "Invalid mapping: " + d.input);\n        return;\n      }\n      we.map(x[0], x[1], g, b);\n    },\n    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/\n    imap: function(p, d) {\n      this.map(p, d, "insert");\n    },\n    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/\n    nmap: function(p, d) {\n      this.map(p, d, "normal");\n    },\n    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/\n    vmap: function(p, d) {\n      this.map(p, d, "visual");\n    },\n    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/\n    omap: function(p, d) {\n      this.map(p, d, "operatorPending");\n    },\n    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/\n    noremap: function(p, d) {\n      this.map(p, d, void 0, !0);\n    },\n    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/\n    inoremap: function(p, d) {\n      this.map(p, d, "insert", !0);\n    },\n    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/\n    nnoremap: function(p, d) {\n      this.map(p, d, "normal", !0);\n    },\n    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/\n    vnoremap: function(p, d) {\n      this.map(p, d, "visual", !0);\n    },\n    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/\n    onoremap: function(p, d) {\n      this.map(p, d, "operatorPending", !0);\n    },\n    /** @arg {CodeMirrorV} cm @arg {ExParams} params @arg {string} ctx*/\n    unmap: function(p, d, g) {\n      var b = d.args;\n      (!b || b.length < 1 || !we.unmap(b[0], g)) && p && gt(p, "No such mapping: " + d.input);\n    },\n    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/\n    mapclear: function(p, d) {\n      xe.mapclear();\n    },\n    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/\n    imapclear: function(p, d) {\n      xe.mapclear("insert");\n    },\n    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/\n    nmapclear: function(p, d) {\n      xe.mapclear("normal");\n    },\n    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/\n    vmapclear: function(p, d) {\n      xe.mapclear("visual");\n    },\n    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/\n    omapclear: function(p, d) {\n      xe.mapclear("operatorPending");\n    },\n    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/\n    move: function(p, d) {\n      Mn.processCommand(p, p.state.vim, {\n        keys: "",\n        type: "motion",\n        motion: "moveToLineOrEdgeOfDocument",\n        motionArgs: { forward: !1, explicitRepeat: !0, linewise: !0 },\n        repeatOverride: d.line + 1\n      });\n    },\n    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/\n    set: function(p, d) {\n      var g = d.args, b = d.setCfg || {};\n      if (!g || g.length < 1) {\n        p && gt(p, "Invalid mapping: " + d.input);\n        return;\n      }\n      var x = g[0].split("="), w = x.shift() || "", E = x.length > 0 ? x.join("=") : void 0, Q = !1, j = !1;\n      if (w.charAt(w.length - 1) == "?") {\n        if (E)\n          throw Error("Trailing characters: " + d.argString);\n        w = w.substring(0, w.length - 1), Q = !0;\n      } else w.charAt(w.length - 1) == "!" && (w = w.substring(0, w.length - 1), j = !0);\n      E === void 0 && w.substring(0, 2) == "no" && (w = w.substring(2), E = !1);\n      var V = se[w] && se[w].type == "boolean";\n      if (V && (j ? E = !H(w, p, b) : E == null && (E = !0)), !V && E === void 0 || Q) {\n        var X = H(w, p, b);\n        X instanceof Error ? gt(p, X.message) : X === !0 || X === !1 ? gt(p, " " + (X ? "" : "no") + w) : gt(p, "  " + w + "=" + X);\n      } else {\n        var Y = ce(w, E, p, b);\n        Y instanceof Error && gt(p, Y.message);\n      }\n    },\n    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/\n    setlocal: function(p, d) {\n      d.setCfg = { scope: "local" }, this.set(p, d);\n    },\n    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/\n    setglobal: function(p, d) {\n      d.setCfg = { scope: "global" }, this.set(p, d);\n    },\n    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/\n    registers: function(p, d) {\n      var g = d.args, b = re.registerController.registers, x = `----------Registers----------\n\n`;\n      if (g)\n        for (var Q = g.join(""), j = 0; j < Q.length; j++) {\n          var w = Q.charAt(j);\n          if (re.registerController.isValidRegister(w)) {\n            var V = b[w] || new Xt();\n            x += \'"\' + w + "    " + V.toString() + `\n`;\n          }\n        }\n      else\n        for (var w in b) {\n          var E = b[w].toString();\n          E.length && (x += \'"\' + w + "    " + E + `\n`);\n        }\n      gt(p, x);\n    },\n    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/\n    sort: function(p, d) {\n      var g, b, x, w, E;\n      function Q() {\n        if (d.argString) {\n          var it = new t.StringStream(d.argString);\n          if (it.eat("!") && (g = !0), it.eol())\n            return;\n          if (!it.eatSpace())\n            return "Invalid arguments";\n          var et = it.match(/([dinuox]+)?\\s*(\\/.+\\/)?\\s*/);\n          if (!et || !it.eol())\n            return "Invalid arguments";\n          if (et[1]) {\n            b = et[1].indexOf("i") != -1, x = et[1].indexOf("u") != -1;\n            var _t = et[1].indexOf("d") != -1 || et[1].indexOf("n") != -1, Yt = et[1].indexOf("x") != -1, Kt = et[1].indexOf("o") != -1;\n            if (Number(_t) + Number(Yt) + Number(Kt) > 1)\n              return "Invalid arguments";\n            w = _t && "decimal" || Yt && "hex" || Kt && "octal";\n          }\n          et[2] && (E = new RegExp(et[2].substr(1, et[2].length - 2), b ? "i" : ""));\n        }\n      }\n      var j = Q();\n      if (j) {\n        gt(p, j + ": " + d.argString);\n        return;\n      }\n      var V = d.line || p.firstLine(), X = d.lineEnd || d.line || p.lastLine();\n      if (V == X)\n        return;\n      var Y = new e(V, 0), ee = new e(X, vt(p, X)), z = p.getRange(Y, ee).split(`\n`), G = w == "decimal" ? /(-?)([\\d]+)/ : w == "hex" ? /(-?)(?:0x)?([0-9a-f]+)/i : w == "octal" ? /([0-7]+)/ : null, te = w == "decimal" ? 10 : w == "hex" ? 16 : w == "octal" ? 8 : void 0, ue = [], $e = [];\n      if (w || E)\n        for (var Be = 0; Be < z.length; Be++) {\n          var Ve = E ? z[Be].match(E) : null;\n          Ve && Ve[0] != "" ? ue.push(Ve) : G && G.exec(z[Be]) ? ue.push(z[Be]) : $e.push(z[Be]);\n        }\n      else\n        $e = z;\n      function bt(it, et) {\n        if (g) {\n          var _t;\n          _t = it, it = et, et = _t;\n        }\n        b && (it = it.toLowerCase(), et = et.toLowerCase());\n        var Yt = G && G.exec(it), Kt = G && G.exec(et);\n        if (!Yt || !Kt)\n          return it < et ? -1 : 1;\n        var br = parseInt((Yt[1] + Yt[2]).toLowerCase(), te), Ns = parseInt((Kt[1] + Kt[2]).toLowerCase(), te);\n        return br - Ns;\n      }\n      function dn(it, et) {\n        if (g) {\n          var _t;\n          _t = it, it = et, et = _t;\n        }\n        return b && (it[0] = it[0].toLowerCase(), et[0] = et[0].toLowerCase()), it[0] < et[0] ? -1 : 1;\n      }\n      if (ue.sort(E ? dn : bt), E)\n        for (var Be = 0; Be < ue.length; Be++)\n          ue[Be] = ue[Be].input;\n      else w || $e.sort(bt);\n      if (z = g ? ue.concat($e) : $e.concat(ue), x) {\n        var Ut = z, on;\n        z = [];\n        for (var Be = 0; Be < Ut.length; Be++)\n          Ut[Be] != on && z.push(Ut[Be]), on = Ut[Be];\n      }\n      p.replaceRange(z.join(`\n`), Y, ee);\n    },\n    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/\n    vglobal: function(p, d) {\n      this.global(p, d);\n    },\n    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/\n    normal: function(p, d) {\n      var g = d.argString;\n      if (g && g[0] == "!" && (g = g.slice(1), he = !0), g = g.trimStart(), !g) {\n        gt(p, "Argument is required.");\n        return;\n      }\n      var b = d.line;\n      if (typeof b == "number")\n        for (var x = isNaN(d.lineEnd) ? b : d.lineEnd, w = b; w <= x; w++)\n          p.setCursor(w, 0), ut(p, d.argString.trimStart()), p.state.vim.insertMode && ei(p, !0);\n      else\n        ut(p, d.argString.trimStart()), p.state.vim.insertMode && ei(p, !0);\n    },\n    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/\n    global: function(p, d) {\n      var g = d.argString;\n      if (!g) {\n        gt(p, "Regular Expression missing from global");\n        return;\n      }\n      var b = d.commandName[0] === "v";\n      g[0] === "!" && d.commandName[0] === "g" && (b = !0, g = g.slice(1));\n      var x = d.line !== void 0 ? d.line : p.firstLine(), w = d.lineEnd || d.line || p.lastLine(), E = Jc(g), Q = g, j = "";\n      if (E && E.length && (Q = E[0], j = E.slice(1, E.length).join("/")), Q)\n        try {\n          fs(\n            p,\n            Q,\n            !0,\n            !0\n            /** smartCase */\n          );\n        } catch {\n          gt(p, "Invalid regex: " + Q);\n          return;\n        }\n      for (var V = rr(p).getQuery(), X = [], Y = x; Y <= w; Y++) {\n        var ee = p.getLine(Y), z = V.test(ee);\n        z !== b && X.push(j ? p.getLineHandle(Y) : ee);\n      }\n      if (!j) {\n        gt(p, X.join(`\n`));\n        return;\n      }\n      var G = 0, te = function() {\n        if (G < X.length) {\n          var ue = X[G++], $e = p.getLineNumber(ue);\n          if ($e == null) {\n            te();\n            return;\n          }\n          var Be = $e + 1 + j;\n          we.processCommand(p, Be, {\n            callback: te\n          });\n        } else p.releaseLineHandles && p.releaseLineHandles();\n      };\n      te();\n    },\n    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/\n    substitute: function(p, d) {\n      if (!p.getSearchCursor)\n        throw new Error("Search feature not available. Requires searchcursor.js or any other getSearchCursor implementation.");\n      var g = d.argString, b = g ? ll(g, g[0]) : [], x = "", w = "", E, Q, j, V = !1, X = !1;\n      if (b && b.length)\n        x = b[0], H("pcre") && x !== "" && (x = new RegExp(x).source), w = b[1], w !== void 0 && (H("pcre") ? w = rh(w.replace(/([^\\\\])&/g, "$1$$&")) : w = nh(w), re.lastSubstituteReplacePart = w), E = b[2] ? b[2].split(" ") : [];\n      else if (g && g.length) {\n        gt(p, "Substitutions should be of the form :s/pattern/replace/");\n        return;\n      }\n      if (E && (Q = E[0], j = parseInt(E[1]), Q && (Q.indexOf("c") != -1 && (V = !0), Q.indexOf("g") != -1 && (X = !0), H("pcre") ? x = x + "/" + Q : x = x.replace(/\\//g, "\\\\/") + "/" + Q)), x)\n        try {\n          fs(\n            p,\n            x,\n            !0,\n            !0\n            /** smartCase */\n          );\n        } catch {\n          gt(p, "Invalid regex: " + x);\n          return;\n        }\n      if (w = w || re.lastSubstituteReplacePart, w === void 0) {\n        gt(p, "No previous substitute regular expression");\n        return;\n      }\n      var Y = rr(p), ee = Y.getQuery(), z = d.line !== void 0 ? d.line : p.getCursor().line, G = d.lineEnd || z;\n      z == p.firstLine() && G == p.lastLine() && (G = 1 / 0), j && (z = G, G = z + j - 1);\n      var te = Se(p, new e(z, 0)), ue = p.getSearchCursor(ee, te);\n      gs(p, V, X, z, G, ue, ee, w, d.callback);\n    },\n    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/\n    startinsert: function(p, d) {\n      ut(p, d.argString == "!" ? "A" : "i", {});\n    },\n    redo: t.commands.redo,\n    undo: t.commands.undo,\n    /** @arg {CodeMirrorV} cm */\n    write: function(p) {\n      t.commands.save ? t.commands.save(p) : p.save && p.save();\n    },\n    /** @arg {CodeMirrorV} cm */\n    nohlsearch: function(p) {\n      La(p);\n    },\n    /** @arg {CodeMirrorV} cm */\n    yank: function(p) {\n      var d = Ye(p.getCursor()), g = d.line, b = p.getLine(g);\n      re.registerController.pushText(\n        "0",\n        "yank",\n        b,\n        !0,\n        !0\n      );\n    },\n    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/\n    delete: function(p, d) {\n      var g = d.selectionLine, b = isNaN(d.selectionLineEnd) ? g : d.selectionLineEnd;\n      bn.delete(p, { linewise: !0 }, [\n        {\n          anchor: new e(g, 0),\n          head: new e(b + 1, 0)\n        }\n      ]);\n    },\n    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/\n    join: function(p, d) {\n      var g = d.selectionLine, b = isNaN(d.selectionLineEnd) ? g : d.selectionLineEnd;\n      p.setCursor(new e(g, 0)), qe.joinLines(p, { repeat: b - g }, p.state.vim);\n    },\n    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/\n    delmarks: function(p, d) {\n      if (!d.argString || !ze(d.argString)) {\n        gt(p, "Argument required");\n        return;\n      }\n      for (var g = p.state.vim, b = new t.StringStream(ze(d.argString)); !b.eol(); ) {\n        b.eatSpace();\n        var x = b.pos;\n        if (!b.match(/[a-zA-Z]/, !1)) {\n          gt(p, "Invalid argument: " + d.argString.substring(x));\n          return;\n        }\n        var w = b.next();\n        if (b.match("-", !0)) {\n          if (!b.match(/[a-zA-Z]/, !1)) {\n            gt(p, "Invalid argument: " + d.argString.substring(x));\n            return;\n          }\n          var E = w, Q = b.next();\n          if (E && Q && $(E) == $(Q)) {\n            var j = E.charCodeAt(0), V = Q.charCodeAt(0);\n            if (j >= V) {\n              gt(p, "Invalid argument: " + d.argString.substring(x));\n              return;\n            }\n            for (var X = 0; X <= V - j; X++) {\n              var Y = String.fromCharCode(j + X);\n              delete g.marks[Y];\n            }\n          } else {\n            gt(p, "Invalid argument: " + E + "-");\n            return;\n          }\n        } else w && delete g.marks[w];\n      }\n    }\n  }, we = new ir();\n  function gs(p, d, g, b, x, w, E, Q, j) {\n    p.state.vim.exMode = !0;\n    var V = !1, X, Y, ee;\n    function z() {\n      p.operation(function() {\n        for (; !V; )\n          G(), ue();\n        $e();\n      });\n    }\n    function G() {\n      var Ve = p.getRange(w.from(), w.to()), bt = Ve.replace(E, Q), dn = w.to().line;\n      w.replace(bt), Y = w.to().line, x += Y - dn, ee = Y < dn;\n    }\n    function te() {\n      var Ve = X && Ye(w.to()), bt = w.findNext();\n      return bt && !bt[0] && Ve && Re(w.from(), Ve) && (bt = w.findNext()), bt;\n    }\n    function ue() {\n      for (; te() && lh(w.from(), b, x); )\n        if (!(!g && w.from().line == Y && !ee)) {\n          p.scrollIntoView(w.from(), 30), p.setSelection(w.from(), w.to()), X = w.from(), V = !1;\n          return;\n        }\n      V = !0;\n    }\n    function $e(Ve) {\n      if (Ve && Ve(), p.focus(), X) {\n        p.setCursor(X);\n        var bt = p.state.vim;\n        bt.exMode = !1, bt.lastHPos = bt.lastHSPos = X.ch;\n      }\n      j && j();\n    }\n    function Be(Ve, bt, dn) {\n      t.e_stop(Ve);\n      var Ut = xt(Ve);\n      switch (Ut) {\n        case "y":\n          G(), ue();\n          break;\n        case "n":\n          ue();\n          break;\n        case "a":\n          var on = j;\n          j = void 0, p.operation(z), j = on;\n          break;\n        case "l":\n          G();\n        // fall through and exit.\n        case "q":\n        case "<Esc>":\n        case "<C-c>":\n        case "<C-[>":\n          $e(dn);\n          break;\n      }\n      return V && $e(dn), !0;\n    }\n    if (ue(), V) {\n      gt(p, "No matches for " + E.source);\n      return;\n    }\n    if (!d) {\n      z(), j && j();\n      return;\n    }\n    ps(p, {\n      prefix: Jr("span", "replace with ", Jr("strong", Q), " (y/n/a/q/l)"),\n      onKeyDown: Be\n    });\n  }\n  function ei(p, d) {\n    var g = p.state.vim, b = re.macroModeState, x = re.registerController.getRegister("."), w = b.isPlaying, E = b.lastInsertModeChanges;\n    w || (p.off("change", Ls), g.insertEnd && g.insertEnd.clear(), g.insertEnd = void 0, t.off(p.getInputField(), "keydown", gr)), !w && g.insertModeRepeat > 1 && (bl(\n      p,\n      g,\n      g.insertModeRepeat - 1,\n      !0\n      /** repeatForInsert */\n    ), g.lastEditInputState.repeatOverride = g.insertModeRepeat), delete g.insertModeRepeat, g.insertMode = !1, d || p.setCursor(p.getCursor().line, p.getCursor().ch - 1), p.setOption("keyMap", "vim"), p.setOption("disableInput", !0), p.toggleOverwrite(!1), x.setText(E.changes.join("")), t.signal(p, "vim-mode-change", { mode: "normal" }), b.isRecording && Na(b);\n  }\n  function Ia(p) {\n    r.unshift(p);\n  }\n  function rt(p, d, g, b, x) {\n    var w = { keys: p, type: d };\n    w[d] = g, w[d + "Args"] = b;\n    for (var E in x)\n      w[E] = x[E];\n    Ia(w);\n  }\n  K("insertModeEscKeysTimeout", 200, "number");\n  function $r(p, d, g, b) {\n    var x = re.registerController.getRegister(b);\n    if (b == ":") {\n      x.keyBuffer[0] && we.processCommand(p, x.keyBuffer[0]), g.isPlaying = !1;\n      return;\n    }\n    var w = x.keyBuffer, E = 0;\n    g.isPlaying = !0, g.replaySearchQueries = x.searchQueries.slice(0);\n    for (var Q = 0; Q < w.length; Q++)\n      for (var j = w[Q], V, X, Y = /<(?:[CSMA]-)*\\w+>|./gi; V = Y.exec(j); )\n        if (X = V[0], xe.handleKey(p, X, "macro"), d.insertMode) {\n          var ee = x.insertModeChanges[E++].changes;\n          re.macroModeState.lastInsertModeChanges.changes = ee, Ol(p, ee, 1), ei(p);\n        }\n    g.isPlaying = !1;\n  }\n  function uh(p, d) {\n    if (!p.isPlaying) {\n      var g = p.latestRegister, b = re.registerController.getRegister(g);\n      b && b.pushText(d);\n    }\n  }\n  function Na(p) {\n    if (!p.isPlaying) {\n      var d = p.latestRegister, g = re.registerController.getRegister(d);\n      g && g.pushInsertModeChanges && g.pushInsertModeChanges(p.lastInsertModeChanges);\n    }\n  }\n  function ml(p, d) {\n    if (!p.isPlaying) {\n      var g = p.latestRegister, b = re.registerController.getRegister(g);\n      b && b.pushSearchQuery && b.pushSearchQuery(d);\n    }\n  }\n  function Ls(p, d) {\n    var g = re.macroModeState, b = g.lastInsertModeChanges;\n    if (!g.isPlaying)\n      for (var x = p.state.vim; d; ) {\n        if (b.expectCursorActivityForChange = !0, b.ignoreCount > 1)\n          b.ignoreCount--;\n        else if (d.origin == "+input" || d.origin == "paste" || d.origin === void 0) {\n          var w = p.listSelections().length;\n          w > 1 && (b.ignoreCount = w);\n          var E = d.text.join(`\n`);\n          if (b.maybeReset && (b.changes = [], b.maybeReset = !1), E)\n            if (p.state.overwrite && !/\\n/.test(E))\n              b.changes.push([E]);\n            else {\n              if (E.length > 1) {\n                var Q = x && x.insertEnd && x.insertEnd.find(), j = p.getCursor();\n                if (Q && Q.line == j.line) {\n                  var V = Q.ch - j.ch;\n                  V > 0 && V < E.length && (b.changes.push([E, V]), E = "");\n                }\n              }\n              E && b.changes.push(E);\n            }\n        }\n        d = d.next;\n      }\n  }\n  function _e(p) {\n    var d = p.state.vim;\n    if (d.insertMode) {\n      var g = re.macroModeState;\n      if (g.isPlaying)\n        return;\n      var b = g.lastInsertModeChanges;\n      b.expectCursorActivityForChange ? b.expectCursorActivityForChange = !1 : (b.maybeReset = !0, d.insertEnd && d.insertEnd.clear(), d.insertEnd = p.setBookmark(p.getCursor(), { insertLeft: !0 }));\n    } else p.curOp?.isVimOp || gl(p, d);\n  }\n  function gl(p, d) {\n    var g = p.getCursor("anchor"), b = p.getCursor("head");\n    if (d.visualMode && !p.somethingSelected() ? ge(p, !1) : !d.visualMode && !d.insertMode && p.somethingSelected() && (d.visualMode = !0, d.visualLine = !1, t.signal(p, "vim-mode-change", { mode: "visual" })), d.visualMode) {\n      var x = ft(b, g) ? 0 : -1, w = ft(b, g) ? -1 : 0;\n      b = Xe(b, 0, x), g = Xe(g, 0, w), d.sel = {\n        anchor: g,\n        head: b\n      }, Zr(p, d, "<", It(b, g)), Zr(p, d, ">", ct(b, g));\n    } else d.insertMode || (d.lastHPos = p.getCursor().ch);\n  }\n  function Is(p, d) {\n    this.keyName = p, this.key = d.key, this.ctrlKey = d.ctrlKey, this.altKey = d.altKey, this.metaKey = d.metaKey, this.shiftKey = d.shiftKey;\n  }\n  function gr(p) {\n    var d = re.macroModeState, g = d.lastInsertModeChanges, b = t.keyName ? t.keyName(p) : p.key;\n    b && (b.indexOf("Delete") != -1 || b.indexOf("Backspace") != -1) && (g.maybeReset && (g.changes = [], g.maybeReset = !1), g.changes.push(new Is(b, p)));\n  }\n  function bl(p, d, g, b) {\n    var x = re.macroModeState;\n    x.isPlaying = !0;\n    var w = d.lastEditActionCommand, E = d.inputState;\n    function Q() {\n      w ? Mn.processAction(p, d, w) : Mn.evalInput(p, d);\n    }\n    function j(X) {\n      if (x.lastInsertModeChanges.changes.length > 0) {\n        X = d.lastEditActionCommand ? X : 1;\n        var Y = x.lastInsertModeChanges;\n        Ol(p, Y.changes, X);\n      }\n    }\n    if (d.inputState = d.lastEditInputState, w && w.interlaceInsertRepeat)\n      for (var V = 0; V < g; V++)\n        Q(), j(1);\n    else\n      b || Q(), j(g);\n    d.inputState = E, d.insertMode && !b && ei(p), x.isPlaying = !1;\n  }\n  function yl(p, d) {\n    t.lookupKey(d, "vim-insert", function(b) {\n      return typeof b == "string" ? t.commands[b](p) : b(p), !0;\n    });\n  }\n  function Ol(p, d, g) {\n    var b = p.getCursor("head"), x = re.macroModeState.lastInsertModeChanges.visualBlock;\n    x && (O(p, b, x + 1), g = p.listSelections().length, p.setCursor(b));\n    for (var w = 0; w < g; w++) {\n      x && p.setCursor(Xe(b, w, 0));\n      for (var E = 0; E < d.length; E++) {\n        var Q = d[E];\n        if (Q instanceof Is)\n          yl(p, Q.keyName);\n        else if (typeof Q == "string")\n          p.replaceSelection(Q);\n        else {\n          var j = p.getCursor(), V = Xe(j, 0, Q[0].length - (Q[1] || 0));\n          p.replaceRange(Q[0], j, Q[1] ? j : V), p.setCursor(V);\n        }\n      }\n    }\n    x && p.setCursor(Xe(b, 0, 1));\n  }\n  function Va(p) {\n    var d = new p.constructor();\n    return Object.keys(p).forEach(function(g) {\n      if (g != "insertEnd") {\n        var b = p[g];\n        Array.isArray(b) ? b = b.slice() : b && typeof b == "object" && b.constructor != Object && (b = Va(b)), d[g] = b;\n      }\n    }), p.sel && (d.sel = {\n      head: p.sel.head && Ye(p.sel.head),\n      anchor: p.sel.anchor && Ye(p.sel.anchor)\n    }), d;\n  }\n  function ch(p, d, g) {\n    var w = Ee(p), b = (\n      /**@type {CodeMirrorV}*/\n      p\n    ), x = !1, w = xe.maybeInitVimState_(b), E = w.visualBlock || w.wasInVisualBlock, Q = b.isInMultiSelectMode();\n    if (w.wasInVisualBlock && !Q ? w.wasInVisualBlock = !1 : Q && w.visualBlock && (w.wasInVisualBlock = !0), d == "<Esc>" && !w.insertMode && !w.visualMode && Q && w.status == "<Esc>")\n      kt(b);\n    else if (E || !Q || b.inVirtualSelectionMode)\n      x = xe.handleKey(b, d, g);\n    else {\n      var j = Va(w), V = w.inputState.changeQueueList || [];\n      b.operation(function() {\n        b.curOp && (b.curOp.isVimOp = !0);\n        var X = 0;\n        b.forEachSelection(function() {\n          b.state.vim.inputState.changeQueue = V[X];\n          var Y = b.getCursor("head"), ee = b.getCursor("anchor"), z = ft(Y, ee) ? 0 : -1, G = ft(Y, ee) ? -1 : 0;\n          Y = Xe(Y, 0, z), ee = Xe(ee, 0, G), b.state.vim.sel.head = Y, b.state.vim.sel.anchor = ee, x = xe.handleKey(b, d, g), b.virtualSelection && (V[X] = b.state.vim.inputState.changeQueue, b.state.vim = Va(j)), X++;\n        }), b.curOp?.cursorActivity && !x && (b.curOp.cursorActivity = !1), b.state.vim = w, w.inputState.changeQueueList = V, w.inputState.changeQueue = null;\n      }, !0);\n    }\n    return x && !w.visualMode && !w.insert && w.visualMode != b.somethingSelected() && gl(b, w), x;\n  }\n  return Ce(), xe;\n}\nfunction or(t, e) {\n  var n = e.ch, r = e.line + 1;\n  r < 1 && (r = 1, n = 0), r > t.lines && (r = t.lines, n = Number.MAX_VALUE);\n  var i = t.line(r);\n  return Math.min(i.from + Math.max(0, n), i.to);\n}\nfunction vr(t, e) {\n  let n = t.lineAt(e);\n  return { line: n.number - 1, ch: e - n.from };\n}\nclass oi {\n  constructor(e, n) {\n    this.line = e, this.ch = n;\n  }\n}\nfunction tD(t, e, n) {\n  if (t.addEventListener)\n    t.addEventListener(e, n, !1);\n  else {\n    var r = t._handlers || (t._handlers = {});\n    r[e] = (r[e] || []).concat(n);\n  }\n}\nfunction nD(t, e, n) {\n  if (t.removeEventListener)\n    t.removeEventListener(e, n, !1);\n  else {\n    var r = t._handlers, i = r && r[e];\n    if (i) {\n      var s = i.indexOf(n);\n      s > -1 && (r[e] = i.slice(0, s).concat(i.slice(s + 1)));\n    }\n  }\n}\nfunction rD(t, e, ...n) {\n  var r, i = (r = t._handlers) === null || r === void 0 ? void 0 : r[e];\n  if (i)\n    for (var s = 0; s < i.length; ++s)\n      i[s](...n);\n}\nfunction nb(t, ...e) {\n  if (t)\n    for (var n = 0; n < t.length; ++n)\n      t[n](...e);\n}\nlet Mf;\ntry {\n  Mf = /* @__PURE__ */ new RegExp("[\\\\w\\\\p{Alphabetic}\\\\p{Number}_]", "u");\n} catch {\n  Mf = /[\\w]/;\n}\nfunction uo(t, e) {\n  var n = t.cm6;\n  if (!n.state.readOnly) {\n    var r = "input.type.compose";\n    if (t.curOp && (t.curOp.lastChange || (r = "input.type.compose.start")), e.annotations)\n      try {\n        e.annotations.some(function(i) {\n          i.value == "input" && (i.value = r);\n        });\n      } catch (i) {\n        console.error(i);\n      }\n    else\n      e.userEvent = r;\n    return n.dispatch(e);\n  }\n}\nfunction rb(t, e) {\n  var n;\n  t.curOp && (t.curOp.$changeStart = void 0), (e ? Ic : Sa)(t.cm6);\n  let r = (n = t.curOp) === null || n === void 0 ? void 0 : n.$changeStart;\n  r != null && t.cm6.dispatch({ selection: { anchor: r } });\n}\nvar Zj = {};\nclass tt {\n  constructor(e) {\n    this.state = {}, this.marks = /* @__PURE__ */ Object.create(null), this.$mid = 0, this.options = {}, this._handlers = {}, this.$lastChangeEndOffset = 0, this.virtualSelection = null, this.cm6 = e, this.onChange = this.onChange.bind(this), this.onSelectionChange = this.onSelectionChange.bind(this);\n  }\n  // --------------------------\n  openDialog(e, n, r) {\n    return Lj(this, e, n, r);\n  }\n  openNotification(e, n) {\n    return $j(this, e, n);\n  }\n  on(e, n) {\n    tD(this, e, n);\n  }\n  off(e, n) {\n    nD(this, e, n);\n  }\n  signal(e, n, r) {\n    rD(this, e, n, r);\n  }\n  indexFromPos(e) {\n    return or(this.cm6.state.doc, e);\n  }\n  posFromIndex(e) {\n    return vr(this.cm6.state.doc, e);\n  }\n  foldCode(e) {\n    let n = this.cm6, r = n.state.selection.ranges, i = this.cm6.state.doc, s = or(i, e), a = ne.create([ne.range(s, s)], 0).ranges;\n    n.state.selection.ranges = a, wS(n), n.state.selection.ranges = r;\n  }\n  firstLine() {\n    return 0;\n  }\n  lastLine() {\n    return this.cm6.state.doc.lines - 1;\n  }\n  lineCount() {\n    return this.cm6.state.doc.lines;\n  }\n  setCursor(e, n) {\n    typeof e == "object" && (n = e.ch, e = e.line);\n    var r = or(this.cm6.state.doc, { line: e, ch: n || 0 });\n    this.cm6.dispatch({ selection: { anchor: r } }, { scrollIntoView: !this.curOp }), this.curOp && !this.curOp.isVimOp && this.onBeforeEndOperation();\n  }\n  getCursor(e) {\n    var n = this.cm6.state.selection.main, r = e == "head" || !e ? n.head : e == "anchor" ? n.anchor : e == "start" ? n.from : e == "end" ? n.to : null;\n    if (r == null)\n      throw new Error("Invalid cursor type");\n    return this.posFromIndex(r);\n  }\n  listSelections() {\n    var e = this.cm6.state.doc;\n    return this.cm6.state.selection.ranges.map((n) => ({\n      anchor: vr(e, n.anchor),\n      head: vr(e, n.head)\n    }));\n  }\n  setSelections(e, n) {\n    var r = this.cm6.state.doc, i = e.map((s) => {\n      var a = or(r, s.head), o = or(r, s.anchor);\n      return a == o ? ne.cursor(a, 1) : ne.range(o, a);\n    });\n    this.cm6.dispatch({\n      selection: ne.create(i, n)\n    });\n  }\n  setSelection(e, n, r) {\n    this.setSelections([{ anchor: e, head: n }], 0), r && r.origin == "*mouse" && this.onBeforeEndOperation();\n  }\n  getLine(e) {\n    var n = this.cm6.state.doc;\n    return e < 0 || e >= n.lines ? "" : this.cm6.state.doc.line(e + 1).text;\n  }\n  getLineHandle(e) {\n    return this.$lineHandleChanges || (this.$lineHandleChanges = []), { row: e, index: this.indexFromPos(new oi(e, 0)) };\n  }\n  getLineNumber(e) {\n    var n = this.$lineHandleChanges;\n    if (!n)\n      return null;\n    for (var r = e.index, i = 0; i < n.length; i++)\n      if (r = n[i].changes.mapPos(r, 1, nn.TrackAfter), r == null)\n        return null;\n    var s = this.posFromIndex(r);\n    return s.ch == 0 ? s.line : null;\n  }\n  releaseLineHandles() {\n    this.$lineHandleChanges = void 0;\n  }\n  getRange(e, n) {\n    var r = this.cm6.state.doc;\n    return this.cm6.state.sliceDoc(or(r, e), or(r, n));\n  }\n  replaceRange(e, n, r, i) {\n    r || (r = n);\n    var s = this.cm6.state.doc, a = or(s, n), o = or(s, r);\n    uo(this, { changes: { from: a, to: o, insert: e } });\n  }\n  replaceSelection(e) {\n    uo(this, this.cm6.state.replaceSelection(e));\n  }\n  replaceSelections(e) {\n    var n = this.cm6.state.selection.ranges, r = n.map((i, s) => ({ from: i.from, to: i.to, insert: e[s] || "" }));\n    uo(this, { changes: r });\n  }\n  getSelection() {\n    return this.getSelections().join(`\n`);\n  }\n  getSelections() {\n    var e = this.cm6;\n    return e.state.selection.ranges.map((n) => e.state.sliceDoc(n.from, n.to));\n  }\n  somethingSelected() {\n    return this.cm6.state.selection.ranges.some((e) => !e.empty);\n  }\n  getInputField() {\n    return this.cm6.contentDOM;\n  }\n  clipPos(e) {\n    var n = this.cm6.state.doc, r = e.ch, i = e.line + 1;\n    i < 1 && (i = 1, r = 0), i > n.lines && (i = n.lines, r = Number.MAX_VALUE);\n    var s = n.line(i);\n    return r = Math.min(Math.max(0, r), s.to - s.from), new oi(i - 1, r);\n  }\n  getValue() {\n    return this.cm6.state.doc.toString();\n  }\n  setValue(e) {\n    var n = this.cm6;\n    return n.dispatch({\n      changes: { from: 0, to: n.state.doc.length, insert: e },\n      selection: ne.range(0, 0)\n    });\n  }\n  focus() {\n    return this.cm6.focus();\n  }\n  blur() {\n    return this.cm6.contentDOM.blur();\n  }\n  defaultTextHeight() {\n    return this.cm6.defaultLineHeight;\n  }\n  findMatchingBracket(e, n) {\n    var r = this.cm6.state, i = or(r.doc, e), s = Ar(r, i + 1, -1);\n    return s && s.end ? { to: vr(r.doc, s.end.from) } : (s = Ar(r, i, 1), s && s.end ? { to: vr(r.doc, s.end.from) } : { to: void 0 });\n  }\n  scanForBracket(e, n, r, i) {\n    return Vj(this, e, n, r, i);\n  }\n  indentLine(e, n) {\n    n ? this.indentMore() : this.indentLess();\n  }\n  indentMore() {\n    sc(this.cm6);\n  }\n  indentLess() {\n    ac(this.cm6);\n  }\n  execCommand(e) {\n    if (e == "indentAuto")\n      tt.commands.indentAuto(this);\n    else if (e == "goLineLeft")\n      Uu(this.cm6);\n    else if (e == "goLineRight") {\n      Wu(this.cm6);\n      let n = this.cm6.state, r = n.selection.main.head;\n      r < n.doc.length && n.sliceDoc(r, r + 1) !== `\n` && A7(this.cm6);\n    } else\n      console.log(e + " is not implemented");\n  }\n  setBookmark(e, n) {\n    var r = n?.insertLeft ? 1 : -1, i = this.indexFromPos(e), s = new Uj(this, i, r);\n    return s;\n  }\n  addOverlay({ query: e }) {\n    let n = new Om({\n      regexp: !0,\n      search: e.source,\n      caseSensitive: !/i/.test(e.flags)\n    });\n    if (n.valid) {\n      n.forVim = !0, this.cm6Query = n;\n      let r = ss.of(n);\n      return this.cm6.dispatch({ effects: r }), n;\n    }\n  }\n  removeOverlay(e) {\n    if (!this.cm6Query)\n      return;\n    this.cm6Query.forVim = !1;\n    let n = ss.of(this.cm6Query);\n    this.cm6.dispatch({ effects: n });\n  }\n  getSearchCursor(e, n) {\n    var r = this, i = null, s = null;\n    n.ch == null && (n.ch = Number.MAX_VALUE);\n    var a = or(r.cm6.state.doc, n), o = e.source.replace(/(\\\\.|{(?:\\d+(?:,\\d*)?|,\\d+)})|[{}]/g, function(m, y) {\n      return y || "\\\\" + m;\n    });\n    function l(m, y = 0, v = m.length) {\n      return new ym(m, o, { ignoreCase: e.ignoreCase }, y, v);\n    }\n    function c(m) {\n      var y = r.cm6.state.doc;\n      if (m > y.length)\n        return null;\n      let v = l(y, m).next();\n      return v.done ? null : v.value;\n    }\n    var h = 1e4;\n    function f(m, y) {\n      var v = r.cm6.state.doc;\n      for (let C = 1; ; C++) {\n        let S = Math.max(m, y - C * h), M = l(v, S, y), $ = null;\n        for (; !M.next().done; )\n          $ = M.value;\n        if ($ && (S == m || $.from > S + 10))\n          return $;\n        if (S == m)\n          return null;\n      }\n    }\n    return {\n      findNext: function() {\n        return this.find(!1);\n      },\n      findPrevious: function() {\n        return this.find(!0);\n      },\n      find: function(m) {\n        var y = r.cm6.state.doc;\n        if (m) {\n          let v = i ? i.from == i.to ? i.to - 1 : i.from : a;\n          i = f(0, v);\n        } else {\n          let v = i ? i.from == i.to ? i.to + 1 : i.to : a;\n          i = c(v);\n        }\n        return s = i && {\n          from: vr(y, i.from),\n          to: vr(y, i.to),\n          match: i.match\n        }, i && i.match;\n      },\n      from: function() {\n        return s?.from;\n      },\n      to: function() {\n        return s?.to;\n      },\n      replace: function(m) {\n        i && (uo(r, {\n          changes: { from: i.from, to: i.to, insert: m }\n        }), i.to = i.from + m.length, s && (s.to = vr(r.cm6.state.doc, i.to)));\n      }\n    };\n  }\n  findPosV(e, n, r, i) {\n    let { cm6: s } = this;\n    const a = s.state.doc;\n    let o = r == "page" ? s.dom.clientHeight : 0;\n    const l = or(a, e);\n    let c = ne.cursor(l, 1, void 0, i), h = Math.round(Math.abs(n));\n    for (let m = 0; m < h; m++)\n      r == "page" ? c = s.moveVertically(c, n > 0, o) : r == "line" && (c = s.moveVertically(c, n > 0));\n    let f = vr(a, c.head);\n    return (n < 0 && c.head == 0 && i != 0 && e.line == 0 && e.ch != 0 || n > 0 && c.head == a.length && f.ch != i && e.line == f.line) && (f.hitSide = !0), f;\n  }\n  charCoords(e, n) {\n    var r = this.cm6.contentDOM.getBoundingClientRect(), i = or(this.cm6.state.doc, e), s = this.cm6.coordsAtPos(i), a = -r.top;\n    return { left: (s?.left || 0) - r.left, top: (s?.top || 0) + a, bottom: (s?.bottom || 0) + a };\n  }\n  coordsChar(e, n) {\n    var r = this.cm6.contentDOM.getBoundingClientRect(), i = this.cm6.posAtCoords({ x: e.left + r.left, y: e.top + r.top }) || 0;\n    return vr(this.cm6.state.doc, i);\n  }\n  getScrollInfo() {\n    var e = this.cm6.scrollDOM;\n    return {\n      left: e.scrollLeft,\n      top: e.scrollTop,\n      height: e.scrollHeight,\n      width: e.scrollWidth,\n      clientHeight: e.clientHeight,\n      clientWidth: e.clientWidth\n    };\n  }\n  scrollTo(e, n) {\n    e != null && (this.cm6.scrollDOM.scrollLeft = e), n != null && (this.cm6.scrollDOM.scrollTop = n);\n  }\n  scrollIntoView(e, n) {\n    if (e) {\n      var r = this.indexFromPos(e);\n      this.cm6.dispatch({\n        effects: be.scrollIntoView(r)\n      });\n    } else\n      this.cm6.dispatch({ scrollIntoView: !0, userEvent: "scroll" });\n  }\n  getWrapperElement() {\n    return this.cm6.dom;\n  }\n  // for tests\n  getMode() {\n    return { name: this.getOption("mode") };\n  }\n  setSize(e, n) {\n    this.cm6.dom.style.width = e + 4 + "px", this.cm6.dom.style.height = n + "px", this.refresh();\n  }\n  refresh() {\n    this.cm6.measure();\n  }\n  // event listeners\n  destroy() {\n    this.removeOverlay();\n  }\n  getLastEditEnd() {\n    return this.posFromIndex(this.$lastChangeEndOffset);\n  }\n  onChange(e) {\n    this.$lineHandleChanges && this.$lineHandleChanges.push(e);\n    for (let r in this.marks)\n      this.marks[r].update(e.changes);\n    this.virtualSelection && (this.virtualSelection.ranges = this.virtualSelection.ranges.map((r) => r.map(e.changes)));\n    var n = this.curOp = this.curOp || {};\n    e.changes.iterChanges((r, i, s, a, o) => {\n      (n.$changeStart == null || n.$changeStart > s) && (n.$changeStart = s), this.$lastChangeEndOffset = a;\n      var l = { text: o.toJSON() };\n      n.lastChange ? n.lastChange.next = n.lastChange = l : n.lastChange = n.change = l;\n    }, !0), n.changeHandlers || (n.changeHandlers = this._handlers.change && this._handlers.change.slice());\n  }\n  onSelectionChange() {\n    var e = this.curOp = this.curOp || {};\n    e.cursorActivityHandlers || (e.cursorActivityHandlers = this._handlers.cursorActivity && this._handlers.cursorActivity.slice()), this.curOp.cursorActivity = !0;\n  }\n  operation(e, n) {\n    this.curOp || (this.curOp = { $d: 0 }), this.curOp.$d++;\n    try {\n      var r = e();\n    } finally {\n      this.curOp && (this.curOp.$d--, this.curOp.$d || this.onBeforeEndOperation());\n    }\n    return r;\n  }\n  onBeforeEndOperation() {\n    var e = this.curOp, n = !1;\n    e && (e.change && nb(e.changeHandlers, this, e.change), e && e.cursorActivity && (nb(e.cursorActivityHandlers, this, null), e.isVimOp && (n = !0)), this.curOp = null), n && this.scrollIntoView();\n  }\n  moveH(e, n) {\n    if (n == "char") {\n      var r = this.getCursor();\n      this.setCursor(r.line, r.ch + e);\n    }\n  }\n  setOption(e, n) {\n    switch (e) {\n      case "keyMap":\n        this.state.keyMap = n;\n        break;\n      case "textwidth":\n        this.state.textwidth = n;\n        break;\n    }\n  }\n  getOption(e) {\n    switch (e) {\n      case "firstLineNumber":\n        return 1;\n      case "tabSize":\n        return this.cm6.state.tabSize || 4;\n      case "readOnly":\n        return this.cm6.state.readOnly;\n      case "indentWithTabs":\n        return this.cm6.state.facet(Ca) == "\t";\n      // TODO\n      case "indentUnit":\n        return this.cm6.state.facet(Ca).length || 2;\n      case "textwidth":\n        return this.state.textwidth;\n      // for tests\n      case "keyMap":\n        return this.state.keyMap || "vim";\n    }\n  }\n  toggleOverwrite(e) {\n    this.state.overwrite = e;\n  }\n  getTokenTypeAt(e) {\n    var n, r = this.indexFromPos(e), i = hS(this.cm6.state, r), s = i?.resolve(r), a = ((n = s?.type) === null || n === void 0 ? void 0 : n.name) || "";\n    return /comment/i.test(a) ? "comment" : /string/i.test(a) ? "string" : "";\n  }\n  overWriteSelection(e) {\n    var n = this.cm6.state.doc, r = this.cm6.state.selection, i = r.ranges.map((s) => {\n      if (s.empty) {\n        var a = s.to < n.length ? n.sliceString(s.from, s.to + 1) : "";\n        if (a && !/\\n/.test(a))\n          return ne.range(s.from, s.to + 1);\n      }\n      return s;\n    });\n    this.cm6.dispatch({\n      selection: ne.create(i, r.mainIndex)\n    }), this.replaceSelection(e);\n  }\n  /*** multiselect ****/\n  isInMultiSelectMode() {\n    return this.cm6.state.selection.ranges.length > 1;\n  }\n  virtualSelectionMode() {\n    return !!this.virtualSelection;\n  }\n  forEachSelection(e) {\n    var n = this.cm6.state.selection;\n    this.virtualSelection = ne.create(n.ranges, n.mainIndex);\n    for (var r = 0; r < this.virtualSelection.ranges.length; r++) {\n      var i = this.virtualSelection.ranges[r];\n      i && (this.cm6.dispatch({ selection: ne.create([i]) }), e(), this.virtualSelection.ranges[r] = this.cm6.state.selection.ranges[0]);\n    }\n    this.cm6.dispatch({ selection: this.virtualSelection }), this.virtualSelection = null;\n  }\n  hardWrap(e) {\n    return qj(this, e);\n  }\n}\ntt.isMac = typeof navigator < "u" && /* @__PURE__ */ /Mac/.test(navigator.platform);\ntt.Pos = oi;\ntt.StringStream = pQ;\ntt.commands = {\n  cursorCharLeft: function(t) {\n    To(t.cm6);\n  },\n  redo: function(t) {\n    rb(t, !1);\n  },\n  undo: function(t) {\n    rb(t, !0);\n  },\n  newlineAndIndent: function(t) {\n    jo({\n      state: t.cm6.state,\n      dispatch: (e) => uo(t, e)\n    });\n  },\n  indentAuto: function(t) {\n    PA(t.cm6);\n  },\n  newlineAndIndentContinueComment: void 0,\n  save: void 0\n};\ntt.isWordChar = function(t) {\n  return Mf.test(t);\n};\ntt.keys = Zj;\ntt.addClass = function(t, e) {\n};\ntt.rmClass = function(t, e) {\n};\ntt.e_preventDefault = function(t) {\n  t.preventDefault();\n};\ntt.e_stop = function(t) {\n  var e, n;\n  (e = t?.stopPropagation) === null || e === void 0 || e.call(t), (n = t?.preventDefault) === null || n === void 0 || n.call(t);\n};\ntt.lookupKey = function(e, n, r) {\n  var i = tt.keys[e];\n  i && r(i);\n};\ntt.on = tD;\ntt.off = nD;\ntt.signal = rD;\ntt.findMatchingTag = Xj;\ntt.findEnclosingTag = Wj;\ntt.keyName = void 0;\nfunction iD(t, e, n) {\n  var r = document.createElement("div");\n  return r.appendChild(e), r;\n}\nfunction sD(t, e) {\n  t.state.currentNotificationClose && t.state.currentNotificationClose(), t.state.currentNotificationClose = e;\n}\nfunction $j(t, e, n) {\n  sD(t, o);\n  var r = iD(t, e, n && n.bottom), i = !1, s, a = n && typeof n.duration < "u" ? n.duration : 5e3;\n  function o() {\n    i || (i = !0, clearTimeout(s), r.remove(), oD(t, r));\n  }\n  return r.onclick = function(l) {\n    l.preventDefault(), o();\n  }, aD(t, r), a && (s = setTimeout(o, a)), o;\n}\nfunction aD(t, e) {\n  var n = t.state.dialog;\n  t.state.dialog = e, e && n !== e && (n && n.contains(document.activeElement) && t.focus(), n && n.parentElement ? n.parentElement.replaceChild(e, n) : n && n.remove(), tt.signal(t, "dialog"));\n}\nfunction oD(t, e) {\n  t.state.dialog == e && (t.state.dialog = null, tt.signal(t, "dialog"));\n}\nfunction Lj(t, e, n, r) {\n  r || (r = {}), sD(t, void 0);\n  var i = iD(t, e, r.bottom), s = !1;\n  aD(t, i);\n  function a(l) {\n    if (typeof l == "string")\n      o.value = l;\n    else {\n      if (s)\n        return;\n      s = !0, oD(t, i), t.state.dialog || t.focus(), r.onClose && r.onClose(i);\n    }\n  }\n  var o = i.getElementsByTagName("input")[0];\n  return o && (r.value && (o.value = r.value, r.selectValueOnOpen !== !1 && o.select()), r.onInput && tt.on(o, "input", function(l) {\n    r.onInput(l, o.value, a);\n  }), r.onKeyUp && tt.on(o, "keyup", function(l) {\n    r.onKeyUp(l, o.value, a);\n  }), tt.on(o, "keydown", function(l) {\n    r && r.onKeyDown && r.onKeyDown(l, o.value, a) || (l.keyCode == 13 && n(o.value), (l.keyCode == 27 || r.closeOnEnter !== !1 && l.keyCode == 13) && (o.blur(), tt.e_stop(l), a()));\n  }), r.closeOnBlur !== !1 && tt.on(o, "blur", function() {\n    setTimeout(function() {\n      document.activeElement !== o && a();\n    });\n  }), o.focus()), a;\n}\nvar Ij = { "(": ")>", ")": "(<", "[": "]>", "]": "[<", "{": "}>", "}": "{<", "<": ">>", ">": "<<" };\nfunction Nj(t) {\n  return t && t.bracketRegex || /[(){}[\\]]/;\n}\nfunction Vj(t, e, n, r, i) {\n  for (var s = i && i.maxScanLineLength || 1e4, a = i && i.maxScanLines || 1e3, o = [], l = Nj(i), c = n > 0 ? Math.min(e.line + a, t.lastLine() + 1) : Math.max(t.firstLine() - 1, e.line - a), h = e.line; h != c; h += n) {\n    var f = t.getLine(h);\n    if (f) {\n      var m = n > 0 ? 0 : f.length - 1, y = n > 0 ? f.length : -1;\n      if (!(f.length > s))\n        for (h == e.line && (m = e.ch - (n < 0 ? 1 : 0)); m != y; m += n) {\n          var v = f.charAt(m);\n          if (l.test(v)) {\n            var C = Ij[v];\n            if (C && C.charAt(1) == ">" == n > 0)\n              o.push(v);\n            else if (o.length)\n              o.pop();\n            else\n              return { pos: new oi(h, m), ch: v };\n          }\n        }\n    }\n  }\n  return h - n == (n > 0 ? t.lastLine() : t.firstLine()) ? !1 : null;\n}\nfunction Xj(t, e) {\n}\nfunction Wj(t, e) {\n  var n, r, i = t.cm6.state, s = t.indexFromPos(e);\n  if (s < i.doc.length) {\n    var a = i.sliceDoc(s, s + 1);\n    a == "<" && s++;\n  }\n  for (var o = hS(i, s), l = o?.resolve(s) || null; l; ) {\n    if (((n = l.firstChild) === null || n === void 0 ? void 0 : n.type.name) == "OpenTag" && ((r = l.lastChild) === null || r === void 0 ? void 0 : r.type.name) == "CloseTag")\n      return {\n        open: ib(i.doc, l.firstChild),\n        close: ib(i.doc, l.lastChild)\n      };\n    l = l.parent;\n  }\n}\nfunction ib(t, e) {\n  return {\n    from: vr(t, e.from),\n    to: vr(t, e.to)\n  };\n}\nclass Uj {\n  constructor(e, n, r) {\n    this.cm = e, this.id = e.$mid++, this.offset = n, this.assoc = r, e.marks[this.id] = this;\n  }\n  clear() {\n    delete this.cm.marks[this.id];\n  }\n  find() {\n    return this.offset == null ? null : this.cm.posFromIndex(this.offset);\n  }\n  update(e) {\n    this.offset != null && (this.offset = e.mapPos(this.offset, this.assoc, nn.TrackDel));\n  }\n}\nfunction qj(t, e) {\n  for (var n, r = e.column || t.getOption("textwidth") || 80, i = e.allowMerge != !1, s = Math.min(e.from, e.to), a = Math.max(e.from, e.to); s <= a; ) {\n    var o = t.getLine(s);\n    if (o.length > r) {\n      var l = v(o, r, 5);\n      if (l) {\n        var c = (n = /^\\s*/.exec(o)) === null || n === void 0 ? void 0 : n[0];\n        t.replaceRange(`\n` + c, new oi(s, l.start), new oi(s, l.end));\n      }\n      a++;\n    } else if (i && /\\S/.test(o) && s != a) {\n      var h = t.getLine(s + 1);\n      if (h && /\\S/.test(h)) {\n        var f = o.replace(/\\s+$/, ""), m = h.replace(/^\\s+/, ""), y = f + " " + m, l = v(y, r, 5);\n        l && l.start > f.length || y.length < r ? (t.replaceRange(" ", new oi(s, f.length), new oi(s + 1, h.length - m.length)), s--, a--) : f.length < o.length && t.replaceRange("", new oi(s, f.length), new oi(s, o.length));\n      }\n    }\n    s++;\n  }\n  return s;\n  function v(C, S, M) {\n    if (!(C.length < S)) {\n      var $ = C.slice(0, S), U = C.slice(S), R = /^(?:(\\s+)|(\\S+)(\\s+))/.exec(U), B = /(?:(\\s+)|(\\s+)(\\S+))$/.exec($), Z = 0, N = 0;\n      if (B && !B[2] && (Z = S - B[1].length, N = S), R && !R[2] && (Z || (Z = S), N = S + R[1].length), Z)\n        return {\n          start: Z,\n          end: N\n        };\n      if (B && B[2] && B.index > M)\n        return {\n          start: B.index,\n          end: B.index + B[2].length\n        };\n      if (R && R[2])\n        return Z = S + R[2].length, {\n          start: Z,\n          end: Z + R[3].length\n        };\n    }\n  }\n}\nlet Qf = zC;\nclass Gj {\n  constructor(e, n, r, i, s, a, o, l, c, h) {\n    this.left = e, this.top = n, this.height = r, this.fontFamily = i, this.fontSize = s, this.fontWeight = a, this.color = o, this.className = l, this.letter = c, this.partial = h;\n  }\n  draw() {\n    let e = document.createElement("div");\n    return e.className = this.className, this.adjust(e), e;\n  }\n  adjust(e) {\n    e.style.left = this.left + "px", e.style.top = this.top + "px", e.style.height = this.height + "px", e.style.lineHeight = this.height + "px", e.style.fontFamily = this.fontFamily, e.style.fontSize = this.fontSize, e.style.fontWeight = this.fontWeight, e.style.color = this.partial ? "transparent" : this.color, e.className = this.className, e.textContent = this.letter;\n  }\n  eq(e) {\n    return this.left == e.left && this.top == e.top && this.height == e.height && this.fontFamily == e.fontFamily && this.fontSize == e.fontSize && this.fontWeight == e.fontWeight && this.color == e.color && this.className == e.className && this.letter == e.letter;\n  }\n}\nclass zj {\n  constructor(e, n) {\n    this.view = e, this.rangePieces = [], this.cursors = [], this.cm = n, this.measureReq = { read: this.readPos.bind(this), write: this.drawSel.bind(this) }, this.cursorLayer = e.scrollDOM.appendChild(document.createElement("div")), this.cursorLayer.className = "cm-cursorLayer cm-vimCursorLayer", this.cursorLayer.setAttribute("aria-hidden", "true"), e.requestMeasure(this.measureReq), this.setBlinkRate();\n  }\n  setBlinkRate() {\n    let n = Qf(this.cm.cm6.state).cursorBlinkRate;\n    this.cursorLayer.style.animationDuration = n + "ms";\n  }\n  update(e) {\n    (e.selectionSet || e.geometryChanged || e.viewportChanged) && (this.view.requestMeasure(this.measureReq), this.cursorLayer.style.animationName = this.cursorLayer.style.animationName == "cm-blink" ? "cm-blink2" : "cm-blink"), Hj(e) && this.setBlinkRate();\n  }\n  scheduleRedraw() {\n    this.view.requestMeasure(this.measureReq);\n  }\n  readPos() {\n    let { state: e } = this.view, n = [];\n    for (let r of e.selection.ranges) {\n      let i = r == e.selection.main, s = eR(this.cm, this.view, r, i);\n      s && n.push(s);\n    }\n    return { cursors: n };\n  }\n  drawSel({ cursors: e }) {\n    if (e.length != this.cursors.length || e.some((n, r) => !n.eq(this.cursors[r]))) {\n      let n = this.cursorLayer.children;\n      if (n.length !== e.length) {\n        this.cursorLayer.textContent = "";\n        for (const r of e)\n          this.cursorLayer.appendChild(r.draw());\n      } else\n        e.forEach((r, i) => r.adjust(n[i]));\n      this.cursors = e;\n    }\n  }\n  destroy() {\n    this.cursorLayer.remove();\n  }\n}\nfunction Hj(t) {\n  return Qf(t.startState) != Qf(t.state);\n}\nconst Yj = {\n  ".cm-vimMode .cm-line": {\n    "& ::selection": { backgroundColor: "transparent !important" },\n    "&::selection": { backgroundColor: "transparent !important" },\n    caretColor: "transparent !important"\n  },\n  ".cm-fat-cursor": {\n    position: "absolute",\n    background: "#ff9696",\n    border: "none",\n    whiteSpace: "pre"\n  },\n  "&:not(.cm-focused) .cm-fat-cursor": {\n    background: "none",\n    outline: "solid 1px #ff9696",\n    color: "transparent !important"\n  }\n}, Kj = /* @__PURE__ */ jr.highest(/* @__PURE__ */ be.theme(Yj));\nfunction Jj(t) {\n  let e = t.scrollDOM.getBoundingClientRect();\n  return { left: (t.textDirection == Dt.LTR ? e.left : e.right - t.scrollDOM.clientWidth) - t.scrollDOM.scrollLeft, top: e.top - t.scrollDOM.scrollTop };\n}\nfunction eR(t, e, n, r) {\n  var i, s;\n  let a = n.head, o = !1, l = 1, c = t.state.vim;\n  if (c && (!c.insertMode || t.state.overwrite)) {\n    if (o = !0, c.visualBlock && !r)\n      return null;\n    n.anchor < n.head && a--, t.state.overwrite ? l = 0.2 : c.status && (l = 0.5);\n  }\n  if (o) {\n    let f = a < e.state.doc.length && e.state.sliceDoc(a, a + 1);\n    f && /[\\uDC00-\\uDFFF]/.test(f) && a > 1 && (a--, f = e.state.sliceDoc(a, a + 1));\n    let m = e.coordsAtPos(a, 1);\n    if (!m)\n      return null;\n    let y = Jj(e), v = e.domAtPos(a), C = v ? v.node : e.contentDOM;\n    for (; v && v.node instanceof HTMLElement; )\n      C = v.node, v = { node: v.node.childNodes[v.offset], offset: 0 };\n    if (!(C instanceof HTMLElement)) {\n      if (!C.parentNode)\n        return null;\n      C = C.parentNode;\n    }\n    let S = getComputedStyle(C), M = m.left, $ = (s = (i = e).coordsForChar) === null || s === void 0 ? void 0 : s.call(i, a);\n    if ($ && (M = $.left), !f || f == `\n` || f == "\\r")\n      f = " ";\n    else if (f == "\t") {\n      f = " ";\n      var h = e.coordsAtPos(a + 1, -1);\n      h && (M = h.left - (h.left - m.left) / parseInt(S.tabSize));\n    } else /[\\uD800-\\uDBFF]/.test(f) && a < e.state.doc.length - 1 && (f += e.state.sliceDoc(a + 1, a + 2));\n    let U = m.bottom - m.top;\n    return new Gj(M - y.left, m.top - y.top + U * (1 - l), U * l, S.fontFamily, S.fontSize, S.fontWeight, S.color, r ? "cm-fat-cursor cm-cursor-primary" : "cm-fat-cursor cm-cursor-secondary", f, l != 1);\n  } else\n    return null;\n}\nvar tR = typeof navigator < "u" && /* @__PURE__ */ /linux/i.test(navigator.platform) && /* @__PURE__ */ / Gecko\\/\\d+/.exec(navigator.userAgent);\nconst ys = /* @__PURE__ */ _j(tt), nR = 250, rR = /* @__PURE__ */ be.baseTheme({\n  ".cm-vimMode .cm-cursorLayer:not(.cm-vimCursorLayer)": {\n    display: "none"\n  },\n  ".cm-vim-panel": {\n    padding: "0px 10px",\n    fontFamily: "monospace",\n    minHeight: "1.3em"\n  },\n  ".cm-vim-panel input": {\n    border: "none",\n    outline: "none",\n    backgroundColor: "inherit"\n  },\n  "&light .cm-searchMatch": { backgroundColor: "#ffff0054" },\n  "&dark .cm-searchMatch": { backgroundColor: "#00ffff8a" }\n}), iR = /* @__PURE__ */ pn.fromClass(class {\n  constructor(t) {\n    this.status = "", this.query = null, this.decorations = Te.none, this.waitForCopy = !1, this.lastKeydown = "", this.useNextTextInput = !1, this.compositionText = "", this.view = t;\n    const e = this.cm = new tt(t);\n    ys.enterVimMode(this.cm), this.view.cm = this.cm, this.cm.state.vimPlugin = this, this.blockCursor = new zj(t, e), this.updateClass(), this.cm.on("vim-command-done", () => {\n      e.state.vim && (e.state.vim.status = ""), this.blockCursor.scheduleRedraw(), this.updateStatus();\n    }), this.cm.on("vim-mode-change", (n) => {\n      e.state.vim && (e.state.vim.mode = n.mode, n.subMode && (e.state.vim.mode += " block"), e.state.vim.status = "", this.blockCursor.scheduleRedraw(), this.updateClass(), this.updateStatus());\n    }), this.cm.on("dialog", () => {\n      this.cm.state.statusbar ? this.updateStatus() : t.dispatch({\n        effects: lD.of(!!this.cm.state.dialog)\n      });\n    }), this.dom = document.createElement("span"), this.dom.style.cssText = "position: absolute; right: 10px; top: 1px", this.statusButton = document.createElement("span"), this.statusButton.onclick = (n) => {\n      ys.handleKey(this.cm, "<Esc>", "user"), this.cm.focus();\n    }, this.statusButton.style.cssText = "cursor: pointer";\n  }\n  update(t) {\n    var e;\n    if ((t.viewportChanged || t.docChanged) && this.query && this.highlight(this.query), t.docChanged && this.cm.onChange(t), t.selectionSet && this.cm.onSelectionChange(), t.viewportChanged, this.cm.curOp && !this.cm.curOp.isVimOp && this.cm.onBeforeEndOperation(), t.transactions) {\n      for (let n of t.transactions)\n        for (let r of n.effects)\n          if (r.is(ss))\n            if (!((e = r.value) === null || e === void 0 ? void 0 : e.forVim))\n              this.highlight(null);\n            else {\n              let s = r.value.create();\n              this.highlight(s);\n            }\n    }\n    this.blockCursor.update(t);\n  }\n  updateClass() {\n    const t = this.cm.state;\n    !t.vim || t.vim.insertMode && !t.overwrite ? this.view.scrollDOM.classList.remove("cm-vimMode") : this.view.scrollDOM.classList.add("cm-vimMode");\n  }\n  updateStatus() {\n    let t = this.cm.state.statusbar, e = this.cm.state.vim;\n    if (!t || !e)\n      return;\n    let n = this.cm.state.dialog;\n    if (n)\n      n.parentElement != t && (t.textContent = "", t.appendChild(n));\n    else {\n      t.textContent = "";\n      var r = (e.mode || "normal").toUpperCase();\n      e.insertModeReturn && (r += "(C-O)"), this.statusButton.textContent = `--${r}--`, t.appendChild(this.statusButton);\n    }\n    this.dom.textContent = e.status, t.appendChild(this.dom);\n  }\n  destroy() {\n    ys.leaveVimMode(this.cm), this.updateClass(), this.blockCursor.destroy(), delete this.view.cm;\n  }\n  highlight(t) {\n    if (this.query = t, !t)\n      return this.decorations = Te.none;\n    let { view: e } = this, n = new Qi();\n    for (let r = 0, i = e.visibleRanges, s = i.length; r < s; r++) {\n      let { from: a, to: o } = i[r];\n      for (; r < s - 1 && o > i[r + 1].from - 2 * nR; )\n        o = i[++r].to;\n      t.highlight(e.state, a, o, (l, c) => {\n        n.add(l, c, aR);\n      });\n    }\n    return this.decorations = n.finish();\n  }\n  handleKey(t, e) {\n    const n = this.cm;\n    let r = n.state.vim;\n    if (!r)\n      return;\n    const i = ys.vimKeyFromEvent(t, r);\n    if (tt.signal(this.cm, "inputEvent", { type: "handleKey", key: i }), !i)\n      return;\n    if (i == "<Esc>" && !r.insertMode && !r.visualMode && this.query) {\n      const o = r.searchState_;\n      o && (n.removeOverlay(o.getOverlay()), o.setOverlay(null));\n    }\n    if (i === "<C-c>" && !tt.isMac && n.somethingSelected())\n      return this.waitForCopy = !0, !0;\n    r.status = (r.status || "") + i;\n    let a = ys.multiSelectHandleKey(n, i, "user");\n    return r = ys.maybeInitVimState_(n), !a && r.insertMode && n.state.overwrite && (t.key && t.key.length == 1 && !/\\n/.test(t.key) ? (a = !0, n.overWriteSelection(t.key)) : t.key == "Backspace" && (a = !0, tt.commands.cursorCharLeft(n))), a && (tt.signal(this.cm, "vim-keypress", i), t.preventDefault(), t.stopPropagation(), this.blockCursor.scheduleRedraw()), this.updateStatus(), !!a;\n  }\n}, {\n  eventHandlers: {\n    copy: function(t, e) {\n      this.waitForCopy && (this.waitForCopy = !1, Promise.resolve().then(() => {\n        var n = this.cm, r = n.state.vim;\n        r && (r.insertMode ? n.setSelection(n.getCursor(), n.getCursor()) : n.operation(() => {\n          n.curOp && (n.curOp.isVimOp = !0), ys.handleKey(n, "<Esc>", "user");\n        }));\n      }));\n    },\n    compositionstart: function(t, e) {\n      this.useNextTextInput = !0, tt.signal(this.cm, "inputEvent", t);\n    },\n    compositionupdate: function(t, e) {\n      tt.signal(this.cm, "inputEvent", t);\n    },\n    compositionend: function(t, e) {\n      tt.signal(this.cm, "inputEvent", t);\n    },\n    keypress: function(t, e) {\n      tt.signal(this.cm, "inputEvent", t), this.lastKeydown == "Dead" && this.handleKey(t, e);\n    },\n    keydown: function(t, e) {\n      tt.signal(this.cm, "inputEvent", t), this.lastKeydown = t.key, this.lastKeydown == "Unidentified" || this.lastKeydown == "Process" || this.lastKeydown == "Dead" ? this.useNextTextInput = !0 : (this.useNextTextInput = !1, this.handleKey(t, e));\n    }\n  },\n  provide: () => [\n    be.inputHandler.of((t, e, n, r) => {\n      var i, s, a = hR(t);\n      if (!a)\n        return !1;\n      var o = (i = a.state) === null || i === void 0 ? void 0 : i.vim, l = a.state.vimPlugin;\n      if (o && !o.insertMode && !(!((s = a.curOp) === null || s === void 0) && s.isVimOp)) {\n        if (r === "\\0\\0")\n          return !0;\n        if (tt.signal(a, "inputEvent", {\n          type: "text",\n          text: r,\n          from: e,\n          to: n\n        }), r.length == 1 && l.useNextTextInput) {\n          if (o.expectLiteralNext && t.composing)\n            return l.compositionText = r, !1;\n          if (l.compositionText) {\n            var c = l.compositionText;\n            l.compositionText = "";\n            var h = t.state.selection.main.head, f = t.state.sliceDoc(h - c.length, h);\n            if (c === f) {\n              var m = a.getCursor();\n              a.replaceRange("", a.posFromIndex(h - c.length), m);\n            }\n          }\n          return l.handleKey({\n            key: r,\n            preventDefault: () => {\n            },\n            stopPropagation: () => {\n            }\n          }), sR(t), !0;\n        }\n      }\n      return !1;\n    })\n  ],\n  decorations: (t) => t.decorations\n});\nfunction sR(t) {\n  var e = t.scrollDOM.parentElement;\n  if (e) {\n    if (tR) {\n      t.contentDOM.textContent = "\\0\\0", t.contentDOM.dispatchEvent(new CustomEvent("compositionend"));\n      return;\n    }\n    var n = t.scrollDOM.nextSibling, r = window.getSelection(), i = r && {\n      anchorNode: r.anchorNode,\n      anchorOffset: r.anchorOffset,\n      focusNode: r.focusNode,\n      focusOffset: r.focusOffset\n    };\n    t.scrollDOM.remove(), e.insertBefore(t.scrollDOM, n);\n    try {\n      i && r && (r.setPosition(i.anchorNode, i.anchorOffset), i.focusNode && r.extend(i.focusNode, i.focusOffset));\n    } catch (s) {\n      console.error(s);\n    }\n    t.focus(), t.contentDOM.dispatchEvent(new CustomEvent("compositionend"));\n  }\n}\nconst aR = /* @__PURE__ */ Te.mark({ class: "cm-searchMatch" }), lD = /* @__PURE__ */ Ie.define(), oR = /* @__PURE__ */ Vt.define({\n  create: () => !1,\n  update(t, e) {\n    for (let n of e.effects)\n      n.is(lD) && (t = n.value);\n    return t;\n  },\n  provide: (t) => ns.from(t, (e) => e ? lR : null)\n});\nfunction lR(t) {\n  let e = document.createElement("div");\n  e.className = "cm-vim-panel";\n  let n = t.cm;\n  return n.state.dialog && e.appendChild(n.state.dialog), { top: !1, dom: e };\n}\nfunction uR(t) {\n  let e = document.createElement("div");\n  e.className = "cm-vim-panel";\n  let n = t.cm;\n  return n.state.statusbar = e, n.state.vimPlugin.updateStatus(), { dom: e };\n}\nfunction cR(t = {}) {\n  return [\n    rR,\n    iR,\n    Kj,\n    t.status ? ns.of(uR) : oR\n  ];\n}\nfunction hR(t) {\n  return t.cm || null;\n}\nclass sb {\n  constructor(e, n, r) {\n    this.from = e, this.to = n, this.diagnostic = r;\n  }\n}\nclass ks {\n  constructor(e, n, r) {\n    this.diagnostics = e, this.panel = n, this.selected = r;\n  }\n  static init(e, n, r) {\n    let i = e, s = r.facet(_o).markerFilter;\n    s && (i = s(i, r));\n    let a = e.slice().sort((f, m) => f.from - m.from || f.to - m.to), o = new Qi(), l = [], c = 0;\n    for (let f = 0; ; ) {\n      let m = f == a.length ? null : a[f];\n      if (!m && !l.length)\n        break;\n      let y, v;\n      for (l.length ? (y = c, v = l.reduce((S, M) => Math.min(S, M.to), m && m.from > y ? m.from : 1e8)) : (y = m.from, v = m.to, l.push(m), f++); f < a.length; ) {\n        let S = a[f];\n        if (S.from == y && (S.to > S.from || S.to == y))\n          l.push(S), f++, v = Math.min(S.to, v);\n        else {\n          v = Math.min(S.from, v);\n          break;\n        }\n      }\n      let C = wR(l);\n      if (l.some((S) => S.from == S.to || S.from == S.to - 1 && r.doc.lineAt(S.from).to == S.from))\n        o.add(y, y, Te.widget({\n          widget: new OR(C),\n          diagnostics: l.slice()\n        }));\n      else {\n        let S = l.reduce((M, $) => $.markClass ? M + " " + $.markClass : M, "");\n        o.add(y, v, Te.mark({\n          class: "cm-lintRange cm-lintRange-" + C + S,\n          diagnostics: l.slice(),\n          inclusiveEnd: l.some((M) => M.to > v)\n        }));\n      }\n      c = v;\n      for (let S = 0; S < l.length; S++)\n        l[S].to <= c && l.splice(S--, 1);\n    }\n    let h = o.finish();\n    return new ks(h, n, Aa(h));\n  }\n}\nfunction Aa(t, e = null, n = 0) {\n  let r = null;\n  return t.between(n, 1e9, (i, s, { spec: a }) => {\n    if (!(e && a.diagnostics.indexOf(e) < 0))\n      if (!r)\n        r = new sb(i, s, e || a.diagnostics[0]);\n      else {\n        if (a.diagnostics.indexOf(r.diagnostic) < 0)\n          return !1;\n        r = new sb(r.from, s, r.diagnostic);\n      }\n  }), r;\n}\nfunction pR(t, e) {\n  let n = e.pos, r = e.end || n, i = t.state.facet(_o).hideOn(t, n, r);\n  if (i != null)\n    return i;\n  let s = t.startState.doc.lineAt(e.pos);\n  return !!(t.effects.some((a) => a.is(uD)) || t.changes.touchesRange(s.from, Math.max(s.to, r)));\n}\nfunction fR(t, e) {\n  return t.field(fr, !1) ? e : e.concat(Ie.appendConfig.of(CR));\n}\nconst uD = /* @__PURE__ */ Ie.define(), wm = /* @__PURE__ */ Ie.define(), cD = /* @__PURE__ */ Ie.define(), fr = /* @__PURE__ */ Vt.define({\n  create() {\n    return new ks(Te.none, null, null);\n  },\n  update(t, e) {\n    if (e.docChanged && t.diagnostics.size) {\n      let n = t.diagnostics.map(e.changes), r = null, i = t.panel;\n      if (t.selected) {\n        let s = e.changes.mapPos(t.selected.from, 1);\n        r = Aa(n, t.selected.diagnostic, s) || Aa(n, null, s);\n      }\n      !n.size && i && e.state.facet(_o).autoPanel && (i = null), t = new ks(n, i, r);\n    }\n    for (let n of e.effects)\n      if (n.is(uD)) {\n        let r = e.state.facet(_o).autoPanel ? n.value.length ? Zo.open : null : t.panel;\n        t = ks.init(n.value, r, e.state);\n      } else n.is(wm) ? t = new ks(t.diagnostics, n.value ? Zo.open : null, t.selected) : n.is(cD) && (t = new ks(t.diagnostics, t.panel, n.value));\n    return t;\n  },\n  provide: (t) => [\n    ns.from(t, (e) => e.panel),\n    be.decorations.from(t, (e) => e.diagnostics)\n  ]\n}), dR = /* @__PURE__ */ Te.mark({ class: "cm-lintRange cm-lintRange-active" });\nfunction mR(t, e, n) {\n  let { diagnostics: r } = t.state.field(fr), i, s = -1, a = -1;\n  r.between(e - (n < 0 ? 1 : 0), e + (n > 0 ? 1 : 0), (l, c, { spec: h }) => {\n    if (e >= l && e <= c && (l == c || (e > l || n > 0) && (e < c || n < 0)))\n      return i = h.diagnostics, s = l, a = c, !1;\n  });\n  let o = t.state.facet(_o).tooltipFilter;\n  return i && o && (i = o(i, t.state)), i ? {\n    pos: s,\n    end: a,\n    above: t.state.doc.lineAt(s).to < a,\n    create() {\n      return { dom: gR(t, i) };\n    }\n  } : null;\n}\nfunction gR(t, e) {\n  return Bt("ul", { class: "cm-tooltip-lint" }, e.map((n) => pD(t, n, !1)));\n}\nconst bR = (t) => {\n  let e = t.state.field(fr, !1);\n  (!e || !e.panel) && t.dispatch({ effects: fR(t.state, [wm.of(!0)]) });\n  let n = Eo(t, Zo.open);\n  return n && n.dom.querySelector(".cm-panel-lint ul").focus(), !0;\n}, ab = (t) => {\n  let e = t.state.field(fr, !1);\n  return !e || !e.panel ? !1 : (t.dispatch({ effects: wm.of(!1) }), !0);\n}, yR = (t) => {\n  let e = t.state.field(fr, !1);\n  if (!e)\n    return !1;\n  let n = t.state.selection.main, r = e.diagnostics.iter(n.to + 1);\n  return !r.value && (r = e.diagnostics.iter(0), !r.value || r.from == n.from && r.to == n.to) ? !1 : (t.dispatch({ selection: { anchor: r.from, head: r.to }, scrollIntoView: !0 }), !0);\n}, _o = /* @__PURE__ */ Ae.define({\n  combine(t) {\n    return Object.assign({ sources: t.map((e) => e.source).filter((e) => e != null) }, ls(t.map((e) => e.config), {\n      delay: 750,\n      markerFilter: null,\n      tooltipFilter: null,\n      needsRefresh: null,\n      hideOn: () => null\n    }, {\n      needsRefresh: (e, n) => e ? n ? (r) => e(r) || n(r) : e : n\n    }));\n  }\n});\nfunction hD(t) {\n  let e = [];\n  if (t)\n    e: for (let { name: n } of t) {\n      for (let r = 0; r < n.length; r++) {\n        let i = n[r];\n        if (/[a-zA-Z]/.test(i) && !e.some((s) => s.toLowerCase() == i.toLowerCase())) {\n          e.push(i);\n          continue e;\n        }\n      }\n      e.push("");\n    }\n  return e;\n}\nfunction pD(t, e, n) {\n  var r;\n  let i = n ? hD(e.actions) : [];\n  return Bt("li", { class: "cm-diagnostic cm-diagnostic-" + e.severity }, Bt("span", { class: "cm-diagnosticText" }, e.renderMessage ? e.renderMessage(t) : e.message), (r = e.actions) === null || r === void 0 ? void 0 : r.map((s, a) => {\n    let o = !1, l = (m) => {\n      if (m.preventDefault(), o)\n        return;\n      o = !0;\n      let y = Aa(t.state.field(fr).diagnostics, e);\n      y && s.apply(t, y.from, y.to);\n    }, { name: c } = s, h = i[a] ? c.indexOf(i[a]) : -1, f = h < 0 ? c : [\n      c.slice(0, h),\n      Bt("u", c.slice(h, h + 1)),\n      c.slice(h + 1)\n    ];\n    return Bt("button", {\n      type: "button",\n      class: "cm-diagnosticAction",\n      onclick: l,\n      onmousedown: l,\n      "aria-label": ` Action: ${c}${h < 0 ? "" : ` (access key "${i[a]})"`}.`\n    }, f);\n  }), e.source && Bt("div", { class: "cm-diagnosticSource" }, e.source));\n}\nclass OR extends Zi {\n  constructor(e) {\n    super(), this.sev = e;\n  }\n  eq(e) {\n    return e.sev == this.sev;\n  }\n  toDOM() {\n    return Bt("span", { class: "cm-lintPoint cm-lintPoint-" + this.sev });\n  }\n}\nclass ob {\n  constructor(e, n) {\n    this.diagnostic = n, this.id = "item_" + Math.floor(Math.random() * 4294967295).toString(16), this.dom = pD(e, n, !0), this.dom.id = this.id, this.dom.setAttribute("role", "option");\n  }\n}\nclass Zo {\n  constructor(e) {\n    this.view = e, this.items = [];\n    let n = (i) => {\n      if (i.keyCode == 27)\n        ab(this.view), this.view.focus();\n      else if (i.keyCode == 38 || i.keyCode == 33)\n        this.moveSelection((this.selectedIndex - 1 + this.items.length) % this.items.length);\n      else if (i.keyCode == 40 || i.keyCode == 34)\n        this.moveSelection((this.selectedIndex + 1) % this.items.length);\n      else if (i.keyCode == 36)\n        this.moveSelection(0);\n      else if (i.keyCode == 35)\n        this.moveSelection(this.items.length - 1);\n      else if (i.keyCode == 13)\n        this.view.focus();\n      else if (i.keyCode >= 65 && i.keyCode <= 90 && this.selectedIndex >= 0) {\n        let { diagnostic: s } = this.items[this.selectedIndex], a = hD(s.actions);\n        for (let o = 0; o < a.length; o++)\n          if (a[o].toUpperCase().charCodeAt(0) == i.keyCode) {\n            let l = Aa(this.view.state.field(fr).diagnostics, s);\n            l && s.actions[o].apply(e, l.from, l.to);\n          }\n      } else\n        return;\n      i.preventDefault();\n    }, r = (i) => {\n      for (let s = 0; s < this.items.length; s++)\n        this.items[s].dom.contains(i.target) && this.moveSelection(s);\n    };\n    this.list = Bt("ul", {\n      tabIndex: 0,\n      role: "listbox",\n      "aria-label": this.view.state.phrase("Diagnostics"),\n      onkeydown: n,\n      onclick: r\n    }), this.dom = Bt("div", { class: "cm-panel-lint" }, this.list, Bt("button", {\n      type: "button",\n      name: "close",\n      "aria-label": this.view.state.phrase("close"),\n      onclick: () => ab(this.view)\n    }, "×")), this.update();\n  }\n  get selectedIndex() {\n    let e = this.view.state.field(fr).selected;\n    if (!e)\n      return -1;\n    for (let n = 0; n < this.items.length; n++)\n      if (this.items[n].diagnostic == e.diagnostic)\n        return n;\n    return -1;\n  }\n  update() {\n    let { diagnostics: e, selected: n } = this.view.state.field(fr), r = 0, i = !1, s = null, a = /* @__PURE__ */ new Set();\n    for (e.between(0, this.view.state.doc.length, (o, l, { spec: c }) => {\n      for (let h of c.diagnostics) {\n        if (a.has(h))\n          continue;\n        a.add(h);\n        let f = -1, m;\n        for (let y = r; y < this.items.length; y++)\n          if (this.items[y].diagnostic == h) {\n            f = y;\n            break;\n          }\n        f < 0 ? (m = new ob(this.view, h), this.items.splice(r, 0, m), i = !0) : (m = this.items[f], f > r && (this.items.splice(r, f - r), i = !0)), n && m.diagnostic == n.diagnostic ? m.dom.hasAttribute("aria-selected") || (m.dom.setAttribute("aria-selected", "true"), s = m) : m.dom.hasAttribute("aria-selected") && m.dom.removeAttribute("aria-selected"), r++;\n      }\n    }); r < this.items.length && !(this.items.length == 1 && this.items[0].diagnostic.from < 0); )\n      i = !0, this.items.pop();\n    this.items.length == 0 && (this.items.push(new ob(this.view, {\n      from: -1,\n      to: -1,\n      severity: "info",\n      message: this.view.state.phrase("No diagnostics")\n    })), i = !0), s ? (this.list.setAttribute("aria-activedescendant", s.id), this.view.requestMeasure({\n      key: this,\n      read: () => ({ sel: s.dom.getBoundingClientRect(), panel: this.list.getBoundingClientRect() }),\n      write: ({ sel: o, panel: l }) => {\n        let c = l.height / this.list.offsetHeight;\n        o.top < l.top ? this.list.scrollTop -= (l.top - o.top) / c : o.bottom > l.bottom && (this.list.scrollTop += (o.bottom - l.bottom) / c);\n      }\n    })) : this.selectedIndex < 0 && this.list.removeAttribute("aria-activedescendant"), i && this.sync();\n  }\n  sync() {\n    let e = this.list.firstChild;\n    function n() {\n      let r = e;\n      e = r.nextSibling, r.remove();\n    }\n    for (let r of this.items)\n      if (r.dom.parentNode == this.list) {\n        for (; e != r.dom; )\n          n();\n        e = r.dom.nextSibling;\n      } else\n        this.list.insertBefore(r.dom, e);\n    for (; e; )\n      n();\n  }\n  moveSelection(e) {\n    if (this.selectedIndex < 0)\n      return;\n    let n = this.view.state.field(fr), r = Aa(n.diagnostics, this.items[e].diagnostic);\n    r && this.view.dispatch({\n      selection: { anchor: r.from, head: r.to },\n      scrollIntoView: !0,\n      effects: cD.of(r)\n    });\n  }\n  static open(e) {\n    return new Zo(e);\n  }\n}\nfunction vR(t, e = \'viewBox="0 0 40 40"\') {\n  return `url(\'data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" ${e}>${encodeURIComponent(t)}</svg>\')`;\n}\nfunction Hl(t) {\n  return vR(`<path d="m0 2.5 l2 -1.5 l1 0 l2 1.5 l1 0" stroke="${t}" fill="none" stroke-width=".7"/>`, \'width="6" height="3"\');\n}\nconst xR = /* @__PURE__ */ be.baseTheme({\n  ".cm-diagnostic": {\n    padding: "3px 6px 3px 8px",\n    marginLeft: "-1px",\n    display: "block",\n    whiteSpace: "pre-wrap"\n  },\n  ".cm-diagnostic-error": { borderLeft: "5px solid #d11" },\n  ".cm-diagnostic-warning": { borderLeft: "5px solid orange" },\n  ".cm-diagnostic-info": { borderLeft: "5px solid #999" },\n  ".cm-diagnostic-hint": { borderLeft: "5px solid #66d" },\n  ".cm-diagnosticAction": {\n    font: "inherit",\n    border: "none",\n    padding: "2px 4px",\n    backgroundColor: "#444",\n    color: "white",\n    borderRadius: "3px",\n    marginLeft: "8px",\n    cursor: "pointer"\n  },\n  ".cm-diagnosticSource": {\n    fontSize: "70%",\n    opacity: 0.7\n  },\n  ".cm-lintRange": {\n    backgroundPosition: "left bottom",\n    backgroundRepeat: "repeat-x",\n    paddingBottom: "0.7px"\n  },\n  ".cm-lintRange-error": { backgroundImage: /* @__PURE__ */ Hl("#d11") },\n  ".cm-lintRange-warning": { backgroundImage: /* @__PURE__ */ Hl("orange") },\n  ".cm-lintRange-info": { backgroundImage: /* @__PURE__ */ Hl("#999") },\n  ".cm-lintRange-hint": { backgroundImage: /* @__PURE__ */ Hl("#66d") },\n  ".cm-lintRange-active": { backgroundColor: "#ffdd9980" },\n  ".cm-tooltip-lint": {\n    padding: 0,\n    margin: 0\n  },\n  ".cm-lintPoint": {\n    position: "relative",\n    "&:after": {\n      content: \'""\',\n      position: "absolute",\n      bottom: 0,\n      left: "-2px",\n      borderLeft: "3px solid transparent",\n      borderRight: "3px solid transparent",\n      borderBottom: "4px solid #d11"\n    }\n  },\n  ".cm-lintPoint-warning": {\n    "&:after": { borderBottomColor: "orange" }\n  },\n  ".cm-lintPoint-info": {\n    "&:after": { borderBottomColor: "#999" }\n  },\n  ".cm-lintPoint-hint": {\n    "&:after": { borderBottomColor: "#66d" }\n  },\n  ".cm-panel.cm-panel-lint": {\n    position: "relative",\n    "& ul": {\n      maxHeight: "100px",\n      overflowY: "auto",\n      "& [aria-selected]": {\n        backgroundColor: "#ddd",\n        "& u": { textDecoration: "underline" }\n      },\n      "&:focus [aria-selected]": {\n        background_fallback: "#bdf",\n        backgroundColor: "Highlight",\n        color_fallback: "white",\n        color: "HighlightText"\n      },\n      "& u": { textDecoration: "none" },\n      padding: 0,\n      margin: 0\n    },\n    "& [name=close]": {\n      position: "absolute",\n      top: "0",\n      right: "2px",\n      background: "inherit",\n      border: "none",\n      font: "inherit",\n      padding: 0,\n      margin: 0\n    }\n  }\n});\nfunction kR(t) {\n  return t == "error" ? 4 : t == "warning" ? 3 : t == "info" ? 2 : 1;\n}\nfunction wR(t) {\n  let e = "hint", n = 1;\n  for (let r of t) {\n    let i = kR(r.severity);\n    i > n && (n = i, e = r.severity);\n  }\n  return e;\n}\nconst CR = [\n  fr,\n  /* @__PURE__ */ be.decorations.compute([fr], (t) => {\n    let { selected: e, panel: n } = t.field(fr);\n    return !e || !n || e.from == e.to ? Te.none : Te.set([\n      dR.range(e.from, e.to)\n    ]);\n  }),\n  /* @__PURE__ */ KC(mR, { hideOn: pR }),\n  xR\n], fD = (t) => (e) => {\n  const n = t === "down";\n  let r = e.state.selection;\n  for (const i of r.ranges)\n    r = r.addRange(e.moveVertically(i, n));\n  return e.dispatch({ selection: r }), !0;\n}, SR = /* @__PURE__ */ fD("up"), AR = /* @__PURE__ */ fD("down"), DR = (t) => {\n  let e = null;\n  for (const n of t.state.selection.ranges)\n    if (!n.empty)\n      for (let r = n.from; r <= n.to; ) {\n        const i = t.state.doc.lineAt(r), s = Math.min(i.to, n.to);\n        e ? e = e.addRange(ne.range(s, s)) : e = ne.single(s), r = i.to + 1;\n      }\n  return e ? (t.dispatch({ selection: e }), !0) : !1;\n}, PR = [\n  { key: "Ctrl-Space", run: bf },\n  { key: "Escape", run: RS },\n  { key: "ArrowDown", run: /* @__PURE__ */ Yi(!0) },\n  { key: "ArrowUp", run: /* @__PURE__ */ Yi(!1) },\n  { key: "PageDown", run: /* @__PURE__ */ Yi(!0, "page") },\n  { key: "PageUp", run: /* @__PURE__ */ Yi(!1, "page") },\n  { key: "Enter", run: gf },\n  { key: "Tab", run: gf },\n  { key: "Mod-f", run: JA, scope: "editor search-panel" },\n  { key: "Escape", run: eD, scope: "editor search-panel" },\n  { key: "Alt-Enter", run: zA, scope: "editor search-panel" },\n  { key: "Mod-Alt-Enter", run: HA, scope: "editor search-panel" },\n  { key: "Ctrl-g", run: aj },\n  { key: "Mod-d", run: cj, preventDefault: !0 },\n  { key: "Shift-Mod-l", run: yj },\n  // Enter and shift enter handled within the search panel plugin\n  { key: "Enter", run: jo, shift: jo },\n  {\n    key: "ArrowLeft",\n    run: To,\n    shift: qu,\n    preventDefault: !0\n  },\n  {\n    key: "Mod-ArrowLeft",\n    mac: "Alt-ArrowLeft",\n    run: KS,\n    shift: lA\n  },\n  {\n    key: "ArrowRight",\n    run: Nu,\n    shift: Gu,\n    preventDefault: !0\n  },\n  {\n    key: "Mod-ArrowRight",\n    mac: "Alt-ArrowRight",\n    run: JS,\n    shift: uA\n  },\n  {\n    key: "ArrowUp",\n    run: Vu,\n    shift: zu,\n    preventDefault: !0\n  },\n  {\n    key: "ArrowDown",\n    run: Xu,\n    shift: Hu,\n    preventDefault: !0\n  },\n  {\n    key: "Home",\n    run: Uu,\n    shift: vf\n  },\n  {\n    mac: "Cmd-ArrowLeft",\n    run: Uu,\n    shift: vf\n  },\n  { key: "Mod-Home", run: Ju, shift: tc },\n  { mac: "Cmd-ArrowUp", run: Ju, shift: tc },\n  { key: "PageUp", run: go, shift: Yu },\n  { mac: "Ctrl-ArrowUp", run: go, shift: Yu },\n  { key: "PageDown", run: la, shift: Ku },\n  { mac: "Ctrl-ArrowDown", run: la, shift: Ku },\n  {\n    key: "End",\n    run: Wu,\n    shift: Of\n  },\n  {\n    mac: "Cmd-ArrowRight",\n    run: Wu,\n    shift: Of\n  },\n  {\n    key: "Mod-Alt-ArrowUp",\n    linux: "Shift-Alt-ArrowUp",\n    run: SR,\n    preventDefault: !0\n  },\n  {\n    key: "Mod-Alt-ArrowDown",\n    linux: "Shift-Alt-ArrowDown",\n    run: AR,\n    preventDefault: !0\n  },\n  {\n    key: "Shift-Alt-i",\n    run: DR\n  },\n  { key: "Mod-End", run: ec, shift: nc },\n  { mac: "Cmd-ArrowDown", run: ec, shift: nc },\n  { key: "Mod-a", run: dA },\n  { key: "Backspace", run: e7 },\n  { key: "Backspace", run: ua, shift: ua },\n  { key: "Delete", run: rc },\n  { key: "Mod-Backspace", mac: "Alt-Backspace", run: ic },\n  { key: "Mod-Delete", mac: "Alt-Delete", run: yA },\n  { mac: "Mod-Backspace", run: $7 },\n  { mac: "Mod-Delete", run: xf },\n  {\n    mac: "Ctrl-b",\n    run: To,\n    shift: qu,\n    preventDefault: !0\n  },\n  { mac: "Ctrl-f", run: Nu, shift: Gu },\n  { mac: "Ctrl-p", run: Vu, shift: zu },\n  { mac: "Ctrl-n", run: Xu, shift: Hu },\n  { mac: "Ctrl-a", run: rA, shift: pA },\n  { mac: "Ctrl-e", run: iA, shift: fA },\n  { mac: "Ctrl-d", run: rc },\n  { mac: "Ctrl-h", run: ua },\n  { mac: "Ctrl-k", run: xf },\n  { mac: "Ctrl-Alt-h", run: ic },\n  { mac: "Ctrl-o", run: fm },\n  { mac: "Ctrl-t", run: OA },\n  { mac: "Ctrl-v", run: la },\n  { mac: "Alt-v", run: go },\n  { key: "Shift-Mod-k", run: AA },\n  { key: "Alt-ArrowDown", run: kA },\n  { key: "Alt-ArrowUp", run: xA },\n  { win: "Shift-Alt-ArrowDown", mac: "Shift-Alt-ArrowDown", run: SA },\n  { win: "Shift-Alt-ArrowUp", mac: "Shift-Alt-ArrowUp", run: CA },\n  { key: "Mod-l", run: mA, preventDefault: !0 },\n  { key: "Shift-Mod-\\\\", run: sA },\n  { key: "Tab", run: sc, shift: ac, preventDefault: !0 },\n  { key: "Mod-[", run: ac },\n  { key: "Mod-]", run: sc },\n  { key: "Ctrl-Shift-[", mac: "Cmd-Alt-[", run: wS },\n  { key: "Ctrl-Shift-]", mac: "Cmd-Alt-]", run: WM },\n  { key: "Mod-k Mod-0", run: UM },\n  { key: "Mod-k Mod-j", run: qM },\n  { key: "Mod-k Mod-c", run: h7 },\n  { key: "Mod-k Mod-u", run: p7 },\n  { key: "Mod-/", run: $c },\n  { key: "Shift-Alt-a", run: um },\n  { key: "Mod-z", run: Ic, preventDefault: !0 },\n  { key: "Mod-y", run: Sa, preventDefault: !0 },\n  { key: "Mod-Shift-z", run: Sa, preventDefault: !0 },\n  { key: "Mod-u", run: GS, preventDefault: !0 },\n  { key: "Mod-Shift-m", run: bR },\n  { key: "F8", run: yR }\n  // Shift should go back, but previousDiagnostic is not implemented\n], ER = pn.fromClass(\n  class {\n    constructor() {\n    }\n  },\n  {\n    provide: () => jr.highest(Rs.of([...PR]))\n  }\n), FR = (t) => [ER].concat(t ?? []), BR = {\n  vim: cR,\n  emacs: Tj,\n  vscode: FR\n};\nfunction MR(t) {\n  const e = BR[t];\n  return [Rs.of(q7), Rs.of(S7), e ? e() : []];\n}\nconst at = ({ theme: t, settings: e, styles: n }) => {\n  const r = be.theme(\n    {\n      "&": {\n        color: e.foreground,\n        backgroundColor: e.background\n      },\n      ".cm-gutters": {\n        backgroundColor: e.gutterBackground,\n        color: e.gutterForeground\n        //borderRightColor: settings.gutterBorder\n      },\n      ".cm-content": {\n        caretColor: e.caret\n      },\n      ".cm-cursor, .cm-dropCursor": {\n        borderLeftColor: e.caret\n      },\n      ".cm-activeLineGutter": {\n        // color: settings.gutterActiveForeground\n        backgroundColor: e.lineHighlight\n      },\n      ".cm-activeLine": {\n        backgroundColor: e.lineHighlight\n      },\n      "&.cm-focused .cm-selectionBackground, & .cm-line::selection, & .cm-selectionLayer .cm-selectionBackground, .cm-content ::selection": {\n        background: e.selection + " !important"\n      },\n      "& .cm-selectionMatch": {\n        backgroundColor: e.selectionMatch\n      }\n    },\n    { dark: t === "dark" }\n  ), i = Yo.define(n);\n  return [r, DS(i)];\n}, dD = {\n  background: "#222",\n  lineBackground: "#22222299",\n  foreground: "#fff",\n  caret: "#ffcc00",\n  selection: "rgba(128, 203, 196, 0.5)",\n  selectionMatch: "#036dd626",\n  lineHighlight: "#00000050",\n  gutterBackground: "transparent",\n  gutterForeground: "#8a919966"\n}, QR = at({\n  theme: "dark",\n  settings: dD,\n  styles: [\n    { tag: [u.atom, u.bool, u.special(u.variableName)], color: "#89ddff" },\n    { tag: u.labelName, color: "#89ddff" },\n    { tag: u.keyword, color: "#c792ea" },\n    { tag: u.operator, color: "#89ddff" },\n    { tag: u.special(u.variableName), color: "#eeffff" },\n    // { tag: t.typeName, color: \'#f07178\' }, // original\n    { tag: u.typeName, color: "#c3e88d" },\n    { tag: u.atom, color: "#f78c6c" },\n    // { tag: t.number, color: \'#ff5370\' }, // original\n    { tag: u.number, color: "#c3e88d" },\n    { tag: u.definition(u.variableName), color: "#82aaff" },\n    { tag: u.string, color: "#c3e88d" },\n    //     { tag: t.special(t.string), color: \'#f07178\' }, // original\n    { tag: u.special(u.string), color: "#c3e88d" },\n    { tag: u.comment, color: "#7d8799" },\n    // { tag: t.variableName, color: \'#f07178\' }, // original\n    { tag: u.variableName, color: "#c792ea" },\n    // { tag: t.tagName, color: \'#ff5370\' }, // original\n    { tag: u.tagName, color: "#c3e88d" },\n    { tag: u.bracket, color: "#525154" },\n    // { tag: t.bracket, color: \'#a2a1a4\' }, // original\n    { tag: u.meta, color: "#ffcb6b" },\n    { tag: u.attributeName, color: "#c792ea" },\n    { tag: u.propertyName, color: "#c792ea" },\n    { tag: u.className, color: "#decb6b" },\n    { tag: u.invalid, color: "#ffffff" },\n    { tag: [u.unit, u.punctuation], color: "#82aaff" }\n  ]\n}), mD = {\n  background: "#051DB5",\n  lineBackground: "#051DB550",\n  foreground: "white",\n  // whats that?\n  caret: "white",\n  selection: "rgba(128, 203, 196, 0.5)",\n  selectionMatch: "#036dd626",\n  // lineHighlight: \'#8a91991a\', // original\n  lineHighlight: "#00000050",\n  gutterBackground: "transparent",\n  // gutterForeground: \'#8a919966\',\n  gutterForeground: "#8a919966"\n}, TR = at({\n  theme: "dark",\n  settings: mD,\n  styles: [\n    { tag: u.labelName, color: "inherit" },\n    { tag: u.keyword, color: "inherit" },\n    { tag: u.operator, color: "inherit" },\n    { tag: u.special(u.variableName), color: "inherit" },\n    { tag: u.typeName, color: "inherit" },\n    { tag: u.atom, color: "inherit" },\n    { tag: u.number, color: "inherit" },\n    { tag: u.definition(u.variableName), color: "inherit" },\n    { tag: u.string, color: "inherit" },\n    { tag: u.special(u.string), color: "inherit" },\n    { tag: u.comment, color: "inherit" },\n    { tag: u.variableName, color: "inherit" },\n    { tag: u.tagName, color: "inherit" },\n    { tag: u.bracket, color: "inherit" },\n    { tag: u.meta, color: "inherit" },\n    { tag: u.attributeName, color: "inherit" },\n    { tag: u.propertyName, color: "inherit" },\n    { tag: u.className, color: "inherit" },\n    { tag: u.invalid, color: "inherit" },\n    { tag: [u.unit, u.punctuation], color: "inherit" }\n  ]\n}), gD = {\n  background: "black",\n  foreground: "white",\n  // whats that?\n  caret: "white",\n  selection: "#ffffff20",\n  selectionMatch: "#036dd626",\n  lineHighlight: "#ffffff10",\n  lineBackground: "#00000050",\n  gutterBackground: "transparent",\n  gutterForeground: "#8a919966"\n}, jR = at({\n  theme: "dark",\n  settings: gD,\n  styles: [\n    { tag: u.labelName, color: "inherit" },\n    { tag: u.keyword, color: "inherit" },\n    { tag: u.operator, color: "inherit" },\n    { tag: u.special(u.variableName), color: "inherit" },\n    { tag: u.typeName, color: "inherit" },\n    { tag: u.atom, color: "inherit" },\n    { tag: u.number, color: "inherit" },\n    { tag: u.definition(u.variableName), color: "inherit" },\n    { tag: u.string, color: "inherit" },\n    { tag: u.special(u.string), color: "inherit" },\n    { tag: u.comment, color: "inherit" },\n    { tag: u.variableName, color: "inherit" },\n    { tag: u.tagName, color: "inherit" },\n    { tag: u.bracket, color: "inherit" },\n    { tag: u.meta, color: "inherit" },\n    { tag: u.attributeName, color: "inherit" },\n    { tag: u.propertyName, color: "inherit" },\n    { tag: u.className, color: "inherit" },\n    { tag: u.invalid, color: "inherit" },\n    { tag: [u.unit, u.punctuation], color: "inherit" }\n  ]\n}), bD = {\n  background: "white",\n  foreground: "black",\n  // whats that?\n  caret: "black",\n  selection: "rgba(128, 203, 196, 0.5)",\n  selectionMatch: "#ffffff26",\n  lineHighlight: "#cccccc50",\n  lineBackground: "#ffffff50",\n  gutterBackground: "transparent",\n  gutterForeground: "black",\n  light: !0\n}, RR = at({\n  theme: "light",\n  settings: bD,\n  styles: [\n    { tag: u.labelName, color: "inherit" },\n    { tag: u.keyword, color: "inherit" },\n    { tag: u.operator, color: "inherit" },\n    { tag: u.special(u.variableName), color: "inherit" },\n    { tag: u.typeName, color: "inherit" },\n    { tag: u.atom, color: "inherit" },\n    { tag: u.number, color: "inherit" },\n    { tag: u.definition(u.variableName), color: "inherit" },\n    { tag: u.string, color: "inherit" },\n    { tag: u.special(u.string), color: "inherit" },\n    { tag: u.comment, color: "inherit" },\n    { tag: u.variableName, color: "inherit" },\n    { tag: u.tagName, color: "inherit" },\n    { tag: u.bracket, color: "inherit" },\n    { tag: u.meta, color: "inherit" },\n    { tag: u.attributeName, color: "inherit" },\n    { tag: u.propertyName, color: "inherit" },\n    { tag: u.className, color: "inherit" },\n    { tag: u.invalid, color: "inherit" }\n  ]\n});\nlet ur = "#6edee4", yD = "white", OD = "red", vD = "#f8fc55";\nconst xD = {\n  background: "#000000",\n  foreground: ur,\n  // whats that?\n  caret: OD,\n  selection: vD,\n  selectionMatch: ur,\n  lineHighlight: "#6edee440",\n  // panel bg\n  lineBackground: "#00000040",\n  gutterBackground: "transparent",\n  gutterForeground: "#8a919966"\n  // customStyle: \'.cm-line { line-height: 1 }\',\n};\nlet cp = vD, Yl = yD;\nconst _R = at({\n  theme: "dark",\n  settings: xD,\n  styles: [\n    { tag: u.labelName, color: yD },\n    { tag: u.keyword, color: ur },\n    { tag: u.operator, color: Yl },\n    { tag: u.special(u.variableName), color: ur },\n    { tag: u.typeName, color: ur },\n    { tag: u.atom, color: ur },\n    { tag: u.number, color: Yl },\n    { tag: u.definition(u.variableName), color: ur },\n    { tag: u.string, color: Yl },\n    { tag: u.special(u.string), color: Yl },\n    { tag: u.comment, color: cp },\n    { tag: u.variableName, color: ur },\n    { tag: u.tagName, color: ur },\n    { tag: u.bracket, color: cp },\n    { tag: u.meta, color: ur },\n    { tag: u.attributeName, color: ur },\n    { tag: u.propertyName, color: ur },\n    // methods\n    { tag: u.className, color: ur },\n    { tag: u.invalid, color: OD },\n    { tag: [u.unit, u.punctuation], color: cp }\n  ]\n}), ZR = {\n  // https://www.deviantart.com/advancedfan2020/art/Game-Boy-Palette-Set-Color-HEX-Part-09-920495662\n  "Central Florida A": ["#FFF630", "#B3AC22", "#666213", "#191905"],\n  "Central Florida B": ["#38CEBA", "#279082", "#16524A", "#061513"],\n  "Central Florida C": ["#FF8836", "#B35F26", "#663616", "#190E05"],\n  "Central Florida D": ["#E07070", "#9D4E4E", "#5A2D2D", "#160B0B"],\n  "Central Florida E": ["#7AA4CB", "#55738E", "#314251", "#0C1014"],\n  "Feminine Energy A": ["#DC5686", "#9A415E", "#582536", "#16090D"],\n  "Feminine Energy B": ["#D0463C", "#92312A", "#531c18", "#150706"],\n  "Feminine Energy C": ["#D86918", "#974A11", "#562A0A", "#160A02"],\n  "Feminine Energy D": ["#EFC54F", "#A78A36", "#604F20", "#181408"],\n  "Feminine Energy E": ["#866399", "#5e456b", "#36283d", "#0d0a0f"],\n  "Sour Watermelon A": ["#993366", "#6B2447", "#3D1429", "#0F050A"],\n  "Sour Watermelon B": ["#996666", "#6B4747", "#3D2929", "#0F0A0A"],\n  "Sour Watermelon C": ["#999966", "#686B47", "#3d3d29", "#0f0f0A"],\n  "Sour Watermelon D": ["#99cc66", "#6b8f47", "#3d5229", "#0f140a"],\n  "Sour Watermelon E": ["#99ff66", "#6bb347", "#3d6629", "#0f190a"],\n  //https://www.deviantart.com/advancedfan2020/art/Game-Boy-Palette-Set-Color-HEX-Part-02-920073260\n  "Peri Peaceful A": ["#909BE9", "#656DA3", "#3A3E5D", "#0e0f17"],\n  "Peri Peaceful B": ["#68628d", "#494563", "#2a2738", "#0a0a0e"],\n  // pretty dim\n  "Peri Peaceful E": ["#b5a0a9", "#7f7076", "#484044", "#121011"],\n  "Hichem Palette B": ["#4fa3a5", "#377273", "#204142", "#081010"],\n  "Hichem Palette C": ["#Fe6f9b", "#b24e6d", "#662c3e", "#190b0f"],\n  "Hichem Palette D": ["#ffbb5a", "#b3833f", "#664b24", "#191309"],\n  "JSR2 A": ["#E0EFC0", "#9da786", "#5a604d", "#161813"]\n}, An = ZR["Sour Watermelon B"], kD = {\n  background: An[3],\n  foreground: An[1],\n  caret: An[0],\n  selection: An[0],\n  selectionMatch: An[1],\n  lineHighlight: An[3],\n  lineBackground: An[3] + "90",\n  //lineBackground: \'transparent\',\n  gutterBackground: "transparent",\n  gutterForeground: An[0],\n  light: !1\n  // customStyle: \'.cm-line { line-height: 1 }\',\n}, $R = at({\n  theme: "dark",\n  settings: kD,\n  styles: [\n    { tag: u.comment, color: An[2] },\n    { tag: u.string, color: An[1] },\n    { tag: [u.atom, u.number], color: An[1] },\n    { tag: [u.meta, u.labelName, u.variableName], color: An[0] },\n    {\n      tag: [u.keyword, u.tagName, u.arithmeticOperator],\n      color: An[1]\n    },\n    { tag: [u.atom, u.bool, u.special(u.variableName)], color: An[0] },\n    { tag: [u.function(u.variableName), u.propertyName], color: An[0] },\n    { tag: u.atom, color: An[1] }\n  ]\n}), Tf = "#5c019a", LR = "#fbeffc", wD = "#272C35", IR = "#fee1ff", NR = "#465063", VR = "#9acd3f", XR = "#97a1b7", WR = "#f6a6fd", jf = {\n  background: "white",\n  lineBackground: "transparent",\n  foreground: Tf,\n  caret: "#797977",\n  selection: LR,\n  selectionMatch: "#2B323D",\n  gutterBackground: wD,\n  gutterForeground: NR,\n  gutterBorder: "transparent",\n  lineHighlight: IR\n}, UR = at({\n  theme: "light",\n  settings: jf,\n  styles: [\n    {\n      tag: [u.function(u.variableName), u.function(u.propertyName), u.url, u.processingInstruction],\n      color: Tf\n    },\n    { tag: [u.tagName, u.heading], color: jf.foreground },\n    { tag: u.comment, color: XR },\n    { tag: [u.variableName, u.propertyName, u.labelName], color: WR },\n    { tag: [u.attributeName, u.number], color: "#d19a66" },\n    { tag: u.className, color: wD },\n    { tag: u.keyword, color: Tf },\n    { tag: [u.string, u.regexp, u.special(u.propertyName)], color: VR }\n  ]\n}), Xr = ["#1e1e1e", "#fbde2d", "#ff1493", "#4c83ff", "#ededed", "#cccccc", "#ffffff30", "#dc2f8c"], CD = {\n  background: "#000000",\n  lineBackground: "transparent",\n  foreground: Xr[4],\n  selection: Xr[6],\n  gutterBackground: Xr[0],\n  gutterForeground: Xr[5],\n  gutterBorder: "transparent",\n  lineHighlight: Xr[0]\n}, qR = at({\n  theme: "dark",\n  settings: CD,\n  styles: [\n    {\n      tag: [u.function(u.variableName), u.function(u.propertyName), u.url, u.processingInstruction],\n      color: Xr[4]\n    },\n    { tag: [u.atom, u.bool, u.special(u.variableName)], color: Xr[3] },\n    { tag: u.comment, color: "#54636D" },\n    { tag: [u.variableName, u.propertyName, u.labelName], color: Xr[4] },\n    { tag: [u.attributeName, u.number], color: Xr[3] },\n    { tag: u.keyword, color: Xr[1] },\n    { tag: [u.string, u.regexp, u.special(u.propertyName)], color: Xr[2] }\n  ]\n}), Xn = ["#000000", "#ff5356", "#bd312a", "#54636D", "#171717"], SD = {\n  background: Xn[0],\n  lineBackground: "transparent",\n  foreground: Xn[2],\n  selection: Xn[4],\n  selectionMatch: Xn[0],\n  gutterBackground: Xn[0],\n  gutterForeground: Xn[3],\n  gutterBorder: "transparent",\n  lineHighlight: Xn[0]\n}, GR = at({\n  theme: "dark",\n  settings: SD,\n  styles: [\n    {\n      tag: [u.function(u.variableName), u.function(u.propertyName), u.url, u.processingInstruction],\n      color: Xn[2]\n    },\n    { tag: [u.atom, u.bool, u.special(u.variableName)], color: Xn[1] },\n    { tag: u.comment, color: Xn[3] },\n    { tag: [u.variableName, u.propertyName, u.labelName], color: Xn[2] },\n    { tag: [u.attributeName, u.number], color: Xn[1] },\n    { tag: u.keyword, color: Xn[2] },\n    { tag: [u.string, u.regexp, u.special(u.propertyName)], color: Xn[1] }\n  ]\n}), Wn = ["#000000", "#8ed675", "#56bd2a", "#54636D", "#171717"], AD = {\n  background: Wn[0],\n  lineBackground: "transparent",\n  foreground: Wn[2],\n  selection: Wn[4],\n  selectionMatch: Wn[0],\n  gutterBackground: Wn[0],\n  gutterForeground: Wn[3],\n  gutterBorder: "transparent",\n  lineHighlight: Wn[0]\n}, zR = at({\n  theme: "dark",\n  settings: AD,\n  styles: [\n    {\n      tag: [u.function(u.variableName), u.function(u.propertyName), u.url, u.processingInstruction],\n      color: Wn[2]\n    },\n    { tag: [u.atom, u.bool, u.special(u.variableName)], color: Wn[1] },\n    { tag: u.comment, color: Wn[3] },\n    { tag: [u.variableName, u.propertyName, u.labelName], color: Wn[2] },\n    { tag: [u.attributeName, u.number], color: Wn[1] },\n    { tag: u.keyword, color: Wn[2] },\n    { tag: [u.string, u.regexp, u.special(u.propertyName)], color: Wn[1] }\n  ]\n}), HR = {\n  background: "#282b2e",\n  lineBackground: "#282b2e99",\n  foreground: "#a9b7c6",\n  caret: "#00FF00",\n  selection: "#343739",\n  selectionMatch: "#343739",\n  lineHighlight: "#343739"\n}, YR = at({\n  theme: "dark",\n  settings: {\n    background: "#282b2e",\n    foreground: "#a9b7c6",\n    caret: "#00FF00",\n    selection: "#4e5254",\n    selectionMatch: "#4e5254",\n    gutterForeground: "#cccccc50",\n    lineHighlight: "#7f85891f"\n  },\n  styles: [\n    { tag: u.labelName, color: "inherit" },\n    { tag: [u.keyword, u.deleted, u.className], color: "#a9b7c6" },\n    { tag: [u.number, u.literal], color: "#6897bb" },\n    //{ tag: [t.link, t.variableName], color: \'#629755\' },\n    { tag: [u.link, u.variableName], color: "#a9b7c6" },\n    { tag: [u.comment, u.quote], color: "grey" },\n    { tag: [u.meta, u.documentMeta], color: "#bbb529" },\n    //{ tag: [t.string, t.propertyName, t.attributeValue], color: \'#6a8759\' },\n    { tag: [u.propertyName, u.attributeValue], color: "#a9b7c6" },\n    { tag: [u.string], color: "#6a8759" },\n    { tag: [u.heading, u.typeName], color: "#ffc66d" },\n    { tag: [u.attributeName], color: "#a9b7c6" },\n    { tag: [u.emphasis], fontStyle: "italic" }\n  ]\n}), KR = {\n  background: "#272C35",\n  lineBackground: "#272C3599",\n  foreground: "hsl(220, 14%, 71%)",\n  caret: "#797977",\n  selection: "#ffffff30",\n  selectionMatch: "#2B323D",\n  gutterBackground: "#272C35",\n  gutterForeground: "#465063",\n  gutterBorder: "transparent",\n  lineHighlight: "#2B323D"\n}, JR = at({\n  theme: "dark",\n  settings: {\n    background: "#272C35",\n    foreground: "#9d9b97",\n    caret: "#797977",\n    selection: "#3d4c64",\n    selectionMatch: "#3d4c64",\n    gutterBackground: "#272C35",\n    gutterForeground: "#465063",\n    gutterBorder: "transparent",\n    lineHighlight: "#2e3f5940"\n  },\n  styles: [\n    {\n      tag: [u.function(u.variableName), u.function(u.propertyName), u.url, u.processingInstruction],\n      color: "hsl(207, 82%, 66%)"\n    },\n    { tag: [u.atom, u.bool, u.special(u.variableName)], color: "hsl( 29, 54%, 61%)" },\n    { tag: [u.tagName, u.heading], color: "#e06c75" },\n    { tag: u.comment, color: "#54636D" },\n    { tag: [u.variableName, u.propertyName, u.labelName], color: "hsl(220, 14%, 71%)" },\n    { tag: [u.attributeName, u.number], color: "hsl( 29, 54%, 61%)" },\n    { tag: u.className, color: "hsl( 39, 67%, 69%)" },\n    { tag: u.keyword, color: "hsl(286, 60%, 67%)" },\n    { tag: [u.string, u.regexp, u.special(u.propertyName)], color: "#98c379" }\n  ]\n}), e_ = {\n  background: "#21202e",\n  lineBackground: "#21202e99",\n  foreground: "#edecee",\n  caret: "#a277ff",\n  selection: "#3d375e7f",\n  selectionMatch: "#3d375e7f",\n  gutterBackground: "#21202e",\n  gutterForeground: "#edecee",\n  gutterBorder: "transparent",\n  lineHighlight: "#a394f033"\n}, t_ = at({\n  theme: "dark",\n  settings: {\n    background: "#21202e",\n    foreground: "#edecee",\n    caret: "#a277ff",\n    selection: "#5a51898f",\n    selectionMatch: "#5a51898f",\n    gutterBackground: "#21202e",\n    gutterForeground: "#edecee",\n    gutterBorder: "transparent",\n    lineHighlight: "#a394f033"\n  },\n  styles: [\n    { tag: u.keyword, color: "#a277ff" },\n    { tag: [u.name, u.deleted, u.character, u.macroName], color: "#edecee" },\n    { tag: [u.propertyName], color: "#ffca85" },\n    { tag: [u.processingInstruction, u.string, u.inserted, u.special(u.string)], color: "#61ffca" },\n    { tag: [u.function(u.variableName), u.labelName], color: "#ffca85" },\n    { tag: [u.color, u.constant(u.name), u.standard(u.name)], color: "#61ffca" },\n    { tag: [u.definition(u.name), u.separator], color: "#edecee" },\n    { tag: [u.className], color: "#82e2ff" },\n    { tag: [u.number, u.changed, u.annotation, u.modifier, u.self, u.namespace], color: "#61ffca" },\n    { tag: [u.typeName], color: "#82e2ff" },\n    { tag: [u.operator, u.operatorKeyword], color: "#a277ff" },\n    { tag: [u.url, u.escape, u.regexp, u.link], color: "#61ffca" },\n    { tag: [u.meta, u.comment], color: "#6d6d6d" },\n    { tag: u.strong, fontWeight: "bold" },\n    { tag: u.emphasis, fontStyle: "italic" },\n    { tag: u.link, textDecoration: "underline" },\n    { tag: u.heading, fontWeight: "bold", color: "#a277ff" },\n    { tag: [u.atom, u.bool, u.special(u.variableName)], color: "#edecee" },\n    { tag: u.invalid, color: "#ff6767" },\n    { tag: u.strikethrough, textDecoration: "line-through" }\n  ]\n}), n_ = {\n  background: "#242424",\n  lineBackground: "#24242499",\n  foreground: "#f8f8f2",\n  caret: "#FFFFFF",\n  selection: "rgba(255, 255, 255, 0.1)",\n  selectionMatch: "rgba(255, 255, 255, 0.2)",\n  gutterBackground: "rgba(255, 255, 255, 0.1)",\n  gutterForeground: "#999",\n  gutterBorder: "transparent",\n  lineHighlight: "rgba(255, 255, 255, 0.1)"\n}, r_ = at({\n  theme: "dark",\n  settings: {\n    background: "#242424",\n    foreground: "#f8f8f2",\n    caret: "#FFFFFF",\n    selection: "rgba(255, 255, 255, 0.1)",\n    selectionMatch: "rgba(255, 255, 255, 0.2)",\n    gutterBackground: "transparent",\n    gutterForeground: "#999",\n    gutterBorder: "transparent",\n    lineHighlight: "rgba(255, 255, 255, 0.1)"\n  },\n  styles: [\n    { tag: u.labelName, color: "#CCCCCC" },\n    { tag: [u.atom, u.number], color: "#7A9EC2" },\n    { tag: [u.comment], color: "#707070" },\n    { tag: [u.string], color: "#6A8759" },\n    { tag: [u.variableName, u.operator], color: "#CCCCCC" },\n    { tag: [u.function(u.variableName), u.propertyName], color: "#FFC66D" },\n    { tag: [u.meta, u.className], color: "#FFC66D" },\n    { tag: [u.propertyName], color: "#FFC66D" },\n    { tag: [u.keyword], color: "#CC7832" },\n    { tag: [u.tagName], color: "#ff79c6" },\n    { tag: [u.typeName], color: "#ffb86c" }\n  ]\n}), i_ = {\n  background: "#282a36",\n  lineBackground: "#282a3699",\n  foreground: "#f8f8f2",\n  caret: "#f8f8f0",\n  selection: "rgba(255, 255, 255, 0.1)",\n  selectionMatch: "rgba(255, 255, 255, 0.2)",\n  gutterBackground: "#282a36",\n  gutterForeground: "#6272a4",\n  gutterBorder: "transparent",\n  lineHighlight: "rgba(255, 255, 255, 0.1)"\n}, s_ = "#BD93F9", a_ = at({\n  theme: "dark",\n  settings: {\n    background: "#282a36",\n    foreground: "#f8f8f2",\n    caret: "#f8f8f0",\n    selection: "rgba(255, 255, 255, 0.1)",\n    selectionMatch: "rgba(255, 255, 255, 0.2)",\n    gutterBackground: "#282a36",\n    gutterForeground: "#6272a4",\n    gutterBorder: "transparent",\n    lineHighlight: "rgba(255, 255, 255, 0.1)"\n  },\n  styles: [\n    { tag: u.comment, color: "#6272a4" },\n    { tag: u.string, color: "#f1fa8c" },\n    { tag: [u.atom, u.number], color: s_ },\n    { tag: [u.meta, u.labelName, u.variableName], color: "#f8f8f2" },\n    {\n      tag: [u.keyword, u.tagName, u.arithmeticOperator],\n      color: "#ff79c6"\n    },\n    { tag: [u.function(u.variableName), u.propertyName], color: "#50fa7b" },\n    { tag: u.atom, color: "#bd93f9" }\n  ]\n}), o_ = {\n  background: "#2a2734",\n  lineBackground: "#2a273499",\n  foreground: "#eeebff",\n  caret: "#ffad5c",\n  selection: "rgba(255, 255, 255, 0.1)",\n  gutterBackground: "#2a2734",\n  gutterForeground: "#545167",\n  lineHighlight: "#36334280"\n}, l_ = at({\n  theme: "dark",\n  settings: {\n    background: "#2a2734",\n    foreground: "#6c6783",\n    caret: "#ffad5c",\n    selection: "#9a86fd",\n    selectionMatch: "#9a86fd",\n    gutterBackground: "#2a2734",\n    gutterForeground: "#545167",\n    lineHighlight: "#36334280"\n  },\n  styles: [\n    { tag: [u.comment, u.bracket, u.operator], color: "#6c6783" },\n    { tag: [u.atom, u.number, u.keyword, u.link, u.attributeName, u.quote], color: "#ffcc99" },\n    { tag: [u.emphasis, u.heading, u.tagName, u.propertyName, u.className, u.variableName], color: "#eeebff" },\n    { tag: [u.typeName, u.url], color: "#eeebff" },\n    { tag: u.string, color: "#ffb870" },\n    /* { tag: [t.propertyName], color: \'#9a86fd\' }, */\n    { tag: [u.propertyName], color: "#eeebff" },\n    { tag: u.labelName, color: "#eeebff" }\n  ]\n}), u_ = {\n  light: !0,\n  background: "#fff",\n  lineBackground: "#ffffff99",\n  foreground: "#000",\n  caret: "#FFFFFF",\n  selection: "#d7d4f0",\n  selectionMatch: "#d7d4f0",\n  gutterBackground: "#f7f7f7",\n  gutterForeground: "#999",\n  lineHighlight: "#e8f2ff",\n  gutterBorder: "transparent"\n}, c_ = at({\n  theme: "light",\n  settings: {\n    background: "#fff",\n    foreground: "#000",\n    caret: "#FFFFFF",\n    selection: "#d7d4f0",\n    selectionMatch: "#d7d4f0",\n    gutterBackground: "#f7f7f7",\n    gutterForeground: "#999",\n    lineHighlight: "#006fff1c",\n    gutterBorder: "transparent"\n  },\n  styles: [\n    { tag: [u.comment], color: "#3F7F5F" },\n    { tag: [u.documentMeta], color: "#FF1717" },\n    { tag: u.keyword, color: "#7F0055", fontWeight: "bold" },\n    { tag: u.atom, color: "#00f" },\n    { tag: u.number, color: "#164" },\n    { tag: u.propertyName, color: "#164" },\n    { tag: [u.variableName, u.definition(u.variableName)], color: "#0000C0" },\n    { tag: u.function(u.variableName), color: "#0000C0" },\n    { tag: u.string, color: "#2A00FF" },\n    { tag: u.operator, color: "black" },\n    { tag: u.tagName, color: "#170" },\n    { tag: u.attributeName, color: "#00c" },\n    { tag: u.link, color: "#219" }\n  ]\n}), h_ = {\n  background: "#0d1117",\n  lineBackground: "#0d111799",\n  foreground: "#c9d1d9",\n  caret: "#c9d1d9",\n  selection: "#003d73",\n  selectionMatch: "#003d73",\n  lineHighlight: "#36334280"\n}, p_ = at({\n  theme: "dark",\n  settings: {\n    background: "#0d1117",\n    foreground: "#c9d1d9",\n    caret: "#c9d1d9",\n    selection: "#003d73",\n    selectionMatch: "#003d73",\n    lineHighlight: "#36334280"\n  },\n  styles: [\n    { tag: u.labelName, color: "#d2a8ff" },\n    { tag: [u.standard(u.tagName), u.tagName], color: "#7ee787" },\n    { tag: [u.comment, u.bracket], color: "#8b949e" },\n    { tag: [u.className, u.propertyName], color: "#d2a8ff" },\n    { tag: [u.variableName, u.attributeName], color: "#d2a8ff" },\n    { tag: [u.number, u.operator], color: "#79c0ff" },\n    { tag: [u.keyword, u.typeName, u.typeOperator, u.typeName], color: "#ff7b72" },\n    { tag: [u.string, u.meta, u.regexp], color: "#a5d6ff" },\n    { tag: [u.name, u.quote], color: "#7ee787" },\n    { tag: [u.heading, u.strong], color: "#d2a8ff", fontWeight: "bold" },\n    { tag: [u.emphasis], color: "#d2a8ff", fontStyle: "italic" },\n    { tag: [u.deleted], color: "#ffdcd7", backgroundColor: "ffeef0" },\n    { tag: [u.atom, u.bool, u.special(u.variableName)], color: "#ffab70" },\n    { tag: u.link, textDecoration: "underline" },\n    { tag: u.strikethrough, textDecoration: "line-through" },\n    { tag: u.invalid, color: "#f97583" }\n  ]\n}), f_ = {\n  light: !0,\n  background: "#fff",\n  lineBackground: "#ffffff99",\n  foreground: "#24292e",\n  selection: "#BBDFFF",\n  selectionMatch: "#BBDFFF",\n  gutterBackground: "#fff",\n  gutterForeground: "#6e7781"\n}, d_ = at({\n  theme: "light",\n  settings: {\n    background: "#fff",\n    foreground: "#24292e",\n    selection: "#BBDFFF",\n    selectionMatch: "#BBDFFF",\n    gutterBackground: "#fff",\n    gutterForeground: "#6e7781"\n  },\n  styles: [\n    { tag: [u.standard(u.tagName), u.tagName], color: "#116329" },\n    { tag: [u.comment, u.bracket], color: "#6a737d" },\n    { tag: [u.className, u.propertyName], color: "#6f42c1" },\n    { tag: [u.variableName, u.attributeName, u.number, u.operator], color: "#005cc5" },\n    { tag: [u.keyword, u.typeName, u.typeOperator, u.typeName], color: "#d73a49" },\n    { tag: [u.string, u.meta, u.regexp], color: "#032f62" },\n    { tag: [u.name, u.quote], color: "#22863a" },\n    { tag: [u.heading, u.strong], color: "#24292e", fontWeight: "bold" },\n    { tag: [u.emphasis], color: "#24292e", fontStyle: "italic" },\n    { tag: [u.deleted], color: "#b31d28", backgroundColor: "ffeef0" },\n    { tag: [u.atom, u.bool, u.special(u.variableName)], color: "#e36209" },\n    { tag: [u.url, u.escape, u.regexp, u.link], color: "#032f62" },\n    { tag: u.link, textDecoration: "underline" },\n    { tag: u.strikethrough, textDecoration: "line-through" },\n    { tag: u.invalid, color: "#cb2431" }\n  ]\n}), m_ = {\n  background: "#282828",\n  lineBackground: "#28282899",\n  foreground: "#ebdbb2",\n  caret: "#ebdbb2",\n  selection: "#bdae93",\n  selectionMatch: "#bdae93",\n  lineHighlight: "#3c3836",\n  gutterBackground: "#282828",\n  gutterForeground: "#7c6f64"\n}, g_ = at({\n  theme: "dark",\n  settings: {\n    background: "#282828",\n    foreground: "#ebdbb2",\n    caret: "#ebdbb2",\n    selection: "#b99d555c",\n    selectionMatch: "#b99d555c",\n    lineHighlight: "#baa1602b",\n    gutterBackground: "#282828",\n    gutterForeground: "#7c6f64"\n  },\n  styles: [\n    { tag: u.keyword, color: "#fb4934" },\n    { tag: [u.name, u.deleted, u.character, u.propertyName, u.macroName], color: "#8ec07c" },\n    { tag: [u.variableName], color: "#83a598" },\n    { tag: [u.function(u.variableName)], color: "#8ec07c", fontStyle: "bold" },\n    { tag: [u.labelName], color: "#ebdbb2" },\n    { tag: [u.color, u.constant(u.name), u.standard(u.name)], color: "#d3869b" },\n    { tag: [u.definition(u.name), u.separator], color: "#ebdbb2" },\n    { tag: [u.brace], color: "#ebdbb2" },\n    { tag: [u.annotation], color: "#fb4934d" },\n    { tag: [u.number, u.changed, u.annotation, u.modifier, u.self, u.namespace], color: "#d3869b" },\n    { tag: [u.typeName, u.className], color: "#fabd2f" },\n    { tag: [u.operatorKeyword], color: "#fb4934" },\n    {\n      tag: [u.tagName],\n      color: "#8ec07c",\n      fontStyle: "bold"\n    },\n    { tag: [u.squareBracket], color: "#fe8019" },\n    { tag: [u.angleBracket], color: "#83a598" },\n    { tag: [u.attributeName], color: "#8ec07c" },\n    { tag: [u.regexp], color: "#8ec07c" },\n    { tag: [u.quote], color: "#928374" },\n    { tag: [u.string], color: "#ebdbb2" },\n    {\n      tag: u.link,\n      color: "#a89984",\n      textDecoration: "underline",\n      textUnderlinePosition: "under"\n    },\n    { tag: [u.url, u.escape, u.special(u.string)], color: "#d3869b" },\n    { tag: [u.meta], color: "#fabd2f" },\n    { tag: [u.comment], color: "#928374", fontStyle: "italic" },\n    { tag: u.strong, fontWeight: "bold", color: "#fe8019" },\n    { tag: u.emphasis, fontStyle: "italic", color: "#b8bb26" },\n    { tag: u.strikethrough, textDecoration: "line-through" },\n    { tag: u.heading, fontWeight: "bold", color: "#b8bb26" },\n    { tag: [u.heading1, u.heading2], fontWeight: "bold", color: "#b8bb26" },\n    {\n      tag: [u.heading3, u.heading4],\n      fontWeight: "bold",\n      color: "#fabd2f"\n    },\n    { tag: [u.heading5, u.heading6], color: "#fabd2f" },\n    { tag: [u.atom, u.bool, u.special(u.variableName)], color: "#d3869b" },\n    { tag: [u.processingInstruction, u.inserted], color: "#83a598" },\n    { tag: [u.contentSeparator], color: "#fb4934" },\n    { tag: u.invalid, color: "#fe8019", borderBottom: "1px dotted #fb4934d" }\n  ]\n}), b_ = {\n  light: !0,\n  background: "#fbf1c7",\n  lineBackground: "#fbf1c799",\n  foreground: "#3c3836",\n  caret: "#af3a03",\n  selection: "#ebdbb2",\n  selectionMatch: "#bdae93",\n  lineHighlight: "#ebdbb2",\n  gutterBackground: "#ebdbb2",\n  gutterForeground: "#665c54",\n  gutterBorder: "transparent"\n}, y_ = at({\n  theme: "light",\n  settings: {\n    background: "#fbf1c7",\n    foreground: "#3c3836",\n    caret: "#af3a03",\n    selection: "#bdae9391",\n    selectionMatch: "#bdae9391",\n    lineHighlight: "#a37f2238",\n    gutterBackground: "#ebdbb2",\n    gutterForeground: "#665c54",\n    gutterBorder: "transparent"\n  },\n  styles: [\n    { tag: u.keyword, color: "#9d0006" },\n    {\n      tag: [u.name, u.deleted, u.character, u.propertyName, u.macroName],\n      color: "#427b58"\n    },\n    { tag: [u.variableName], color: "#076678" },\n    { tag: [u.function(u.variableName)], color: "#79740e", fontStyle: "bold" },\n    { tag: [u.labelName], color: "#3c3836" },\n    {\n      tag: [u.color, u.constant(u.name), u.standard(u.name)],\n      color: "#8f3f71"\n    },\n    { tag: [u.definition(u.name), u.separator], color: "#3c3836" },\n    { tag: [u.brace], color: "#3c3836" },\n    {\n      tag: [u.annotation],\n      color: "#9d0006"\n    },\n    {\n      tag: [u.number, u.changed, u.annotation, u.modifier, u.self, u.namespace],\n      color: "#8f3f71"\n    },\n    {\n      tag: [u.typeName, u.className],\n      color: "#b57614"\n    },\n    {\n      tag: [u.operator, u.operatorKeyword],\n      color: "#9d0006"\n    },\n    {\n      tag: [u.tagName],\n      color: "#427b58",\n      fontStyle: "bold"\n    },\n    {\n      tag: [u.squareBracket],\n      color: "#af3a03"\n    },\n    {\n      tag: [u.angleBracket],\n      color: "#076678"\n    },\n    {\n      tag: [u.attributeName],\n      color: "#427b58"\n    },\n    {\n      tag: [u.regexp],\n      color: "#427b58"\n    },\n    {\n      tag: [u.quote],\n      color: "#928374"\n    },\n    { tag: [u.string], color: "#3c3836" },\n    {\n      tag: u.link,\n      color: "#7c6f64",\n      textDecoration: "underline",\n      textUnderlinePosition: "under"\n    },\n    {\n      tag: [u.url, u.escape, u.special(u.string)],\n      color: "#8f3f71"\n    },\n    { tag: [u.meta], color: "#b57614" },\n    { tag: [u.comment], color: "#928374", fontStyle: "italic" },\n    { tag: u.strong, fontWeight: "bold", color: "#af3a03" },\n    { tag: u.emphasis, fontStyle: "italic", color: "#79740e" },\n    { tag: u.strikethrough, textDecoration: "line-through" },\n    { tag: u.heading, fontWeight: "bold", color: "#79740e" },\n    { tag: [u.heading1, u.heading2], fontWeight: "bold", color: "#79740e" },\n    {\n      tag: [u.heading3, u.heading4],\n      fontWeight: "bold",\n      color: "#b57614"\n    },\n    {\n      tag: [u.heading5, u.heading6],\n      color: "#b57614"\n    },\n    { tag: [u.atom, u.bool, u.special(u.variableName)], color: "#8f3f71" },\n    {\n      tag: [u.processingInstruction, u.inserted],\n      color: "#076678"\n    },\n    {\n      tag: [u.contentSeparator],\n      color: "#9d0006"\n    },\n    { tag: u.invalid, color: "#af3a03", borderBottom: "1px dotted #9d0006" }\n  ]\n}), O_ = {\n  background: "#212121",\n  lineBackground: "#21212199",\n  foreground: "#bdbdbd",\n  caret: "#a0a4ae",\n  selection: "#d7d4f0",\n  selectionMatch: "#d7d4f0",\n  gutterBackground: "#212121",\n  gutterForeground: "#999",\n  gutterActiveForeground: "#4f5b66",\n  lineHighlight: "#111111"\n}, v_ = at({\n  theme: "dark",\n  settings: {\n    background: "#212121",\n    foreground: "#bdbdbd",\n    caret: "#a0a4ae",\n    selection: "#d7d4f063",\n    selectionMatch: "#d7d4f063",\n    gutterBackground: "#212121",\n    gutterForeground: "#999",\n    gutterActiveForeground: "#4f5b66",\n    lineHighlight: "#333333"\n  },\n  styles: [\n    { tag: u.keyword, color: "#cf6edf" },\n    { tag: [u.name, u.deleted, u.character, u.macroName], color: "#56c8d8" },\n    { tag: [u.propertyName], color: "#82AAFF" },\n    { tag: [u.variableName], color: "#bdbdbd" },\n    { tag: [u.function(u.variableName)], color: "#82AAFF" },\n    { tag: [u.labelName], color: "#cf6edf" },\n    { tag: [u.color, u.constant(u.name), u.standard(u.name)], color: "#facf4e" },\n    { tag: [u.definition(u.name), u.separator], color: "#56c8d8" },\n    { tag: [u.brace], color: "#cf6edf" },\n    { tag: [u.annotation], color: "#f07178" },\n    { tag: [u.number, u.changed, u.annotation, u.modifier, u.self, u.namespace], color: "#f07178" },\n    { tag: [u.typeName, u.className], color: "#f07178" },\n    { tag: [u.operator, u.operatorKeyword], color: "#82AAFF" },\n    { tag: [u.tagName], color: "#99d066" },\n    { tag: [u.squareBracket], color: "#f07178" },\n    { tag: [u.angleBracket], color: "#606f7a" },\n    { tag: [u.attributeName], color: "#bdbdbd" },\n    { tag: [u.regexp], color: "#f07178" },\n    { tag: [u.quote], color: "#6abf69" },\n    { tag: [u.string], color: "#99d066" },\n    {\n      tag: u.link,\n      color: "#56c8d8",\n      textDecoration: "underline",\n      textUnderlinePosition: "under"\n    },\n    { tag: [u.url, u.escape, u.special(u.string)], color: "#facf4e" },\n    { tag: [u.meta], color: "#707d8b" },\n    { tag: [u.comment], color: "#707d8b", fontStyle: "italic" },\n    { tag: u.monospace, color: "#bdbdbd" },\n    { tag: u.strong, fontWeight: "bold", color: "#f07178" },\n    { tag: u.emphasis, fontStyle: "italic", color: "#99d066" },\n    { tag: u.strikethrough, textDecoration: "line-through" },\n    { tag: u.heading, fontWeight: "bold", color: "#facf4e" },\n    { tag: u.heading1, fontWeight: "bold", color: "#facf4e" },\n    {\n      tag: [u.heading2, u.heading3, u.heading4],\n      fontWeight: "bold",\n      color: "#facf4e"\n    },\n    { tag: [u.heading5, u.heading6], color: "#facf4e" },\n    { tag: [u.atom, u.bool, u.special(u.variableName)], color: "#56c8d8" },\n    { tag: [u.processingInstruction, u.inserted], color: "#f07178" },\n    { tag: [u.contentSeparator], color: "#56c8d8" },\n    { tag: u.invalid, color: "#606f7a", borderBottom: "1px dotted #f07178" }\n  ]\n}), x_ = {\n  light: !0,\n  background: "#FAFAFA",\n  lineBackground: "#FAFAFA99",\n  foreground: "#90A4AE",\n  caret: "#272727",\n  selection: "#80CBC440",\n  selectionMatch: "#FAFAFA",\n  gutterBackground: "#FAFAFA",\n  gutterForeground: "#90A4AE",\n  gutterBorder: "transparent",\n  lineHighlight: "#CCD7DA50"\n}, k_ = at({\n  theme: "light",\n  settings: {\n    background: "#FAFAFA",\n    foreground: "#90A4AE",\n    caret: "#272727",\n    selection: "#80CBC440",\n    selectionMatch: "#80CBC440",\n    gutterBackground: "#FAFAFA",\n    gutterForeground: "#90A4AE",\n    gutterBorder: "transparent",\n    lineHighlight: "#CCD7DA50"\n  },\n  styles: [\n    { tag: u.keyword, color: "#39ADB5" },\n    { tag: [u.name, u.deleted, u.character, u.macroName], color: "#90A4AE" },\n    { tag: [u.propertyName], color: "#6182B8" },\n    { tag: [u.processingInstruction, u.string, u.inserted, u.special(u.string)], color: "#91B859" },\n    { tag: [u.function(u.variableName), u.labelName], color: "#6182B8" },\n    { tag: [u.color, u.constant(u.name), u.standard(u.name)], color: "#39ADB5" },\n    { tag: [u.definition(u.name), u.separator], color: "#90A4AE" },\n    { tag: [u.className], color: "#E2931D" },\n    { tag: [u.number, u.changed, u.annotation, u.modifier, u.self, u.namespace], color: "#F76D47" },\n    { tag: [u.typeName], color: "#E2931D", fontStyle: "#E2931D" },\n    { tag: [u.operator, u.operatorKeyword], color: "#39ADB5" },\n    { tag: [u.url, u.escape, u.regexp, u.link], color: "#91B859" },\n    { tag: [u.meta, u.comment], color: "#90A4AE" },\n    { tag: u.strong, fontWeight: "bold" },\n    { tag: u.emphasis, fontStyle: "italic" },\n    { tag: u.link, textDecoration: "underline" },\n    { tag: u.heading, fontWeight: "bold", color: "#39ADB5" },\n    { tag: [u.atom, u.bool, u.special(u.variableName)], color: "#90A4AE" },\n    { tag: u.invalid, color: "#E5393570" },\n    { tag: u.strikethrough, textDecoration: "line-through" }\n  ]\n}), w_ = {\n  background: "#2e3440",\n  lineBackground: "#2e344099",\n  foreground: "#FFFFFF",\n  caret: "#FFFFFF",\n  selection: "#3b4252",\n  selectionMatch: "#e5e9f0",\n  gutterBackground: "#2e3440",\n  gutterForeground: "#4c566a",\n  gutterActiveForeground: "#d8dee9",\n  lineHighlight: "#4c566a"\n}, C_ = at({\n  theme: "dark",\n  settings: {\n    background: "#2e3440",\n    foreground: "#FFFFFF",\n    caret: "#FFFFFF",\n    selection: "#00000073",\n    selectionMatch: "#00000073",\n    gutterBackground: "#2e3440",\n    gutterForeground: "#4c566a",\n    gutterActiveForeground: "#d8dee9",\n    lineHighlight: "#4c566a29"\n  },\n  styles: [\n    { tag: u.keyword, color: "#5e81ac" },\n    { tag: [u.name, u.deleted, u.character, u.propertyName, u.macroName], color: "#88c0d0" },\n    { tag: [u.variableName], color: "#8fbcbb" },\n    { tag: [u.function(u.variableName)], color: "#8fbcbb" },\n    { tag: [u.labelName], color: "#81a1c1" },\n    { tag: [u.color, u.constant(u.name), u.standard(u.name)], color: "#5e81ac" },\n    { tag: [u.definition(u.name), u.separator], color: "#a3be8c" },\n    { tag: [u.brace], color: "#8fbcbb" },\n    { tag: [u.annotation], color: "#d30102" },\n    { tag: [u.number, u.changed, u.annotation, u.modifier, u.self, u.namespace], color: "#b48ead" },\n    { tag: [u.typeName, u.className], color: "#ebcb8b" },\n    { tag: [u.operator, u.operatorKeyword], color: "#a3be8c" },\n    { tag: [u.tagName], color: "#b48ead" },\n    { tag: [u.squareBracket], color: "#bf616a" },\n    { tag: [u.angleBracket], color: "#d08770" },\n    { tag: [u.attributeName], color: "#ebcb8b" },\n    { tag: [u.regexp], color: "#5e81ac" },\n    { tag: [u.quote], color: "#b48ead" },\n    { tag: [u.string], color: "#a3be8c" },\n    {\n      tag: u.link,\n      color: "#a3be8c",\n      textDecoration: "underline",\n      textUnderlinePosition: "under"\n    },\n    { tag: [u.url, u.escape, u.special(u.string)], color: "#8fbcbb" },\n    { tag: [u.meta], color: "#88c0d0" },\n    { tag: [u.monospace], color: "#d8dee9", fontStyle: "italic" },\n    { tag: [u.comment], color: "#4c566a", fontStyle: "italic" },\n    { tag: u.strong, fontWeight: "bold", color: "#5e81ac" },\n    { tag: u.emphasis, fontStyle: "italic", color: "#5e81ac" },\n    { tag: u.strikethrough, textDecoration: "line-through" },\n    { tag: u.heading, fontWeight: "bold", color: "#5e81ac" },\n    { tag: u.special(u.heading1), fontWeight: "bold", color: "#5e81ac" },\n    { tag: u.heading1, fontWeight: "bold", color: "#5e81ac" },\n    {\n      tag: [u.heading2, u.heading3, u.heading4],\n      fontWeight: "bold",\n      color: "#5e81ac"\n    },\n    { tag: [u.heading5, u.heading6], color: "#5e81ac" },\n    { tag: [u.atom, u.bool, u.special(u.variableName)], color: "#d08770" },\n    { tag: [u.processingInstruction, u.inserted], color: "#8fbcbb" },\n    { tag: [u.contentSeparator], color: "#ebcb8b" },\n    { tag: u.invalid, color: "#434c5e", borderBottom: "1px dotted #d30102" }\n  ]\n}), S_ = {\n  background: "#272822",\n  lineBackground: "#27282299",\n  foreground: "#FFFFFF",\n  caret: "#FFFFFF",\n  selection: "#49483E",\n  selectionMatch: "#49483E",\n  gutterBackground: "#272822",\n  gutterForeground: "#FFFFFF70",\n  lineHighlight: "#00000059"\n}, A_ = at({\n  theme: "dark",\n  settings: {\n    background: "#272822",\n    foreground: "#FFFFFF",\n    caret: "#FFFFFF",\n    selection: "#49483E",\n    selectionMatch: "#49483E",\n    gutterBackground: "#272822",\n    gutterForeground: "#FFFFFF70",\n    lineHighlight: "#0000003b"\n  },\n  styles: [\n    { tag: u.labelName, color: "#bababa" },\n    { tag: [u.comment, u.documentMeta], color: "#8292a2" },\n    { tag: [u.number, u.bool, u.null, u.atom], color: "#ae81ff" },\n    { tag: [u.attributeValue, u.className, u.name], color: "#e6db74" },\n    { tag: [u.propertyName, u.attributeName], color: "#a6e22e" },\n    { tag: [u.variableName], color: "#9effff" },\n    { tag: [u.squareBracket], color: "#bababa" },\n    { tag: [u.string, u.special(u.brace)], color: "#e6db74" },\n    { tag: [u.regexp, u.className, u.typeName, u.definition(u.typeName)], color: "#66d9ef" },\n    {\n      tag: [u.definition(u.variableName), u.definition(u.propertyName), u.function(u.variableName)],\n      color: "#a6e22e"\n    },\n    // { tag: t.keyword, color: \'#f92672\' },\n    { tag: [u.keyword, u.definitionKeyword, u.modifier, u.tagName, u.angleBracket], color: "#f92672" }\n  ]\n}), D_ = {\n  background: "#002b36",\n  lineBackground: "#002b3699",\n  foreground: "#93a1a1",\n  caret: "#839496",\n  selection: "#173541",\n  selectionMatch: "#aafe661a",\n  gutterBackground: "#00252f",\n  gutterForeground: "#839496",\n  lineHighlight: "#173541"\n}, Et = {\n  background: "#002B36",\n  foreground: "#839496",\n  selection: "#004454AA",\n  selectionMatch: "#005A6FAA",\n  cursor: "#D30102",\n  dropdownBackground: "#00212B",\n  dropdownBorder: "#2AA19899",\n  activeLine: "#00cafe11",\n  matchingBracket: "#073642",\n  keyword: "#859900",\n  storage: "#93A1A1",\n  variable: "#268BD2",\n  parameter: "#268BD2",\n  function: "#268BD2",\n  string: "#2AA198",\n  constant: "#CB4B16",\n  type: "#859900",\n  class: "#268BD2",\n  number: "#D33682",\n  comment: "#586E75",\n  heading: "#268BD2",\n  invalid: "#DC322F",\n  regexp: "#DC322F",\n  tag: "#268BD2"\n}, P_ = at({\n  theme: "dark",\n  settings: {\n    background: Et.background,\n    foreground: Et.foreground,\n    caret: Et.cursor,\n    selection: Et.selection,\n    selectionMatch: Et.selection,\n    gutterBackground: Et.background,\n    gutterForeground: Et.foreground,\n    gutterBorder: "transparent",\n    lineHighlight: Et.activeLine\n  },\n  styles: [\n    { tag: u.keyword, color: Et.keyword },\n    { tag: [u.name, u.deleted, u.character, u.macroName], color: Et.variable },\n    { tag: [u.propertyName], color: Et.function },\n    { tag: [u.processingInstruction, u.string, u.inserted, u.special(u.string)], color: Et.string },\n    { tag: [u.function(u.variableName), u.labelName], color: Et.function },\n    { tag: [u.color, u.constant(u.name), u.standard(u.name)], color: Et.constant },\n    { tag: [u.definition(u.name), u.separator], color: Et.variable },\n    { tag: [u.className], color: Et.class },\n    { tag: [u.number, u.changed, u.annotation, u.modifier, u.self, u.namespace], color: Et.number },\n    { tag: [u.typeName], color: Et.type, fontStyle: Et.type },\n    { tag: [u.operator, u.operatorKeyword], color: Et.keyword },\n    { tag: [u.url, u.escape, u.regexp, u.link], color: Et.regexp },\n    { tag: [u.meta, u.comment], color: Et.comment },\n    { tag: u.tagName, color: Et.tag },\n    { tag: u.strong, fontWeight: "bold" },\n    { tag: u.emphasis, fontStyle: "italic" },\n    { tag: u.link, textDecoration: "underline" },\n    { tag: u.heading, fontWeight: "bold", color: Et.heading },\n    { tag: [u.atom, u.bool, u.special(u.variableName)], color: Et.variable },\n    { tag: u.invalid, color: Et.invalid },\n    { tag: u.strikethrough, textDecoration: "line-through" }\n  ]\n}), E_ = {\n  light: !0,\n  background: "#fdf6e3",\n  lineBackground: "#fdf6e399",\n  foreground: "#657b83",\n  caret: "#586e75",\n  selection: "#dfd9c8",\n  selectionMatch: "#dfd9c8",\n  gutterBackground: "#00000010",\n  gutterForeground: "#657b83",\n  lineHighlight: "#dfd9c8"\n}, Ft = {\n  background: "#FDF6E3",\n  foreground: "#657B83",\n  selection: "#EEE8D5",\n  selectionMatch: "#EEE8D5",\n  cursor: "#657B83",\n  dropdownBackground: "#EEE8D5",\n  dropdownBorder: "#D3AF86",\n  activeLine: "#3d392d11",\n  matchingBracket: "#EEE8D5",\n  keyword: "#859900",\n  storage: "#586E75",\n  variable: "#268BD2",\n  parameter: "#268BD2",\n  function: "#268BD2",\n  string: "#2AA198",\n  constant: "#CB4B16",\n  type: "#859900",\n  class: "#268BD2",\n  number: "#D33682",\n  comment: "#93A1A1",\n  heading: "#268BD2",\n  invalid: "#DC322F",\n  regexp: "#DC322F",\n  tag: "#268BD2"\n}, F_ = at({\n  theme: "light",\n  settings: {\n    background: Ft.background,\n    foreground: Ft.foreground,\n    caret: Ft.cursor,\n    selection: Ft.selection,\n    selectionMatch: Ft.selectionMatch,\n    gutterBackground: Ft.background,\n    gutterForeground: Ft.foreground,\n    gutterBorder: "transparent",\n    lineHighlight: Ft.activeLine\n  },\n  styles: [\n    { tag: u.keyword, color: Ft.keyword },\n    { tag: [u.name, u.deleted, u.character, u.macroName], color: Ft.variable },\n    { tag: [u.propertyName], color: Ft.function },\n    { tag: [u.processingInstruction, u.string, u.inserted, u.special(u.string)], color: Ft.string },\n    { tag: [u.function(u.variableName), u.labelName], color: Ft.function },\n    { tag: [u.color, u.constant(u.name), u.standard(u.name)], color: Ft.constant },\n    { tag: [u.definition(u.name), u.separator], color: Ft.variable },\n    { tag: [u.className], color: Ft.class },\n    { tag: [u.number, u.changed, u.annotation, u.modifier, u.self, u.namespace], color: Ft.number },\n    { tag: [u.typeName], color: Ft.type, fontStyle: Ft.type },\n    { tag: [u.operator, u.operatorKeyword], color: Ft.keyword },\n    { tag: [u.url, u.escape, u.regexp, u.link], color: Ft.regexp },\n    { tag: [u.meta, u.comment], color: Ft.comment },\n    { tag: u.tagName, color: Ft.tag },\n    { tag: u.strong, fontWeight: "bold" },\n    { tag: u.emphasis, fontStyle: "italic" },\n    { tag: u.link, textDecoration: "underline" },\n    { tag: u.heading, fontWeight: "bold", color: Ft.heading },\n    { tag: [u.atom, u.bool, u.special(u.variableName)], color: Ft.variable },\n    { tag: u.invalid, color: Ft.invalid },\n    { tag: u.strikethrough, textDecoration: "line-through" }\n  ]\n}), B_ = {\n  background: "#303841",\n  lineBackground: "#30384199",\n  foreground: "#FFFFFF",\n  caret: "#FBAC52",\n  selection: "#4C5964",\n  selectionMatch: "#3A546E",\n  gutterBackground: "#303841",\n  gutterForeground: "#FFFFFF70",\n  lineHighlight: "#00000059"\n}, M_ = at({\n  theme: "dark",\n  settings: {\n    background: "#303841",\n    foreground: "#FFFFFF",\n    caret: "#FBAC52",\n    selection: "#4C5964",\n    selectionMatch: "#3A546E",\n    gutterBackground: "#303841",\n    gutterForeground: "#FFFFFF70",\n    lineHighlight: "#00000059"\n  },\n  styles: [\n    { tag: u.labelName, color: "#A2A9B5" },\n    { tag: [u.meta, u.comment], color: "#A2A9B5" },\n    { tag: [u.attributeName, u.keyword], color: "#B78FBA" },\n    { tag: u.function(u.variableName), color: "#5AB0B0" },\n    { tag: [u.string, u.regexp, u.attributeValue], color: "#99C592" },\n    { tag: u.operator, color: "#f47954" },\n    // { tag: t.moduleKeyword, color: \'red\' },\n    { tag: [u.tagName, u.modifier], color: "#E35F63" },\n    { tag: [u.number, u.definition(u.tagName), u.className, u.definition(u.variableName)], color: "#fbac52" },\n    { tag: [u.atom, u.bool, u.special(u.variableName)], color: "#E35F63" },\n    { tag: u.variableName, color: "#539ac4" },\n    { tag: [u.propertyName, u.typeName], color: "#629ccd" },\n    { tag: u.propertyName, color: "#36b7b5" }\n  ]\n}), Q_ = {\n  background: "#1a1b26",\n  lineBackground: "#1a1b2699",\n  foreground: "#787c99",\n  caret: "#c0caf5",\n  selection: "#515c7e40",\n  selectionMatch: "#16161e",\n  gutterBackground: "#1a1b26",\n  gutterForeground: "#787c99",\n  gutterBorder: "transparent",\n  lineHighlight: "#1e202e"\n}, T_ = at({\n  theme: "dark",\n  settings: {\n    background: "#1a1b26",\n    foreground: "#787c99",\n    caret: "#c0caf5",\n    selection: "#515c7e40",\n    selectionMatch: "#16161e",\n    gutterBackground: "#1a1b26",\n    gutterForeground: "#787c99",\n    gutterBorder: "transparent",\n    lineHighlight: "#474b6611"\n  },\n  styles: [\n    { tag: u.keyword, color: "#bb9af7" },\n    { tag: [u.name, u.deleted, u.character, u.macroName], color: "#c0caf5" },\n    { tag: [u.propertyName], color: "#7aa2f7" },\n    { tag: [u.processingInstruction, u.string, u.inserted, u.special(u.string)], color: "#9ece6a" },\n    { tag: [u.function(u.variableName), u.labelName], color: "#7aa2f7" },\n    { tag: [u.color, u.constant(u.name), u.standard(u.name)], color: "#bb9af7" },\n    { tag: [u.definition(u.name), u.separator], color: "#c0caf5" },\n    { tag: [u.className], color: "#c0caf5" },\n    { tag: [u.number, u.changed, u.annotation, u.modifier, u.self, u.namespace], color: "#ff9e64" },\n    { tag: [u.typeName], color: "#0db9d7" },\n    { tag: [u.operator, u.operatorKeyword], color: "#bb9af7" },\n    { tag: [u.url, u.escape, u.regexp, u.link], color: "#b4f9f8" },\n    { tag: [u.meta, u.comment], color: "#444b6a" },\n    { tag: u.strong, fontWeight: "bold" },\n    { tag: u.emphasis, fontStyle: "italic" },\n    { tag: u.link, textDecoration: "underline" },\n    { tag: u.heading, fontWeight: "bold", color: "#89ddff" },\n    { tag: [u.atom, u.bool, u.special(u.variableName)], color: "#c0caf5" },\n    { tag: u.invalid, color: "#ff5370" },\n    { tag: u.strikethrough, textDecoration: "line-through" }\n  ]\n}), j_ = {\n  background: "#24283b",\n  lineBackground: "#24283b99",\n  foreground: "#7982a9",\n  caret: "#c0caf5",\n  selection: "#6f7bb630",\n  selectionMatch: "#1f2335",\n  gutterBackground: "#24283b",\n  gutterForeground: "#7982a9",\n  gutterBorder: "transparent",\n  lineHighlight: "#292e42"\n}, R_ = at({\n  theme: "dark",\n  settings: {\n    background: "#24283b",\n    foreground: "#7982a9",\n    caret: "#c0caf5",\n    selection: "#6f7bb630",\n    selectionMatch: "#343b5f",\n    gutterBackground: "#24283b",\n    gutterForeground: "#7982a9",\n    gutterBorder: "transparent",\n    lineHighlight: "#292e427a"\n  },\n  styles: [\n    { tag: u.keyword, color: "#bb9af7" },\n    { tag: [u.name, u.deleted, u.character, u.macroName], color: "#c0caf5" },\n    { tag: [u.propertyName], color: "#7aa2f7" },\n    { tag: [u.processingInstruction, u.string, u.inserted, u.special(u.string)], color: "#9ece6a" },\n    { tag: [u.function(u.variableName), u.labelName], color: "#7aa2f7" },\n    { tag: [u.color, u.constant(u.name), u.standard(u.name)], color: "#bb9af7" },\n    { tag: [u.definition(u.name), u.separator], color: "#c0caf5" },\n    { tag: [u.className], color: "#c0caf5" },\n    { tag: [u.number, u.changed, u.annotation, u.modifier, u.self, u.namespace], color: "#ff9e64" },\n    { tag: [u.typeName], color: "#2ac3de", fontStyle: "#2ac3de" },\n    { tag: [u.operator, u.operatorKeyword], color: "#bb9af7" },\n    { tag: [u.url, u.escape, u.regexp, u.link], color: "#b4f9f8" },\n    { tag: [u.meta, u.comment], color: "#565f89" },\n    { tag: u.strong, fontWeight: "bold" },\n    { tag: u.emphasis, fontStyle: "italic" },\n    { tag: u.link, textDecoration: "underline" },\n    { tag: u.heading, fontWeight: "bold", color: "#89ddff" },\n    { tag: [u.atom, u.bool, u.special(u.variableName)], color: "#c0caf5" },\n    { tag: u.invalid, color: "#ff5370" },\n    { tag: u.strikethrough, textDecoration: "line-through" }\n  ]\n}), __ = {\n  light: !0,\n  background: "#e1e2e7",\n  lineBackground: "#e1e2e799",\n  foreground: "#3760bf",\n  caret: "#3760bf",\n  selection: "#99a7df",\n  selectionMatch: "#99a7df",\n  gutterBackground: "#e1e2e7",\n  gutterForeground: "#3760bf",\n  gutterBorder: "transparent",\n  lineHighlight: "#5f5faf11"\n}, Z_ = at({\n  theme: "light",\n  settings: {\n    background: "#e1e2e7",\n    foreground: "#3760bf",\n    caret: "#3760bf",\n    selection: "#99a7df",\n    selectionMatch: "#99a7df",\n    gutterBackground: "#e1e2e7",\n    gutterForeground: "#3760bf",\n    gutterBorder: "transparent",\n    lineHighlight: "#5f5faf11"\n  },\n  styles: [\n    { tag: u.keyword, color: "#007197" },\n    { tag: [u.name, u.deleted, u.character, u.macroName], color: "#3760bf" },\n    { tag: [u.propertyName], color: "#3760bf" },\n    { tag: [u.processingInstruction, u.string, u.inserted, u.special(u.string)], color: "#587539" },\n    { tag: [u.function(u.variableName), u.labelName], color: "#3760bf" },\n    { tag: [u.color, u.constant(u.name), u.standard(u.name)], color: "#3760bf" },\n    { tag: [u.definition(u.name), u.separator], color: "#3760bf" },\n    { tag: [u.className], color: "#3760bf" },\n    { tag: [u.number, u.changed, u.annotation, u.modifier, u.self, u.namespace], color: "#b15c00" },\n    { tag: [u.typeName], color: "#007197", fontStyle: "#007197" },\n    { tag: [u.operator, u.operatorKeyword], color: "#007197" },\n    { tag: [u.url, u.escape, u.regexp, u.link], color: "#587539" },\n    { tag: [u.meta, u.comment], color: "#848cb5" },\n    { tag: u.strong, fontWeight: "bold" },\n    { tag: u.emphasis, fontStyle: "italic" },\n    { tag: u.link, textDecoration: "underline" },\n    { tag: u.heading, fontWeight: "bold", color: "#b15c00" },\n    { tag: [u.atom, u.bool, u.special(u.variableName)], color: "#3760bf" },\n    { tag: u.invalid, color: "#f52a65" },\n    { tag: u.strikethrough, textDecoration: "line-through" }\n  ]\n}), $_ = {\n  background: "#1e1e1e",\n  lineBackground: "#1e1e1e99",\n  foreground: "#fff",\n  caret: "#c6c6c6",\n  selection: "#6199ff2f",\n  selectionMatch: "#72a1ff59",\n  lineHighlight: "#ffffff0f",\n  gutterBackground: "#1e1e1e",\n  gutterForeground: "#838383",\n  gutterActiveForeground: "#fff"\n}, L_ = at({\n  theme: "dark",\n  settings: {\n    background: "#1e1e1e",\n    foreground: "#fff",\n    caret: "#c6c6c6",\n    selection: "#6199ff2f",\n    selectionMatch: "#72a1ff59",\n    lineHighlight: "#ffffff0f",\n    gutterBackground: "#1e1e1e",\n    gutterForeground: "#838383",\n    gutterActiveForeground: "#fff",\n    fontFamily: \'Menlo, Monaco, Consolas, "Andale Mono", "Ubuntu Mono", "Courier New", monospace\'\n  },\n  styles: [\n    {\n      tag: [\n        u.keyword,\n        u.operatorKeyword,\n        u.modifier,\n        u.color,\n        u.constant(u.name),\n        u.standard(u.name),\n        u.standard(u.tagName),\n        u.special(u.brace),\n        u.atom,\n        u.bool,\n        u.special(u.variableName)\n      ],\n      color: "#569cd6"\n    },\n    { tag: [u.controlKeyword, u.moduleKeyword], color: "#c586c0" },\n    {\n      tag: [\n        u.name,\n        u.deleted,\n        u.character,\n        u.macroName,\n        u.propertyName,\n        u.variableName,\n        u.labelName,\n        u.definition(u.name)\n      ],\n      color: "#9cdcfe"\n    },\n    { tag: u.heading, fontWeight: "bold", color: "#9cdcfe" },\n    {\n      tag: [u.typeName, u.className, u.tagName, u.number, u.changed, u.annotation, u.self, u.namespace],\n      color: "#4ec9b0"\n    },\n    { tag: [u.function(u.variableName), u.function(u.propertyName)], color: "#dcdcaa" },\n    { tag: [u.number], color: "#b5cea8" },\n    { tag: [u.operator, u.punctuation, u.separator, u.url, u.escape, u.regexp], color: "#d4d4d4" },\n    { tag: [u.regexp], color: "#d16969" },\n    { tag: [u.special(u.string), u.processingInstruction, u.string, u.inserted], color: "#ce9178" },\n    { tag: [u.angleBracket], color: "#808080" },\n    { tag: u.strong, fontWeight: "bold" },\n    { tag: u.emphasis, fontStyle: "italic" },\n    { tag: u.strikethrough, textDecoration: "line-through" },\n    { tag: [u.meta, u.comment], color: "#6a9955" },\n    { tag: u.link, color: "#6a9955", textDecoration: "underline" },\n    { tag: u.invalid, color: "#ff0000" }\n  ]\n}), I_ = {\n  background: "#ffffff",\n  lineBackground: "#ffffff50",\n  foreground: "#383a42",\n  caret: "#000",\n  selection: "#add6ff",\n  selectionMatch: "#a8ac94",\n  lineHighlight: "#99999926",\n  gutterBackground: "#fff",\n  gutterForeground: "#237893",\n  gutterActiveForeground: "#0b216f",\n  fontFamily: \'Menlo, Monaco, Consolas, "Andale Mono", "Ubuntu Mono", "Courier New", monospace\'\n}, N_ = at({\n  theme: "light",\n  settings: {\n    background: "#ffffff",\n    foreground: "#383a42",\n    caret: "#000",\n    selection: "#add6ff",\n    selectionMatch: "#a8ac94",\n    lineHighlight: "#99999926",\n    gutterBackground: "#fff",\n    gutterForeground: "#237893",\n    gutterActiveForeground: "#0b216f",\n    fontFamily: \'Menlo, Monaco, Consolas, "Andale Mono", "Ubuntu Mono", "Courier New", monospace\'\n  },\n  styles: [\n    {\n      tag: [\n        u.keyword,\n        u.operatorKeyword,\n        u.modifier,\n        u.color,\n        u.constant(u.name),\n        u.standard(u.name),\n        u.standard(u.tagName),\n        u.special(u.brace),\n        u.atom,\n        u.bool,\n        u.special(u.variableName)\n      ],\n      color: "#0000ff"\n    },\n    { tag: [u.moduleKeyword, u.controlKeyword], color: "#af00db" },\n    {\n      tag: [\n        u.name,\n        u.deleted,\n        u.character,\n        u.macroName,\n        u.propertyName,\n        u.variableName,\n        u.labelName,\n        u.definition(u.name)\n      ],\n      color: "#0070c1"\n    },\n    { tag: u.heading, fontWeight: "bold", color: "#0070c1" },\n    {\n      tag: [u.typeName, u.className, u.tagName, u.number, u.changed, u.annotation, u.self, u.namespace],\n      color: "#267f99"\n    },\n    { tag: [u.function(u.variableName), u.function(u.propertyName)], color: "#795e26" },\n    { tag: [u.number], color: "#098658" },\n    { tag: [u.operator, u.punctuation, u.separator, u.url, u.escape, u.regexp], color: "#383a42" },\n    { tag: [u.regexp], color: "#af00db" },\n    { tag: [u.special(u.string), u.processingInstruction, u.string, u.inserted], color: "#a31515" },\n    { tag: [u.angleBracket], color: "#383a42" },\n    { tag: u.strong, fontWeight: "bold" },\n    { tag: u.emphasis, fontStyle: "italic" },\n    { tag: u.strikethrough, textDecoration: "line-through" },\n    { tag: [u.meta, u.comment], color: "#008000" },\n    { tag: u.link, color: "#4078f2", textDecoration: "underline" },\n    { tag: u.invalid, color: "#e45649" }\n  ]\n}), V_ = {\n  light: !0,\n  background: "#fff",\n  lineBackground: "#ffffff99",\n  foreground: "#3D3D3D",\n  selection: "#BBDFFF",\n  selectionMatch: "#BBDFFF",\n  gutterBackground: "#fff",\n  gutterForeground: "#AFAFAF",\n  lineHighlight: "#EDF4FF"\n}, X_ = at({\n  theme: "light",\n  settings: {\n    background: "#fff",\n    foreground: "#3D3D3D",\n    selection: "#BBDFFF",\n    selectionMatch: "#BBDFFF",\n    gutterBackground: "#fff",\n    gutterForeground: "#AFAFAF",\n    lineHighlight: "#d5e6ff69"\n  },\n  styles: [\n    { tag: [u.comment, u.quote], color: "#707F8D" },\n    { tag: [u.typeName, u.typeOperator], color: "#aa0d91" },\n    { tag: [u.keyword], color: "#aa0d91", fontWeight: "bold" },\n    { tag: [u.string, u.meta], color: "#D23423" },\n    { tag: [u.name], color: "#032f62" },\n    { tag: [u.typeName], color: "#522BB2" },\n    { tag: [u.variableName], color: "#23575C" },\n    { tag: [u.definition(u.variableName)], color: "#327A9E" },\n    { tag: [u.regexp, u.link], color: "#0e0eff" }\n  ]\n}), W_ = {\n  light: !0,\n  background: "#FFFFFF",\n  lineBackground: "#FFFFFF99",\n  foreground: "#000000",\n  caret: "#FBAC52",\n  selection: "#FFD420",\n  selectionMatch: "#FFD420",\n  gutterBackground: "#f5f5f5",\n  gutterForeground: "#4D4D4C",\n  gutterBorder: "transparent",\n  lineHighlight: "#00000012"\n}, U_ = at({\n  theme: "light",\n  settings: {\n    background: "#FFFFFF",\n    foreground: "#000000",\n    caret: "#FBAC52",\n    selection: "#FFD420",\n    selectionMatch: "#FFD420",\n    gutterBackground: "#f5f5f5",\n    gutterForeground: "#4D4D4C",\n    gutterBorder: "transparent",\n    lineHighlight: "#00000012"\n  },\n  styles: [\n    { tag: [u.meta, u.comment], color: "#804000" },\n    { tag: [u.keyword, u.strong], color: "#0000FF" },\n    { tag: [u.number], color: "#FF0080" },\n    { tag: [u.string], color: "#FF0080" },\n    { tag: [u.variableName], color: "#006600" },\n    { tag: [u.escape], color: "#33CC33" },\n    { tag: [u.tagName], color: "#1C02FF" },\n    { tag: [u.heading], color: "#0C07FF" },\n    { tag: [u.quote], color: "#000000" },\n    { tag: [u.list], color: "#B90690" },\n    { tag: [u.documentMeta], color: "#888888" },\n    { tag: [u.function(u.variableName)], color: "#0000A2" },\n    { tag: [u.definition(u.typeName), u.typeName], color: "#6D79DE" }\n  ]\n}), q_ = {\n  light: !0,\n  background: "#f2f1f8",\n  lineBackground: "#f2f1f899",\n  foreground: "#0c006b",\n  caret: "#5c49e9",\n  selection: "#d5d1f2",\n  selectionMatch: "#d5d1f2",\n  gutterBackground: "#f2f1f8",\n  gutterForeground: "#0c006b70",\n  lineHighlight: "#e1def3"\n}, G_ = at({\n  theme: "light",\n  settings: {\n    background: "#f2f1f8",\n    foreground: "#0c006b",\n    caret: "#5c49e9",\n    selection: "#d5d1f2",\n    selectionMatch: "#d5d1f2",\n    gutterBackground: "#f2f1f8",\n    gutterForeground: "#0c006b70",\n    lineHighlight: "#16067911"\n  },\n  styles: [\n    { tag: u.comment, color: "#9995b7" },\n    {\n      tag: u.keyword,\n      color: "#ff5792",\n      fontWeight: "bold"\n    },\n    { tag: [u.definitionKeyword, u.modifier], color: "#ff5792" },\n    { tag: [u.className, u.tagName, u.definition(u.typeName)], color: "#0094f0" },\n    { tag: [u.number, u.bool, u.null, u.special(u.brace)], color: "#5842ff" },\n    { tag: [u.definition(u.propertyName), u.function(u.variableName)], color: "#0095a8" },\n    { tag: u.typeName, color: "#b3694d" },\n    { tag: [u.propertyName, u.variableName], color: "#fa8900" },\n    { tag: u.operator, color: "#ff5792" },\n    { tag: u.self, color: "#e64100" },\n    { tag: [u.string, u.regexp], color: "#00b368" },\n    { tag: [u.paren, u.bracket], color: "#0431fa" },\n    { tag: u.labelName, color: "#00bdd6" },\n    { tag: u.attributeName, color: "#e64100" },\n    { tag: u.angleBracket, color: "#9995b7" }\n  ]\n}), Rf = {\n  strudelTheme: QR,\n  algoboy: $R,\n  androidstudio: YR,\n  atomone: JR,\n  aura: t_,\n  bbedit: U_,\n  blackscreen: jR,\n  bluescreen: TR,\n  CutiePi: UR,\n  darcula: r_,\n  dracula: a_,\n  duotoneDark: l_,\n  eclipse: c_,\n  githubDark: p_,\n  githubLight: d_,\n  greenText: zR,\n  gruvboxDark: g_,\n  gruvboxLight: y_,\n  sonicPink: qR,\n  materialDark: v_,\n  materialLight: k_,\n  monokai: A_,\n  noctisLilac: G_,\n  nord: C_,\n  redText: GR,\n  solarizedDark: P_,\n  solarizedLight: F_,\n  sublime: M_,\n  teletext: _R,\n  tokyoNight: T_,\n  tokyoNightDay: Z_,\n  tokyoNightStorm: R_,\n  vscodeDark: L_,\n  vscodeLight: N_,\n  whitescreen: RR,\n  xcodeLight: X_\n}, du = {\n  strudelTheme: dD,\n  bluescreen: mD,\n  blackscreen: gD,\n  whitescreen: bD,\n  teletext: xD,\n  algoboy: kD,\n  androidstudio: HR,\n  atomone: KR,\n  aura: e_,\n  bbedit: W_,\n  darcula: n_,\n  dracula: i_,\n  duotoneDark: o_,\n  eclipse: u_,\n  CutiePi: jf,\n  sonicPink: CD,\n  githubLight: f_,\n  githubDark: h_,\n  greenText: AD,\n  gruvboxDark: m_,\n  gruvboxLight: b_,\n  materialDark: O_,\n  materialLight: x_,\n  noctisLilac: q_,\n  nord: w_,\n  monokai: S_,\n  redText: SD,\n  solarizedLight: E_,\n  solarizedDark: D_,\n  sublime: B_,\n  tokyoNight: Q_,\n  tokyoNightStorm: j_,\n  vscodeDark: $_,\n  vscodeLight: I_,\n  xcodeLight: V_,\n  tokyoNightDay: __\n};\nfunction z_(t) {\n  const e = /#([0-9A-Fa-f]{6}|[0-9A-Fa-f]{3})/g, n = [];\n  let r;\n  for (; (r = e.exec(t)) !== null; ) {\n    const i = r[0];\n    n.includes(i) || n.push(i);\n  }\n  return n;\n}\nfunction H_(t) {\n  return z_(K_(t));\n}\nfunction Y_() {\n  const t = /* @__PURE__ */ new WeakSet();\n  return (e, n) => {\n    if (typeof n == "object" && n !== null) {\n      if (t.has(n))\n        return;\n      t.add(n);\n    }\n    return n;\n  };\n}\nfunction K_(t) {\n  return JSON.stringify(t, Y_());\n}\nconst DD = (t) => Rf[t] || Rf.strudelTheme;\nfunction PD(t) {\n  const e = document.createElement("style");\n  document.head.appendChild(e);\n  const n = e.sheet, r = n.insertRule(t, 0);\n  return () => n.deleteRule(r);\n}\nlet lb, hp, mu, ub = "strudel-theme-vars";\nfunction ED(t) {\n  document.getElementById(ub) || (mu = document.createElement("style"), mu.id = ub, document.head.append(mu)), Cm(t);\n}\nfunction Cm(t) {\n  if (lb === t)\n    return;\n  lb = t, du[t] || console.warn("theme", t, "has no settings.. defaulting to strudelTheme settings");\n  const e = du[t] || du.strudelTheme;\n  mu.innerHTML = `:root {\n      ${Object.entries(e).map(([n, r]) => `--${n}: ${r} !important;`).join(`\n`)}\n    }`, UF(e), e.light ? document.documentElement.classList.remove("dark") : document.documentElement.classList.add("dark"), hp?.(), hp = void 0, e.customStyle && (hp = PD(e.customStyle));\n}\nlet pa = {};\nconst J_ = (t) => `slider_${t}`;\nclass FD extends Zi {\n  constructor(e, n, r, i, s, a, o) {\n    super(), this.value = e, this.min = n, this.max = r, this.from = i, this.originalFrom = i, this.to = s, this.step = a, this.view = o;\n  }\n  eq() {\n    return !1;\n  }\n  toDOM() {\n    let e = document.createElement("span");\n    e.setAttribute("aria-hidden", "true"), e.className = "cm-slider";\n    let n = e.appendChild(document.createElement("input"));\n    return n.type = "range", n.min = this.min, n.max = this.max, n.step = this.step ?? (this.max - this.min) / 1e3, n.originalValue = this.value, n.value = n.originalValue, n.from = this.from, n.originalFrom = this.originalFrom, n.to = this.to, n.style = "width:64px;margin-right:4px;transform:translateY(4px)", this.slider = n, n.addEventListener("input", (r) => {\n      const i = r.target.value;\n      let s = i;\n      const a = n.from + n.originalValue.length;\n      let o = { from: n.from, to: a, insert: s };\n      n.originalValue = s, n.value = s, this.view.dispatch({ changes: o });\n      const l = J_(n.originalFrom);\n      window.postMessage({ type: "cm-slider", value: Number(i), id: l });\n    }), e;\n  }\n  ignoreEvent(e) {\n    return !0;\n  }\n}\nconst Sm = Ie.define(), BD = (t, e) => {\n  t.dispatch({ effects: Sm.of(e) });\n};\nfunction eZ(t, e) {\n  return t.filter((n) => n.type === "slider").map(({ from: n, to: r, value: i, min: s, max: a, step: o }) => Te.widget({\n    widget: new FD(i, s, a, n, r, o, e),\n    side: 0\n  }).range(\n    n\n    /* , to */\n  ));\n}\nconst MD = pn.fromClass(\n  class {\n    decorations;\n    //: DecorationSet\n    constructor(t) {\n      this.decorations = Te.set([]);\n    }\n    update(t) {\n      t.transactions.forEach((e) => {\n        if (e.docChanged) {\n          this.decorations = this.decorations.map(e.changes);\n          const n = this.decorations.iter();\n          for (; n.value; )\n            n.value?.widget?.slider && (n.value.widget.slider.from = n.from, n.value.widget.slider.to = n.to), n.next();\n        }\n        for (let n of e.effects)\n          n.is(Sm) && (this.decorations = Te.set(eZ(n.value, t.view)));\n      });\n    }\n  },\n  {\n    decorations: (t) => t.decorations\n  }\n);\nlet tZ = (t) => (console.warn("slider will only work when the transpiler is used... passing value as is"), cn(t)), nZ = (t, e, n, r) => (pa[t] = e, ey(() => pa[t]));\ntypeof window < "u" && window.addEventListener("message", (t) => {\n  t.data.type === "cm-slider" && (pa[t.data.id] !== void 0 ? pa[t.data.id] = t.data.value : console.warn(`slider with id "${t.data.id}" is not registered. Only ${Object.keys(pa)}`));\n});\nconst Am = Ie.define({\n  map: ({ from: t, to: e }, n) => ({ from: n.mapPos(t), to: n.mapPos(e) })\n}), QD = (t, e) => {\n  t.dispatch({ effects: Am.of(e) });\n};\nfunction rZ(t) {\n  return t.sort((e, n) => e.to - n.to).map((e) => Te.widget({\n    widget: new RD(e),\n    side: 0,\n    block: !0\n  }).range(e.to));\n}\nconst iZ = Vt.define(\n  /* <DecorationSet> */\n  {\n    create() {\n      return Te.none;\n    },\n    update(t, e) {\n      t = t.map(e.changes);\n      for (let n of e.effects)\n        if (n.is(Am))\n          try {\n            t = t.update({\n              filter: () => !1,\n              add: rZ(n.value)\n            });\n          } catch (r) {\n            console.log("err", r);\n          }\n      return t;\n    },\n    provide: (t) => be.decorations.from(t)\n  }\n), TD = {};\nfunction jD(t, e) {\n  TD[t] = e, e.id = t;\n}\nclass RD extends Zi {\n  constructor(e) {\n    super(), this.widgetConfig = e;\n  }\n  eq() {\n    return !0;\n  }\n  toDOM() {\n    const e = $2(this.widgetConfig);\n    return TD[e];\n  }\n  ignoreEvent(e) {\n    return !0;\n  }\n}\nconst _D = [iZ];\nfunction Zs(t, e) {\n  D9(t), e && (de.prototype[t] = function(n, r = { fold: 1 }) {\n    return e(n, r, this);\n  });\n}\nfunction Za(t, e = {}) {\n  const { width: n = 500, height: r = 60, pixelRatio: i = window.devicePixelRatio } = e;\n  let s = document.getElementById(t) || document.createElement("canvas");\n  return s.width = n * i, s.height = r * i, s.style.width = n + "px", s.style.height = r + "px", jD(t, s), s;\n}\nZs("_pianoroll", (t, e = {}, n) => {\n  const r = Za(t, e).getContext("2d");\n  return n.tag(t).pianoroll({ fold: 1, ...e, ctx: r, id: t });\n});\nZs("_punchcard", (t, e = {}, n) => {\n  const r = Za(t, e).getContext("2d");\n  return n.tag(t).punchcard({ fold: 1, ...e, ctx: r, id: t });\n});\nZs("_spiral", (t, e = {}, n) => {\n  let r = e.size || 275;\n  e = { width: r, height: r, ...e, size: r / 5 };\n  const i = Za(t, e).getContext("2d");\n  return n.tag(t).spiral({ ...e, ctx: i, id: t });\n});\nZs("_scope", (t, e = {}, n) => {\n  e = { width: 500, height: 60, pos: 0.5, scale: 1, ...e };\n  const r = Za(t, e).getContext("2d");\n  return n.tag(t).scope({ ...e, ctx: r, id: t });\n});\nZs("_pitchwheel", (t, e = {}, n) => {\n  let r = e.size || 200;\n  e = { width: r, height: r, ...e, size: r / 5 };\n  const i = Za(t, e).getContext("2d");\n  return n.pitchwheel({ ...e, ctx: i, id: t });\n});\nZs("_spectrum", (t, e = {}, n) => {\n  let r = e.size || 200;\n  e = { width: r, height: r, ...e, size: r / 5 };\n  const i = Za(t, e).getContext("2d");\n  return n.spectrum({ ...e, ctx: i, id: t });\n});\nlet cb = (t) => t, zs = {}, _f = { addEventListener() {\n}, removeEventListener() {\n} };\nfunction sZ() {\n  try {\n    return typeof localStorage < "u";\n  } catch {\n    return !1;\n  }\n}\nsZ() && (zs = localStorage);\nlet aZ = {\n  addEventListener(t, e, n) {\n    window.addEventListener("storage", e), window.addEventListener("pageshow", n);\n  },\n  removeEventListener(t, e, n) {\n    window.removeEventListener("storage", e), window.removeEventListener("pageshow", n);\n  }\n};\ntypeof window < "u" && (_f = aZ);\nfunction oZ(t, e = void 0, n = {}) {\n  let r = n.encode || cb, i = n.decode || cb, s = U2(e), a = s.set;\n  s.set = (c) => {\n    typeof c > "u" ? delete zs[t] : zs[t] = r(c), a(c);\n  };\n  function o(c) {\n    c.key === t ? c.newValue === null ? a(void 0) : a(i(c.newValue)) : zs[t] || a(void 0);\n  }\n  function l() {\n    s.set(zs[t] ? i(zs[t]) : e);\n  }\n  return r4(s, () => {\n    if (l(), n.listen !== !1)\n      return _f.addEventListener(t, o, l), () => {\n        _f.removeEventListener(t, o, l);\n      };\n  }), s;\n}\nconst ea = {\n  isLineWrappingEnabled: (t) => t ? be.lineWrapping : [],\n  isBracketMatchingEnabled: (t) => t ? lQ({ brackets: "()[]{}<>" }) : [],\n  isBracketClosingEnabled: (t) => t ? YQ() : [],\n  isLineNumbersDisplayed: (t) => t ? lM() : [],\n  theme: DD,\n  isAutoCompletionEnabled: ej,\n  isTooltipEnabled: rj,\n  isPatternHighlightingEnabled: XA,\n  isActiveLineHighlighted: (t) => t ? [V6(), hM()] : [],\n  isFlashEnabled: IA,\n  keybindings: MR\n}, Zf = Object.fromEntries(Object.keys(ea).map((t) => [t, new Uo()])), ZD = {\n  keybindings: "codemirror",\n  isBracketMatchingEnabled: !1,\n  isBracketClosingEnabled: !0,\n  isLineNumbersDisplayed: !0,\n  isActiveLineHighlighted: !1,\n  isAutoCompletionEnabled: !1,\n  isPatternHighlightingEnabled: !0,\n  isFlashEnabled: !0,\n  isTooltipEnabled: !1,\n  isLineWrappingEnabled: !1,\n  theme: "strudelTheme",\n  fontFamily: "monospace",\n  fontSize: 18\n}, fa = oZ("codemirror-settings", ZD, {\n  encode: JSON.stringify,\n  decode: JSON.parse\n});\nfunction $D({ initialCode: t = "", onChange: e, onEvaluate: n, onStop: r, root: i }) {\n  const s = fa.get(), a = Object.keys(Zf).map(\n    (l) => Zf[l].of(ea[l](ID(s[l])))\n  );\n  ED(s.theme);\n  let o = dt.create({\n    doc: t,\n    extensions: [\n      /* search(),\n      highlightSelectionMatches(), */\n      ...a,\n      NT(),\n      MD,\n      _D,\n      // indentOnInput(), // works without. already brought with javascript extension?\n      // bracketMatching(), // does not do anything\n      DS(tQ),\n      b7(),\n      be.updateListener.of((l) => e(l)),\n      $6({ cursorBlinkRate: 0 }),\n      jr.highest(\n        Rs.of([\n          {\n            key: "Ctrl-Enter",\n            run: () => n?.()\n          },\n          {\n            key: "Alt-Enter",\n            run: () => n?.()\n          },\n          {\n            key: "Ctrl-.",\n            run: () => r?.()\n          },\n          {\n            key: "Alt-.",\n            preventDefault: !0,\n            run: () => r?.()\n          }\n          /* {\n            key: \'Ctrl-Shift-.\',\n            run: () => (onPanic ? onPanic() : onStop?.()),\n          },\n          {\n            key: \'Ctrl-Shift-Enter\',\n            run: () => (onReEvaluate ? onReEvaluate() : onEvaluate?.()),\n          }, */\n        ])\n      )\n    ]\n  });\n  return new be({\n    state: o,\n    parent: i\n  });\n}\nclass LD {\n  constructor(e) {\n    const {\n      root: n,\n      id: r,\n      initialCode: i = "",\n      onDraw: s,\n      drawContext: a,\n      drawTime: o = [0, 0],\n      autodraw: l,\n      prebake: c,\n      bgFill: h = !0,\n      solo: f = !0,\n      ...m\n    } = e;\n    this.code = i, this.root = n, this.miniLocations = [], this.widgets = [], this.drawTime = o, this.drawContext = a, this.onDraw = s || this.draw, this.id = r || lZ(), this.solo = f, this.drawer = new WF((C, S, M, $) => {\n      const U = C.filter((R) => R.isActive(S));\n      this.highlight(U, S), this.onDraw(C, S, $);\n    }, o), this.prebaked = c(), l && this.drawFirstFrame(), this.repl = Nk({\n      ...m,\n      id: r,\n      onToggle: (C) => {\n        m?.onToggle?.(C), C ? (this.drawer.start(this.repl.scheduler), this.solo && document.dispatchEvent(\n          new CustomEvent("start-repl", {\n            detail: this.id\n          })\n        )) : (this.drawer.stop(), hc(this.editor, []), Mm(!0, r));\n      },\n      beforeEval: async () => {\n        Mm(!0, r), await this.prebaked, await m?.beforeEval?.();\n      },\n      afterEval: (C) => {\n        this.miniLocations = C.meta?.miniLocations, this.widgets = C.meta?.widgets;\n        const S = this.widgets.filter((U) => U.type === "slider");\n        BD(this.editor, S);\n        const M = this.widgets.filter((U) => U.type !== "slider");\n        QD(this.editor, M), hc(this.editor, this.miniLocations), m?.afterEval?.(C);\n        const $ = C.pattern.getPainters().length ? this.drawTime : [0, 0];\n        this.drawer.setDrawTime($), this.drawer.invalidate(this.repl.scheduler);\n      }\n    }), this.editor = $D({\n      root: n,\n      initialCode: i,\n      onChange: (C) => {\n        C.docChanged && (this.code = C.state.doc.toString(), this.repl.setCode?.(this.code));\n      },\n      onEvaluate: () => this.evaluate(),\n      onStop: () => this.stop()\n    });\n    const y = this.root.querySelector(".cm-editor");\n    y && (this.root.style.display = "block", h && (this.root.style.backgroundColor = "var(--background)"), y.style.backgroundColor = "transparent");\n    const v = fa.get();\n    this.setFontSize(v.fontSize), this.setFontFamily(v.fontFamily), this.onStartRepl = (C) => {\n      this.solo && C.detail !== this.id && this.stop();\n    }, document.addEventListener("start-repl", this.onStartRepl);\n  }\n  draw(e, n, r) {\n    r?.forEach((i) => i(this.drawContext, n, e, this.drawTime));\n  }\n  async drawFirstFrame() {\n    if (this.onDraw) {\n      await this.prebaked;\n      try {\n        await this.repl.evaluate(this.code, !1), this.drawer.invalidate(this.repl.scheduler, -1e-3), this.onDraw?.(this.drawer.visibleHaps, -1e-3, this.drawer.painters);\n      } catch {\n        console.warn("first frame could not be painted");\n      }\n    }\n  }\n  async evaluate() {\n    this.flash(), await this.repl.evaluate(this.code);\n  }\n  async stop() {\n    this.repl.scheduler.stop();\n  }\n  async toggle() {\n    this.repl.scheduler.started ? this.repl.stop() : this.evaluate();\n  }\n  flash(e) {\n    LA(this.editor, e);\n  }\n  highlight(e, n) {\n    NA(this.editor, n, e);\n  }\n  setFontSize(e) {\n    this.root.style.fontSize = e + "px";\n  }\n  setFontFamily(e) {\n    this.root.style.fontFamily = e;\n    const n = this.root.querySelector(".cm-scroller");\n    n && (n.style.fontFamily = e);\n  }\n  reconfigureExtension(e, n) {\n    if (!ea[e]) {\n      console.warn(`extension ${e} is not known`);\n      return;\n    }\n    n = ID(n);\n    const r = ea[e](n, this);\n    this.editor.dispatch({\n      effects: Zf[e].reconfigure(r)\n    }), e === "theme" && Cm(n);\n  }\n  setLineWrappingEnabled(e) {\n    this.reconfigureExtension("isLineWrappingEnabled", e);\n  }\n  setBracketMatchingEnabled(e) {\n    this.reconfigureExtension("isBracketMatchingEnabled", e);\n  }\n  setLineNumbersDisplayed(e) {\n    this.reconfigureExtension("isLineNumbersDisplayed", e);\n  }\n  setBracketClosingEnabled(e) {\n    this.reconfigureExtension("isBracketClosingEnabled", e);\n  }\n  setTheme(e) {\n    this.reconfigureExtension("theme", e);\n  }\n  setAutocompletionEnabled(e) {\n    this.reconfigureExtension("isAutoCompletionEnabled", e);\n  }\n  updateSettings(e) {\n    this.setFontSize(e.fontSize), this.setFontFamily(e.fontFamily);\n    for (let r in ea)\n      this.reconfigureExtension(r, e[r]);\n    const n = { ...fa.get(), ...e };\n    fa.set(n);\n  }\n  changeSetting(e, n) {\n    if (ea[e]) {\n      this.reconfigureExtension(e, n);\n      return;\n    } else e === "fontFamily" ? this.setFontFamily(n) : e === "fontSize" && this.setFontSize(n);\n  }\n  setCode(e) {\n    const n = { from: 0, to: this.editor.state.doc.length, insert: e };\n    this.editor.dispatch({ changes: n });\n  }\n  clear() {\n    this.onStartRepl && document.removeEventListener("start-repl", this.onStartRepl);\n  }\n  getCursorLocation() {\n    return this.editor.state.selection.main.head;\n  }\n  setCursorLocation(e) {\n    return this.editor.dispatch({ selection: { anchor: e } });\n  }\n  appendCode(e) {\n    const n = this.getCursorLocation();\n    this.setCode(this.code + e), this.setCursorLocation(n);\n  }\n}\nfunction ID(t) {\n  return { true: !0, false: !1 }[t] ?? t;\n}\nfunction lZ() {\n  return Math.floor((1 + Math.random()) * 65536).toString(16).substring(1);\n}\nconst uZ = W("markcss"), cZ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  BlockWidget: RD,\n  SliderWidget: FD,\n  StrudelMirror: LD,\n  activateTheme: Cm,\n  addWidget: Am,\n  codemirrorSettings: fa,\n  defaultSettings: ZD,\n  flash: LA,\n  flashField: $A,\n  highlightExtension: VA,\n  highlightMiniLocations: NA,\n  initEditor: $D,\n  initTheme: ED,\n  injectStyle: PD,\n  isFlashEnabled: IA,\n  isPatternHighlightingEnabled: XA,\n  markcss: uZ,\n  registerWidget: Zs,\n  setFlash: cc,\n  setMiniLocations: mm,\n  setSliderWidgets: Sm,\n  setWidget: jD,\n  settings: du,\n  showMiniLocations: gm,\n  slider: tZ,\n  sliderPlugin: MD,\n  sliderValues: pa,\n  sliderWithID: nZ,\n  theme: DD,\n  themeColors: H_,\n  themes: Rf,\n  toggleBlockComment: um,\n  toggleBlockCommentByLine: XS,\n  toggleComment: $c,\n  toggleLineComment: VS,\n  updateMiniLocations: hc,\n  updateSliderWidgets: BD,\n  updateWidgets: QD,\n  widgetPlugin: _D\n}, Symbol.toStringTag, { value: "Module" }));\nasync function hZ() {\n  const t = pd(\n    // import(\'@strudel/core\'),\n    Xk,\n    __webpack_require__.e(/*! import() */ "node_modules_strudel_repl_dist_index-DPquxqHL_js").then(__webpack_require__.bind(__webpack_require__, /*! ./index-DPquxqHL.js */ "../node_modules/@strudel/repl/dist/index-DPquxqHL.js")),\n    Promise.resolve().then(() => sB),\n    __webpack_require__.e(/*! import() */ "vendors-node_modules_strudel_repl_dist_index-DRSMaVpv_js").then(__webpack_require__.bind(__webpack_require__, /*! ./index-DRSMaVpv.js */ "../node_modules/@strudel/repl/dist/index-DRSMaVpv.js")),\n    Promise.resolve().then(() => j4),\n    Promise.resolve().then(() => cZ),\n    __webpack_require__.e(/*! import() */ "node_modules_strudel_repl_dist_hydra-Xfb2mKFS_js").then(__webpack_require__.bind(__webpack_require__, /*! ./hydra-Xfb2mKFS.js */ "../node_modules/@strudel/repl/dist/hydra-Xfb2mKFS.js")),\n    __webpack_require__.e(/*! import() */ "vendors-node_modules_strudel_repl_dist_index-BhBt4VPU_js").then(__webpack_require__.bind(__webpack_require__, /*! ./index-BhBt4VPU.js */ "../node_modules/@strudel/repl/dist/index-BhBt4VPU.js")),\n    __webpack_require__.e(/*! import() */ "vendors-node_modules_strudel_repl_dist_index-D1GL2meg_js").then(__webpack_require__.bind(__webpack_require__, /*! ./index-D1GL2meg.js */ "../node_modules/@strudel/repl/dist/index-D1GL2meg.js"))\n    // import(\'@strudel/xen\'),\n    // import(\'@strudel/serial\'),\n    // import(\'@strudel/csound\'),\n    // import(\'@strudel/osc\'),\n  ), e = "https://raw.githubusercontent.com/felixroos/dough-samples/main/", n = "https://raw.githubusercontent.com/todepond/samples/main/";\n  await Promise.all([\n    t,\n    gw(),\n    vw(),\n    //registerSoundfonts(),\n    // need dynamic import here, because importing @strudel/soundfonts fails on server:\n    // => getting "window is not defined", as soon as "@strudel/soundfonts" is imported statically\n    // seems to be a problem with soundfont2\n    __webpack_require__.e(/*! import() */ "vendors-node_modules_strudel_repl_dist_index-BhBt4VPU_js").then(__webpack_require__.bind(__webpack_require__, /*! ./index-BhBt4VPU.js */ "../node_modules/@strudel/repl/dist/index-BhBt4VPU.js")).then(({ registerSoundfonts: r }) => r()),\n    Ni(`${e}/tidal-drum-machines.json`),\n    Ni(`${e}/piano.json`),\n    Ni(`${e}/Dirt-Samples.json`),\n    Ni(`${e}/EmuSP12.json`),\n    Ni(`${e}/vcsl.json`),\n    Ni(`${e}/mridangam.json`)\n  ]), ow(`${n}/tidal-drum-machines-alias.json`);\n}\nconst pZ = _s("C8"), fZ = (t, e) => t * e + (1 - e) / 2;\nde.prototype.piano = function() {\n  return this.fmap((t) => ({ ...t, clip: t.clip ?? 1 })).s("piano").release(0.1).fmap((t) => {\n    const e = pb(t), n = fZ(Math.min(Math.round(e) / pZ, 1), 0.5);\n    return { ...t, pan: (t.pan || 1) * n };\n  });\n};\nif (typeof HTMLElement < "u") {\n  class t extends HTMLElement {\n    static observedAttributes = ["code"];\n    settings = fa.get();\n    editor = null;\n    sync = !1;\n    solo = !0;\n    constructor() {\n      super();\n    }\n    attributeChangedCallback(n, r, i) {\n      n === "code" && (this.code = i, this.editor?.setCode(i));\n    }\n    connectedCallback() {\n      setTimeout(() => {\n        const s = (this.innerHTML + "").replace("\x3c!--", "").replace("--\x3e", "").trim();\n        s && this.setAttribute("code", s);\n      });\n      const n = document.createElement("div");\n      this.parentElement.insertBefore(n, this.nextSibling);\n      const r = ji(), i = [-2, 2];\n      this.editor = new LD({\n        defaultOutput: Md,\n        getTime: () => lt().currentTime,\n        transpiler: P9,\n        root: n,\n        initialCode: "// LOADING",\n        pattern: St,\n        drawTime: i,\n        drawContext: r,\n        prebake: hZ,\n        onUpdateState: (s) => {\n          const a = new CustomEvent("update", {\n            detail: s\n          });\n          this.dispatchEvent(a);\n        },\n        solo: this.solo,\n        sync: this.sync\n      }), this.editor.updateSettings(this.settings), this.editor.setCode(this.code);\n    }\n    // Element functionality written in here\n  }\n  customElements.define("strudel-editor", t);\n}\n\n\n\n//# sourceURL=webpack://frontend/../node_modules/@strudel/repl/dist/index-DfdLyHnT.js?')},"../node_modules/@strudel/repl/dist/index.mjs":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prebake: () => (/* reexport safe */ _index_DfdLyHnT_js__WEBPACK_IMPORTED_MODULE_0__.Z)\n/* harmony export */ });\n/* harmony import */ var _index_DfdLyHnT_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-DfdLyHnT.js */ "../node_modules/@strudel/repl/dist/index-DfdLyHnT.js");\n\n\n\n\n//# sourceURL=webpack://frontend/../node_modules/@strudel/repl/dist/index.mjs?')}}]);