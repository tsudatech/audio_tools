!function(){"use strict";let t=0,e=0,s=.5;const n=new Map,a=new BroadcastChannel("strudeltick"),c=function(t,e,s=.05,n=.1,a=.1){let c=0,o=0;a=a||n/2;const r=()=>{const r=t(),i=r+n+a;for(0===o&&(o=r+.01);o<i;)o=Math.round(1e4*o)/1e4,o>=r&&e(o,s,c,r),o<r&&console.log("TOO LATE",o),o+=s,c++};let i;const l=()=>void 0!==i&&clearInterval(i);return{setDuration:t=>s=t(s),start:()=>{l(),r(),i=setInterval(r,1e3*n)},stop:()=>{c=0,o=0,l()},pause:()=>l(),duration:s,interval:n,getPhase:()=>o,minLatency:.01}}(function(){return.001*performance.now()},(n,c,o,r)=>{const i=t+e*c*s;((t,e)=>{a.postMessage({type:t,payload:e})})("tick",{begin:i,end:i+c*s,cps:s,time:r,cycle:i+(r-(r+(n-r))-c)*s}),e++},.1);let o=!1;const r=s=>{e=0,t=s},i=a=>{const{type:i,payload:l}=a;switch(i){case"cpschange":if(l.cps!==s){t+=.1*e*s,s=l.cps,e=0}break;case"setcycle":r(l.cycle);break;case"toggle":l.started?(t=>{n.set(t,{started:!0}),!o&&(c.start(),o=!0)})(a.id):(async t=>{n.set(t,{started:!1});const e=Array.from(n.values()).some(t=>t.started);!o||e||(c.stop(),r(0),o=!1)})(a.id)}};self.onconnect=function(t){const e=t.ports[0];e.addEventListener("message",function(t){i(t.data)}),e.start()}}();